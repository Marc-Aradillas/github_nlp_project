repo,language,readme,top_trigrams
AtsushiSakai/PythonRobotics,Python,pythonrobotics githubactionlinuxci githubactionmacosci githubactionwindowsci build status codecov python code robotics algorithm table content requirement documentation use localization extended kalman filter localization particle filter localization histogram filter localization mapping gaussian grid map ray casting grid map lidar grid map kmeans object clustering rectangle fitting slam iterative closest point icp matching fastslam 10 path planning dynamic window approach grid based search dijkstra algorithm algorithm algorithm lite algorithm potential field algorithm grid based coverage path planning state lattice planning biased polar sampling lane sampling probabilistic roadmap prm planning rapidlyexploring random tree rrt rrt rrt reedsshepp path lqrrrt quintic polynomial planning reed shepp planning lqr based path planning optimal trajectory frenet frame path tracking move pose control stanley control rear wheel feedback control linearquadratic regulator lqr speed steering control model predictive speed steering control nonlinear model predictive control cgmres arm navigation n joint arm point control arm navigation obstacle avoidance aerial navigation drone 3d trajectory following rocket powered landing bipedal bipedal planner inverted pendulum license usecase contribution citing support sponsor jetbrains 1password author python code collection robotics algorithm feature easy read understanding algorithm basic idea widely used practical algorithm selected minimum dependency see paper detail 180810703 pythonrobotics python code collection robotics algorithm bibtex requirement running sample code python 311x numpy scipy matplotlib cvxpy development pytest unit test pytestxdist parallel unit test mypy type check sphinx document generation pycodestyle code style check documentation readme show example project interested example mathematical background algorithm check full documentation online welcome pythonroboticss documentation pythonrobotics documentation animation gifs stored atsushisakaipythonroboticsgifs animation gifs pythonrobotics use clone repo terminal git clone install required library using conda terminal conda env create f requirementsenvironmentyml using pip terminal pip install r requirementsrequirementstxt execute python script directory add star repo like smiley localization extended kalman filter localization ref documentation particle filter localizationthis sensor fusion localization particle filterpf blue line true trajectory black line dead reckoning trajectory red line estimated trajectory pf assumed robot measure distance landmark rfid measurement used pf localization ref probabilistic robotics histogram filter localizationthis 2d localization example histogram filter red cross true position black point rfid position blue grid show position probability histogram filter simulation xy unknown yaw known filter integrates speed input range observation rfid localization initial position needed ref probabilistic robotics mapping gaussian grid map 2d gaussian grid mapping exampleray casting grid map 2d ray casting grid mapping examplelidar grid map example show convert 2d range measurement grid mapkmeans object clustering 2d object clustering kmeans algorithmrectangle fitting 2d rectangle fitting vehicle detectionslam simultaneous localization mappingslam example iterative closest point icp matching 2d icp matching example singular value decomposition calculate rotation matrix translation vector point pointsref introduction mobile robotics iterative closest point algorithm fastslam 10 feature based slam example using fastslam 10 blue line ground truth black line dead reckoning red line estimated trajectory fastslam red point particle fastslam black point landmark blue cross estimated landmark position fastslamref probabilistic robotics slam simulation tim bailey path planning dynamic window approach 2d navigation sample code dynamic window approach dynamic window approach collision avoidance grid based search dijkstra algorithm 2d grid based shortest path planning dijkstra algorithm pythonroboticsfigure1png master atsushisakaipythonrobotics animation cyan point searched node algorithm 2d grid based shortest path planning star algorithm pythonroboticsfigure1png master atsushisakaipythonrobotics animation cyan point searched node heuristic 2d euclid distance algorithm 2d grid based shortest path planning star algorithm figure master nirnayroyintelligentrobotics animation show robot finding path avoiding obstacle using search algorithm ref algorithm wikipedia lite algorithm algorithm find shortest path two point rerouting obstacle discovered ha implemented 2d grid lite animation show robot finding path rerouting avoid obstacle discovered using lite search algorithm ref lite improved fast replanning robot navigation unknown terrain potential field algorithm 2d grid based path planning potential field algorithm potentialfield animation blue heat map show potential value grid ref robotic motion planningpotential function grid based coverage path planning 2d grid based coverage path planning simulation potentialfield state lattice planning script path planning code state lattice planning code us model predictive trajectory generator solve boundary problem ref optimal rough terrain trajectory generation wheeled mobile robot state space sampling feasible motion highperformance mobile robot navigation complex environment biased polar sampling pythonroboticsfigure1png master atsushisakaipythonrobotics lane sampling pythonroboticsfigure1png master atsushisakaipythonrobotics probabilistic roadmap prm planning prm prm planner us dijkstra method graph search animation blue point sampled point cyan cross mean searched point dijkstra method red line final path prm ref probabilistic roadmap wikipedia rapidlyexploring random tree rrt rrt pythonroboticsfigure1png master atsushisakaipythonrobotics path planning code rrt black circle obstacle green line searched tree red cross start goal position ref incremental samplingbased algorithm optimal motion planning samplingbased algorithm optimal motion planning rrt reedsshepp path roboticsanimationgif master atsushisakaipythonrobotics path planning car robot rrt reed shepp path planner lqrrrt path planning simulation lqrrrt double integrator motion model used lqr local planner lqrrrt ref lqrrrt optimal samplingbased motion planning automatically derived extension heuristic mahanfathilqrrrtstar lqrrrt method used random motion planning simple pendulum phase plot quintic polynomial planning motion planning quintic polynomialsit calculate 2d path velocity acceleration profile based quintic polynomial ref local path planning motion control agv positioning reed shepp planning sample code reed shepp path planning rsplanning ref 1532 reedsshepp curve optimal path car go forward backwards ghliupyreedsshepp implementation reed shepp curve lqr based path planning sample code using lqr based path planning double integrator model rsplanning optimal trajectory frenet framethis optimal trajectory generation frenet frame cyan line target course black cross obstacle red line predicted path ref optimal trajectory generation dynamic street scenario frenet frame optimal trajectory generation dynamic street scenario frenet frame path tracking move pose control simulation moving pose controlref p corke robotics vision control springerlink p102 stanley control path tracking simulation stanley steering control pid speed controlref stanley robot darpa grand challenge automatic steering method autonomous automobile path tracking rear wheel feedback control path tracking simulation rear wheel feedback steering control pid speed control pythonroboticsfigure1png master atsushisakaipythonrobotics ref survey motion planning control technique selfdriving urban vehicle linearquadratic regulator lqr speed steering control path tracking simulation lqr speed steering controlref towards fully autonomous driving system algorithm ieee conference publication model predictive speed steering control path tracking simulation iterative linear model predictive speed steering control ref documentation realtime model predictive control mpc acado python workisplaying nonlinear model predictive control cgmres motion planning path tracking simulation nmpc cgmres ref documentation arm navigation n joint arm point control n joint arm point control simulation interactive simulation set goal position end effector leftclick plotting area simulation n 10 however change arm navigation obstacle avoidance arm navigation obstacle avoidance simulationaerial navigation drone 3d trajectory following 3d trajectory following simulation quadrotorrocket powered landing 3d trajectory generation simulation rocket powered landingref documentation bipedal bipedal planner inverted pendulum bipedal planner modifying footstep inverted pendulum set footstep planner modify automaticallylicense mit usecase project help robotics project please let know creating issue robot video using pythonrobotics welcome list user comment referencesuserscomments contribution contribution welcome please check documenthow contribute pythonrobotics documentation citing use project code academic work encourage cite paper use project code industry love hear well feel free reach developer directly supporting project company would like support project please consider sponsor atsushisakai github sponsor become backer sponsor patreon onetime donation via paypal would like support u way please contact creating issue sponsor jetbrains providing free license ides os development 1password providing free license 1password team license os project author contributor atsushisakaipythonrobotics,"[('path', 'planning'), ('grid', 'based')]"
kiloreux/awesome-robotics,Other,awesome robotics awesome list various book course resource robotics attempt gather useful material one place everybody want learn field course artificial intelligence robotics udacity robotics nanodegree udacity dollar autonomous mobile robot edx underactuated robotics mit csail autonomous mobile robot edx robot mechanic control part edx robot mechanic control part ii edx autonomous navigation flying robot edx robotics specialization grasp lab coursera dollar control mobile robot coursera qut robot academy qut robotic vision qut introduction robotics mit robotics vision intelligence machine learning edx applied robot design stanford university introduction robotics stanford university introduction mobile robotics university freiburg robotics edx dollar columbia robotics edx modern robotics mechanic planning control coursera hello real world robot operating system edx advanced robotics ucberkeley building arduino robot device coursera introduction robot operating system ros2 coursera modern robotics mechanic planning control specialization coursera become robotics software enginee udacity advanced robotics uc berkeley book probabilistic robotics intelligent robotics autonomous agent series dollar introduction autonomous mobile robot intelligent robotics autonomous agent series dollar springer handbook robotics dollar planning algorithm gentle introduction mathematical introduction robotic manipulation learning computing robot robotics vision control fundamental algorithm matlab springer tract advanced robotics dollar intech book introduction autonomous robot principle robot motion theory algorithm implementation introduction modern robotics mechanic planning control pdf programming robot practical introduction robot operating system dollar learning robotics programming dollar mastering robotics programming dollar behavior tree robotics ai introduction pdf automated planning acting pdf robotics software engineer dollar software library gazebo robot simulator robot operating system flexible framework writing robot software collection tool library convention aim simplify task creating complex robust robot behavior across wide variety robotic platform ros2 ros2 new version radical design change improvement older version robwork robwork collection c library simulation control robot system robwork used research education well practical robot application mrpt mobile robot programming toolkit provides developer portable welltested application library covering data structure algorithm employed common robotics research area robotics library robotics library rl selfcontained c library robot kinematics motion planning control cover mathematics kinematics dynamic hardware abstraction motion planning collision detection visualization simbad 2d3d simulator java jython morse general purpose indooroutdoor 3d simulator carmen carmen opensource collection software mobile robot control carmen modular software designed provide basic navigation primitive including base sensor control logging obstacle avoidance localization path planning mapping peekabot peekabot realtime networked 3d visualization tool robotics written c purpose simplify visualization need faced roboticist daily yarp yet another robot platform vrep robot simulator 3d source available lua scripting apis cc python java matlab urbiphysics engine full kinematic solver webots webots development environment used model program simulate mobile robot drake planning control analysis toolbox nonlinear dynamical system neurorobotics platform nrp internetaccessible simulation system allows simulation robot controlled spiking neural network player project free software tool robot sensor application open ai roboschool opensource software robot simulation integrated openai gym visp opensource visual servoing platform library able compute control law applied robotic system behavior tree g2core opensource motion control software cnc robotics designed run arduino due class microcontrollers ur5controller opensource openrave controller ur5 robot integrated rbdl opensource zlib c libray forward inverse dynamic kinematics also support contact loop unity robotics hub central repository opensource unity package tutorial resource demonstrating use unity robotics simulation includes new support integration paper optimization based controller design implementation atlas robot darpa robotics challenge final conference acmieee international conference human robot interaction hri cism iftomm symposium robot design dynamic control romansy ieee conference decision control cdc ieee international conference rehabilitation robotics icorr ieee international conference robotics automation icra ieeersj international conference intelligent robot system iros ieeeras international conference humanoid robot humanoid international symposium robotic research isrr international symposium experimental robotics iser robotica robotics science system conference r international workshop algorithmic foundation robotics wafr journal autonomous robot bioinspiration biomimetics frontier robotics ai ieee robotics automation magazine ieee transaction haptics ieee transaction robotics ieeeasme transaction mechatronics international journal social robotics journal field robotics journal intelligent robotic system mechatronics robotics computerintegrated manufacturing robotics autonomous system international journal robotics research competition icra robot challenge robotchallenge darpa robotics challenge european robotics challenge first robotics competition vex robotics competition robocup robocupjunior eurobot international student robotics contest robomasters robosoft grand challenge intelligent ground vehicle competition robotex biggest robotics festival europe first lego league company boston dynamic robotics rd company creator state art atlas spot robot irobot manufacturer famous roomba robotic vacuum cleaner pal robotics aldebaran robotics creator nao robot abb robotics largest manufacturer industrial robot kuka robotics major manufacturer industrial robot targeted factory automation fanuc industrial robot manufacturer biggest install base rethink robotics creator collaborative robot baxter dji industry leader drone commerical industrial need construct sim cloud based tool building modern futureproof robot simulation fetch robotics robotics startup san jose ca building future ecommerce fulfillment rd robot festo robotics festo known making moving robot move like animal sea gull like smartbird jellyfish butterfly kangaroo neobotix manufacturer industrial research well custom mobile robot misc ieee spectrum robotics robotics section ieee spectrum magazine mit technology review robotics robotics section mit technology review magazine reddit robotics subreddit roscon conference video talk included carnegie mellon robotics academy let make robot learn robotics free nxt lego mindstorms nxtg code tutorial stackexachange robotics community 47 programmable robotic kit linorobot suite diy compatible robot hexapod robot simulator solve visualize hexapod robot inverse kinematics gait web pythonrobotics implementation various robotics algorithm python related awesome list awesome artificial intelligence awesome computer vision awesome machine learning awesome deep learning awesome deep vision awesome gazebo awesome reinforcement learning awesome robotics awesome robotics library awesome ros2 awesome robocupjunior soccer,"[('mobile', 'robot'), ('planning', 'control')]"
NxRLab/ModernRobotics,Python,modern robotics mechanic planning control code library repository contains code library accompanying modern robotics mechanic planning control kevin lynch frank park cambridge university press 2017 user manual doc directory function available python matlab mathematica function ha commented section explaining input required use well example used output repository also contains pdf document provides overview available function using matlab syntax function organized according chapter introduced book basic function function calculate magnitude vector normalize vector test value near zero perform matrix operation multiplication inverse documented primary purpose provided software easy read educational reinforcing concept book code optimized neither efficiency robustness unofficial version language developed c version julia version nim version library built kinematicsfromdescriptiontool contribution welcomed maintenance team library vouch reliability project,"[('modern', 'robotics'), ('robotics', 'mechanic')]"
mithi/robotics-coursework,Other,want use arduino raspberry pi make robot short list might helpful check short list like reading textbook pending link might someday transfered document anything think included submit issue check series course robot academy peter corke queensland university technology mit open courseware robotics coursera robotics specializationseries3 university pennsylvania coursera modern robotics specialization book channelseries11b northwestern university coursera selfdriving carsseries10 university toronto dollar udacity robotics nanodegreeseries5 dollar udacity intro selfdriving car nanodegreeseries6b dollar udacity selfdriving car nanodegree dollar udacity flying car nanodegree dollar udacity sensor fusion nanodegree dollar construct robotics developer course libraryseries8 robot ignite academy dollar master certification program autonomous vehiclesseries13 skill lync single course udacity artificial intelligence robotics sebastian thrun edx selfdriving car duckietown ethzurich edx autonomous mobile robot ethzurich edx autonomous navigation flying robotscourse2 technische universitat munchen edx underactuated robotics massachusetts institute technology edx roboticscourse4 columbia university city new york edx robot mechanic control part part iicourse6 seoul national university edx robotics foundation robot modeling universita degli studi di napoli federico ii edx robotics foundation ii robot controlcourse41 bruno siciliano universita degli studi di napoli federico ii edx robot development angelo cangelosi universita degli studi di napoli federico ii edx hello real world robot operating systemcourse8 delft university technology udemy beginner basic motion opencv anish koubaa udemy beginner ii localization navigation slamcourse31 anish koubaa selfdriving car autoware apexai autonomous intelligent systemscourse10 wolfram burgard et al university freiburg introduction robotics oussama khatib stanford engineering everywhere introduction aerial roboticscourse13 kostas alexis university nevada deeplearning selfdriving car lex fridman massachusetts institute technology advanced robotics c 287 pieter abbeel university california berkeley underactuated roboticscourse20c bookcourse20a channel rus tedrake massachusetts institute technology robotics manipulation perception planning control channelcourse29b rus tedrake massachusetts institute technology visual navigation flying robotcourse22 jurgen sturm technical university munich slam playlistcourse15 cyrill stachniss university freiburg robotics de luca universita di rom slam lecturescourse18 clause brenne leibniz university hannover applied robot design cs235 reuben brewer standford university robogrok roboticscourse17a channel angela sodemann autonomous robot lab autonomous mobile robot design morecourse24 university nevada meam 620 robotics university pennsylvania robotics advanced concept analysiscourse26 ashitava ghosal indian institute science introduction roboticscourse28 burton york university nptel introduction robotics iit madras cmsc828t vision planning control aerial roboticscourse33 yiannis aloimonos university maryland hkust elec5660 introduction aerial robot shaojie shen hong kong university science technology enae 788m hand autonomous aerial roboticscourse35 nitin sanket university maryland evolutionary roboticscourse43 josh bongard university vermont programming robotics roscourse44 edo jelavic tom lankhorst marco hutter ethzurich course44 handson blog mithi hexapod robot simulator live demoh29 source code real lifeh36 akiyuki kawaguchi opendogh14 mini robot dogh27 james bruton building diy arduino droneh8 channel joop brokking diy walkersh10 ben vagle pythonroboticsh25 atsushi sakai spot mini minih33 open quadruped duckie town minimal autonomy platformsh35 f110 penn engineering autorally georgiatech donkey car diy robocarsh2 formula pi mit race car mit racecar teamdocumentationh4 jetson hacksh6 dollar racecar rj prof daniela ru sarah tang beatty roboticsh18 andrew dahdouh oscar liangh12 maurice rahmeh31 h36 useful concept tool cad tool autodesk fusion 360 onshape deep learning hackertools missing semester c educationtools15 mit open learning kalman filter roger r labbetools2 balzer82tools11 control system steve brunton brian douglastools4 tyler venesstool5 algorithm data structure c python octave course tools15 archived course edx robotics locomotion engineering dan koditschek university pennsylvania edx robotics dynamic controlcourse37 vijay kumar university pennsylvania edx robotics vision intelligence machine learning jianbo shi university pennsylvania edx robotics kinematics mathematical foundationscourse39 camillo taylor university pennsylvania coursera control mobile robot magnus egerstedt georgia institute technology related list ahundt jslee02 kiloreux msadowki protontypes fkromer harshmaithani kanster paper related quadrotors misc adafruit instructables hacksterrelated2 thingiverse hackaday sparkfun robotshoprelated4 robotics todayrelated5 reddit youtube planet gbc euro brick related5,"[('university', 'pennsylvania'), ('edx', 'robotics')]"
onlytailei/CppRobotics,C++,cpprobotics cpp implementation pythonrobotics requirment cmake opencv 33 eigencppad ipopt mpc convex optimization install tip make repo lightweight yet may still need 3d visualization build mkdir build cd build cmake make j find executable file buildbin table content localization extended kalmam filter particle filter histogram filter mapping gaussian grid map slam fastslam 10 path planning dijkstra star rrt dynamic window approach model predictive trajectory generator cubic spline planner state lattice planner frenet frame trajectory path tracking control lqr sterring control lqr speed steering control model predictive speed steering control aerial navigation drone 3d trajectory following rocket powered landing localization extended kalman filter localization green line groundtruth trajectory black line dead reckoning red point observation eg gps blue line estimated position probabilistic robotics particle filter localization green line groundtruth trajectory black line dead reckoning red point landmark blue line estimated position probabilistic robotics path planning dijkstra blue point start point red point goal point star blue point start point red point goal point rrt red circle start point blue circle goal point black circle obstacle dynamic window approach blue circle target point red circle robot dynamic window approach collision avoidance model predictive trajectory generator part based bicycle motion model blue circle target point red circle initial point cubic spline planner state lattice planner blue circle target point red circle initial point state space sampling feasible motion highperformance mobile robot navigation complex environment frenet frame trajectory black line planned spline path red circle obstacle blue circle planned trajectory green circle realtime position robot optimal trajectory generation dynamic street scenario frenet frame path tracking control lqr steering control black line planned spline path red circle position lqr control lqr speed steering control black line planned spline path red circle position lqr control mpc speed steering control black line planned spline path blue line passed path yellow cross reference trajectory mpc compile part need uncomment related line cmakeliststxt install cppad ipopt,"[('red', 'circle'), ('black', 'line')]"
JdeRobot/RoboticsAcademy,Other,roboticsacademy learn robotics artificial intelligence computer vision jderobot academy open source platform ha collection exercise learn robotics practical way gazebo simulator main tool required testing latest documentation including installation recipe current available exercise illustrative video href contributor please note use github page jekyll theme minimalmistakes academy web page feel free install jekyll locally test change submitting pullrequest contribute take look contributing guide line index instruction developer client side robotics academy architecture repository architecture generate mini radi humble mini radi structure develop using volume binding,"[('learn', 'robotics'), ('mini', 'radi')]"
pptacher/probabilistic_robotics,C++,probabilisticrobotics working detailed solution exercise book probabilistic robotics work progress helpful feedback welcomed also deployed fastslam nodejsc app google cloud server running 0000 0800 utc alt text seif algorithm running victoria park dataset reference probabilistic robotics mit press sebastian thrun wolfram burgard dieter fox probabilistic robotics victoria park dataset university sidney eduardo nebot victoria park dataset,"[('probabilistic', 'robotics'), ('victoria', 'park')]"
jslee02/awesome-robotics-libraries,Other,awesome robotics library curated list robotics simulator library table content simulator library dynamic simulation inverse kinematics machine learning motion planning control optimization robot modeling robot platform slam vision fluid multiphysics math etc awesome list contributing simulator free open source ai2thor python framework unity backend providing interaction navigation manipulation support household based robotic agent github ai2thor airsim simulator based unreal engine autonomous vehicle github airsim argo physicsbased simulator designed simulate largescale robot swarm github ilpincyargos3 arte matlab toolbox focussed robotic manipulator github 4rtur1t0arte avis engine autonomous vehicle intelligent simulation software fast robust simulator software autonomous vehicle development github avisengineavisenginepythonapi carla opensource simulator autonomous driving research github carlasimulatorcarla coppeliasim formaly vrep virtual robot experimentation platform github coppeliaroboticscoppeliasimlib gazebo dynamic multirobot simulator github osrfgazebo graspit simulator grasping research accommodate arbitrary hand robot design github graspit habitatsim simulation platform research embodied artificial intelligence github facebookresearchhabitatsim hexapod robot simulator opensource hexapod robot inverse kinematics gait visualizer github mithihexapod ignition gazebo open source robotics simulator github ignitionroboticsigngazebo isaac nvidia virtual simulator robot morse modular open robot simulation engine github morse neurorobotics platform internetaccessible simulation robot controlled spiking neural network bitbucket pybullet easy use simulator robotics deep reinforcement learning github bullet3 pybulletindustrial extension pybullet allows simulation various robotic manufacturing process milling 3dprinting github pybulletindustrial robot gui threejs based 3d robot interface github glumbrobotgui simbad java 3d robot simulator enables write robot controller modifying environment using available sensor unity popular game engine offer opensource tool tutorial resource robotics simulation github unitytechnologiesunityroboticshub webots robot simulator provides complete development environment github omichelwebots commercial actin simulation artiminds planning programming operation analysis optimization kineo path planning trajectory optimization industrial robotics digital mockup review application robotdk simulation olp robot robotstudio robot virtual world virtual robotics toolkit visual component cloud aws robomaker service make easy develop test deploy intelligent robotics application scale library dynamic simulation warning following table complete please feel free report find something incorrect missing name model feature language license code popularity arcsim soft c bullet rigid soft ik id urdf sdf c python zlib github bullet3 chronoengine rigid soft granular fluid ik urdf c python bsd3clause github chrono dart rigid soft ik id plan urdf sdf c python bsd2clause github dart drake rigid aero fluid ik trjopt plan c matlab bsd3clause github drake flex rigid soft particle fluid c github nvidiagameworksflex frost rigid matlab bsd3clause github ayongafrostdev ibds rigid particle c zlib idyntree rigid id c python matlab lua lgpl21 github idyntree kdl rigid ik c lgpl21 github orocoskinematicsdynamics kindr rigid todo c matlab bsd3clause github kindr klampt todo todo c python bsd3clause github klampt librepilot uav vehicle todo c gpl30 bitbucket github librepilot mar simplicity shortened name used represent supported model feature supported model rigid rigid body soft soft body aero aerodynamics granular granular material like sand fluid fluid dynamic vehicle uav unmanned aerial vehicle like drone medical molecule parallel parallel mechanism like stewart platform feature simulation analysis planning control design dm discrete mechanic ik inverse kinematics solver please find ik specialized package list id inverse dynamic slam simultaneous localization mapping trjopt trajectory optimization plan motion planning algorithm cv computer vision urdf urdf parser sdf sdf parser inverse kinematics ikbt python package solve robot arm inverse kinematics symbolic form github uwbioroboticsikbt lively highly configurable toolkit commanding robot mixed modality github wischcilively relaxedik realtime synthesis accurate feasible robot arm motion github uwgraphicsrelaxedik trip python package solves inverse kinematics parallel serial hybridrobots github tripedrobottrip machine learning allenact pythonpytorchbased research framework embodied ai github wichtounetdll dll deep learning library dll c github wichtounetdll dynet dynamic neural network toolkit github clabdynet fido lightweight c machine learning library embedded electronics robotics github fidoprojectfido ivy unified machine learning framework github unifyaiivy minidnn headeronly c library deep neural network github yixuanminidnn mlpack scalable c machine learning library github mlpackmlpack openai gym developing comparing reinforcement learning algorithm github gym gymdart github dartenv gymgazebo github dartenv rllib temporaldifference learning algorithm reinforcement learning github samindaarllib tinydnn header dependencyfree deep learning framework c14 github tinydnntinydnn motion planning control aikido solving robotic motion planning decision making problem github aikido bioptim bioptim python framework musculoskeletal optimal control biomechanics github pyomecabioptim cuiksuite application solve position analysis path planning problem control toolbox opensource c library robotics optimal model predictive control github ethzadrlcontroltoolbox crocoddyl optimal control library robot control contact sequence github loco3dcrocoddyl fields2cover robust efficient coverage path autonomous agricultural vehicle github fields2coverfields2cover gpmp2 gaussian process motion plannergithub gtrllgpmp2 hpp path planning kinematic chain environment cluttered obstacle github moveit motion planning framework github moveit ompl open motion planning library bitbucket github ompl ocs2 efficient continuous discrete time optimal control implementation bitbucket pymanoid humanoid robotics prototyping environment based openrave github stephanecaronpymanoid behavior tree github miccolrosbehaviortree ruckig realtime timeoptimal jerkconstrained online trajectory generation github ruckig kautham project robot simulation toolkit motion planning github kautham toppra timeparameterizing robot trajectory subject kinematic dynamic constraint github hungpham2511toppra ungar expressive efficient implementation optimal control problem using template metaprogramming github fdevincungar motion optimizer topico timeoptimal trajectory generation control github aisbonntopico towr lightweight eigenbased c library trajectory optimization legged robot github ethzadrltowr trajectoryoptimization fast trajectory optimization library written julia github roboticexplorationlabtrajectoryoptimizationjl trajopt framework generating robot trajectory local optimization github joschutrajopt nearest neighbor covertree cover tree data structure quick knearestneighbor search github covertree faster cover tree mike izbicki et al icml 2015 flann fast library approximate nearest neighbor github flann nanoflann nearest neighbor search kdtrees github nanoflann 3d mapping libpointmatcher iterative closest point library 2d3d mapping robotics github ethzasllibpointmatcher octree fast radius neighbor search octree github jbehleyoctree octomap efficient probabilistic 3d mapping framework based octrees github octomap pcl 2d3d image point cloud processing github pointcloudlibrarypcl treexy brutally fast sparse 3d voxel grid github treexy voxblox flexible voxelbased mapping focusing truncated euclidean signed distance field github voxblox utility software goxel free open source 3d voxel editor github guillaumechereaugoxel optimization casadi symbolic framework algorithmic differentiation numeric optimization github casadi cere solver large scale nonlinear optimization library github ceressolver eigenqld interface use qld qp solver eigen3 library github jrlumi3218eigenqld exotica generic optimisation toolset robotics platform github ipabslmcexotica hpipm highperformance interiorpointmethod qp solver ipopt snopt github giafhpipm hypre parallel solver sparse linear system featuring multigrid method github hyprespacehypre ifopt eigenbased lightweight c interface nonlinear programming solver ipopt snopt github ifopt ipopt large scale nonlinear optimization library github ipopt libcmaes blackbox stochastic optimization using cmaes algorithm github benizlibcmaes limbo gaussian process bayesian optimization blackbox function github resibotslimbo lpsolvers linear programming solver python unified api github lpsolvers nlopt nonlinear optimization github nlopt optimlib lightweight c library numerical optimization method nonlinear function github kthohroptim osqp operator splitting qp solver github osqposqp pagmo scientific library massively parallel optimization github esapagmo2 proxsuite advanced proximal optimization toolbox github simpleroboticsproxsuite pymoo multiobjective optimization python github msucoinlabpymoo qpsolvers quadratic programming solver python unified api github qpsolvers roboptim numerical optimization robotics github roboptimroboptimcore sc numerical optimization solving largescale convex cone problem github sc shot solver mixedinteger nonlinear optimization problem github coinorshot sferes2 evolutionary computation github sferes2sferes2 robot modeling robot model description format sdf xml format describes object environment robot simulator visualization control bitbucket urdf xml format representing robot model github rosurdfdom utility build robot model onshapetorobot converting onshape assembly robot definition sdf urdf onshape api github phobos phobos addon blender creating urdf smurf robot model github phobos robot platform autorally highperformance testbed advanced perception control research github autorallyautorally linorobot compatible ground robot github linorobotlinorobot onine service robot based linorobot braccio arm github grassjellyonine rock software framework robotic system flexible framework writing robot software github repos rosversion 20 robot operating system software stack github repos yarp communication device interface applicable humanoid embedded device github robotologyyarp slam aprilsam realtime smoothing mapping github xipengwangaprilsam cartographer realtime slam 2d 3d across multiple platform sensor configuration github cartographer dso novel direct sparse formulation visual odometry github dso elasticfusion realtime dense visual slam system github elasticfusion fiducials simultaneous localization mapping using fiducial marker github ubiquityroboticsfiducials gtsam smoothing mapping sam robotics vision github borglabgtsam kintinuous realtime large scale dense visual slam system github kintinuous lsdslam realtime monocular slam github lsdslam orbslam2 realtime slam library monocular stereo rgbd camera github orbslam2 rtapmap rgbd graph slam approach based global bayesian loop closure detector github introlabrtabmap srba solving slamba relative coordinate flexibility different submapping strategy github srba slam dataset awesome slam datasets vision visp visual servoing platform github lagadicvisp bundletrack 6d pose tracking novel object without 3d model github wenbowen123bundletrack se3tracknet 6d pose tracking novel object without 3d model github wenbowen123iros206dposetracking fluid fluid engine dev jet fluid simulation engine computer graphic application github doyubkimfluidenginedev multiphysics kratos framework building parallel multidisciplinary simulation software github kratosmultiphysicskratos math fastor lightweight high performance tensor algebra framework c111417 github romericfastor linalgh single header public domain linear algebra library c11 github sgorstenlinalg manif small c11 headeronly library lie theory github artivismanif sophus lie group using eigen github strasdatsophus spacevelalg spatial vector algebra eigen3 github jrlumi3218spacevecalg etc fuse general architecture performing sensor fusion live robot github locusroboticsfuse foxglove studio fully integrated visualization debugging desktop app robotics data combine functionality tool like rviz rqt also available via web app awesome list awesome robotics kiloreux awesome robotics ahundt awesome robotic tooling awesome artificial intelligence awesome collision detection awesome computer vision awesome machine learning awesome deep learning awesome gazebo awesome grasping awesome human robot interaction pythonrobotics python sample code robotics algorithm robotics coursework list robotics course take online contributing contribution welcome please read contribution guideline first also please feel free report error license cc0,"[('motion', 'planning'), ('inverse', 'kinematics')]"
petercorke/robotics-toolbox-python,Python,robotics toolbox python python robotics package powered spatial math qut centre robotics open source pypi version anaconda version pypi python version build status coverage pypi downloads license mit python implementation icra paper want learn manipulator kinematics differential kinematics inversekinematics motion control look specified matplotlib pyplot backend blue arrow show joint ax coloured frame show endeffector pose also plot trajectory swift simulator browserbased 3dsimulation environment built work toolbox python robotplotqtq also experiment velocity controller swift resolvedrate motion control example python import swift import roboticstoolbox rtb import spatialmath sm import numpy np env swiftswift envlaunchrealtimetrue panda rtbmodelspanda pandaq pandaqr tep pandafkinepandaq smse3trans02 02 045 arrived false envaddpanda dt 005 arrived v arrived rtbpservopandafkinepandaq tep pandaqd nplinalgpinvpandajacobepandaq v envstepdt uncomment stop browser tab closing envhold run example notebook folder contains tutorial jupyter notebook browse github additionally look example folder many ready run example toolbox research application toolbox incredibly useful developing prototyping algorithm research thanks exhaustive set well documented mature robotic function exposed clean painless apis additionally ease user visualize algorithm support rapid prototyping paradigm publication list j haviland n sunderhauf p corke holistic approach reactive mobile manipulation ieee robotics automation letter doi 101109lra20223146554 video robot controlled using robotics toolbox python feature recording swift simulator arxiv paper ieee xplore project website video code example j haviland p corke neo novel expeditious optimisation algorithm reactive motion control manipulator ieee robotics automation letter doi 101109lra20213056060 video robot controlled using robotics toolbox python feature recording swift simulator arxiv paper ieee xplore project website video code example purelyreactive manipulabilitymaximising motion controller j haviland p corke video robot controlled using robotics toolbox python paper project website video code example toolbox icra paper citation info check icra 2021 paper ieee xplore get pdf peter website toolbox helped research please cite inproceedingsrtb titlenot grandmother toolboxthe robotics toolbox reinvented python authorcorke peter haviland jesse booktitle2021 ieee international conference robotics automation icra pages1135711363 year2021 organizationieee using toolbox open source code using toolbox open source code feel free add badge readme powered robotics toolbox badge powered robotics toolbox copy following powered robotics toolbox powered python robotics badge powered python robotics copy following powered python robotics common issue solution see common issue fix,"[('robotics', 'toolbox'), ('toolbox', 'python')]"
Unity-Technologies/Unity-Robotics-Hub,Other,unity robotics hub license unity central repository tool tutorial resource documentation robotic simulation unity content repository active development feature api subject significant change development progress currently working lot thing please take short moment fill survey help u identify product package build next introduction simulation play important role robotics development ensure roboticists use unity simulation starting set tool make easier use unity existing rosbased workflow try sample get started quickly getting started quick installation instruction brief step installing unity robotics package pickandplace tutorial complete endtoend demonstration including set unity environment import robot urdf set twoway communication control object pose estimation tutorial complete endtoend demonstration collect training data unity use data train deep neural network predict pose cube model deployed simulated robotic pickandplace task articulation robot demo robot simulation demonstrating unity new physic solver dependency new navigationslam example example simulation environment integrated rosand new visualization enables exercise navigationand slamtoolbox package using simulated turtlebotdocumentation tutorial description rosunity integration set componentlevel tutorial showing set communication unity urdf importer step using unity package loading urdf file new visualization usage instruction adding visualization incoming outgoing message component repos repo functionality tcp endpoint node sendingreceiving message unity tcp connector unity package sending receiving visualizing message urdf importer unity package loading urdf file additional resource blog post talk new october2021 introducing unity robotics visualization package blog post august 13 2021 advance robot autonomy rosand unity blog post march2021 teaching robot see unity blog post november 19 2020 robotics simulation unity easy as2blog post november 12 2020 unite 2020 simulating robot unity video august 26 2020 announcing unity robotic simulation blog post may 20 2020 use articulation body easily prototype industrial design realistic motion behavior blog post unity unity industrial simulation unity computer vision unity mlagents toolkit new physic feature unity new feature contact modification api api allow user define custom contact reaction ignoring subset contact point order help simulate hole slippery surface soft contact available unity version 20212a12 read new contact modification api collision detection mode exposed articulationbody discrete sweepbased ccd speculative ccd new continuous collision detection ccd mode ensure fastmoving object collide object instead tunneling passing object happen default discrete mode api available unity version 202035f1 read continuous collision detection coming soon peek physic team hard work wheel collider shape feature allow user specify shape collider used collision detection currently collider shape fixed cylinder collision detection performed casting ray center cylinder custom shape improve accuracy simulating wheel rough terrain hole etc read wheel collider forcetorque sensor api api allow user get force torque acting articulation body useful simulating forcetorque sensor well get motor torque applied articulation drive query primitive simple gameobjectless shape allow collision detection without requiring simulation ie without calling physicssimulate feature allow user initialize object feasible location also used motion planning rosros2 support available get started following tutorial community feedback unity robotics project opensource encourage welcome contribution wish contribute sure review contribution guideline code conduct support question discussion unity robotics package installation best set integrate robotics project please create new thread unity robotics forum make sure include much detail possible feature request bug issue please file github issue using provided template robotics team investigate soon possible question feedback connect directly robotics team unityroboticsunity3dcom newsletter get notified new update feature sign newsletter faq faq license apache license 20,"[('unity', 'robotics'), ('blog', 'post')]"
petercorke/robotics-toolbox-matlab,Other,build status coverage license lgpl v3 maintenance github star robotics toolbox matlab release 10 support please use google group forum synopsis toolbox brings robotics specific functionality matlab exploiting native capability matlab linear algebra portability graphic toolbox us general method representing kinematics dynamic seriallink manipulator matlab object robot object created user seriallink manipulator number example provided well known robot kinova universal robotics rethink well classical robot puma 560 stanford arm toolbox also support mobile robot function robot motion model unicycle bicycle path planning algorithm bug distance transform prm kinodynamic planning lattice rrt localization ekf particle filter map building ekf simultaneous localization mapping ekf simulink model nonholonomic vehicle toolbox also including detailed simulink model quadrotor flying robot advantage toolbox code mature provides point comparison implementation algorithm routine generally written straightforward manner allows easy understanding perhaps expense computational efficiency feel strongly computational efficiency always rewrite function efficient compile mfile using matlab compiler create mex version since source code available benefit understanding teaching toolbox date back 1993 significantly predates robotics system toolbox mathworks former free open supported latter fully supported commercial product code example matlab mdlpuma560 p560 p560 puma 560 unimationaxis rrrrrr stddh fastrne viscous friction params 895 j theta alpha offset q10 15708q2043180 q3 015005 00203 15708q4 0431815708q50 15708q600 p560fkine000forward kinematics 004521 1015 004318 01 animate path matlab mdlpuma560 p 080 translp trotypi2 qr1 pi2 qqr p560ikine6st ru qrt jtrajqr qqr 50 plotspherep 005 p560plot3dqrt view ae movie move2ballgif quadrotor animation mobile robot lifting hovering point following circular trajectory also slowly turning matlab slquadrotor mobile robot animation carlike mobile robot 3point turn computed using reedsshepp planner matlab q00 initial configuration x theta qf0 pi final configuration maxcurv 15 5m turning circle r reedssheppq0 qf maxcurv 005 set vehicle model animation carimagecaralpha imread car2png carrotation 180 degree carcentre 648 173 pix carlength 42 setup plot clf plotvol46a gca axlimmode manual aylimmode manual setgcf color w grid gca xyzlabel animate plotvehiclerspath model car trail r movie 3pointgif particle filter localization animation mobile robot localizing beacon using particle filter matlab v diag01 1pi1802 veh vehiclev vehadddriver randompath10 map map20 10 w diag01 1pi1802 l diag01 01 q diag01 01 1pi1802 pf particlefilterveh sensor q l 1000 movie pfmp4 pfrun100 fully commented version provided livescript demosparticlefiltmlx new travis ci running code base code related pose representation ha split spatial math toolbox repo dependency seriallink class ha twist method return vector twist object one per joint support product exponential formulation forward kinematics jacobians prototype urdf parser installation install shared matlab drive folder work matlab online matlab desktop provided matlab drive setup click appropriate link invitation share emailed address associated matlab account rvc 2nd edition rtb10mvtb4 2017 rvc 1st edition rtb9mvtb3 2011 accept invitation folder named rvc1 rvc2 appear matlab drive folder use matlab file browser navigate folder rvcxrvctools doubleclick script named startuprvcm note comboinstallation includes machine vision toolbox mvtb well install github need recent version matlab r2016b later robotics toolbox matlab ha dependency two github repository spatialmath toolboxcommonmatlab install toolbox computer github follow simple instruction shell shell mkdir rvctools cd rvctools git clone robot git clone smtb git clone common make c robot last command build mex file java class file within matlab matlab addpath rvctoolscommon rvctools folder startuprvc second line set matlab path appropriately current session eitherrepeat everytime start matlabadd matlab command yourstartupmfileonce run startuprvc runpathtooland push thesave button save path setting subsequent session online resource home page discussion group please email bug report comment code contribtions rvcpetercorkecom contributor contribution welcome user forum license toolbox released gnu lgpl matlab toolbox robotics compliant joint toolbox matlab simulink block simulate robot compliant joint arte robotics toolbox education matlab toolbox focussed industrial robotic manipulator rich 3d graphic teach pendant abb rapid language rtb interface vrep matlab classbased interface vrep robotics simulator includes implementation trs task matlab interface mobile robot u npl pure matlab toolbox control p3 mobile robot kukasunrise toolbox toolbox used control kuka iiwar 800 robot external computer using matlab robotics system toolbox mathworks proprietary,"[('mobile', 'robot'), ('robotics', 'toolbox')]"
AprilRobotics/apriltag,Other,apriltagapriltag visual fiducial system popular robotics research repository contains recent version apriltag apriltagwhich includes faster 2x detector improved detection rate small tag flexible tag layout pose estimation apriltag consists small c library minimal dependency find tag image pregenerated layout recommend using tagstandard41h12 layout table content paper install cmake make usage choosing tag family getting started detector python c matlab julia upgrading apriltagopencv integration tuning detector parameter increasing speed increasing detection distance pose estimation debugging flexible layout support paper apriltag subject following paper apriltag robust flexible visual fiducial system apriltagefficient robust fiducial detection flexible layout fiducial tag install officially linux operating system supported although user success installing window default installation place header usrlocalinclude shared library usrlocallib also installs pkgconfig script usrlocallibpkgconfig install python wrapper python3 installed cmake cmake installed cmake b build dcmakebuildtyperelease cmake build build target install build shared library default need static library set buildsharedlibs cmake b build dcmakebuildtyperelease dbuildsharedlibsoff cmake build build target install ninja sudo apt install ninjabuild installed use cmake b build gninja dcmakebuildtyperelease cmake build build target install generate compile via ninja build script much faster cmake default makefile generator omit target install want use locally without installing make otherwise handwritten makefile use warned slightly different thing make j sudo make install install different directory usrlocal prefixsomepath sudo make install usage choosing tag family vast majority application tagstandard41h12 family correct choice find image tag apriltagimgs repo scale image favorite editor print heuristic choose tag familiesif need tag use tagstandard52h13if need maximize use space small circular object use tagcircle49h12 tagcircle21h7if want make recursive tag use tagcustom48h12if want compatibility aruco detector use tag36h11 none fit need generate custom tag family getting started detector python import cv2 import numpy np apriltag import apriltag imagepath testjpg image cv2imreadimagepath cv2imreadgrayscale detector apriltagtagstandard41h12 detection detectordetectimage alternately use apriltag python binding created duckietown c imageu8t im imageu8createfrompnmtestpng apriltagdetectort td apriltagdetectorcreate apriltagfamilyt tf tagstandard41h12create apriltagdetectoraddfamilytd tf zarrayt detection apriltagdetectordetecttd im int ii zarraysizedetections apriltagdetectiont det zarraygetdetections det stuff detection cleanup tagstandard41h12destroytf apriltagdetectordestroytd matlab provided thirdparty julia provided thirdparty upgrading apriltagfor usecases drop replacement option refinedecode refinepose blackborder removed generated family need regenerate c code family java code however doe need regenerated quick easy opencv integration note library ha external dependency application require minimum method acquiring image see exampleopencvdemocc example using apriltag c opencv example application built executing following cd example make opencvdemo image data cvmat object passed apriltag without creating deep copy simply create imageu8t header cvmat data buffer cvmat img imageu8t imgheader width imgcols height imgrows stride imgcols buf imgdata tuning detector parameter increasing speed increasing quaddecimate parameter increase speed detector cost detection distance extra cpu core throw problem increase nthreads image somewhat noisy increasing quadsigma parameter increase speed increasing detection distance first choose example image run detector debug1 generate debug image show detector output step detection pipeline border tag detected quadrilateral decrease quaddecimate way toif necessary border tag detected experiment changing decodesharpening pose estimation provide method computing pose tag follows alternately use opencv pnp solver solvepnpippesquare need include apriltagposeh header file call estimatetagpose function follows first create apriltagdetectioninfot struct using known parameter apriltagdetectioninfot info infodet det infotagsize tagsize infofx fx infofy fy infocx cx infocy cy call estimatetagpose apriltagposet pose double err estimatetagposeinfo pose something pose parameter follows det tag detection struct aprildetectiont tagsize size tag meter tag design ha black border white border design white border inside black border inside tagsize thus measured two border meet see figure example fx fy camera focal length pixel camera fx fy equal nearly cx cy camera focal center pixel camera approximately image center note tag size measured outside tag tag size defined distance detection corner alternately length edge white border black border following illustration mark detection corner red x tag size red arrow tag 48h12custom tag family coordinate system coordinate system ha origin camera center zaxis point camera center camera lens xaxis right image taken camera tag coordinate frame centered center tag xaxis right yaxis zaxis tag debugging enable addresssanitizer debug memory issue debug build setting asan option cmake b build gninja dcmakebuildtypedebug dasanon cmake build build mostly run executables usual inspect sanitiser output get message like asan runtime doe come first initial library list either link runtime application manually preload ldpreload preload corresponding libasanso5 like ldpreloadusrlibx8664linuxgnulibasanso5 buildopencvdemo flexible layout apriltagsupports wide variety possible tag layout addition classic layout supported apriltagthe tag data bit go outside tag border also possible define layout hole inside tag border data bit repo included two family new standard layout layout add layer data bit around outside tag border increasing data density number possible tag cost slight decrease detection distance two family circular tag one family ha hole middle could used example drone application placing different sized tag inside allow detection wide range distance generate tag family using repo apriltaggeneration support please create issue github question instead sending private message allows people question find answer,"[('tag', 'family'), ('detection', 'distance')]"
qqfly/how-to-learn-robotics,Other,gitbook learn robotics gitbook github pull request issue issueat yeah dot netmailtoqroboticsyeahnet,"[('gitbook', 'learn'), ('learn', 'robotics')]"
microsoft/PromptCraft-Robotics,Python,promptcraftrobotics promptcraftrobotics repository serf community people test share interesting prompting example large language model llm within robotics domain also provide sample robotics simulator built microsoft airsim chatgpt integration user get started currently focus openai chatgpt also welcome example llm example opensourced model others api access gpt3 user contribute repository submitting interesting prompt example discussion section repository prompt submitted within different robotics category manipulation home robotics physical reasoning among many others submitted prompt reviewed community upvote favorite added repository team admins deemed interesting useful encourage user submit prompt interesting fun useful also encourage user submit prompt necessarily correct optimal interesting nonetheless encourage prompt submission formatted markdown easily transferred main repository please specify llm used possible provide visuals model action video picture paper video citation blog post akamschatgptrobotics paper chatgpt robotics design principle model ability video use repository research please cite following paper techreportvemprala2023chatgpt author vemprala sai bonatti rogerio bucker arthur kapoor ashish title chatgpt robotics design principle model ability institution microsoft year 2023 month february url number msrtr20238 chatgpt prompting guide example list contains link different robotics category corresponding prompt example welcome contribution repository add robotics category example please submit prompt example discussion page submit pull request category example embodied agent chatgpt habitat closed loop object navigationchatgpt habitat closed loop object navigationchatgpt airsim object navigation using rgbd aerial robotics chatgpt real robot tello deployment video link chatgpt airsim turbine inspection video link chatgpt airsim solar panel inspection chatgpt airsim obstacle avoidance video link manipulation chatgpt real robot picking stacking building msft logo video link chatgpt manipulation task spatialtemporal reasoning chatgpt visual servoing basketball chatgpt robotics simulator provice sample airsim environment user test chatgpt prompt environment binary containing sample inspection environment asset wind turbine electric tower solar panel etc environment come drone interface chatgpt user easily send command natural language simulator link welcome contribution repository add robotics simulator environment please submit pull request simulator environment related resource beyond prompt example leave useful related link use large language model read openai apis azure openai service opt language model contributing project welcome contribution suggestion contribution require agree contributor license agreement cla declaring right actually grant u right use contribution detail visit submit pull request cla bot automatically determine whether need provide cla decorate pr appropriately eg status check comment simply follow instruction provided bot need across repos using cla project ha adopted microsoft open source code conduct information see code conduct faq contact opencodemicrosoftcom additional question comment trademark project may contain trademark logo project product service authorized use microsoft trademark logo subject must follow microsoft trademark brand guideline use microsoft trademark logo modified version project must cause confusion imply microsoft sponsorship use thirdparty trademark logo subject thirdparty policy,"[('prompt', 'example'), ('video', 'link')]"
ahundt/awesome-robotics,Other,awesome robotics awesome awesome link software library paper intersting link useful robot relevant awesome list kiloreauxawesomerobotics learn robotics robotics library another list awesome robotics library robotics coursework list robotics course take online computer vision deep learning neural network tensorflow library machine intelligence paper cited deep learning paper deep vision deep learning computer vision data visualization see robot programming language paperswithcode state art list state art result various machine learning benchmark simulator coppeliasim create simulate robot formerly named vrep microsoft airsim open source simulator based unreal engine autonomous vehicle microsoft ai research bullet physic sdk realtime collision detection multiphysics simulation vr game visual effect robotics machine learning etc also see pybullet visualization video display rendering pangolin lightweight portable rapid development library managing opengl display interaction abstracting video input plotjuggler quickly plot replot data fly includes optional integration data visualization list awesome data visualization tool machine learning tensorflow related kera deep learning library python convnets recurrent neural network run tensorflow theano kerascontrib kera community contribution tensorflow opensource software library machine intelligence recurrentshop framework building complex recurrent neural network kera tensorpack neural network toolbox tensorflow tensorlayer deep learning reinforcement learning library researcher engineer tensorflowexamples tensorflow tutorial example beginner hyperas kera hyperopt simple wrapper convenient hyperparameter optimization elephas distributed deep learning kera spark pipelineai endtoend ml ai platform realtime spark tensorflow data pipeline sonnet google deepmind apis top tensorflow visipediatfrecords demonstrates use tensorflow tfrecord data format image segmentation tfimagesegmentation image segmentation framework based tensorflow tfslim library kerasfcn logging messaging spdlog super fast c logging library lcm lightweight communication marshalling message passing data marshalling realtime system highbandwidth low latency critical tracking simtrack simulationbased framework tracking artrackalvar ar tag tracking library artoolkit5 augmented reality toolkit ha excellent ar tag tracking software robot operating system main website ros2design design documentation 20 effort kinematics dynamic constrained optimization jrlumi3218tasks task library real time control robot kinematic tree using constrained optimization jrlumi3218rbdyn rbdyn provides set class function model dynamic rigid body system ceressolver solve nonlinear least square problem bound constraint general unconstrained optimization problem used production google since 2010 orocoskinematicsdynamics orocos kinematics dynamic c library flexiblecollsionlibrary performs three type proximity query pair geometric model composed triangle integrated robotcalibration generic robot kinematics calibration ruckig realtime timeoptimal jerkconstrained online trajectory generation calibration handeyecalibcamodocal generic robot handeye calibration robotcalibration generic robot kinematics calibration kalibr camera imu calibration reinforcement learning good robot efficient reinforcement learning multistep visual task sim real transfer real robot completes multistep task 20k simulated action good robot arxiv disclaimer ahundt first author tensorforce tensorflow library applied reinforcement learning gqcnn grasp quality convolutional neural network gqcnns grasp planning using training datasets dexterity network dexnet guided policy search guided policy search gps algorithm lqgbased trajectory optimization meant help others understand reuse build upon existing work driver sensor device arm libfreenect2 open source driver kinect window v2 xbox one device iaikinect2 tool using kinect one kinect v2 grl generic robotics library cross platform driver kuka iiwa atracsys fusiontrack optional vrep driver also ha cross platform hand eye calibration tool tip calibration datasets costar block stacking dataset shapestacks simulated stack colored child object pascal voc 2012 classic reference image segmentation dataset openimages huge imagenet style dataset google coco object segmentation keypoints link many external datasets cocostuff coco additional full scene segmentation including background annotator google brain robot data robotics datasets including grasping pushing pouring material context material dataset real world image 23 category dexnet 20 67 million pair synthetic point cloud grasp robustness label dataset collection labelfusion pipeline generating ground truth label real rgbd data cluttered scene code cocostuff coco additional full scene segmentation including background annotator linear algebra geometry eigen eigen c template library linear algebra matrix vector numerical solver related algorithm boostqvm quaternion vector matrix library boost boostgeometry boostgeometry contains instantiable geometry class library user also use spacevecalg implementation spatial vector algebra 3d geometry eigen3 linear algebra library sophus c implementation lie group 3d geometry using eigen point cloud libpointmatcher iterative closest point library robotics 2d3d mapping point cloud library pcl point cloud library pcl standalone large scale open project 2d3d image point cloud processing simultaneous localization mapping slam elasticfusion realtime dense visual slam system cofusion realtime segmentation tracking fusion multiple object extends elasticfusion google cartographer cartographer system provides realtime simultaneous localization mapping slam 2d 3d across multiple platform sensor configuration octomap efficient probabilistic 3d mapping framework based octrees contains main octomap library viewer octovis dynamicedt3d orbslam2 realtime slam monocular stereo rgbd camera loop detection relocalization capability license rellicense href altcreative common license styleborderwidth0 src work licensed rellicense href common attribution 40 international license,"[('deep', 'learning'), ('neural', 'network')]"
rwaldron/johnny-five,Other,johnnyfive javascript robotics programming framework artwork mike sgier build lint test measure coverage appveyor build status coverage status install size gitter johnnyfive open source firmata protocol based iot robotics programming framework developed nodebots community johnnyfive program written arduino model electric imp beagle bone intel galileo edison linino one pinoccio pcduino3 raspberry pi particlespark core photon tesselti launchpad johnnyfive ha grown passion project tool inspiring learning creativity people age background across world interested learning building awesome thing might want start official johnnyfive website want find api documentation thats right need figure platform use project put stuff need inspiration next nodebot check example want stay uptodate project community check need nodebots community johnnyfive project update announcement youre looking johnnyfive doe attempt provide thing instead focus delivering robust reality tested highly composable apis behave consistently across supported hardware platform johnnyfive want baseline control kit hardware project allowing freedom build grow experiment diverse javascript library choice johnnyfive couple comfortably popular application library expressjs socketio fellow hardware project like ardrone aerogel spheron bluetooth game controller like xbox controller dualshock iot framework octoblu many explorable possibility check exciting project nodepulsesensor footballbotworkshopui nodebotui dublindisco nodeslotcarbot servocalibrator nodeardx nodebotworkshop phonehome purpleunicorn webduino leapduino lasercatworkshop simplesense fiveredbot robotnik theblender javascript nodebots rise javascript robotics hello johnny ubiquitous hello world program microcontroller soc world blink led following code demonstrates done using johnnyfive framework javascript const board led requirejohnnyfive const board new board boardonready create led pin 13 const led new led13 blink every half second ledblink500 img src note node crash try run johnnyfive node repl board instance create contextual repl put script file supported hardware johnnyfive ha tested variety arduinocompatible board nonarduino based project number platformspecific io plugins available io plugins allow johnnyfive code communicate nonarduino based hardware whatever language platform speaks documentation documentation johnnyfive api found example program guidance need help ask question nodebots community forum quick question interested ongoing design discussion join u johnnyfive gitter chat stepbystep example including electronics primer check arduino experimenter guide nodejs annagerber list prerequisite linux osx window check bluetooth guide want remotely control robot setup assemble arduino recommended starting kit sparkfun inventor kit download arduino ide plug arduino arduino compatible microcontroller via usb open arduino ide select file example firmata standardfirmataplus standardfirmataplus available firmata v250 greater click upload button upload wa successful board prepared close arduino ide nonarduino project io plugin repo provide platform specific setup instruction hey johnny source code bash git clone gitgithubcomrwaldronjohnnyfivegit cd johnnyfive npm install npm package install module bash npm install johnnyfive example program get running quickly provide variety example using johnnyfive component one thing especially excited extensive collection fritzing diagram youll find throughout site huge part johnnyfive project handling actual hardware weve included part documentation realised instruction write code control servo insufficient without instruction connect servo interactively navigate example visit johnnyfive example page official website want link directly example repo use one following link presently 362 example program code diagram board board basic initialization board cleanup exit event board multiple one program board specify sampling interval board specify port custom data property pin repl led led led blink led demo sequence led fade led fade callback led fade animation led pca9685 led pulse led pulse animation led slider led tessel servo module led array led led controlling array led led rgb led rgb common anode led rgb common anode pca9685 led rgb intensity led rainbow led rainbow blinkm led digit matrix led digital clock led digital clock dual display led digital clock ht16k33 led draw matrix character demo led enumerate matrix character symbol led matrix led matrix demo led matrix ht16k33 led matrix ht16k33 16x8 servo servo servo continuous servo drive servo multiturn servo pca9685 servo prompt servo slider control servo tessel servo module servo array servo gps gps adafruit ultimate gps breakout gps default gps gps hardware serial gps sparkfun gp20u7 servo animation servo animation servo leg animation color color evshield ev3 code color evshield ev3 raw color evshield nxt code color isl29125 motor motor motorpin motor adafruit drv8871 dc motor driver breakout motor brake motor current motor directional motor evshield ev3 motor evshield nxt motor enable pin motor grovei2cmotordriver motor hbridge motor ludus motor pca9685 motor pololu vnh5019 dual motor driver breakout motor sparkfun dual hbridge edison block motor sparkfun tb6612fng motor l298 breakout motor dual hbridge stepper motor stepper driver stepper four wire stepper sweep esc brushless motor esc bidirectional esc keypress controlled escs esc pca9685 button switch button button bumper button evshield ev3 button evshield nxt button option button pullup button collection w at42qt1070 switch switch magnetic door switch tilt sw200d toggle switch keypad keypad 3x4 i2c nano backpack keypad 4x4 i2c nano backpack keypad vkey keypad waveshare ad touchpad grove qtouch touchpad mpr121 touchpad mpr121 sensitivity touchpad mpr121qr2shield touchpad mpr121keypad touchpad mpr121shield relay relay relay collection relay analog pin shift register shift register shift register common anode seven segment controller shift register common anode seven segment chained shift register seven segment controller shift register seven segment chained infrared reflectance ir motion ir proximity ir reflectance ir reflectance array proximity proximity proximity evshield ev3 ir proximity evshield ev3 ir proximity evshield ev3 ultrasonic proximity evshield ev3 ultrasonic proximity gp2y0a710k0f proximity hcsr04 proximity hcsr04 analog proximity hcsr04 i2c backpack proximity lidarlite proximity mb1000 proximity mb1003 proximity mb1010 proximity mb1230 proximity srf10 motion motion motion gp2y0a60szlf motion gp2y0d805z0f motion gp2y0d810z0f motion gp2y0d810z0f joystick joystick joystick esplora joystick pan tilt control joystick sparkfun shield lcd grove rgb lcd color previewer lcd lcd enumerate character lcd i2c lcd i2c pcf8574 lcd i2c runner lcd runner 16x2 lcd runner 20x4 lcd tessel16x2 tessel grove rgb lcd color previewer tessel grove rgb lcd display compassmagnetometer compass find north compass hmc5883l compass hmc6352 compass logger compass mag3110 compass mag3110 tesselcompass magnetometer piezo piezo imumulti imu bno055 imu bno055 orientation imu lsm303c imu mpu6050 multi bme280 multi bmp085 multi bmp180 multi dht11i2cnanobackpack multi dht21i2cnanobackpack multi dht22i2cnanobackpack multi hih6130 multi htu21d multi mpl115a2 multi mpl3115a2 multi ms5611 multi sht31d multi si7020 multi si7021 multi th02 sensor accelerometer accelerometer adxl335 accelerometer adxl345 accelerometer lis3dh accelerometer mma7361 accelerometer mma8452 accelerometer mpu6050 accelerometer pan tilt altimeter bmp085 altimeter bmp180 altimeter mpl3115a2 altimeter ms5611 barometer bmp085 barometer bmp180 barometer mpl115a2 barometer mpl3115a2 barometer ms5611 gyro gyro analog lpr5150al gyro i2c mpu6050 hygrometer dht11i2cnanobackpack hygrometer dht21i2cnanobackpack hygrometer dht22i2cnanobackpack hygrometer hih6130 hygrometer htu21d hygrometer sht31d hygrometer si7021 hygrometer th02 sensor sensor digital microwave sensor flex sensor sensor force sensitive resistor sensor microphone sensor photoresistor sensor potentiometer sensor slide potentiometer thermometer bmp085 thermometer bmp180 thermometer dht11i2cnanobackpack thermometer dht21i2cnanobackpack thermometer dht22i2cnanobackpack thermometer ds18b20 thermometer dual ds18b20 thermometer hih6130 thermometer htu21d thermometer lm335 thermometer lm35 thermometer max31850 thermometer mcp9808 thermometer mpl115a2 thermometer mpl3115a2 thermometer mpu6050 thermometer ms5611 thermometer sht31d thermometer si7020 thermometer si7021 thermometer th02 thermometer tmp102 thermometer tmp36 expander expander 74hc595 expander cd74hc4067 16 channel analog input breakout expander lis3dh expander mcp23008 expander mcp23017 expander muxshield2 analog sensor expander muxshield2 digital input output expander pca9685 expander pcf8574 expander pcf8575 expander pcf8591 photon weather shield photon weather shield moisture lego evshield button evshield ev3 button evshield nxt color evshield ev3 code color evshield ev3 raw color evshield nxt code light bh1750 light evshield ev3 ambient light evshield ev3 reflected light evshield nxt ambient light evshield nxt reflected light tsl2561 motor evshield ev3 motor evshield nxt proximity evshield ev3 ir proximity evshield ev3 ultrasonic intel edison grove iot kit intel edison grove accelerometer adxl345 intel edison grove accelerometer mma7660 intel edison grove air quality sensor intel edison grove barometer bmp180 intel edison grove button intel edison grove compass hmc588l intel edison grove flame sensor intel edison grove gas mq2 intel edison grove humidity temperature th02 intel edison grove i2c motor driver intel edison grove joystick intel edison grove led intel edison grove light sensor tsl2561 intel edison grove moisture sensor intel edison grove q touch intel edison grove rgb lcd intel edison grove rgb lcd color previewer intel edison grove rgb lcd temperature display intel edison grove relay intel edison grove rotary potentiometer intel edison grove servo intel edison grove touch grove iot kit seeed studio grove button grove joystick grove led grove motor i2c driver grove rgb lcd grove rgb lcd temperature display grove rotary potentiometer grove servo grove touch micro magician v2 micro magician v2 accelerometer micro magician v2 motor micro magician v2 servo tinkerkit tinkerkit accelerometer tinkerkit blink tinkerkit button tinkerkit combo tinkerkit continuous servo tinkerkit gyro tinkerkit joystick tinkerkit linear potentiometer tinkerkit rotary potentiometer tinkerkit temperature tinkerkit tilt tinkerkit touch wii wii classic controller wii nunchuck complete bot project bug kinect robotic arm controller laser trip wire line follower lynxmotion biped brat motobot navigator nodebot phoenix hexapod radar robotic claw whisker component plugin template example plugin io plugins led blink electric imp led blink intel edison arduino board led blink intel edison mini board led blink intel galileo genled blink raspberry pi led blink spark core led blink pcduino3 many fragment large small wireless nodebot kinect controlled robot arm biped nodebot lcd running man slider controlled panning servo joystick controlled laser pantiltjoystick controlled laser pantiltjoystick controlled claw robot claw joystick motor led build drone make javascript robotics contributing contribution must adhere idiomaticjs style guide maintaining existing coding style add unit test new changed functionality lint test code using grunt license copyright c 2012 2013 2014 rick waldron waldronrickgmailcom licensed mit license copyright c 2014 2015 johnnyfive contributor licensed mit license,"[('intel', 'edison'), ('edison', 'grove')]"
RobotLocomotion/drake,C++,drake modelbased design verification robotics please see drake documentation information,"[('drake', 'modelbased'), ('modelbased', 'design')]"
google-research/robotics_transformer,Python,robotics transformer officially supported google product repository collection code file artifact running robotics transformer rt1 feature film efficient net based image tokenizer backbone token learner based compression input token transformer end end robotic control testing utility getting started installation clone repo bash git clone pip install r roboticstransformerrequirementstxt python roboticstransformertokenizersactiontokenizertest running test run rt1 test clone git repo run bazel bash git clone cd roboticstransformer bazel test using trained checkpoint checkpoint included trainedcheckpoints folder three modelsrt1 trained 700 tasksrt1 jointly trained edr kuka datart1 jointly trained sim real data tensorflow savedmodel file instruction usage found future release current repository includes initial set library early adoption component may come future release license robotics transformer library licensed term apache license,"[('robotics', 'transformer'), ('bash', 'git')]"
kornia/kornia,Python,kornia differentiable computer vision library pytorch consists set routine differentiable module solve generic computer vision problem core package us pytorch main backend efficiency take advantage reversemode autodifferentiation define compute gradient complex function overview inspired existing package library composed subset package containing operator inserted within neural network train model perform image transformation epipolar geometry depth estimation lowlevel image processing filtering edge detection operate directly tensor granular level kornia library consists following component component description kornia differentiable computer vision library strong gpu support korniaaugmentation module perform data augmentation gpu korniacolor set routine perform color space conversion korniacontrib compilation user contrib experimental operator korniaenhance module perform normalization intensity transformation korniafeature module perform feature detection korniafilters module perform image filtering edge detection korniageometry geometric computer vision library perform image transformation 3d linear algebra conversion using different camera model kornialosses stack loss function solve different vision task korniamorphology module perform morphological operation korniautils image tensor utility metric vision problem installation pip bash pip install kornia pip install korniax get training api installation option source bash python setuppy install source symbolic link bash pip install e source using pip bash pip install git example run jupyter notebook tutorial learn use library triangularflagonpost update whitecheckmark image matching integrated huggingface space see gradio web demo whitecheckmark face detection integrated huggingface space see gradio web demo cite using kornia researchrelated document recommended cite paper see citation bibtex inproceedingseriba2019kornia author e riba mishkin ponsa e rublee g bradski title kornia open source differentiable computer vision library pytorch booktitle winter conference application computer vision year 2020 url contributing appreciate contribution planning contribute back bugfixes please without discussion plan contribute new feature utility function extension please first open issue discus feature u please consider reading contributing note participation open source project subject code conduct community forum discus implementation research etc github forum github issue bug report feature request install issue rfcs thought etc open slack join workspace keep touch core contributor part community join general information please visit website href made contribrocks,"[('computer', 'vision'), ('module', 'perform')]"
qboticslabs/ros_robotics_projects,Other,robotics project robotics project buy book packt amazoncom amazonin author lentin joseph installation code comaptible kinetic indigo detail installation instruction package mentioned book tutorial chaptergetting started robotics application development chapterface detection tracking using opencv dynamixel servo chapterbuilding sirilike chatbot chaptercontrolling embedded board using chapterteleoperate robot using hand gesture chapterobject detection recognition chapterdeep learning using tensorflow chapterros matlab android chapterbuilding autonomous mobile robot chapter 10 creating selfdriving car using chapter 11 teleoperating robot using vr headset leap motion chapter 12 controlling robot web mastering robotics programming mastering robotics programming book tutorial source code buy book packt amazoncom amazonin author lentin joseph installation code comaptible jade indigo detail installation instruction package mentioned book tutorial chapterintroduction package management chapterworking 3d robot modeling chaptersimulating robot using gazebo chapterusing moveit navigation stack chapterworking pluginlib nodelets gazebo plugins chapterwriting controller visualization plugins chapterinterfacing io board sensor actuator chapterprogramming vision sensor using opencv pcl chapterbuilding interfacing differential drive mobile robot hardware chapter 10 exploring advanced capability rosmoveit chapter 11 industrial robot chapter 12 troubleshooting best practice learning robotics using python learning robotics using python book tutorial source code buy book packt amazoncom amazonin author lentin joseph installation code comaptible jade indigo detail installation instruction package mentioned book tutorial chapterintroduction robotics chaptermechanical design service robot chapterworking robot simulation using gazebo chapterdesigning chefbot hardware chapterworking robotic actuator wheel encoders chapterworking robotic sensor chapterprogramming vision sensor using python chapterworking speech recognition synthesis using python chapterapplying artificial intelligence chefbot using python chapter 10 integration chefbot hardware interfacing using python chapter 11 designing gui robot using qt python chapter 12 calibration testing chefbot,"[('using', 'python'), ('book', 'tutorial')]"
wuhaoran996/openRobotics,Other,openrobotics 1 newm puma5601s jixieshoubixinxinxinm matlab pidsimscape simulinkzip swmatlabsimulinkpid sixuamnyislx jixiebinewslx simscape2g musiczipmatlab railgun spk servozipmatlabgui simulink model matlabpid trajectory planningzip 7doftrajectory planningzip 7dofrobotics system toolbox 3dofinversezip 3dof prmpathplanningm prm plan execute collisionfree trajectorieszip 7dof drawingrobotm dcmotorslx pwm,"[('openrobotics', '1'), ('1', 'newm')]"
GT-RIPL/Awesome-LLM-Robotics,Other,awesomellmrobotics awesome repo contains curative list paper using large languagemultimodal model roboticsrl template awesomeimplicitnerfrobotics please feel free send pull request email add paper find repository useful please consider citing staring list feel free share list others overview reasoning planning manipulation instruction navigation simulation framework citation reasoning rtx open xembodiment robotic learning datasets rtx model arxiv july 2023 paper website rt2 rt2 visionlanguageaction model transfer web knowledge robotic control arxiv july 2023 paper website instruct2act mapping multimodality instruction robotic action large language model arxiv may 2023 paper pytorch code tidybot personalized robot assistance large language model arxiv may 2023 paper pytorch code website palme palme embodied multimodal language model arxiv mar 2023 paper webpage rt1 rt1 robotics transformer realworld control scale arxiv dec 2022 paper github website progprompt generating situated robot task plan using large language model arxiv sept 2022 paper github website codeaspolicies code policy language model program embodied control arxiv sept 2022 paper colab website saycan say grounding language robotic affordances arxiv apr 2021 paper colab website socratic socratic model composing zeroshot multimodal reasoning language arxiv apr 2021 paper pytorch code website piglet piglet language grounding neurosymbolic interaction 3d world acl jun 2021 paper pytorch code website matcha chat environment interactive multimodal perception using large language model iros 2023 paper github website generative agent generative agent interactive simulacrum human behavior arxiv apr 2023 paper code large language model zeroshot human model humanrobot interaction arxiv mar 2023 paper translating natural language planning goal largelanguage model arxiv feb 2023 paper pddl planning pretrained large language model neurlps 2022 paper github cortexbench search artificial visual cortex embodied intelligence arxiv mar 2023 paper planning llmpllmp empowering large language model optimal planning proficiency arxiv apr 2023 paper code foundation model decision making problem method opportunity arxiv mar 2023 paper promptcraft chatgpt robotics design principle model ability blog feb 2023 paper website text2motion text2motion natural language instruction feasible plan arxiv mar 2023 paper website chatgptprompts chatgpt empowered longstep robot control various environment case application arxiv apr 2023 paper codeprompts lmnav robotic navigation large pretrained model language vision action arxiv july 2022 paper pytorch code website innermonlogue inner monologue embodied reasoning planning language model arxiv july 2022 paper website housekeep housekeep tidying virtual household using commonsense reasoning arxiv may 2022 paper pytorch code website lid pretrained language model interactive decisionmaking arxiv feb 2022 paper pytorch code website zsp language model zeroshot planner extracting actionable knowledge embodied agent icml jan 2022 paper pytorch code website film film following instruction language modular method iclr 2022 paper code website copy teacher dont copy teacher data model challenge embodied dialogue emnlp 2022 paper website react react synergizing reasoning acting language model iclr 2023 paper github website llmbrain llmbrain aidriven fast generation robot behaviour tree based large language model arxiv may 2023 paper moo openworld object manipulation using pretrained visionlanguage model arxiv mar 2022 paper website calm keep calm explore language model action generation textbased game arxiv oct 2020 paper pytorch code planning large language model via corrective reprompting arxiv nov 2022 paper visuallygrounded planning without vision language model infer detailed plan highlevel instruction arxiv oct 2020 paper llmplanner llmplanner fewshot grounded planning embodied agent large language model arxiv mar 2023 paper pytorch code website gd grounded decoding guiding text generation grounded model robot control arxiv mar 2023 paper website cowp robot task planning situation handling open world arxiv oct 2022 paper pytorch code website glam grounding large language model interactive environment online reinforcement learning arxiv may 2023 paper pytorch code reward design language model icml feb 2023 paper pytorch code llmmcts large language model commonsense knowledge largescale task planning arxiv may 2023 paper collaborating language model embodied reasoning neurips feb 2022 paper llmbrain llm robotic brain unifying egocentric memory control arxiv apr 2023 paper collmagents building cooperative embodied agent modularly large language model arxiv jul 2023 paper code website llmreward language reward robotic skill synthesis arxiv jun 2023 paper website manipulation text2reward text2reward automated dense reward function generation reinforcement learning arxiv sep 2023 paper website voxposer voxposer composable 3d value map robotic manipulation language model arxiv july 2023 paper website programportprogrammatically grounded compositionally generalizable robotic manipulation iclr apr 2023 paper website cotpcchainofthought predictive control arxiv apr 2023 paper code dialrobotic skill acquistion via instruction augmentation visionlanguage model arxiv nov 2022 paper website clipfieldsclipfields weakly supervised semantic field robotic memory arxiv oct 2022 paper pytorch code website vimavima general robot manipulation multimodal prompt arxiv oct 2022 paper pytorch code website perceiveractora multitask transformer robotic manipulation corl sep 2022 paper pytorch code website latte latte language trajectory transformer arxiv aug 2022 paper tensorflow code website robot enact malignant stereotype robot enact malignant stereotype facct jun 2022 paper pytorch code website washington post wired code access request atla leveraging language accelerated learning tool manipulation corl jun 2022 paper zest foundation model perform zeroshot task specification robot manipulation l4dc apr 2022 paper lsengu semantic exploration language abstraction pretrained representation arxiv apr 2022 paper embodiedclip simple effective clip embeddings embodied ai cvpr nov 2021 paper pytorch code cliport cliport pathway robotic manipulation corl sept 2021 paper pytorch code website tip multimodal procedural planning via dual textimage prompting arxiv may 2023 paper vlamp pretrained language model visual planner human assistance arxiv apr 2023 paper r3mr3m universal visual representation robot manipulation arxiv nov 2022 paper pytorch code website livliv languageimage representation reward robotic control arxiv jun 2023 paper pytorch code website lilacno right online language correction robotic manipulation via shared autonomy arxiv jan 2023 paper pytorch code nlmapopenvocabulary queryable scene representation real world planning arxiv oct 2023 paper website llmgroptask motion planning large language model object rearrangement arxiv may 2023 paper website towards unified agent foundation model iclr 2023 paper ellmguiding pretraining reinforcement learning large language model arxiv feb 2023 paper language instructed reinforcement learning humanai coordination arxiv jun 2023 paper voxposervoxposer composable 3d value map robotic manipulation language model arxiv jul 2023 paper website depsdescribe explain plan select interactive planning large language model enables openworld multitask agent arxiv feb 2023 paper pytorch code plan4mcplan4mc skill reinforcement learning planning openworld minecraft task arxiv mar 2023 paper pytorch code website voyagervoyager openended embodied agent large language model arxiv may 2023 paper pytorch code website scalingup scaling distilling languageguided robot skill acquisition arxiv july 2023 paper code website gato generalist agent tmlr nov 2022 paperpdf website robocat robocat selfimproving robotic agent arxiv jun 2023 paperpdf website physobjects physically grounded visionlanguage model robotic manipulation arxiv sept 2023 paper metamorph metamorph learning universal controller transformer arxiv mar 2022 paper sprint sprint semantic policy pretraining via language instruction relabeling arxiv june 2023 paper website bos bootstrap skill learning solve new task llm guidance corl nov 2023 paper website instruction navigation adapt adapt visionlanguage navigation modalityaligned action prompt cvpr may 2022 paper unsurprising effectiveness pretrained vision model control icml mar 2022 paper pytorch code website cow clip wheel zeroshot object navigation object localization exploration arxiv mar 2022 paper recurrent vlnbert recurrent visionandlanguage bert navigation cvpr jun 2021 paper pytorch code vlnbert improving visionandlanguage navigation imagetext pair web eccv apr 2020 paper pytorch code interactive language talking robot real time arxiv oct 2022 paper website vlmaps visual language map robot navigation arxiv mar 2023 paper pytorch code website simulation framework minedojo minedojo building openended embodied agent internetscale knowledge arxiv jun 2022 paper code website open database habitat 20 habitat 20 training home assistant rearrange habitat neurips dec 2021 paper code website behavior behavior benchmark everyday household activity virtual interactive ecological environment corl nov 2021 paper code website igibson 10 igibson 10 simulation environment interactive task large realistic scene iros sep 2021 paper code website alfred alfred benchmark interpreting grounded instruction everyday task cvpr jun 2020 paper code website babyai babyai platform study sample efficiency grounded language learning iclr may 2019 paper code citation find repository useful please consider citing list misckira2022llmroboticspaperslist title awesomellmrobotics author zsolt kira journal github repository url year 2022,"[('2023', 'paper'), ('2022', 'paper')]"
yvonshong/Probabilistic-Robotics,Other,probabilisticrobotics,[]
hubotio/hubot,Other,pipeline status build status macos build status ubuntu build status window hubot hubot framework build chat bot modeled github campfire bot name hubot pretty cool extendable script work many different chat service repository provides library distributed npm use building bot see documentation detail getting running robot friend case probably never hack repo directly building bot check contributingmd create hubot instance create directory called myhubot current working directory sh npx hubot create myhubot adapter hubotfriendshubotslack review scriptsexamplemjs create script script folder license see license file license right limitation mit,"[('build', 'status'), ('building', 'bot')]"
Le0nX/ModernRoboticsCpp,C++,modern robotics mechanic planning control c library repository contains code library accompanying modern robotics mechanic planning control kevin lynch frank park cambridge university press 2017 user manual doc directory main repository function available c python matlab mathematica function ha commented section explaining input required use well example used output repository also contains pdf document provides overview available function using matlab syntax function organized according chapter introduced book basic function function calculate magnitude vector normalize vector test value near zero perform matrix operation multiplication inverse documented primary purpose provided software easy read educational reinforcing concept book code optimized neither efficiency robustness installationinstall eigen library mac console foobar brew install eigen linux console foobar sudo aptget install libeigen3dev prepare build console foobar mkdir build cd build default cmake install build system directory define custom install directory simply pas cmake console foobarbuild cmake dcmakeinstallprefixinstall configure default console foobarbuild cmake building installing library console foobarbuild make make install testing library console foobarbuild libtest,"[('console', 'foobarbuild'), ('console', 'foobar')]"
ros/ros_comm,Python,failtoloadreadme,[]
PetoiCamp/OpenCat,C++,opencat opencat opensource arduino raspberry pibased quadruped robotic pet framework developed petoi maker futuristic programmable robotic pet inspired boston dynamic big dog spot mini dr rongzhong li started project dorm 2016 one year rd founded petoi llc devoted resource startup goal foster collaboration quadrupedfourlegged robotic research education engineering development agile affordable quadruped robot pet bring stem concept mass inspire newcomer including many kid adult join robotic ai revolution create application project still complex quadruped robot system project provides base opensource platform create amazing programmable gait locomotion deployment inverse kinematics quadruped robot bring simulation real world via ccpython programming language user deployed nvidia issac simulation reinforcement learning robot developed visual lidarbased slam using bittle raspberry pi imitation learning using tiny machine learning model petoi bittle raspberry pi user also successfully deployed opencat diy 3dprint robot pet developed many robotics project application using iot automation robot fleet aws improve worker safety successfully crowdfunded two mini robot kit shipped thousand unit worldwide customized arduino board servo coordinating instinctive sophisticated movementswalking running jumping backflipping one clip various sensor camera bring perception inject artificial intelligence capability mounting raspberry pi ai chipssuch nvidia jetson nano wiredwireless connection please see petoi faq info also check opencat petoi robot user showcase setup process opencat software work nybble bittle controlled nyboard based atmega328p detailed documentation found petoi doc center configure board download repo unfold remove main branch name suffix folder open file opencatino select robot board version cpp define bittle petoidof robot dog 1x head 8x leg define nybble petoi 11 dof robot cat 2x head 1x tail 8x leg define nyboardv01 define nyboardv02 define nyboardv10 define nyboardv11 comment define mainsketch turn code board configuration mode upload follow serial prompt proceed cpp define mainsketch activate define autoinit program automatically set without prompt reset joint offset calibrate imu convenient option production line plug usb uploader nyboard install driver usb port found arduino tool port press upload button topleft corner arduino ide open serial monitor arduino ide find button either tool topright corner ide set serial monitor line ending 115200 baud rate serial prompt reset joint offset yn input hit enter want reset joint offset tothe program reset update constant instinctive skill static memory imu inertial measurement unit calibration serial prompt calibrate imu yn input hit enter never calibrated imu want redo calibration put robot flat table touch robot long beep six time give enough time read hundred sensor data save offset beep calibration finish serial monitor print ready close serial monitor next step uncomment define mainsketch make active time code becomes normal program major functionality upload code cpp define mainsketch serial monitor print ready robot ready take next instruction never calibrated joint offset reset offset step2 need calibrate boot robot one side enter calibration state automatically install leg otherwise enter normal rest state use serial monitor calibrate directly may plug bluetooth dongle use petoi app androidios userfriendly interface mobile app available io app store android google play refer calibration section user manual guide petoi app use infrared remote application petoi app python serial monitor etc play robot update star repository receive timely notification change visit subscribe official newsletter project announcement also host forum petoicamp follow u twitter instagram youtube channel fun video community activity resource stem curriculum educational robot teaching coding robotics advanced tutorial made user review openbox demo user opencat robot showcase user opencat robot gallery old repository opencat redundant large image log obsolete without update,"[('serial', 'monitor'), ('define', 'mainsketch')]"
cyberbotics/webots,C++,webots opensource robot simulator webots software license user guide reference manual star downloads contribution contributor github discussion chat webots provides complete development environment model program simulate robot vehicle mechanical system see webots introduction video view online webots simulation webotscloud participate iros 2023 simulated humanoid robot wrestling competition winethereum download get precompiled binary latest release well older release nightly build check installation instruction linux window macos build source prefer compile webots source read contributing guideline continuous integration nightly test master branch linux build master window build master macos build master develop branch linux build develop window build develop macos build develop u webots wa originally designed epfl 1996 developed commercialized cyberbotics since 1998 december 2018 webots wa open sourced since cyberbotics continues develop webots thanks paid customer support training consulting industry academic research project contact u discus custom robot simulation project,"[('macos', 'build'), ('build', 'master')]"
araffin/robotics-rl-srl,Python,repository longer maintained looking rl implementation stablebaselines3 training framework rl baselines3 zoo srl toolbox reinforcement learning rl state representation learning srl toolbox robotics repository wa made evaluate state representation learning method using reinforcement learning integrates automatic logging plotting saving loading trained agent various rl algorithm ppo a2c ar acktr ddpg dqn acer cmaes sac trpo along different srl method see srl repo efficient waymillion step inhour 8core cpu andtitan x gpu also release customizable gym environment working simulation kuka arm mobile robot pybullet running 250 fps 8core machine real robot baxter robot robobo related paper decoupling feature extraction policy learning assessing benefit state representation learning goal based robotics raffin et al 2018 srl toolbox environment datasets evaluation metric state representation learning raffin et al 2018 main feature 10 rl algorithm stable baseline logging plotting visdom integration replay trained agent hyperparameter search hyperband hyperopt integration state representation learning srl method feature extraction visualisation tool explore latent space display action proba live plot state space robotics environment compare srl method easy install using anaconda env docker image cpugpu documentation documentation available online example quick example train ppo2 agent mobilerobotgymenvv0 environment 10 000 step usingparallel process python rlbaselinestrain algo ppo2 novis numcpunumtimesteps 10000 env mobilerobotgymenvv0 complete command log saved log folder python rlbaselinestrain algo rlalgo env env1 logdir log srlmodel rawpixels numtimesteps 10000 novis use robot position input instead pixel pas srlmodel groundtruth instead srlmodel rawpixels installation pythonis required pythonis supported openai baseline note using stable baseline fork openai baseline unified interface improvement eg tensorboard support using anaconda download project note recursive argument using git submodules git clone gitgithubcomaraffinroboticsrlsrlgit recursive install swig library sudo aptget install swig install dependency using environmentyml file anaconda user current environment conda env create file environmentyml source activate py35 pybullet documentation using docker please read documentation detail reinforcement learning several algorithm stable baseline integrated along evolution strategy sac a2c synchronous deterministic variant asynchronous advantage actor critic a3c acer sample efficient actorcritic experience replay acktr actor critic using kroneckerfactored trust region ar augmented random search cmaes covariance matrix adaptation evolution strategy ddpg deep deterministic policy gradient deepq dqn variant double dueling prioritized experience replay ppo1 proximal policy optimization mpi implementation ppo2 proximal policy optimization gpu implementation sac soft actor critic trpo trust region policy optimization mpi implementation please read documentation detail trainload agent discretecontinuous action add rl algorithm hyperparameter search repository also allows hyperparameter search using hyperband hyperopt implemented rl algorithm example command hyperband search ppo2 ground truth mobile robot environment bash python rlbaselineshyperparamsearch optimizer hyperband algo ppo2 env mobilerobotgymenvv0 srlmodel groundtruth environment environment propose follow openai gym interface also extended interface adding extra method work srl method see state representation learning model available environment kuka environment mobile robot environment racing car environment omnidirectional robot environment name action space discrete action space continuous reward ground truth kukabuttonactions 3d cardinal directionaxis 3d cardinal direction1 target reachedwhen far target table hit otherwise2the xyz position effector kukarandbuttonactions 3d cardinal directionaxis 3d cardinal direction1 target reachedwhen far target table hit otherwise2the xyz position effector kuka2buttonactions 3d cardinal directionaxis 3d cardinal direction1 first target reachedwhen second target reachedwhen far target table hit otherwise2 xyz position effector kukamovingbuttonactions 3d cardinal directionaxis 3d cardinal direction1 target reachedwhen far target table hit otherwise2the xyz position effector mobilerobotactions 2d cardinal directionaxis 2d cardinal directionwhen target reachedfor wall hit otherwise2 xy position robot mobilerobot2targetactions 2d cardinal directionaxis 2d cardinal directionwhen target reachedfor wall hit otherwise2 xy position robot mobilerobot1dactions 1d cardinal directionaxis 1d cardinal directionwhen target reachedfor wall hit otherwise2 x position robot mobilerobotlinetargetactions 2d cardinal directionaxis 2d cardinal directionwhen target reachedfor wall hit otherwise2 xy position robot carracingactions left right accelerate brakeaxis stearing accelerate brake 100 bound otherwise 01 xy position car omnirobotactions 2d cardinal directionaxis 2d cardinal directionwhen target reachedfor wall hit otherwise2 xy position robotthe action space useaxis arm joint control joint flagthe reward euclidian distance target shapereward flagwhen using shapereward continuous reward hitting button 50 bound 250 prevent agent hitting table stop environment early obtaining higher rewardthe ground truth relative position agent target changing relativepos constant environment file available environment kuka arm kuka arm must reach target button kukabuttongymenvv0 kuka arm single button front kukarandbuttongymenvv0 kuka arm single button front randomly positioned object kuka2buttongymenvv0 kuka arm withbuttons next others must pressed correct order lighter button darker button kukamovingbuttongymenvv0 kuka arm single button front slowly moving left right mobile robot mobile robot reach target position mobilerobotgymenvv0 mobile robot 2d terrain need reach target position mobilerobot2targetgymenvv0 mobile robot 2d terrain need reach two target position correct order lighter target darker target mobilerobot1dgymenvv0 mobile robot 1d slider go must reach target position mobilerobotlinetargetgymenvv0 mobile robot 2d terrain need reach colored band going across terrain racing car interface gym racing car environment must complete racing course least time possible available terminal x running carracinggymenvv0 racing car racing course must complete racing course least time possible baxter baxter robot must reach target arm see working real robot baxter robobo baxterv0 bridge use baxter robot simulation us gazebo robobo robobo robot must reach target position robobogymenvv0 bridge use robobo robot omnirobot omnidirectional robot 2d terrain must reach target position see working real robot omnirobot omnirobotenvv0 simulator also bridge use omnirobot please read documentation detail eg adding custom environment state representation learning model please look srl repo learn train state representation model must edit configsrlmodelsyaml set right path use learned state representation available state representation model groundtruth hand engineered feature eg robot position target position mobile robot env rawpixels learning policy endtoend manner directly pixel action autoencoder autoencoder raw pixel inverse inverse dynamic model forward forward dynamic model vae variational autoencoder raw pixel random random feature feature extractor convolutional network fixed random initialization srlcombination model combining several loss eg vae forward inverse srl supervised model trained ground truth state target supervised setting roboticpriors robotic prior model pca pca applied raw pixel multiviewsrl srl model using view multiple camera input loss eg triplet others joint arm joint angle kuka environment jointsposition arm xyz position joint angle kuka environment please read documentation detail eg adding custom srl model troubleshooting submodule downloaded git submodule update init trouble installing mpi4py make sure following installed sudo aptget install libopenmpidev openmpibin openmpidoc known issue inverse kinematics function ha trouble finding solution arm fully straight arm must bend reach requested point acknowledgement work supported dream project european union horizon 2020 fet research innovation program grant agreement 640891 citation use toolbox please cite articleraffin18 titlesrl toolbox environment datasets evaluation metric state representation learning authorraffin antonin hill ashley traor e ren e lesort timoth ee iazrodr iguez natalia filliat david journalarxiv preprint arxiv180909369 year2018,"[('state', 'representation'), ('mobile', 'robot')]"
ompl/ompl,C++,open motion planning library ompl linux macos build status window build status visit ompl installation page detailed installation instruction ompl ha following required dependency boost version 158 higher cmake version 35 higher eigen version 33 higher following dependency optional ode needed compile support planning using open dynamic engine py needed generate python binding doxygen needed create local copy documentation dependency installed build ompl linux macos window go toplevel directory ompl type following command mkdir p buildrelease cd buildrelease cmake next step optional make jupdatebindings want python binding make jreplacewith number core machine,"[('ompl', 'linux'), ('linux', 'macos')]"
foxglove/studio,Other,accelerate robotics development foxglove studio foxglove integrated visualization diagnosis tool robotics learn visit following resource documentation release note blog join u following platform ask question share feedback stay date team working github discussion slack newsletter twitter linkedin installation foxglove studio available online studiofoxglovedev desktop release downloaded foxglovedevdownload open source foxglove studio follows open core licensing model functionality available repository reproduced modified per term mozilla public license v20 official binary distribution available studiofoxglovedev foxglovedevdownload incorporate closedsource functionality integration foxglove data platform multiple layout private extension information free paid feature see pricing selfhosting foxglove studio selfhosted using docker image please note build doe contain closed source functionality sh docker run rm p 80808080 ghcriofoxglovestudiolatest foxglove studio accessible browser localhost8080 overriding default layout bindmount layout json file foxglovedefaultlayoutjson set default layout used loading studio docker image sh docker run rm p 80808080 v pathtocustomlayoutjsonfoxglovedefaultlayoutjson ghcriofoxglovestudiolatest contributing foxglove studio written typescript contribution welcome note contributor must agree contributor license agreement see contributingmd detail credit foxglove studio originally began fork webviz open source project developed cruise webviz code ha rewritten file still carry cruise license header appropriate,"[('foxglove', 'studio'), ('open', 'source')]"
mathworks-robotics/awesome-matlab-robotics,Other,awesome matlab simulink robotics list awesome demo tutorial utility overall resource robotics community use matlab simulink information get project included list reach roboticsarenamathworkscom application area ground vehicle mobile robotics manipulation legged locomotion robot modeling perception mapping localization slam motion planning path planning motion control unmanned aerial vehicle uav marine robotics auv automated driving common tool simulator middleware hardware connectivity relevant matlab toolbox application area ground vehicle mobile robotics see section motion planning path planning see section manipulation legged locomotion robot modeling perception mapping localization slam 2d lidar slam implementation motion planning path planning motion control unmanned aerial vehicle uav marine robotics auv automated driving common tool simulator based simulator see section middleware hardware connectivity robot running see section relevant matlab toolbox robotics system toolbox toolbox navigation toolbox sensor fusion tracking toolbox computer vision toolbox automated driving toolbox roadrunner deep learning toolbox reinforcement learning toolbox control system toolbox simscape copyright 2020 mathworks inc,"[('see', 'section'), ('motion', 'planning')]"
JanuszBedkowski/gpu_computing_in_robotics,C++,gpu computing robotics tutorial concern robotic data processing cuda content tutorial lesson lessonbasic transformation lessondownsampling lessonnoise removal naive lessonnearest neighborhood search lessonnoise removal lessonnormal vector computation lessonprojections lessonbasic semantics lessonsemantic nearest neighborhood search lessondata registration iterative closest point lesson 10 data registration semantic iterative closest point lesson 11 data registration point projection iterative closest point lesson 12 data registration least square surface matching axb solver gpu lesson 13 data registration plane plane axb solver gpu lesson 14 multi scan registration point point axb solver gpu lesson 15 multi scan registration ls3d least square surface matching axb solver gpu lesson 16 multi scan registration semantic point point axb solver gpu lesson 17 path planning via diffusion process lesson 18 image matching bfrost binary feature robust orientation segment test lesson 19 laser range finder simulation requirement software wa developed tested linux ubuntu 1404 1604 following library opengl glut pcl 15 cuda75 build lesson independent software package thus following step performed cd lessonx mkdir build cd build cmake dcmakebuildtyperelease make lessonx use case fastslam demo show parallel computing fastslam particle containes 3d map built based registered velodyne vlp16 3d semantic data result corrected trajectory execute run fastslam read instruction console run example fastslam datasetmodelreducedpointxyzirnlxml check help console eg type c start computation software wa tested gf1050ti thus example single scan calculation take 40ms particle filter localization demo show use gpu robust robot localization based 3d semantic data execute run particlefilterlocalizationfast read instruction console run example run particlefilterlocalizationfast datasetmetascanpointxyzlpcd datasetodomandpointxyzlxml check help console eg type start computation software wa tested gf1050ti thus example single particle filter calculation take 50ms robotic arm collision detection,"[('axb', 'solver'), ('solver', 'gpu')]"
CHH3213/chhRobotics_CPP,C++,c pythongithub ubuntu 2004windowsubuntu markdown python3 matplotlib cmake eigen cmake shell sudo apt install cmake cmake cmake cmake eigenlinux shell sudo aptget install libeigen3dev eigencmakecmakeliststxt cmake findpackageeigen3 required includedirectorieseigen3includedir eigen c pythonmatplotlibpipmatplotlib mpccppadipoptmpccppadipopt cmakeideclion clion shell mkdir build cd build cmake make dijkstra b dwa prm rrt rrtconnect rrt dubins dubins reedsshepp pid purepursuit stanley lqr lqr mpc,"[('cmake', 'cmake'), ('shell', 'sudo')]"
ros-planning/navigation,C++,navigation stack 2d navigation stack take information odometry sensor stream goal pose output safe velocity command sent mobile base amd64 debian job status build status related stack new jade discussion please check mailing list,"[('navigation', 'stack'), ('stack', '2d')]"
AaronMR/Learning_ROS_for_Robotics_Programming_2nd_edition,C++,learning robotics programming second edition learning robotics programming second edition book tutorial source code href src width200 author enrique fernandez luis sanchez crespo anil mahtani aaron martinez installation install hydro compatible ubuntu distro following official instruction provided indigo use indigodevel branch jade use jadedevel branch install opencv nonfree repository bash sudo addaptrepository yes ppaxqmsopencvnonfree sudo aptget install libopencvnonfreedev libopencvnonfree24 create workspace bash mkdir p devcatkinwssrc cd devcatkinwssrc wstool init download repository bash wstool set rosbook git gitgithubcomaaronmrlearningrosforroboticsprogramming2ndeditiongit wstool j8 install dependency bash cd rosdep install frompaths src iy build source code alternatively use catkin build instead catkinmake bash source optrosrosversion dsetupbash catkinmake j4 source develsetupbash tutorial chaptergetting started source code cover installation chapterros architecture concept chaptervisualization debug tool chapterusing sensor actuator chaptercomputer vision chapterpoint cloud chapter3d modeling simulation chapterthe navigation stack robot setup chapterthe navigation stack beyond setup chapter 10 manipulation moveit,"[('source', 'code'), ('learning', 'robotics')]"
rosbook/effective_robotics_programming_with_ros,C++,effective robotics programming third edition effective robotics programming third edition book tutorial source code href src width200 author anil mahtani luis sanchez aaron martinez enrique fernandez installation install kinetic compatible ubuntu distro following official instruction provided install opencv nonfree repository bash sudo aptget install softwarepropertiescommon pythonsoftwareproperties sudo addaptrepository yes ppaxqmsopencvnonfree sudo aptget update sudo aptget install libopencvnonfreedev libopencvnonfree24v5 create workspace bash mkdir p devcatkinwssrc cd devcatkinwssrc wstool init download moveitsimplegrasps repository longer officially available debian bash wstool set moveitsimplegrasps git gitgithubcomefernandezmoveitsimplegraspsgit download repository bash wstool set rosbook git gitgithubcomrosbookeffectiveroboticsprogrammingwithrosgit wstool j8 install dependency bash cd rosdep install frompaths src iy build source code bash source optrosrosversion dsetupbash catkin build j4 p4 cmakeargs dcmakebuildtyperelwithdebinfo source develsetupbash tutorial chaptergetting started source code cover installation chapterros architecture concept chaptervisualization debugging tool chapter3d modeling simulation chapterthe navigation stack robot setup chapterthe navigation stack beyond setup chaptermanipulation moveit chapterusing sensor actuator chaptercomputer vision chapter 10 point cloud,"[('source', 'code'), ('sudo', 'aptget')]"
Farama-Foundation/Gymnasium-Robotics,Python,precommit code style black library contains collection reinforcement learning robotic environment use gymansium api environment run mujoco physic engine maintained mujoco python binding documentation website roboticsfaramaorg public discord server also use coordinate development work join installation install gymnasiumrobotics environment use pip install gymnasiumrobotics environment also require mujoco engine deepmind installed instruction install physic engine found mujoco website mujoco github repository note latest environment version use latest mujoco python binding maintained mujoco team wish use old version environment depend mujocopy please install library pip install gymnasiumroboticsmujocopy support test python 38 39 310 311 linux macos accept pr related window officially support environment gymnasiumrobotics includes following group environment fetch collection environment 7dof robot arm ha perform manipulation task reach push slide pick place shadow dexterous hand collection environment 24dof anthropomorphic robotic hand ha perform object manipulation task cube eggobject pen variation environment also include data 92 touch sensor observation space d4rl environment available environment refactored may actionobservation space original please read documentation maze environment agent ha navigate maze reach certain goal position two different agent used 2dof forcecontrolled ball classic ant agent gymnasium mujoco environment environment initialized variety maze shape increasing level difficulty adroit arm collection environment use shadow dexterous hand additional degree freedom arm movement different task involve hammering nail opening door twirling pen picking moving ball franka kitchen multitask environment 9dof franka robot placed kitchen containing several common household item goal task interact item order reach desired goal configuration wip generate new d4rl environment datasets minari multigoal api robotic environment use extension core gymansium api inheriting goalenv class new api force environment dictionary observation space containskeys observation actual observation environment desiredgoal goal agent ha achieved achievedgoal goal agent ha currently achieved instead objective environment value close desiredgoal api also expose function reward well terminated truncated signal recompute value different goal functionality useful algorithm use hindsight experience replay following example demonstrates exposed reward terminated truncated function used recompute value substituted goal info dictionary used store additional information may necessary recompute reward independent goal eg state derived simulation python import gymnasium gym env gymmakefetchreachv2 envreset ob reward terminated truncated info envstepenvactionspacesample following always ha hold assert reward envcomputerewardobsachievedgoal obsdesiredgoal info assert truncated envcomputetruncatedobsachievedgoal obsdesiredgoal info assert terminated envcomputeterminatedobsachievedgoal obsdesiredgoal info however goal also substituted substitutegoal obsachievedgoalcopy substitutereward envcomputerewardobsachievedgoal substitutegoal info substituteterminated envcomputeterminatedobsachievedgoal substitutegoal info substitutetruncated envcomputetruncatedobsachievedgoal substitutegoal info goalenv class also used custom environment project maintainer main contributor rodrigo perezvicente kallinteris andreas jet tai maintenance project also contributed broader farama team faramaorgteam citation use research please cite softwaregymnasiumrobotics2023github author rodrigo de lazcano kallinteris andreas jun jet tai seungjae ryan lee jordan terry title gymnasium robotics url version 123 year 2023,"[('environment', 'use'), ('collection', 'environment')]"
facebookresearch/pyrobot,Python,pyrobot light weight highlevel interface provides hardware independent apis robotic manipulation navigation repository also contains lowlevel stack locobot low cost mobile manipulator hardware platform pyrobot installation getting started team citation license future feature pyrobot installation installing pyrobot locobot dependency install ubuntu 1604 download installation script bash sudo apt update sudo aptget install curl curl locobotinstallallsh run script install everything realsense driver etc want use real locobot robot please run following command please connect nuc machine realsense camera running following command bash decides type installation available option full simonly p decides python version pyrobot available optionsor l decides type locobot hardware platform available option cmu interbotix chmod x locobotinstallallsh locobotinstallallsh full pl interbotix want use simulated locobot gazebo please run following command instead bash decides type installation available option full simonly p decides python version pyrobot available optionsor l decides type locobot hardware platform available option cmu interbotix chmod x locobotinstallallsh locobotinstallallsh simonly pl interbotix note install pythoncompatible pyrobot modify pto pin command installing pyrobot install ubuntu 1604 install kinetic install pyrobot bash cd mkdir p lowcostwssrc cd lowcostwssrc git clone recursesubmodules cd pyrobot chmod x installpyrobotsh installpyrobotsh pfor python3 modify argumet pwarning realsense keep updating compatibility issue might occur accidentally update realsenserelated package software updater ubuntu therefore recommend update library related realsense check list update carefully ubuntu prompt software udpates getting started please refer pyrobotorg locobotorg team adithya murali tao chen dhiraj gandhi kalyan vasudev lerrel pinto saurabh gupta abhinav gupta would also like thank everyone ha helped pyrobot way future feature planning several feature namely interfacing simulator like ai habitat gravity compensation pyrobot interface ur5 citation articlepyrobot2019 titlepyrobot opensource robotics framework research benchmarking authoradithyavairavan murali tao chen kalyan vasudev alwala dhiraj gandhi lerrel pinto saurabh gupta abhinav gupta journalarxiv preprint arxiv190608236 year2019 license pyrobot mit license found license file,"[('decides', 'type'), ('available', 'option')]"
giacomo-b/CppRobotics,C++,c robotics headeronly fullytemplated c library control algorithm goal requirement getting started feature todos reference goal c robotics ha following goal implement many robotics algorithm possible without sacrificing quality include eg control path planning estimation algorithm easy use get started thus headeronly format minimal external dependency fast making use template algorithm use staticsize data structure whose size known compilation time project inspired pythonrobotics instead educational repo library aim implementing fast algorithm consistent api guarantee runtime performance ease use still work progress would appreciate left suggestion starred repo help greatly appreciated requirement c11 compiler cmake 314 using visual studio window able import project cmake project c dependency obtained automatically cpmcmake note library depends eigen matplotplusplus used example folder plot result getting started following example get started example folder contains several example useful get started cpprobotics aim modular mean define dynamical system algorithm readily available use data flow seamlessly object eg estimator controller setup algorithm able change dynamical system integrate directly clone repo git clone building running example given generic example want run following command build bash cmake examplesexample b buildexample cmake build buildexample window default debug configuration build project release mode add configrelease first command run example linux macos unixbased system bash buildexamplemain window bash buildexampleconfigtypemain configtype either debug release depending configured project using library project importing library cpp include system definition systembase represents generic dynamical system case using either linearsystem nonlinearsystem since library templated define system need define number state number input control action number output eg cpp static constexpr int nnumber state static constexpr int mnumber input static constexpr int pnumber output type alias come handy prevent coder mixing wrong dimension cpp using state roboticscolumnvector using input roboticscolumnvector using output roboticscolumnvector using statematrix roboticssquarematrix using inputmatrix roboticsmatrix using outputmatrix roboticsmatrix using feedthroughmatrix roboticsmatrix let define linear system whose state form x x b u c x u set linearsystem cpp statematrix a0 1 inputmatrix b b0 outputmatrix c c0 1 note template improves runtime performance also enforces compiletime checking initialize matrix wrong number element code compile matrix c required null default provided case null define system cpp roboticsmodellinearsystemn p systema b c initial state zero default set custom initial state follows cpp systemsetinitialstatestate10 10 feature check thelartiansmoderncppstarter want include feature project running test root directory bash cmake test b buildtest cmake build buildtest ctestoutputonfailure1 cmake build buildtest target test simply call executable buildtestroboticstests also collect code coverage information run cmake denabletestcoverage1 option running clangformat autoformatting requires clangformat cmakeformat pyyaml installed current system bash cmake test b buildtest view change cmake build buildtest target format apply change cmake build buildtest target fixformat see formatcmake detail build documentation documentation automatically built published whenever github release created manually build documentation call following command bash cmake documentation b builddoc cmake build builddoc target generatedocs view doc open builddocdoxygenhtmlindexhtml build documentation locally need doxygen jinja2 pygments installed system build everything project also includes directory allows building target time useful development expose subprojects ide avoids redundant build library bash cmake b build cmake build build run test buildtestroboticstests format code cmake build build target fixformat run standalone buildstandalonerobotics help build doc cmake build build target generatedocs additional tool test standalone subprojects include toolscmake file used import additional tool ondemand cmake configuration argument following currently supported sanitizers sanitizers enabled configuring cmake dusesanitizeraddress memory memorywithorigins undefined thread leak addressundefined static analyzer static analyzer enabled setting dusestaticanalyzerclangtidy iwyu cppcheck combination quotation mark separated semicolon default analyzer automatically find configuration file clangformat additional argument passed analyzer setting clangtidyargs iwyuargs cppcheckargs variable ccache ccache enabled configuring duseccacheon todos add algorithm add support nonlinear system automatic differentiation jacobians automatically computed see autodiff add readmemd example folder explain theory cache package downloaded cpmcmake currently everything redownloaded every time new example built many feel free add idea reference mentioned repo wa originally inspired atsushisakaipythonrobotics go check want see algorithm want help port,"[('cmake', 'build'), ('bash', 'cmake')]"
mjyc/awesome-robotics-projects,Other,awesome robotics project list opensource affordable lessknown visionary robotics project turtlebot lowcost personal robot kit opensource software linorobot suite lowcost opensource mobile robot rosbot 20 open source mobile robot platform magni affordable robotic mobile base 100kg payload bobblebot demonstration robot learning principle realtime control anymal c autonomous fourlegged robot stanford doggo opensource quadruped robot jpl open source rover project opensource 6wheel rover based rover mar mushr affordable opensource robotic race car aws deepracer autonomous 118th scale race car designed test rl model openmanipulator opensoftwarehardwareembeddedboard robotic arm thor diy 3d printable robotic arm niryo one 3d printedaxis robotic arm poppy project opensource platform interactive 3d printed robot openionics opensource initiative development robotic bionic device robel collection affordable reliable hardware robot design nybble opensource robotic cat pyrobot python package running experiment robot learning nvidia issac platform robotic ai development platform simulation navigation manipulation champ champ quadruped controller package goodboy 3d printed arduino robot dog lhf connect small semiautonomous device connects patient isolation people love openbot turning smartphones robot exomy 3d printed rover developed european space agency trifinger opensource robot learning dexterity mabel boston dynamic inspired balancing robot open dynamic robot initiative open torquecontrolled modular robot architecture legged locomotion research robotics middleware framework task queuing conflictfree resource scheduling utility help create robot fleet adapter pythonrobotics python sample code robotics algorithm cyphyhouse toolchain distributed robotics cyphyhouse toolchain distributed robotics nanosaur nvidia jetson dinosaur robot fully 3d printable ros2 competible dummy robot arm dumb 20 best jetson nano project 2023 openpodcar open source hardware design software openpodcar data visualization ui webbased visualization library foxglove studio visualization debugging robotics realtime robot data visualization browser rosboard node run web server robot arjs augmented reality web aframe web framework building 3darvr experience reality connect rosenabled robot unity command unifying command line tool rerunio open source visualization infrastructure computer vision robotics opensource sdk anki cozmo python sdk c sdk pycozmo temi sdk spot sdk hardware development community hackaday hackadayio hackadayio world largest collaborative hardware development community hacksterio hackster community dedicated learning hardware beginner pro adafruit adafruit design manufacture sell number electronics product electronics component tool accessory instructables instructables community people like make thing cloud robotics robotics platform formant speak robot intelligent platform robotic fleet roshub manage one robot entire fleet freedom robotics powerful control monitoring robot rapyuta robotics make robot attainable useful balena infrastructure need develop deploy manage fleet connected device scale aws robomaker simulate deploy robotic application cloud scale semio bringing robot life inorbit mission control autonomous robot development studio develop project single place online window 10 iot bringing intelligent edge robot window 10 azure scale data platform ai phantom ai democratizing advanced driver assistance system autowareai world first allinone opensource software autonomous driving technology fogros framework allows existing automation application gain access additional computing resource commercial cloudbased service cognicept keep robot going tangram modern perception platform slamcore spatial intelligence robot machine artificial redefining lab automation software transitive robotics opencore fullstack robotic software capability airbotics opensource software deployment platform robotics need one hub cloudbased system designing sharing evaluating autonomous vehicle ada robotics rosblox documentation ultimate building block rapidly creating robot software stack nocodelowcode rethink robotics rethink robotics meet german engineering southie autonomy easy flexible automation contract packaging micropsi industry automate manual workstation cogniteam standout software solution autonomous robot physically accurate photorealistic simulator gazebo gazebo opensource 3d robotics simulator carla opensource simulator autonomous driving research morse opensource simulator academic robotics isaac simulate test iterate virtual robot high fidelity 3d environment gibson gibson perceptual physic simulator webots open source robot simulator ai habitat ai habitat enables training embodied ai agent highly photorealistic efficient 3d simulator flightmare flexible quadrotor simulator project dave simulation environment support rapid testing evaluation underwater robotic solution zerosimrosunity robotic simulation unity integration unity robotics hub central repository tool tutorial resource documentation robotics simulation unity applied intuition ada av simulation development tool related awesome list awesome weekly robotics awesome robotics kiloreux awesome robotics ahundt awesome human robot interaction awesome robotics library awesome robotic tooling awesome robot operating systemrosawesome hri datasets human simulator awesomecloudrobotics newsletter ieee spectrum robotics robot report weekly robotics evan ackerman twitter feed conference event robotics summit expo international design development event robotics intelligent system modex premier supply chain event bar bay area robotics symposium teros texas regional robotics symposium shameless selfadvertisement public rosjects collection readytostart project browser curated list robotics company google sheet awesome hri paper industry awesome robotics system design wannabe awesome remote robot devenvs license cc0,"[('awesome', 'robotics'), ('open', 'source')]"
michiganrobotics/rob501,Other,robotics 501 mathematics robotics rob 501 mathematics robotics graduatelevel course university michigan introduces applied mathematics robotics engineer topic include vector space orthogonal base projection theorem least square matrix factorization kalman filter underlying probabilistic concept norm convergent sequence contraction mapping newton raphson algorithm local v global convergence nonlinear optimization convexity linear quadratic program offering course fall 2018 prerequisite assumed student know basic matrix algebra multiply invert matrix rank matrix compute eigenvectors know compute mean variance given density continuous random variable conditional probability compute know vector calculus review compute gradient function method lagrange multiplier simple property complex number use matlab including plotting various type multiplication v star v dot star writing loop finding help lecture video textbook note lecture video available youtube rob 501 fall 2018 video also textbook lecture note handout available recitatioins recitation question answer available course plan lecture topic youtube assignment due intro proof video induction fundamental theorem contradiction video abstract linear algebra video subspace linear independence video homework basis vector dimension video linear operator eigenvalue video homework similar matrix norm video inner product space video homework projection theorem gramschmidt video 10 normal equation least square video homework 11 symmetric orthogonal matrix video 12 positive semidefinite matrix schur complement theorem video homework 13 recursive least square kalman filter video 14 least square probability video 15 best linear unbiased estimator video homework 16 qr factorization video exam 17 modified gramschmidt minimum variance estimator video 18 probability space random variable video 19 gaussian random vector video homework 20 real analysis normed space video 21 real analysis interior set video homework 22 newtonraphson algorithm video 23 cauchy sequence video homework 24 continuous function video 25 weierstrass theorem video 26 final class linear programming video homework 10 exam detailed course plan available credit jessy grizzle director michigan robotics nil smitanseeuw license code licensed gnu general public license v30 content including textbook homework video licensed creative common attributionnoncommericial 40 cc bync 40 university michigan robotics michigan robotics twitter michigan robotics instagram,"[('video', 'homework'), ('least', 'square')]"
google-deepmind/mujoco,C++,python binding plugin unity game engine documentation mujoco documentation found mujocoreadthedocsio upcoming feature due next release found changelog latest branch getting started two easy way get started mujoco run simulate machine video show screen capture simulate mujoco native interactive viewer follow step described getting started section documentation get simulate running machine explore online ipython notebook python user might want start tutorial notebook running google colab first tutorial focus basic mujoco open colab advanced example see lqr tutorial creates lqr controller balance humanoid one leg using mujoco dynamic derivative open colab installation prebuilt binary versioned release available precompiled binary github release page built linux x8664 aarch64 window x8664 macos universal recommended way use software building source user wish build mujoco source consult build source section documentation however please note commit tip main branch may unstable python 38 native python binding come prepackaged copy mujoco installed pypi via bash pip install mujoco note prebuilt linux wheel target manylinux2014 see compatible distribution information building binding source see python binding section documentation contributing welcome community engagement question request help bug report feature request read bug report feature request ambitious contribution please see contributor guide style guide asking question question request help welcome github issue page focus specific problem question discussion address wider concern might require input multiple participant guideline asking good question search existing question issue touch subject add comment existing thread start new one start new thread existing relevant thread please link use clear specific title try include keywords make question easy find future introduce project generally level expertise exceptional either high low might relevant assume know please state well take step back tell u trying accomplish understand goal might suggest different type solution one problem make easy others reproduce problem understand question requires model please include try make model minimal remove element unrelated question pure xml model inlined model requiring binary asset mesh texture attached zip file please make sure included model loadable attach include illustrative screenshot video relevant tell u accessing mujoco c api python binding etc mujoco version operating system using related software mujoco form backbone many environment package many list individually focus binding converter binding package give user various language access mujoco functionality firstparty binding python binding dmcontrol c binding unity plugin thirdparty binding webassembly mujocowasm zalo contribution kevinzakka based emscripten build stillonearth arrowright click live demo mujoco running browser matlab simulink simulink blockset mujoco simulator manoj velmurugan swift swiftmujoco java mujocojava julia lyceum unmaintained converter opensim myoconverter convert opensim model mjcf sdformat gzmujoco twoway sdformat mjcf conversion tool obj obj2mjcf script converting composite obj file loadable mjcf model citation use mujoco published research please cite inproceedingstodorov2012mujoco titlemujoco physic engine modelbased control authortodorov emanuel erez tom tassa yuval booktitle2012 ieeersj international conference intelligent robot system pages50265033 year2012 organizationieee doi101109iros20126386109 license disclaimer copyright 2021 deepmind technology limited box collision code enginecollisionboxc copyright 2016 svetoslav kolev restructuredtext document image video doc directory made available term creative common attribution 40 cc 40 license may obtain copy license source code licensed apache license version 20 may obtain copy license officially supported google product build source release page changelog,"[('python', 'binding'), ('section', 'documentation')]"
mathiasmantelli/awesome-mobile-robotics,Other,awesome mobile robotics awesome personal list important content related mobile robotics ai feel free send suggestion mathiasfassinigmailcom table content course mortarboard book book datasets openfilefolder software library computer conference departmentstore journal newspaper company job office laboratory research group robot misc largeorangediamond course mobile sensing robotics youtube cyrill stachniss mobile sensing roboticsyoutube cyrill stachniss photogrametry youtube cyrill stachniss slam youtube cyrill stachniss modern c youtube cyrill stachniss become robotics software engineer youtube udacity different playlist youtube construct platform learnteach robotics zero construct autonomous system udacity artificial intelligence robotics udacity prof dr sebastian thrun c essential training bill weinman slide computer vision lecture cornell 2013 computer vision foundation application stanford university prof feifei li interval analysis iamooc prof luc jaulin robot mapping university freiburg prof cyrill stachniss jai robotica e simulacao com vrep csbc julho 2015 digital image processing university tartu prof dr gholamreza anbarjafari tutorial visual odometry university zurich prof davide scaramuzza visual slam tutorial frank dellaert michael kaess visual odometry scratch tutorial beginner avi singh blog aerial robot course university nevada dr kostas alexis stereo vision tutorial chris mccormick different course udemy introduction mobile robotics university freiburg prof dr wolfram burgard gaitech edu educational website robot operating system robocademy course lentin joseph hello real world delft university technology edx selfdriving car autoware autoware foundation programming robotics eth zurich robotics system lab cvml knowledge selfassessment aristotle university thessaloniki prof pita think autonomous jeremy cohen pyimagesearch adrian rosebrock duckietown learning autonomy machine learning stanford andrew ng deep learning specialization stanford andrew ng opencv c python satya mallick awesome selfdriving ivan deylid principle computer vision shree k nayar awesome computer vision jiabin huang introduction robot operating system tiziano school tutorial erle robotics industrial training industrial training exercise c hello world jonathan bohren ros2 c hello world jonathan bohren learnopencv satya mallick programming robotics acshi haggenmiller acshikh mathematics robotics university michigan introduction algorithm red blob game computer science course video lecture developery common path planning algorithm kamalanathann pyvisualodometry polygonsoftware kitti odometry python opencv nate cibik awesome 3d reconstruction list openmvg autonomous driving path planning slam turtlebot3 muhammad luqman ros2 ultimate learner repository supporting documentation muhammad luqman ros2 c learning antonio mauro galiano f1tenth f1tenth autonomous racing community industrial training industrial book sample code programming robot cpp best practice cpp best practice c cheatsheet modern c cheatsheet computer vision prof kosta derpanis machine learning course note dairai data structure algorithm 101 girliemac trending 3d vision dragonlong master git list master git github algorithm data structure picture worth 1000 word udacity autonomous car udacity open source selfdriving car project muhammad luqman robotics tutorial youtube muhammad hummingbird life robotics technology tutorial clearpath stepbystep tutorial clearpath robotica educacional robotica educacional parana roboflow notebook jupyter notebook computer vision tutorial autonomous driving lecture autonomous driving lecture resource mayakshanesht c best practice collaborative collection c best practice c optimization diary tip trick optimize c code visual slam roadmap roadmap becoming visualslam developer 2022 changh95 official repository rv colab notebook robotic vision summer school tobiasfischer kf python kalman filter python self driving car coursera open course university toronto coding note tutorial compilation tutorial reference different coding language framework introduction robotics princeton university michigan robotics michigan robotics course sensor fusion tutorial tutorial sensor fusion using robotlocalization package coding note coding note many programming language methyldragon rosetta launch guide understanding launch file rosand rosgoogle interview preparation collection problem solution leetcode geeksforgeeks challenge mgechev opensource project opensource project developer learning path lentin joseph autonomous vehicle control beginner guide beginner guide learn basic way thinking representative algorithm autonomous vehicle control awesome robotic tooling tooling professional robotic development c python touch autonomous driving aerospace awesome robotics huge awesome list robotics kiloreux awesome paper autonomous driving paper motion planning control multirobot system perception ethic pigeon tutorial provides reference robot programming introduction robotics perception introduction robotics perception frank dellaert programming robotics university michigan acshi haggenmiller acshikh phd candidate book computer vision algorithm application richard szeliski 2010 probabilistic robotics sebastian thrun wolfram burgard dieter fox handbook robotics kroger writing computer science justin zobel introduction autonomous mobile robot intelligent robotics autonomous agent series roland siegwartillah nourbakhsh davide scaramuzza planning algorithm steven lavalle cambridge gentle introduction jason kane university south carolina robotics vision control fundamental algorithm matlab peter corke springer introduction autonomous robot nikolaus correll magellan scientific principle robot motion theory algorithm implementation howie choset kevin lynch seth hutchinson george kantor wolfram burgard lydia kavraki sebastian thrun modern robotics mechanic planning control kevin lynch frank c park cambridge university press learning robotics programming enrique fernandez anil mahtani luis sanchez crespo aaron martinez mastering robotics programming lentin joseph robotica movel roseli romero edson prestes fernando osorio denis wolf computational principle mobile robotics gregory dudek michael jenkin visual navigation autonomous vehicle sparl lab think c allen b downey 1999 concise introduction robot programming ros2 francisco martin rico robotics vision control 3rd edition python peter corke published springernature 2023 datasets stereo dataset ground truth middlebury coleg 2006 database datasets computer vision application testing huge list datasets questuav survey datasets different uav datasets robothome university malaga kitti vision benchmark suite university tubingen toyota karlsruhe institute technology tum dataset technical university munich computer vision group uav dataset adm federal university rio grande sul phi group uav dataset poa federal university rio grande sul phi group semantickitti university bonn photogrammetry robotics group computer vision group autonomous intelligent system group clearpath simulation environment clearpath gazebo simulation environment finnforest forest landscape visual slam ford autonomous vehicle dataset multiagent seasonal dataset ford enav planetary dataset space terrestrial autonomous robotic system star laboratory university toronto udacity selfdriving car udacity longterm visual localization benchmark datasets aimed evaluatingdof pose estimation accuracy chalmers university technology waymo open dataset waymo astyx hires2019 astyx berkeley deepdrive bdd berkeley nuscenes motional barn dataset university texas austin department computer science rellis3d multimodal dataset collected offroad environment containing annotation 13556 lidar scan 6235 image gazebo model world collection repository contains model world file gazebo collected several public project gazebo model repository hold gazebo model database nasa 3d model 3d model texture image inside nasa audi autonomous driving dataset a2d2 dataset feature 2d semantic segmentation 3d point cloud 3d bounding box vehicle bus data oxford road boundary dataset dataset designed training testing machinelearningbased roadboundary detection inference approach slam datasets collection slamrelated datasets hilti slamchallenge collection rosbags different sensor reading omnidata scalable pipeline making multitask midlevel vision datasets 3d scan rgbd slam dataset rgbd data groundtruth data goal establish novel benchmark evaluation visual odometry visual slam system mix3d outofcontext data augmentation 3d scene large scale dataset indoor localization large scale dataset indoor visual localization high precise ground truth nureality open source novel virtual reality environment designed test interaction pedestrian autonomous vehicle blend swap 3d model simulation arkitscenes realworld dataset 3d indoor scene understanding using mobile rgbd data semfire forest dataset semantic segmentation data augmentation multispectral image 3d lidar point cloud thermal image gps imu data depth rgb image motsynth huge dataset pedestrian detection tracking urban scenario nebula nebula odometry dataset alita largescale incremental dataset longterm autonomy argoversethe official github repository argoversedataset habitat matterport 3d semantics dataset largestever dataset semanticallyannotated 3d indoor space rellis3d multimodal dataset offroad robotics awesome slam datasets curated list awesome datasets slam 3d object detection autonomous driving paper 3d object detection autonomous driving laser line extraction package extract line segment laserscan message groundchallenge ground robot slam dataset focusing corner case sensor failure lidarcs lidar dataset crosssensors awesome lidar list includes lidar manufacturer datasets point cloudprocessing algorithm point cloud framework simulator awesome rgbd datasets survey rgbd datasets lin lidarinertialslam lidarinertial state estimator robust efficient navigation based iterated errorstate kalman filter software library opencv 320 contrib ubuntu 1604 sebastian montabone opencv 340 contrib ubuntu 1804 pyimagesearch orbslam university zaragoza raul mur rotl orbslam2 university zaragoza raul mur rotl orbslam2 point cloud modified orbslam2 online point cloud map module running rgbd mode orbslam2 saveload map modified orbslam2 saveload map feature enabled dsslam complete robust semantic slam system could reduce influence dynamic object pose estimation robot operating system gazebo robot silumator robwork collection c library simulation control robot system mrpt obile robot programming toolkit provides developer portable welltested application library covering data structure algorithm employed common robotics research area open source released bsd license robotics library selfcontained c library robot kinematics motion planning control simbad java 3d robot simulator scientific educationnal purpose morse generic simulator academic robotics carmen opensource collection software mobile robot control carmen modular software designed provide basic navigation primitive including base sensor control logging obstacle avoidance localization path planning mapping peekabot realtime networked 3d visualization tool robotics written c purpose simplify visualization need faced roboticist daily yarp yet another robot platform vrep robot simulator 3d source available lua scripting apis cc python java matlab urbiphysics engine full kinematic solver webots development environment used model program simulate mobile robot drake planning control analysis toolbox nonlinear dynamical system neurorobotics platform nrp internetaccessible simulation system allows simulation robot controlled spiking neural network player project free software tool robot sensor application airsim simulator drone soon vehicle built unreal engine bonnet opensource training deployment framework semantic segmentation robotics summit simulator urban driving massive mixed traffic cyphyhouse toolchain aim provide similar programming debugging deployment benefit distributed mobile robotic application assistive gym physicsbased simulation framework physical humanrobot interaction robotic assistance augmented lidar simulator autonomous driving novel lidar simulator augments real point cloud synthetic obstacle eg vehicle pedestrian movable object lir world construction tool lirswct new efficient tool creating realistic 3d virtual environment gazebo world arbitrary 2d image 2d lrf data segmentsai 2d 3d data labeling robotics autonomous vehicle platform fast accurate multisensor data annotation free academic license docker docker set platform service product us oslevel virtualization deliver software package called container gbplanner agbplanner new software package graphbased exploration path planning mbplanner software package motion primitivesbased exploration path planning salsanext uncertaintyaware semantic segmentation full 3d lidar point cloud realtime coppeliasim robot simulator navigation stack 2d navigation stack take information odometry sensor stream goal pose output safe velocity command sent mobile base rosnavigation spiritual successor navigation stack robotwebtools collection opensource module tool building webbased robot apps deep drone acrobatics code allows train endtoend control policy fly acrobatic maneuver drone atlatec high definition map autonomy simulation egoplanner lightweight robust quadrotor local planning framework eventbased asynchronous sparse cnns tool convert model trained synchronous imagelike event representation sparse asynchronous model identical output openbot small electric vehicle cost 50 serf robot body standard android smartphones skiros platform create complex robot behavior composing skill modular software block behavior tree openstreetmap map world created people like free use open license nvidia isaac sim provides essential feature building virtual robotic world experiment flightmare flexible quadrotor simulator robotics perception group hierarchical localization toolbox hloc modular toolbox stateoftheart 6dof visual localization icp icp different implementation gtsam c library implement smoothing mapping sam robotics vision isam range existing functionality leastsquares optimization focused slam problem bag visual word bag visual word olga vysotska small project clarify big concept explanation concept olga vysotska 3dwarehouse place share download sketchup 3d model architecture design construction fun 3dgems 3d gazebo model ignition collection open source software library designed simplify development highperformance application robosuite simulation framework powered mujoco physic engine robot learning gmmloc dense map based visual localization robot site showcase robot using moveit open source robotics manipulation platform developing commercial application prototyping design benchmarking algorithm apollo high performance flexible architecture accelerates development testing deployment autonomous vehicle hdcpplanning online hexdecomposed coverage planning hdcp algorithm freetures localization signed distance function submaps balm bundle adjustment lidar mapping stdynslam stereo vision semantic segmentation approach slam dynamic outdoor environment learning drive smoothly learning drive smoothly minute using reinforcement learning algorithm soft actorcritic sac variational autoencoder vae donkey car simulator fastplanner aim enable quadrotor fast flight complex unknown environment slam toolbox set tool capability 2d slam righthook accelerating development autonomous system simulation gradslam fully differentiable dense slam framework matlabrobotics matlab sample code mobile robot navigation pythonrobotics python code collection robotics algorithm especially autonomous navigation data science machine learning note using data science machine learning fight something matter octomap efficient probabilistic 3d mapping framework based octrees liosam realtime lidarinertial odometry package yonohub cloudbased system designing sharing evaluating complex system autonomous vehicle ada robotics sslslam2 lightweight 3d localization mapping solidstate lidar lane detection paper tutorial code lane detection crowdslam visual slam system robust crowded scenario awesome robotics library curated list robotics simulator library evo event based visual odometry evo geometric approach eventbased 6dof parallel tracking mapping realtime rosshow visualize topic terminal rosboard node run web server robot vimantic distributed architecture semantic mapping environment using mobile robot openpilot open source driver assistance system slam research list slam work since 2018 sclegoloam lidar place recognition method lidar slam application lidarview realtime reception recording visualization processing 3d lidar data ufomap efficient probabilistic 3d mapping framework explicit representation unknown space treexy library implement compact hierarchical data structure store manipulate volumetric data svo pro semidirect visual odometry svo opendr project modular open nonproprietary toolkit core robotic functionality harnessing deep learning discoslam novel framework distributed multirobot slam intended use 3d lidar observation pyimagesearch github machine learning deep learning accessible intuitive extendedobjectdetectionros package visual object detection various method yolov4fordarknetros environment yolo v4 ported darknetros face recognition world simplest facial recognition api python command line urban road filter realtime lidarbased urban road sidewalk detection algorithm autonomous vehicle darknet 3d provides 3d bounding box object contained object list specificated 3d position object pedestrian simulator package 2d pedestrian simulator based social force model helbing et al pedsimros spencer multimodal rosbased people detection tracking framework mobile robot fiducials simultaneous localization mapping using fiducial marker slam mini pupper opencv opensource pi robot dog mini pupper trajectory optimization lowtorque lowimpact trajectory minipupper quadrupedal robot e2es endtoend uav simulation visual slam navigation slam dynamic visual semantic slam algorithm based target tracking geometric constraint abot abot differential drive mobile robot based robot operating system discoslam novel framework distributed multirobot slam intended use 3d lidar observation kr autonomous flight autonomous flight code stack used kumarrobotics providing complete solution gpsdenied quadcopter autonomy clober clober nextgeneration robot research platform clobot specifically targeting research system require multirobot hardware possible attach detach accessory robotcentric elevation mapping robotcentric elevation mapping rough terrain navigation terrain mapping solving occlusion terrain mapping neural network gps waypoint based autonomous navigation gps point predefined based robot navigate destination avoiding obstacle liosam liosam tightlycoupled lidar inertial odometry via smoothing mapping niceslam neural implicit scalable encoding 3d slam sold2 joint deep network feature line detection description far planner fast attemptable route planner navigation known unknown environment track check repeat em approach unsupervised tracking em approach unsupervised tracking map semantic contextual object information code base evaluate test semantic object mapping lio sam 6axis adapt liosam sensor awesome yolo ojbect detection collection awesome yolo series project prometheus open source autonomous drone software platform virtual costmap layer rospackage implement costmap layer add virtual obstacle define navigation zone ros2 path planning maze solving maze solving using computer vision ros2 best practice loose collection best practice convention trick using robot operating system noetic tutorial tutorial msckfvio robust stereo visual inertial odometry fast autonomous flight ossdcsim autonomous vehicle simulator polyscope cpython viewer user interface 3d data mesh point cloud global planner plugin global planner plugin movebase f110mpc model predictive control f1tenth simulator planar recon realtime 3d plane detection reconstruction posed monocular video locus multisensor lidarcentric solution highprecision odometry 3d mapping realtime mmsslam multimodal semantic slam dynamic environment fast loam fast optimized lidar odometry mapping indooroutdoor localization webviz webbased application playback visualization bag file carlasc data set carlasc network motionsc realtime semantic mapping dynamic environment acorn precision farming rover acorn precision farming rover twisted field awesome robot description curated list awesome robot description hdlgraphslam open source package realtime 6dof slam using 3d lidar openvins computer vision code along stateofthe art filterbased visualinertial estimator plslam realtime monocular 3d slam system mrpt project mobile robot programming toolkit provides c library aimed researcher mobile robotics computer vision rosbag editor create rosbag given one using simple gui facontidavide dclslam distributed collaborative lidar slam framework robotic swarm read largescale neural scene rendering autonomous driving 3d detection tracking viewer view 3d object detection tracking result maplab modular multimodal mapping framework kimera c library realtime metricsemantic slam orbslam3rgbl rgblidar added orbslam3 lidar ground mapping method create high density ground map autonomous vehicle lidar image conversion 3d lidar pointcloud image awesome visual slam list visionbased slam visual odometry open source project library dataset tool study fields2cover robust efficient coverage path autonomous agricultural vehicle modular extensible coverage path planning library dense fusion 6d object pose estimation iterative dense fusion monocular quasidense 3d object tracking monocular quasidense 3d object tracking qd3dt lsd lidar slam detection sd open source perception architecture autonomous vehicle robotics segment anything new task model dataset image segmentation dynablox online volumetric mappingbased approach realtime detection diverse dynamic object complex environment ftxui c functional terminal user interface rosand new gazebo icra 2023 tutorial rosand new gazebo vizanti web visualizer mission planner mission planner visualizer controlling outdoor robot frontier exploration node costmap 2d plugin layer frontier exploration engineering manager resource list engineering leadership resource link grootintegrated development environment build debug behavior tree gps waypointbased autonomous navigation gps point predefined rosbased robot navigate destination avoiding obstacle dockerslam userfriendly docker image slam conference acmieee international conference human robot interaction hri cism iftomm symposium robot design dynamic control romansy ieee conference decision control cdc ieee international conference rehabilitation robotics icorr ieee international conference robotics automation icra ieeersj international conference intelligent robot system iros ieeeras international conference humanoid robot humanoid international symposium robotic research isrr international symposium experimental robotics iser robotica robotics science system conference r international workshop algorithmic foundation robotics wafr journal robotics autonomous system elsevier impact factor 2259 journal intelligent robotic system jint springer impact factor 2825 transaction robotics tro ieee impact factor 6123 international journal robotics research ijrr sage impact factor 4703 autonomous robot springer impact factor 3602 robotics computerintegrated manufacturing elsevier impact factor 5057 journal field robotics jfr wiley impact factor 3581 robotics automation magazine ram ieee impact factor 4250 robotica cambridge core impact factor 1509 robotics automation letter ral ieee impact factor 36 company job segmentsai segmentsai building best labeling platform robotics 2d 3d annotation multisensor annotation naver lab europe conduct fundamental applied research domain computer vision 3d vision machine learning robotics globally speaking artificial intelligence pal robotics help integrate cuttingedge humanoid mobile robot add value research institution company reach goal outstandingly x x diverse group inventor entrepreneur build launch technology aim improve life million even billion people google waymo autonomous driving car company google zoox zoox creating autonomous mobility ground robotec ai software company develops hightech solution automated connected vehicle fraunhofer ipa leading centre applied research robotics automation one innovative industrial area worldwide ihmc robotics ihmc ha pioneering advanced control technique bipedal robot maintain balance walking wide variety terrain gu autonomous orchard sprayer agrointelli versatile autonomous agricultural robot solving multiple task field abundant robotics commercial robotic apple harvest rowbot robotic solution row crop agriculture bear flag robotics bear flag robotics developing selfdriving technology tractor implement agrobot disruptive practical approach build smart farming machinery rabbit farm utility robot soft robotics rethink redefine reimagine future robotic automation civil map scalable high definition mapping localization solution small robot small robot company reimagining farming robotics artificial intelligence aptiv making mobility greener nutonomy provides pointtopoint mobility via large fleet autonomous vehicle challenging urban driving environment agreenculture make smart farming power robustai building world first industrial grade cognitive engine vicarious intelligent robotics next age manufacturing kopernikus automotive leading developer automated valet parking avp typetechnology describes autonomous driving solution korechi robotics automation made simple voyage delivering promise selfdriving car toyota research instute exploring future intelligence amplification agxeed provides allin autonomy solution halodi robotics safe capable affordable robot help human live better life selfdrivingfyi comprehensive database company working autonomous vehicle related technology swarm farm delivering autonomous agriculture lyft levelmaking selfdriving reality people everywhere wayve autonomous mobility driven ai catalog selfdriving car technology leader event product listed single catalog boxbot intelligent package sorting faster delivery autonomousstuff provides solution automated driving thousand customer worldwide enabling future autonomy nvidia drive constellation open platform plugins thirdparty model ecosystem partner allowing user customize unique use case aeolus aeolus robotics building robotic platform provide robot service raas people work home burro autonomous farming begin collaborative farm robot intermodalics providing digital intelligence software robot gestalt innovation service provider industrial automation volvo autonomous solution develop commercially viable solution offroad application deepmap hd mapping localization solution level autonomy refraction ai safe cost effective lastmile logistics abb leading global technology company energizes transformation society industry achieve productive sustainable future exyn first industrial drone fly anywhere farmdroid world first fully automatic robot take care sowing mechanical weed control naio technology autonomous robot easier farming thorvald autonomous modular robot delivering agricultural service nlink mobile robot solve real life problem intek connecting people robot nuro selfdriving vehicle made local good transportation blue river optimize every plant ecorobotix techonology environment ztractor world first autonomous electric tractor farmwise innovative system process allow farmer streamline operation increase food production efficiency mobileye leading supplier software enables advanced driver assist system ada optimus ride leading selfdriving vehicle technology company developing system geofenced environment comma custom hardware designed live car emesent autonomously mapping inaccessible apptronik product service robot designed work around human automaton helping scientist achieve better result faster worryfree lab automation sevensense autonomy robotcs kingdom build robotic lawn mower large terrain tangram vision platform take care complex perception task like sensor fusion calibration diagnostics deploy autonomy confidence brisa robotics brisa developed windrose revolutionary solution boost productivity supply chain world autoagri autoagri devoted development manufacturing autonomous implement carrier muddy machine field robot capable delivering netzero farming zivid industrial 3d color camera pick place robotics istituto italiano di tecnologia iit foundation established jointly italian ministry education university research ministry economy finance promote excellence basic applied research contribute economic development italy forwardx global technology developer focused artificial intelligence successful application intelligent robotics autostore warehouse robot service torc autonomous vehicle leader since 2007 torc commercializing selfdriving truck safe sustained longhaul innovation freight industry navvis bridging gap physical digital world navvis enables service provider enterprise capture share built environment photorealistic digital twin robotics company list robotics company using robot operating system laboratory research group autonomous vision group avg university tubingen prof dr andreas geiger robot vision group imperial college london prof andrew davison computer vision group university jaume robotics perception group university zurich prof davide scaramuzza laboratrio de robotica movel icmcusp sao carlos prof fernando osorio stachnisslab university bonn prof dr cyrill stachniss autonomous intelligent system university freiburg prof dr wolfram burgard multirobt system group university prague prof dr martin saska robotics intelligent system robin university oslo prof dr jim trresen machine perception intelligent robotics mapir university malaga prof dr javier gonzalez jimenez robotics perception real time group universidad de zaragoza juan tardos others team costar collaboration nasa jpl mit caltech kaist ltu several industry partner autonomous navigation perception lab anpl technionisrael institute technology asst prof vadim indelman institute robotics intelligent machine irim georgia institute technology vijay kumar lab university pennsylvania prof dr vijay kumar phi robotics federal university rio grande sul prof dr edson prestes computer science artificial intelligence laboratory csail mit research lab goaloriented longlived system goal oxford robotics institute nick hawes skoltech mobile robotics skolkovo institute science technology gonzalo ferrer michael r bock software engineer compuver vision intelligent system laboratory ryerson university guanghui richard wang misc computer vision industry list company develop computer vision product david lowe latex template document infufrgs github prof lucas schnorr como usar modelo latex infufrgs vitor de araujo google driverless car ted prof sebastian thrun woman u academic research robotics active monitored list woman phd involved u academic research robotics slideegg free powerpoint template google slide enhance presentation slidescarnival free ppt template google slide theme presentation slidesgo free google slide powerpoint template boost presentation linguee dictionary translator context macmillan dictionary english dictionary synonym example translation academic phrasebank general resource academic writer skell stateoftheart cloud tool building managing exploring large text collection dozen language collocaid project focus development textediting tool help writer collocation sketch engine ultimate tool explore language work thesaurus source synonym suggestion talking robotics series virtual seminar robotics interaction relevant field artificial intelligence machine learning humanrobot interaction among others robotics diversity reading list collection researcher paper build diverse community leetcode platform help enhance skill expand knowledge prepare technical interview stanford cheatsheet cnns rnns convolutional neural network cheatsheet deep learning autonomous vehicle people twitter graph show everyone follow autonomous vehicle google dataset search google search engine public datasets wevolver knowledge shared technology developer scientist wevolver engineer stay cutting edge job uk find job paper code free open resource machine learning paper code evaluation table awesome robotics brazil lista de iniciativas de robotica brasil codigo aberto em 12 passos um guia para comecar contribuir em open source matcha online mathematics editor robot hacking manual paper note writeups journey robot cybersecurity black robotics building community advocating diversity encouraging accountability quillbot free paraphrasing website otterai aipowered tool transcribes speech text realtime hemingway website grade writing readability awesome robotic deliberation curated list awesome tool library resource deliberation 2,"[('computer', 'vision'), ('autonomous', 'vehicle')]"
ros-planning/navigation2,C++,nav2 github workflow status codecov detailed instruction getting started concept build install general tutorial algorithm developer tutorial configure navigation plugins migration guide container image building nav2 contribute please visit documentation site please visit community slack link doe work please contact maintainer reactivate sponsor please thank amazing sponsor generous support nav2 behalf community allow project continue professionally maintained developed supported longhaul open navigation llc provides project leadership maintenance development support service nav2 community dexory develops robotics ai logistics solution drive better business decision using digital twin warehouse provide inventory insight polymath robotics creates safetycritical navigation system industrial vehicle radically simple enable deploy stereolabs produce highquality zed stereo camera complete vision pipeline neural depth slam 3d object tracking ai confidential happy support nav2 mission citation use navigation framework algorithm repository idea please cite work paper macenski f martin r white j clavero marathona navigation system ieeersj international conference intelligent robot system iros 2020 bibtex inproceedingsmacenski2020marathon2 title marathona navigation system author macenski steve martin francisco white ruffin gines clavero jonatan year 2020 booktitle 2020 ieeersj international conference intelligent robot system iros url pdf use algorithm nav2 analysis algorithm work please cite work paper macenski moore dv lu merzlyakov ferguson desk maintainer survey modern capable mobile robotics algorithm robot operating systemrobotics autonomous system 2023 bibtex articlemacenski2023survey titlefrom desk maintainer survey modern capable mobile robotics algorithm robot operating system author macenski moore dv lu merzlyakov ferguson year2023 journal robotics autonomous system use regulated pure pursuit controller algorithm software repository please cite work paper macenski singh f martin j gines regulated pure pursuit robot path tracking autonomous robot 2023 bibtex articlemacenski2023regulated titleregulated pure pursuit robot path tracking authorsteve macenski shrijit singh francisco martin jonatan gines year2023 journal autonomous robot use work vslam formal comparison service robot need please cite paper merzlyakov macenski comparison modern generalpurpose visual slam approach ieeersj international conference intelligent robot system iros 2021 bibtex inproceedingsvslamcomparison2021 title comparison modern generalpurpose visual slam approach author merzlyakov alexey macenski steven year 2021 booktitle 2021 ieeersj international conference intelligent robot system iros pdf build status service humble iron main build farm build status build status na circle ci na na build status package humble source humble debian iron source iron debian navigation2 build status build status build status build status nav2amcl build status build status build status build status nav2behaviortree build status build status build status build status nav2behaviors build status build status build status build status nav2bringup build status build status build status build status nav2btnavigator build status build status build status build status nav2collisionmonitor build status build status build status build status nav2common build status build status build status build status nav2constrainedsmoother build status build status build status build status nav2controller build status build status build status build status nav2core build status build status build status build status nav2costmap2d build status build status build status build status nav2dwbcontroller build status build status build status build status nav2lifecyclemanager build status build status build status build status nav2mapserver build status build status build status build status nav2mppicontroller build status build status build status build status nav2msgs build status build status build status build status nav2navfnplanner build status build status build status build status nav2planner build status build status build status build status nav2regulatedpurepursuit build status build status build status build status nav2rotationshimcontroller build status build status build status build status nav2rvizplugins build status build status build status build status nav2simplecommander build status build status build status build status nav2smacplanner build status build status build status build status nav2smoother build status build status build status build status nav2systemtests build status build status build status build status nav2thetastarplanner build status build status build status build status nav2util build status build status build status build status nav2velocitysmoother build status build status build status build status nav2voxelgrid build status build status build status build status nav2waypointfollower build status build status build status build status,"[('build', 'status'), ('status', 'build')]"
Unity-Technologies/Robotics-Nav2-SLAM-Example,Python,navigationslam example license unity example provides unity project colcon workspace used together allows user substitute unity simulation environment purpose following navigationslam tutorial currently working lot thing first step tutorial please take short moment fill survey help u identify product package build next setup instruction configuring development environment setting unity project running example visualizing unity making custom visualizer understanding project component breakdown example robotics warehouse tcp connector visualization urdf importer learning unity brand new unity found example intersting want learn use unity editor may find tutorial useful better familiarizing editor interface exploring editor layout 10 minute tutorial giving quick straightforward overview editor layout using unity interface ahr tutorial includes context window short introduction commonly used component scene like information create customized environment may find indepth tutorial creation environment unity useful foundation realtime 3d comprehensive look various aspect building realtime 3d environment unity although whole course ishours 30 minute may skip course relevant use case likely work gameobjects 3d scene add component 3d gameobjects get 3d asset environment live session session provides deeper dive intricacy constructing believable environment focus environment game development content relevant anyone interested building realistic environment simulation getting support many issue may encounter solved performing internet search relevant error message following troubleshooting tip find online already investigated issue able find suitable solution please submit issue ticket describing issue much detail possible including log screenshots appropriate best help resolve unity robotics visit unity robotics hub roboticsrelated tutorial example join discussion robotics start official unity robotics forum,"[('unity', 'robotics'), ('unity', 'project')]"
zubair-irshad/Awesome-Implicit-NeRF-Robotics,Other,awesomeimplicitnerfrobotics awesome repo contains curative list implicit representation nerf paper relating roboticsrl domain inspired awesomecomputervision please feel free send pull request email add paper find repository useful please consider citing staring list feel free share list others overview nerfs checkout survey neural volume rendering nerf beyond blog post nerf explosion 2020 collection awesomenerf overview object pose estimation slam manipulationrl object reconstruction physic planningnavigation citation object pose estimation bundlesdf neural 6dof tracking 3d reconstruction unknown object cvpr 2023 paper webpage shapo implicit representation multi object shape appearance pose optimization eccv 2022 paper pytorch code webpage video ncf neural correspondence field object pose estimation eccv 2022 paper pytorch code webpage neuralsim learning generate training data nerf eccv 2022 paper pytorch code webpage disp6d disentangled implicit shape pose learning scalable 6d pose estimation eccv 2022 paper pytorch code webpage video snake snake shapeaware neural 3d keypoint field neurips 2022 paper pytorch code nerfrpn general framework object detection nerfs arxiv paper video nerf2nerf pairwise registration neural radiance field arxiv paper pytorch code webpage dataset inerf inverting neural radiance field pose estimation iros 2021 paper pytorch code website dataset nerfpose firstreconstructthenregress approach weaklysupervised 6d object pose estimation arxiv paper pixtrack precise 6dof object pose tracking using nerf template featuremetric alignment arxiv paper pytorch code parallel inversion neural radiance field robust pose estimation arxiv paper website narf22 neural articulated radiance field configurationaware rendering iros 2022 paper website frodo detection 3d object cvpr 2020 paper sdfest categorical pose shape estimation object rgbd using signed distance field ral 2022 paper pytorch code ssc6d selfsupervised categorylevel 6d object pose estimation deep implicit shape representation aaai 2022 paper pytorch code style2nerf unsupervised oneshot nerf semantic 3d reconstruction bmvc 2022 paper shape pose appearance single image via bootstrapped radiance field inversion cvpr 2023 paper code texpose neural texture learning selfsupervised 6d object pose estimation cvpr 2023 paper canonical field selfsupervised learning posecanonicalized neural field arxiv paper nerfdet learning geometryaware volumetric representation multiview 3d object detection arxiv paper page code slam isdf realtime neural signed distance field robot perception r 2022 paper pytorch code website lens lens localization enhanced nerf synthesis corl 2021 paper niceslam neural implicit scalable encoding slam cvpr 2021 paper pytorch code website imap implicit mapping positioning realtime iccv 2021 paper website bnvfusion bnvfusion dense 3d reconstruction using bilevel neural volume fusion cvpr 2022 paper pytorch code nerfslam realtime dense monocular slam neural radiance field arxiv paper nicerslam neural implicit scene encoding rgb slam arxiv paper video nerfels renderable neural code improved camera pose estimation cvpr 2022 workshop paper gosurf realtime monocular visual slam orb feature nerfrealized mapping 3dv 2022 paper website pytorch code orbeezslam neural feature grid optimization fast highfidelity rgbd surface reconstruction arxiv 2022 paper eslam efficient dense slam system based hybrid representation signed distance field arxiv 2022 paper panoptic multitsdfs flexible representation online multiresolution volumetric mapping longterm dynamic scene consistency icra 2022 paper pytorch code shinemapping largescale 3d mapping using sparse hierarchical implicit neural representation icra 2023 paper code sdfbased rgbd camera tracking neural scene representation icra workshop 2022 paper locnerf monte carlo localization using neural radiance field icra 2023 paper code video voxfusion dense tracking mapping voxelbased neural implicit representation ismar 2022 paper website pytorch code video nodeslam dense tracking mapping voxelbased neural implicit representation 3dv 2020 paper ilabel revealing object neural field ral 2023 paper nerf neural radiance field without known camera parameter arxiv paper l2gnerf localtoglobal registration bundleadjusting neural radiance field cvpr 2023 paper website code h2mapping realtime dense mapping using hierarchical hybrid representation ral 2023 paper code continual neural mapping learning implicit scene representation sequential observation iccv 2021 paper latitude robotic global localization truncated dynamic lowpass filter cityscale nerf icra 2023 paper pytorch code dense rgb slam neural implicit map iclr 2023 paper nocal calibrationfree semisupervised learning odometry camera intrinsics icra 2023 paper website irmcl implicit representationbased online global localization arxiv paper code efficient implicit neural reconstruction using lidar icra 2023 paper website pytorch code video vmap vectorised object mapping neural field slam cvpr 2023 paper website algorithm se3transformation neural implicit map remapping function ral 2022 paper implicit object reconstruction noisy data r workshop 2021 paper neuse neural se3equivariant embedding consistent spatial understanding object arxiv paper website objectfusion accurate objectlevel slam neural object prior graphical model 2022 paper ndfchange robust change detection based neural descriptor field iros 2022 paper lndf local neural descriptor field locally conditioned object representation manipulation icra 2023 paper webpage nerfloam neural implicit representation largescale incremental lidar odometry mapping arxiv paper code neuralblox realtime neural representation fusion robust volumetric mapping 3dv 2021 paper code difusion online implicit 3d reconstruction deep prior cvpr 2021paper pytorch code crossfire camera relocalization selfsupervised feature implicit representation arxiv paper sdfloc signed distance field based 2d relocalization map update dynamic environment acc 2019 paper idfslam endtoend rgbd slam neural implicit mapping deep feature tracking arxiv paper implicit map augmentation relocalization eccv workshop 2022 paper visualinertial odometry prior bundleadjusting neural radiance field iccas 2022 paper towards open world nerfbased slam arxiv 2023 paper unifusion universal continuous mapping arxiv 2023paper website newton neural viewcentric mapping onthefly largescale slam arxiv 2023paper pointslam dense neural point cloudbased slam arxiv 2023 paper code activermap radiance field active mapping planning arxiv 2022 paper nfatlas multivolume neural feature field large scale lidar mapping arxiv 2023 paper romap realtime multiobject mapping neural radiance field arxiv 2023 paper code video coslam joint coordinate sparse parametric encoding neural realtime slam cvpr 2023 paper website neural implicit dense semantic slam arxiv 2023 paper 2dsdfslam signed distance function based slam frontend laser scanner iros 2015 paper manipulationrl d3fields d3fields dynamic 3d descriptor field zeroshot generalizable robotic manipulation arxiv paper webpage code video snerl semanticaware neural radiance field reinforcement learning icml 2023 paper webpage ditto building digital twin articulated object interaction cvpr 2022 paper pytorch code website relationalndf se3equivariant relational rearrangement neural descriptor field corl 2022 paper pytorch code website neural descriptor field se3equivariant object representation manipulation arxiv paper pytorch code website evonerf evolving nerf sequential robot grasping transparent object corl 2022 paper website nerfrl reinforcement learning neural radiance field arxiv paper website neural motion field encoding grasp trajectory implicit value function r 2022 paper video grasping field learning implicit representation human grasp 3dv 2020 paper pytorch code video dexnerf using neural radiance field grasp transparent object corl 2021 paper website nerfsupervision learning dense object descriptor neural radiance field icra 2022 paper pytorch code website giga synergy affordance geometry 6dof grasp detection via implicit representation r 2021 paper pytorch code website neuralgrasps learning implicit representation grasp multiple robotic hand corl 2022 paper website realtime mapping physical scene property autonomous robot experimenter corl 2022 paper website objectfolder dataset object implicit visual auditory tactile representation corl 2021 paper pytorch code website objectfolder 20 multisensory object dataset sim2real transfer cvpr 2022 paper pytorch code website templatebased categoryagnostic instance detection robotic manipulation ral 2022 paper nerf2real sim2real transfer visionguided bipedal motion skill using neural radiance field arxiv paper website nerffrenemy coopting adversarial learning autonomydirected codesign r workshop 2022 paper website clanerf categorylevel articulated neural radiance field icra 2022 paper website virdo visiotactile implicit representation deformable object icra 2022 paper website virdo realworld visuotactile dynamic perception deformable object corl 2022 paper website scenecollisionnet object rearrangement using learned implicit collision function icra 2021 paper website rgbd local implicit function depth completion transparent object cvpr 2021 paper website learning model functionals signeddistance field manipulation planning corl 2021 paper video contactnets learning discontinuous contact dynamic smooth implicit representation corl 2020 paper pytorch code learning implicit prior motion optimization iros 2022 paper website mira mental imagery robotic affordances corl 2022 paper website nifr neural field robotic object manipulation single image icra 2023 paper nift neural interaction field template object manipulation icra 2023 paper learning 6dof taskoriented grasp detection via implicit estimation visual affordance iros 2022 paper graspnerf multiviewbased 6dof grasp detection transparent specular object using generalizable nerf icra 2023 paper touching nerf leveraging neural radiance field tactile sensory data generation corl 2022 paper se3diffusionfields learning smooth cost function joint grasp motion optimization diffusion icra 2023 paper pytorch code equivariant descriptor field se3equivariant energybased model endtoend visual robotic manipulation learning iclr 2023 paper kpnerf dynamical scene representation control keypointconditioned neural radiance field case 2022 paper acid actionconditional implicit visual dynamic deformable object manipulation r 2022 paper pytorch code triton neural neural texture make sim2real consistent corl 2022 paper website pytorch code perceiving unseen 3d object poking object icra 2023 paper website pytorch code featurerealistic neural fusion realtime open set scene understanding icra 2023 paper website cgf learning continuous grasping function dexterous hand human demonstration arxiv paper website ngdf neural grasp distance field robot manipulation arxiv paper website pytorch code ncf neural contact field tracking extrinsic contact tactile sensing arxiv paper pytorch code spartn nerf palm hand corrective augmentation robotics via novelview synthesis arxiv paper rgbonly reconstruction tabletop scene collisionfree manipulator control arxiv paper website affordance transfer based selfaligning implicit representation local surface r workshop 2022 paper real2sim2real method robust object grasping neural surface reconstruction arxiv paper video endonerf neural rendering stereo 3d reconstruction deformable tissue robotic surgery miccai 2022 paper pytorch code object reconstruction selfsupervised neural articulated shape appearance model cvpr 2022 paper website neus learning neural implicit surfacesby volume rendering multiview reconstruction neurips 2021 paper website volsdf volume rendering neural implicit surface neurips 2021 paper pytorch code unisurf unifying neural implicit surface radiance field multiview reconstruction iccv 2021 paper website pytorch code objectsdf objectcompositional neural implicit surface eccv 2022 paper website pytorch code idr multiview neural surface reconstruction disentangling geometry appearance neurips 2020 paper website pytorch code dvr differentiable volumetric rendering learning implicit 3d representation without 3d supervision cvpr 2020 paper pytorch code asdf learning disentangled signed distance function articulated shape representation iccv 2021 paper pytorch code codenerf disentangled neural radiance field object category iccv 2021 paper pytorch code deepsdf learning continuous signed distance function shape representation cvpr 2019 paper pytorch code occupancy network learning 3d reconstruction function space cvpr 2019 paper website physic danos differentiable physic simulation dynamicsaugmented neural object arxiv paper video pacnerf physic augmented continuum neural radiance field geometryagnostic system identification iclr 23 paper website video pytorch code neuphysics editable neural geometry physic monocular video neurips 2022 paper pytorch code website nerfysics differentiable pipeline enriching nerfrepresented object dynamical property icra workshop 2022 paper neural implicit representation physical parameter inference single video wacv 2023 paper pytorch code website neurofluid fluid dynamic grounding particledriven neural radiance field icml 2022 paper pytorch code planningnavigation nerflow neural radiance flow 4d view synthesis video processing iccv 2021 paper pytorch code website nerfnavigation visiononly robot navigation neural radiance world icra 2022 paper pytorch code website rnrmap renderable neural radiance map visual navigation cvpr 2023 paper website uncertainty guided policy active robotic 3d reconstruction using neural radiance field ral 2022 paper website nerfdy 3d neural scene representation visuomotor control corl 2021 paper website compnerfdyn learning multiobject dynamic compositional neural radiance field arxiv paper website pifo deep visual constraint neural implicit model manipulation planning visual input arxiv paper website learning continuous environment field via implicit function iclr 2022 paper website learning barrier function memory robust safe navigation ral 2021 paper redsdf regularized deep signed distance field reactive motion generation iros 2022 paper website autonerf training implicit scene representation autonomous agent arxiv paper website esdf samplingfree obstacle gradient reactive planning neural radiance field arxiv paper clipfields openlabel semantic navigation pretrained vlms language model arxiv paper pytorch code tutorial website voxfield nonprojective signed distance field online planning 3d reconstruction iros 2022 paper pytorch code voxblox incremental 3d euclidean signed distance field onboard mav planning iros 2017 paper nfomp neural field optimal motion planner differential drive robot nonholonomic constraint ral 2022 paper video catnip collision avoidance neural implicit probabilistic scene arxiv paper meslam memory efficient slam based neural field ieee smc 2022 paper ntfields neural time field physicsinformed robot motion planning iclr 2023 paper realtime semantic 3d reconstruction hightouch surface recognition robotic disinfection iros 2022 paper neurar neural uncertainty autonomous 3d reconstruction ral 2023 paper irmcl implicit representationbased online global localization ral 2023 paper pytorch code 360roam realtime indoor roaming using geometryaware 360 radiance field arxiv paper pytorch code learning deep sdf map online robot navigation exploration arxiv paper dronerf realtime multiagent drone pose optimization computing neural radiance field paper enforcing safety visionbased controller via control barrier function neural radiance field arxiv paper fullbody visual selfmodeling robot morphology arxiv paper website efficient view path planning autonomous implicit reconstruction arxiv paper multiobject navigation dynamically learned neural implicit representation arxiv paper website citation find repository useful please consider citing list miscirshad2022implicitnerfroboticsresources title awesome implicit nerf robotics curated list resource implicit neural representation nerf relating robotics author muhammad zubair irshad journal github repository url doi 105281zenodo7552613 year 2022,"[('2022', 'paper'), ('pytorch', 'code')]"
dartsim/dart,C++,note readme main branch readme latest stable release please see documentation information dart please visit dart documentation english wip project status item status build cpython package packaging status citation use dart academic publication please consider citing joss paper bibtex,"[('note', 'readme'), ('readme', 'main')]"
rdiankov/openrave,C++,welcome openrave official openrave homepage continuous integration project generously made possible image teamcityjpg target,"[('welcome', 'openrave'), ('openrave', 'official')]"
ihmcrobotics/ihmc-open-robotics-software,Other,ihmc open robotics software compile compile test 3000 test test tested platform robot drcatlas valkyrie nadia developer developer mix window linux user officially support window 1011 ubuntu 2004 gnulinux distros likely work however largely untested macos partially supported incomplete time branch repository us gitflow branching model find gitflow licensing software ihmc open robotics software licensed apache 20 license getting started developing ihmc open robotics software source requirement ihmc open robotics software us gradle build system requires jdk 17 also strongly suggest ide either eclipse intellij ultimate community fine currently require gradle 751 installing gradle companion software ihmc library ihmc open robotics software depends depended many ihmc robotics library small sampling software includes simulation construction setour simulation environment builtin analysis tool euclid alternative vectorgeometry library java support additional structure common 3d geometry without needing vecmath java3d mecano rigidbody dynamic library built top euclid ejml ihmc yovariables core data structure tool enable timeseries tracing analysis simulation construction set joctomap java implementation octomap ihmc realtime library enabling soft realtime threading java linux using rtpreempt patch ihmc ethercat master java library using ihmc realtime simple open ethercat master soem make simple start software ethercat master pure java data structure map ethercat slave defintions find repository well one api provide native rosapi many core component software stack find msg definition use project project ihmcinterfaces folder rossupport via rosros1bridge package find rosmessage definition instruction using rosbridge ide support gradle model tested intellij idea community ultimate gradle plugin eclipse 2021 higher buildship plugin buildship plugin bundled eclipse ide java developer java ee developer always manually installed version eclipse using installation instruction building jar ihmc open robotics software preconfigured generating maven publication publish directly source code right local maven repository eg homem2 directory build tagged build version local instead incrementing version number example workflow developing local clone software clone ihmc open robotics software make modification publish local homem2 repository publish jar local maven repository bash cd pathtoihmcopenroboticssoftware gradle publishall pcompositesearchheight0 depend jar local maven repository example compiletime dependency locally built simulation construction set project buildgradle project wish link simulation construction set gradle repository mavenlocal dependency apiusihmcsimulationconstructionsetlocal changing true creating project create project us ihmc open robotics software project hierarchy need take particular form first sure completed section titled clone repository next create project folder mkdir p srcihmcmyprojecta follow project setup tutorial directory structure look something like srcihmc myprojecta buildgradlekts gradleproperties settingsgradlekts myprojectb ihmcopenroboticssoftware atlas commonwalkingcontrolmodules mymultiprojectc subprojecta buildgradlekts subprojectb buildgradlekts buildgradlekts gradleproperties settingsgradlekts set correctly applied ihmcbuild plugin use dependency resolver method exposed build extension alternatively manually identify dependency project using normal gradle syntax project dependency sample buildgradle dependency block buildgradlekts normal gradle way dependency apiprojectihmcopenroboticssoftwareihmcjavatoolkit testapiprojectihmcopenroboticssoftwareihmcjavatoolkittest ihmcbuild way maindependencies apiusihmcihmcjavatoolkitsource testdependencies apiusihmcihmcjavatoolkittestsource maintainer sylvain bertrand sbertrandihmcorg duncan calvert dcalvertihmcorg stephen mccrory smcroryihmcorg robert griffin rgriffinihmcorg bhavyansh mishra bmishraihmcorg james foster jfosterihmcorg dexton anderson dandersonihmcorg luigi penco lpencoihmcorg nick kitchel nkitchelihmcorg,"[('ihmc', 'open'), ('open', 'robotics')]"
ros-industrial/universal_robot,C++,universal robot build status ubuntu bionic action build status ubuntu focal action license apache 20 license support level community rosindustrial universal robot metapackage see wiki page compatibility information information installation two different way install package repository following section detail installing package using binary distribution building source catkin workspace using apt ubuntu debian supported linux distribution ubuntu 1804 bionic 2004 focal i386 amd64 version sudo aptget install rosrosdistrouniversalrobots replace rosdistro melodic noetic depending version installed building source soon release available melodic noetic however latest feature development might want build package source note please prefer using binary release see previous section building source possible source installs automatically updated new package release require work setup following instruction assume catkin workspace ha created homecatkinws source space homecatkinwssrc update path appropriately different build machine case package build source catkin workspace cd homecatkinwssrc retrieve source replace rosdistro version using git clone b rosdistrodevel cd homecatkinws checking dependency replace rosdistro version using rosdep update rosdep install rosdistro rosdistro ignoresrc frompaths src building catkinmake activate workspace source homecatkinwsdevelsetupbash usage real hardware using real hardware please use urrobotdriver installation startup instruction available separately particular old robot running software cb1 cb2 please use urmoderndriver instead caution remember always hand big red button case something way anything unexpected happens moveit real hardware additionally use moveit control robot exist moveit configuration package robot following command ur5 given robot simply replace prefix accordingly setting moveit node allow motion planning run eg roslaunch ur5moveitconfig moveitplanningexecutionlaunch starting rviz configuration including moveit motion planning plugin run roslaunch ur5moveitconfig moveitrvizlaunch usage gazebo simulation launch file available bringup simulated robot forget source correct setup shell file use new terminal command bring simulated robot gazebo run roslaunch urgazebo ur5bringuplaunch moveit simulated robot use moveit control simulated robot setting moveit node allow motion planning run roslaunch ur5moveitconfig moveitplanningexecutionlaunch simtrue starting rviz configuration including moveit motion planning plugin run roslaunch ur5moveitconfig moveitrvizlaunch,"[('motion', 'planning'), ('roslaunch', 'ur5moveitconfig')]"
aurora-opensource/streetscape.gl,Other,streetscapegl streetscapegl toolkit visualizing autonomous robotics data xviz protocol built top react ubers webglpowered visualization framework install bash npm install streetscapegl yarn add streetscapegl documentation demo av website quick start need nodejs yarn run example app bash clone streetscapegl git clone cd streetscapegl install dependency yarn bootstrap run example cd examplesgetstarted yarn yarn start contribution streetscapegl welcome contribution idea open github issue get feedback start implementing make sure maintainer ready accept,"[('run', 'example'), ('streetscapegl', 'streetscapegl')]"
ros2/ros2,Other,documentation,[]
Unity-Technologies/Robotics-Object-Pose-Estimation,Python,object pose estimation demo license tutorial go step necessary perform pose estimation ur3 robotic arm unity youll gain experience integrating unity importing urdf model collecting labeled training data training deploying deep learning model end tutorial able perform pickandplace robot arm unity using computer vision perceive object robot pick want skip tutorial run full demo check quick demo want skip tutorial focus collecting training data deep learning model check quick datacollection demo note project ha developed pythonand noetic table content partcreate unity scene imported urdf partsetting scene data collection partdata collection model training partpickandplace partcreate unity scene imported urdf part includes downloading installing unity editor setting basic unity scene importing robot import ur3 robot arm using urdf importer package partsetup scene data collection part focus setting scene data collection using unity computer vision perception package learn use perception package randomizers randomize aspect scene order create variety training data would like learn randomizers apply domain randomization scene thoroughly check exercise reader partdata collection model training part includes running data collection perception package using data train deep learning model training step take time like skip step using pretrained model measure success grasping simulation using pretrained model pose estimation 100 trial got following result success failure percent success without occlusion 8294 occlusion6 54 89 11 89 note data experiment wa collected unity 202021f1 partpickandplace part includes preparation setup necessary run pickandplace task using moveit cube pose predicted trained deep learning model step covered include creating invoking motion planning service sending captured rgb image scene pose estimation node inference using python script run inference trained deep learning model moving unity articulation body based calculated trajectory controlling gripping tool successfully grasp drop object support question discussion unity robotics package installation best set integrate robotics project please create new thread unity robotics forum make sure include much detail possible feature request bug issue please file github issue using provided template robotics team investigate soon possible question feedback connect directly robotics team unityroboticsunity3dcom unity robotics visit robotics hub tutorial tool information robotics simulation unity license apache license 20,"[('deep', 'learning'), ('learning', 'model')]"
owocki/pytrader,Python,href img src pytrader build status pytrader cryptocurrency trading robot us machine learning predict price movement confidence interval sometimes execute trade programmed work poloniexcom cryptocurrency platform prettymuch 3262016 test portfolio wa initialized abtc deposit aftermonths 23413 trade exited 0955 btc system paid 2486 btc fee poloniex call action get trader profitability strategy fleshed 3272016 sign pytrader slack channel 432016 new documentation trade pytrader pytrader us pybrain sklearn make trade buysellhold decision act upon sklearn classifier supported classifier follows nearest neighbor linear svm rbf svm decision tree random forest adaboost naive bayes linear discriminant analysis quadratic discriminant analysis example decision tree classifier used make buy blue sell red holdgreen decision btceth pair naive bayes decision tree usdtbtc pair graph x axis recent price movement axis previous price movement length determined parameter called granularity graph show last two price movement graphing library used constrained two dimensional space could generate classifier act upon n pricemovements n dimensional space many many different parameter one could use train classifiertest problem space enumerated management command predictmanyskpy permutation parameter percentcorrect value generated actual price movement data using brute force methodology able discover classifier job trading testing tuning various parameter classifiertest wa able consistently predict buysellhold movement 5565 time depending upon currency pair parameter testpybrain neural network addition using sklearn classifier pybrain supervised learning tool used predict price movement represented data model predictiontest problem space enumerated predictmanyv2py testing tuning various parameter pybrain nn wa able consistently predict directional price movement around 55 time database model allow graphical debugging trade decision native pybrain prediction test sklearn classifertests parameter tradepy tradepy system alwaysrunning trading engine high level creates train classifiertests predictiontests based upon profitable indicator test trained run loop make trade based upon certain confidence threshold reached amongst selfpredictorconfigs open source although able predict price movement degree accuracy beat random wa never able generate robot traded profitably fee especially poloniex changed fee structure test portfolio wa initialized abtc deposit aftermonths 23413 trade exited 0955 btc system paid 2486 btc fee poloniex code perfect wa preproductmarketfit side project please feel free open issue understand something call action get trader profitability strategy fleshed deployment cloned repo want create pypololocalsettingspy file following information import basedir ospathdirnameospathdirnameospathabspathfile apikey apisecret additional django apps enabled debug mode debugapps defines whether tradepy actually submit trade poloniex api setting false useful testing maketrades true followinglines needed want alerted fail case trader running etc alertemail smtpusername smtphost smtppassword logfile varlogdjangolog configuration number thread used prediction set cpu core dedicated machine numthreadsonly required pulltwitterpy get info twitterconsumerkey twitterconsumersecret twitteraccesstokenkey twitteraccesstokensecret install requirement pip install r requirementstxt set database sample db configs place pypololocalsettingspy postgres database default engine djangodbbackendspostgresqlpsycopg2 add postgresqlpsycopg2 mysql sqlite3 oracle name trader path database file using sqlite3 following setting used sqlite3 user trader password host 127001 127001 empty localhost domain socket 127001 localhost tcp port 5124 set empty string default atomicrequests true sqllite import basedir ospathdirnameospathdirnameospathabspathfile database default engine djangodbbackendssqlite3 name ospathjoinbasedir dbsqlite3 run migration command managepy syncdb managepy migrate install system crontab crontab scriptscrontabtxt system installed enough price object stored database able begin training nn classifier see example command managepy pullprices download seed database price optimize pytrader trade see next document trade pytrader docker dev setup install docker least version 1103 install dockercompose least version 162 initalize environment cp dockercomposeymlexample dockercomposeyml cp dockerenvexample dockerenv cp pypololocalsettingspyexample pypololocalsettingspy add poloniexapikey poloniexapisecret dockerenv gitignored dont worry set pytraderlogin pytraderpassword dockerenv set login use access site build docker image compiling stuff scipy numpy take time dockercompose build pull image docker hub dockercompose pull run container dockercompose seed db newest dump docker exec pytraderweb1 rootpytraderscriptsloadnewestdatash visit log pytraderloginpassword credential get shell pytrader container docker exec pytraderweb1 binbash postres dump seed dump available thanks snipa22,"[('price', 'movement'), ('predict', 'price')]"
uuvsimulator/uuv_simulator,Python,uuvsimulator unmanned underwater vehicle uuv simulation gazebo build status github issue license link uuvsimulator repository link documentation page chat discord unmanned underwater vehicle simulator set package include plugins application allow simulation underwater vehicle gazebo using simulator publication please cite inproceedingsmanhaes2016 doi 101109oceans20167761080 url year 2016 month sep publisher ieee author musa morena marcusso manhaes sebastian scherer martin voss luiz ricardo douat thomas rauschenbach title uuv simulator gazebobased package underwater intervention multirobot simulation booktitle ocean 2016 mtsieee monterey willing contribute package please check instruction contributing feature gazeboros plugins implementation fossen equation motion underwater vehicle thruster module implementation thruster angular velocity output thrust force based yoerger el al 1990 bessa et al 2006 lift drag plugin simulation fin simulation 3d current velocity model constant based firstorder gaussmarkov process sensor plugins controller auvs casadi effort allocation algorithm geometric tracking pd controller rovs thruster manager computation thruster allocation matrix based thruster frame available tf modelbased feedback linearization controller fossen 2011 nonlinear pid controller fossen 2011 nonmodelbased sliding mode controller garciavaldovinos el al 2014 salgadojimenez et al 2011 pd controller restoration force compensation 6dof pid controller singularityfree tracking controller fjellstad fossen 1994 teleoperation node auvs rovs gazebo world model ocean wave shaders wave animation scenario swarm project demonstration location eg mangalia romania trondheim norway subsea bop panel manipulation task vehicle model workclass rov rexrov based model presetend berg 2012 ecaa9 lauvgazebo desisteksaga rexrov2 installation package ha released following distribution kinetic see installation instruction kinetic lunar see installation instruction lunar melodic see installation instruction melodic rosdistrodesktopfull package desired distribution installed uuvsimulator installed bash tabkinetic sudo apt install roskineticuuvsimulator bash tablunar sudo apt install roslunaruuvsimulator bash tabmelodic sudo apt install rosmelodicuuvsimulator instruction install package source check instruction page purpose project software research prototype originally developed eu ecsel project 662107 swarm software ready production use however license condition applicable open source license allow adapt software need using safety relevant setting make sure software fulfills requirement adjust according applicable safety standard eg iso 26262 license uuv simulator opensourced apache20 license see license file detail list open source component included uuv simulator see file 3rdpartylicensestxt release kinetic lunar melodic,"[('underwater', 'vehicle'), ('uuv', 'simulator')]"
msadowski/awesome-weekly-robotics,Other,awesome weekly robotics collection useful link discovered work weekly robotics would like feature project list feel free contact author create pull request github open source robot rover car turtlebot popular lowcost personal robot kit opensource software created willow garage licence preferred license turtlebot hardware documentation freebsd documentation license nasa open source rover buildityourself 6wheel rover based rover mar licence apache 20 sawppy rover 3d printed motorized model mar rover curiosity mar 2020 build 500 budget licence mit donkeycar diy self driving platform small scale car requires rc car raspberry pi programmed python licence mit morph modular open robotics platform hacker affordable modular differential drive platform open robotics development hacker licence gplv3 linorobot compatible ground robot 2wd 4wd ackermann steering mecanum drive licence bsd2 clause mushr opensource robotic hardware software platform learning researching ai setting autonomous vehicle mobile robotics licence bsd 3clause scuttle open source differentialdrive robot designed support teaching within multidisciplinary engineering technology mxet texas bot payloadcapable mobile platform made readilyavailable offtheshelf part 3d printed design licence mit marsrover curiosityperseverance inspired rover open source hardware software c licence mit openrobot 50 robot car interface smartphone high level control licence mit openmower opensource rtkgps enabled mower project licence cc byncsa 40 robot arm dexter open source industrial robotics arm project information please see haddington dynamic webpage licence gplv3 reachy bioinspired robotic arm 7dof prosthesis robotic arm developed pollen robotics software licenced lgpl licence hardware licenced cc bysa faze4 faze4 small fully 3d printable open sourceaxis robotic arm functionally esthetically similar robotic arm industry aimed research education anyone interested making robot arm licence mit quadruped opendog open source quadruped robot designed james bruton licence gplv3 stanford doggo stanford doggo highly agile robot designed provide accessible platform legged robot research licence mit mjbots quad a0 mjbots quad a0 small dynamic quadruped like mit minicheetah fully open source licence apache 20 stanford quadruped pupper low cost quadruped robot bom coming around 600900 depending component already licence mit open dynamic robot initiative open torquecontrolled modular robot architecture legged locomotion research licence bsd3 open source sensor openmv openmv project creating lowcost extensible python powered machine vision module aim becoming arduino machine vision hardware licence cc bysa 30 software licence mit bionics opensource leg opensource actuated leg prosthetics total cost approx 285k produce licence cc 30 graphical user interface open mct open mct open mission control technology nextgeneration mission control framework visualization data desktop mobile device developed nasa ames research center used nasa data analysis spacecraft mission well planning operation experimental rover system licence apache 20 soft robotics soft robotics toolkit soft robotics toolkit collection shared resource support design fabrication modeling characterization control soft robotic device toolkit wa developed part educational research undertaken harvard biodesign lab licence open research purpose need contact organization commercial usage punyo soft bubble grippers robust perceptive manipulation toyota research institute licence cc bync 40 machining 3d printing cycloidal reduction drive generator cycloidal reduction drive generator script autodesk fusion360 licence public domain pointcloudprinter prepare pointclouds aerial lidar scan 3d printing licence mit linuxcnc open source software drive milling machine lathe 3d printer laser cutter plasma cutter robot arm hexapod licence gplv2 freeloader low cost desktop size open source universal testing machine designed inexpensive highthroughput material testing licence bsd according paper diycncmachine thorough diy build cnc machine based makita router permissive licence datasets kitti vision benchmark suite vision benchmark captured karlsruhe contains data fro lidar gps stereo camera licence cc byncsa 30 flir thermal dataset synced annotated thermal imagery nonannotated rgb imagery reference ada research contains 14k image nuscenes dataset autonomous vehicle dataset includes approximately 14m camera image 390k lidar sweep 14m radar sweep 14m object bounding box 40k keyframes lyft leveldataset autonomous car dataset lyft car equipped withlidars andcameras dataset come bounding box traffic agens underlying hd spatial semantic map uzhfpv drone racing dataset quadrotor racing dataset contains information even camera rgb camera groundtruth leica nova ms60 laser tracker licence cc byncsa 30 pcl data repository website contains various datasets related point cloud library partnet consistent largescale dataset 3d object annotated finegrained instancelevel hierarchical 3d part information dataset consists 573585 part instance 26671 3d model covering 24 object category licence mit utbm robocar dataset dataset containing robotic car sensor data provided bag file find information fromstereo cameraslidars radar gnss receiver rtk base station imu andrgb camera licence cc byncsa 40 urbanloco another robotic car dataset providing sensor information bag licence cc byncsa 40 libredataset lidar benchmark reference dataset comparing 12 lidar model across various scenario condition selfdriving car ustc flicar dataset heavyduty vtol dataset captured robotic bucket truck drone autopilot ardupilot open source autopilot multirotors fixed wing rover boat submarine run following autopilot hardware licence gplv3 px4 px4 open source flight control software drone unmanned vehicle project provides flexible set tool drone developer share technology create tailored solution drone application licence bsd paparazzo opensource drone hardware software project encompassing autopilot system ground station software multicoptersmultirotors fixedwing helicopter hybrid aircraft wa founded 2003 licence gplv2 library framework rerun sdk logging computer vision robotics data paired visualizer exploring data time let debug understand internal state data system minimal code licence dual licence mit apache20 gtsam bsdlicensed c library implement sensor fusion robotics computer vision application including slam simultaneous localization mapping vo visual odometry sfm structure motion us factor graph bayes network underlying computing paradigm rather sparse matrix optimize probable configuration optimal plan licence bsd cere solver open source c library modeling solving large complicated optimization problem used many organization bundle adjustment slam camera calibration many roboticsbased application licence bsd3 clause visual servoing platform project crossplatform library linux window mac allows prototyping developing application using visual tracking visual servoing technics licence gplv2 point cloud library standalone large scale open project 2d3d image point cloud processing licence bsd opencv open source computer vision library licence bsd3 clause videoflow python framework facilitates quick development complex video analysis application seriesprocessing based application multiprocessing environment licence mit robotics library selfcontained c library rigid body kinematics dynamic motion planning control licence bsd2 clause openpose realtime multiperson keypoint detection library body face hand foot estimation licence permissible nonprofit research organization commercial profit company raisim physic rigidbody dynamic simulation licence free noncommercial use open motion planning library ompl consists many stateoftheart samplingbased motion planning algorithm licence bsd3 clause evo python package evaluation odometry slam licence gpl30 mrpt mobile robot programming toolkit provides developer portable welltested application library covering data structure algorithm employed common robotics research area licence bsd moo c cross platform middle ware robotics research helpful think set layer pinocchio fast flexible implementation rigid body dynamic algorithm analytical derivative licence bsd2 clause openshc versatile multilegged robot controller capable generating body pose gait quasistatic multilegged robot licence csiro open source software licence variation bsd mit exotica general optimisation toolset robotics platform written c binding python motivation provide streamlined process developing algorithm task inverse kinematics trajectory optimisation optimal control licence bsd crocoddyl optimal control library robot control contact sequence solver based various efficient differential dynamic programming ddplike algorithm licence bsd 3clause open3d opensource library support rapid development software deal 3d data open3d frontend expose set carefully selected data structure algorithm c python licence mit robotics toolbox python fields2cover modular extensible coverage path planning library licence bsd3clause segment anything segment anything model sam produce high quality object mask input prompt point box used generate mask object image licence apache 20 slam cartographer 2d 3d slam library support multiple platform sensor configuration licence apache 20 gmapping gmapping highly efficient raoblackwellized particle filer learn grid map laser range data licence bsd3clause hectorslam hectorslam contains package related performing slam unstructured environment like encountered urban search rescue usar scenario robocup rescue competition licence bsd tinyslam package provides implentation tinyslam one simpliest lightweight slam method licence mit xivo library visualinertial odometry mapping free research educational application commercial licence available request slamtoolbox package 2d lifelong mapping localization potentially massive map licence lgpl v21 kimera c library realtime metricsemantic simultaneous localization mapping licence bsd lama lightweight localization mapping library run rasberry pi 3b licence bsd3 clause rtabmap rtabmap realtime appearancebased mapping rgbd stereo lidar graphbased slam approach based incremental appearancebased loop closure detector licence depends build type usage please see website detail basalt library visualinertial odometry mapping licence bsd3 clause liosam realtime lidarinertial odometry package promising result multibeam lidar licence bsd3 clause simulator vrep robot simulator integrated development environment based distributed control architecture objectmodel individually controlled via embedded script plugin bluezero node remote api client custom solution come free educational paid commercial version argo argo multiphysics robot simulator simulate largescale swarm robot kind efficiently licence mit gazebo open source simulator play nicely developed osrf supportsphysics engine licence apache 20 webots free open source simulator includes large collection robot sensor actuator object model licence apache 20 carla opensource simulator autonomous driving research licence mit airsim simulator drone car built unreal engine made microsoft licence mit openrave openrave provides environment testing developing deploying motion planning algorithm realworld robotics application main focus simulation analysis kinematic geometric information related motion planning licence lgpl v30 pymanoid humanoid robotics controller prototyping environment based openrave licence gpl v30 flightmare open flexible quadrotor simulator licence mit pyrobosim ros2 enabled 2d mobile robot simulator behavior prototyping licence bsd mvsim lightweight dnyamical simulator 2d vehicle robot licence bsd3 clause middleware robot operating system set software library tool help build robot application driver stateoftheart algorithm powerful developer tool ha need next robotics project moosivp moosivp set open source c module providing autonomy robotic platform particular autonomous marine vehicle yarp yet another robot platform middleware robotics course tutorial hello real world robot operating system free edx mooc basic taught researcher delft university technology industrial melodic training exercise training exercise provided rosindustrial build mobile robot ros2 selfpaced projectbased course ros2 mobile robot developed author repo library package towr lightweight eigenbased c library trajectory optimization legged robot licence bsd 3clause behaviourtreecpp behavior tree library c licence mit plotjuggler qt5 based application display time series plot using intuitive drag drop interface licence gplv3 rosshow visualize topic inside terminal unicodeascii art licence bsd 3clause astrobee robot software nasa astrobee robot software licence apache v20 vectorros package anki vector home robot licence gplv30 smacc eventdriven asynchronous behavioral state machine library realtime robotic operating system application written c licence bsd 3clause region detection library us variety opencv pcl filter detect contour handdrawn region licence bsd robotrunner robot runner rr tool automatically execute measurementbased experiment robotics software licence mit allan variance package load rosbag imu data computes allan variance parameter licence bsd 3clause voxgraph globally consistent volumetric mapping framework represents world collection signed distance function submaps aligns pose graph optimization licence bsd 2clause jupyetlaburdf extension display urdf jupyterlab licence bsd 3clause quadsdk rosbased framework agile quadrupedal locomotion licence mit aerostack2 framework help developer design build control architecture aerial robotic system licence bsd 3clause drone rosflight rosflight autopilot system designed ground researcher mind easy integration licence bsd 3clause rpgquadrotorcontrol complete framework flying quadrotors based control algorithm developed robotics perception group university zurich publication navigation tuning guide good introduction tuning navigation cover global local planner costmaps amcl recovery behaviour cheat sheet basic cheatsheet provided clearpath robotics web toolsframeworks roslibjs standard javascript library licence bsd webvideoserver http streaming image topic multiple format licence bsd webviz web based application playback visualization bag file made cruise automation licence apache 20 interest group rosagriculture agriculture aim create ecosystem empower farmer robotic tool autoware autoware foundation nonprofit organization supporting opensource project enabling selfdriving mobility rosindustrial rosindustrial opensource project extends advanced capability software industrial relevant hardware application sport community aiming utilize competitive robotic sport motor control vesc open source esc project quite commonly used electronics skateboard community also used project mit racecar mushr odrive stmbl ac servo driver stm32f4 licence gplv3 simplefoc arduino compatible open source field oriented control foc project licence mit electronics wireviz tool documenting cable wiring harness connector pinouts describing yaml format licence gplv30 book course pid without phd guide implementing simple controller software also cover tuning pythonrobotics python sample code robotics algorithm licence mit kalman bayesian filter python kalman filter book using jupyter notebook focus building intuition experience formal proof includes kalman filter extended kalman filter unscented kalman filter particle filter exercise include solution licence cc slam dummy introductory document slam extended kalman filter come example c implementation source code autonomous driving cookbook preview autonomous driving tutorial developed microsoft practical deep learning coder free course neural network fastai currently contains 14 lesson machine learning course python freely available machine learning course using python developed machine learning mindset robotics 501 mathematics robotics rob 501 mathematics robotics graduatelevel course university michigan introduces applied mathematics robotics engineer calibration desk reference 80 page long document sensor calibration tangram vision direct download link website element robotics open access book robotics directed towards beginner book ha many algorithmic activity exercise foundation robotics openaccess book robotics rather beginner example ai gaming rule sometimes convenient algorithm pause simulation get highest score spreadsheet contains lot information kind osrtos list open source real time operating system rtos licence cc bysa 30 haptipedia online opensource visualization growing database 105 haptic device invented since 1992 boarddb searchable database single board computer fast introduction robotics v 20 handpicked selection robotics resource covering robotics various angle continuumrobotexamples continuum robot elastic link capable largescale continuous deformation repo ha example script simulate continuum robot various design paradigm example accompanied short writeup pdf format licence mit ai incident database well documented database ai incident robotics company list company using rosor roscontrol challenge set control challanges solve browser using javascript documentary pulling power sky story makani documentary makani company wa producing energy wind using kite start robot revolution red hat documentary awesome robotics list kiloreux ahundt jslee02 awesome rosawesome robotic tooling awesome cloud robotics awesome robotics project,"[('licence', 'mit'), ('licence', 'bsd')]"
NVIDIA-AI-IOT/redtail,C++,nvidia redtail project autonomous visual navigation component drone ground vehicle using deep learning refer wiki information get started project contains deep neural network computer vision control code hardware instruction artifact allow user build drone ground vehicle autonomously navigate highly unstructured environment like forest trail sidewalk etc trailnet dnn visual navigation running nvidia jetson embedded platform arxiv paper describes trailnet runtime module detail project deep neural network dnns trained scratch using publicly available data pretrained dnns also available part project case want train trailnet dnn scratch follow step page project also contains stereo dnn model runtime allow estimate depth stereo camera nvidia platform iros 2018 presented work iros 2018 cvpr 2018 presented work cvpr 2018 conference part workshop autonomous driving reference demo stereo dnn cvpr18 paper stereo dnn video demo trailnet forest drone navigation iros17 paper trailnet dnn video demo gtc 2017 talk slide video demo video showing 250m autonomous flight trailnet dnn flying drone demo video showing ourkilometer autonomous drone flight trailnet dnn demo video showing trailnet dnn driving robotic rover around office demo video showing trailnet generalization ground vehicle environment news 20200203 alternative implementation redtail longer developed fortunately community stepped continued developing project thank user interest redtail question feedback alternative implementation listed mtbsteve 20181010 stereo dnn node fix added stereo dnn node visualizer node fixed issue nvidiadocker v2 20180919 update stereo dnn moved tensorrt 40 enabled fp16 support resnet18 2d model resulting 2x performance increase 20fps jetson tx2 enabled tensorrt serialization resnet18 2d model reduce model loading time minute le second better logging profiler support 20180604 cvpr 2018 workshop fast version stereo dnn presenting work cvpr 2018 conference part workshop autonomous driving added fast version stereo dnn model based resnet18 2d model model run 10fps jetson tx2 see readme detail check updated sampleapp gtc 2018 stereo dnn session page gtc18 recorded video presentation 20180322 redtail 20 added stereo dnn model inference library tensorflowtensorrt detail see readme migrated jetpack 32 change brings latest component cuda 90 cudnn 70 tensorrt 30 opencv 33 others jetson platform note breaking change added support int8 inference enables fast inference device hardware implementation int8 instruction detail wiki 20180215 added support tb discovery platform step step instruction assemble tb discovery drone instruction attach use zed stereo camera detailed instruction calibrate test fly drone 20171012 added full simulation docker image experimental support apm rover support mavros v021 redtail simulation docker image contains component required run full redtail simulation docker refer wiki information experimental support apm rover refer wiki information several change including support mavros v021 updated jetson install script bug fix 20170907 nvidia redtail project released open source project redtail ai module allow building autonomous drone mobile robot based deep learning nvidia jetson tx1 tx2 embedded system source code pretrained model well detailed build test instruction released github 20170726 migrated code script jetpack 31 tensorrt 21 tensorrt 21 provides significant improvement dnn inference performance well new feature bug fix breaking change requires reflashing jetson jetpack 31,"[('stereo', 'dnn'), ('trailnet', 'dnn')]"
bulletphysics/bullet3,C++,travis build status appveyor build status bullet physic sdk official c source code repository bullet physic sdk realtime collision detection multiphysics simulation vr game visual effect robotics machine learning etc pybullet issue issue tracker wa flooded support question closed cleaned use pybullet forum discus others pybullet highly recommended use pybullet python binding improved support robotics reinforcement learning vr use pip install pybullet checkout pybullet quickstart guide installation simple pip3 install pybullet upgrade user python3 pybulletenvsexamplesenjoytfantbulletenvv02017may python3 pybulletenvsexamplesenjoytfhumanoidflagrunharderbulletenvv12017jul python3 pybulletenvsdeepmimictestrl argfile runhumanoid3dbackflipargstxt use pybullet research please cite like misccoumans2021 author erwin coumans yunfei bai title pybullet python module physic simulation game robotics machine learning howpublished url year 20162021 requirement bullet physic c c compiler c 2003 library tested window linux mac osx io android likely work platform c compiler optional demo require openglor openglthere nongraphical demo unit test contributor coding style information requirement experimental opencl gpgpu support entire collision detection rigid body dynamic executed gpu highend desktop gpu amd radeon 7970 nvidia gtx 680 better succesfully tested software window linux mac osx software currently work opencl cpu device might run laptop gpu performance likely good note often opencl driver fails compile kernel unit test exist track issue work required cover opencl kernel license source code file licensed permissive zlib license unless marked differently particular folderfile build instruction bullet using vcpkg download install bullet using vcpkg dependency manager git clone cd vcpkg bootstrapvcpkgsh vcpkg integrate install vcpkg install bullet3 bullet port vcpkg kept date microsoft team member community contributor version date please create issue pull request vcpkg repository build instruction bullet using premake also use cmake instead window click buildvisualstudiovrpybulletdoublebat open build3vs20100bullet3solutionsln asked convert project newer version visual studio installed python c root directory batch file find automatically otherwise edit batch file choose python includelib directory located window virtual reality sandbox htc vive oculus rift build run appsharedmemoryphysicsvr project preferably releaseoptimized build connect python pybullet sandbox using import pybullet p pconnectpsharedmemory ptcp localhost 6667 pudp 19216886101234 linux mac osx gnu make make sure gcc cmake installed sudo aptget install buildessential sudo aptget install cmake linux brew install cmake mac terminal type buildcmakepybulletdoublesh script invoke cmake build buildcmake directory find pybullet bulletexamplespybullet bulletexamplebrowser binary bulletexamplesexamplebrowser also build bullet using premake premake executables build3 folder depending system linux 32bit 64bit mac osx use one following line using premake cd build3 premake4linux double gmake premake4linux64 double gmake premake4osx double enablepybullet gmake cd gmake make note linux need use cmake build pybullet since compiler ha issue mixing shared static library mac osx xcode click build3xcode4command terminal window execute premakeosx xcode4 usage appexamplebrowser executables located bin folder run though terminalcommand prompt clicking startdemonamedemo name start selected demo mp4movienamemp4 create mp4 movie window requires ffmpeg installed mousemovemultiplier0400000 set mouse move sensitivity mousewheelmultiplier001 set mouse wheel sensitivity backgroundcolorred 09 set red component background color green blue fixedtimestep 00 use either realtime delta time 00 fixed step size 0016666 use mouse picking grab object holding alt control key maya style camera mouse control press f1 create series screenshots hit escape exit demo app check doc folder bullet physic forum information,"[('mac', 'osx'), ('bullet', 'physic')]"
hybridgroup/cylon,Other,cylonjs cylonjs javascript framework robotics physical computing internet thing iot provides simple powerful way create solution incorporate multiple different hardware device concurrently want use nodejs robot drone iot device right place want use ruby robot check sister project artoo want use golang power robot check sister project gobot build status build status code climate code climate getting started installation need get started new robot cylon module npm install cylon core module installed install module whatever hardware support need arduino led blink example need firmata gpio i2c module npm install cylonfirmata cylongpio cyloni2c example arduino led example connects arduino serial connection blink led per second example requires arduino firmata sketch installed obtained either ardunio ide gort arduino upload firmata command available gort javascript var cylon require cylon define robot var robot cylonrobot change port correct one arduino connection arduino adaptor firmata port devttyacm0 device led driver led pin 13 work functionmy every1second myledtoggle connect arduino start working robotstart parrot ardrone 20 javascript var cylon require cylon cylonrobot connection ardrone adaptor ardrone port 19216811 device drone driver ardrone work functionmy mydronetakeoff after10seconds mydroneland after15seconds mydronestop start cat toy leap motion digispark servo javascript var cylon require cylon cylonrobot connection digispark adaptor digispark leapmotion adaptor leapmotion device servo1 driver servo pinconnection digispark servo2 driver servo pinconnection digispark leapmotion driver leapmotion connection leapmotion work functionmy myx 90 myz 90 myleapmotionon hand functionhand myx handpalmxfromscale300 300toscale30 150 myz handpalmzfromscale300 300toscale30 150 every100 function myservo1anglemyx myservo2anglemyz consolelogmyservo1currentangle myservo2currentangle start multiple spheros http api plugin use http api plugin first install npm module npm install cylonapihttp used script javascript var cylon require cylon tell http api plugin listen request cylonapi port 4000 var bot port devrfcomm0 name thelma port devrfcomm1 name louise botsforeachfunctionbot cylonrobot name botname connection sphero adaptor sphero port botport device sphero driver sphero work functionmy every1second function consolelogmyname myspherosetrandomcolor myspheroroll60 mathfloormathrandom 360 start robot cylonstart fluent syntax familiar jquery d3 fluentstyle javascript library cylonjs also support chainable syntax javascript var cylon require cylon cylon robot connection arduino adaptor firmata port devttyacm0 device led driver led pin 13 ready functionbot setintervalfunction botledtoggle 1000 cylonstart hardware support cylonjs ha extensible syntax connecting multiple different hardware device following 36 platform currently supported platform support ardrone cylonardrone arduino cylonfirmata arduino yun cylonfirmata att m2x cylonm2x audio cylonaudio beaglebone black cylonbeaglebone bebop cylonbebop bluetooth le cylonble crazyflie cyloncrazyflie digispark cylondigispark electric imp cylonimp intel edison cyloninteliot intel galileo cyloninteliot intel iot analytics cyloninteliotanalytics joystick cylonjoystick keyboard cylonkeyboard leap motion cylonleapmotion mip cylonmip mqtt cylonmqtt nest cylonnest neurosky cylonneurosky opencv cylonopencv phillips hue cylonhue pebble cylonpebble pinoccio cylonpinoccio powerup 30 cylonpowerup rapiro cylonrapiro raspberry pi cylonraspi salesforce cylonforce skynet cylonskynet spark cylonspark speech cylonspeech sphero cylonsphero sphero ble cylonspheroble tessel cylontessel wiced sense cylonwicedsense implementation gpio general purpose inputoutput allows shared set driver supporting 14 different device gpio driver analog sensor button continuous servo direct pin ir range sensor led makey button highresistance button like makeymakey maxbotix ultrasonic range finder motor relay rgb led servo temperature sensor tp401 gas sensor also support 14 different i2c interintegrated circuit device shared cyloni2c module i2c driver blinkm rgb led bmp180 barometric pressure temperature sensor direct i2c hmc6352 digital compass jhd1313m1 lcd rgb backlight lcd lidarlite lsm9ds0gdegrees freedom imu lsm9ds0xmdegrees freedom imu mag3110 3axis digital magnetometer mpl115a2 digital barometer thermometer mpu6050 triple axis accelerometer gyro pca9544a 4channel i2c mux pca9685 16channel 12bit pwmservo driver addition officially supported platform followinguser contributed platform platform support apc ups cylonapcupsd ibeacon cylonbeacon myo cylonmyo onewire cylononewire parrot rolling spider cylonrollingspider pcduino cylonpcduino telegram cylontelegram wemo cylonwemo also many platform driver coming soon follow u twittertwitter update twitter browser mobile support cylonjs run directly inbrowser using browserify npm module also run withing chrome connected app phonegap mobile app info browser support help different configuration find info doc api plugins cylonjs ha support different api plugins used interact robot remotely time support mqtt socketio coming near future use api plugin install alongside cylon npm install cylonapihttp cylonapisocketio need call cylonapi robot script javascript var cylon requirecylon http cylonapi socketio cylonapi socketio visit ready control robot web browser check information cylon api doc cli cylon us gort command line interface cli access important feature right command line call robotops aka devops robotics scan connect update device firmware cylon also ha cli generate new robot adaptor driver check documentation busy adding documentation website check cylonjscomdocumentationdocs want help documentation find code website doc doc site contributing contribution guideline please go contributingmd release history release history please go releasesmd license copyright c 20132016 hybrid group licensed apache 20 license,"[('javascript', 'var'), ('var', 'cylon')]"
YashBansod/Robotics-Planning-Dynamics-and-Control,Other,rpdc roboticsplanningdynamicsandcontrol rpdc contains matlab code robotics planning dynamic control implementation model various kind manipulator mobile robot position control trajectory planning path planning problem github page project content following summarizing result subprojects repository 1robotmanipulatorandcoordinates 22dofmanipulatorinversekinematics 3inversealgebraicmanipulatorcontrol 4planar3dofmanipulatortrajectory 5puma560robotsimulation 6springmassdampersystemcontrol 7dijkstraalgorithm 8astaralgorithm aux1rotationmatrices,"[('rpdc', 'roboticsplanningdynamicsandcontrol'), ('roboticsplanningdynamicsandcontrol', 'rpdc')]"
ANYbotics/kindr,C++,kindr kinematics dynamic robotics author christian gehring c dario bellicoso michael bloesch remo diethelm peter fankhauser paul furgale michael neunert hannes sommer maintainer remo diethelm rdiethelmanyboticscom affiliation anybotics projected wa initially developed eth zurich autonomous system lab robotic system lab work conducted part anymal research community advance legged robotics source code released bsd 3clause license documentation online impatient individual directly download cheat sheet see also section building documentation changelog kindr 100 simplified header include include kindrcore provided kindr strongly dependent eigen sub namespaces removed eg kindrrotationseigenimpl kindr implementation rotation time derivative simplified passive hamiltonian active typedefs eg rotationquaternionad removed simpler one eg rotationquaterniond introduced note functionality operator changed please check cheat sheet understand implemented hint need changed kindr 001 rotationsetfromvectorsv1 v2 rotationsetfromvectorsv2 v1 cbiboxplusdt bwib cbiboxplusdt cib bwib cbiboxminusdt bwib cbiboxminusdt bwib euler angle probably negated conversion method kindr moved package kindrros concatenation homogeneous transformation implemented short typedefs provided homogeneous transformation homtransformquatd homtransformmatrixd jacobian exponential map implemented unit test based gtest provided test convention software package gazebo gazebomathquaternion us convention kindr tf tfquaternion tfmatrix3x3 us convention kindr rbdl rigidbodydynamicsmathspatialtransform us convention kindr whereas rbdl rigidbodydynamicsmathquaternion concatenates differently conversion rotation matrix inverted requirement eigen 320 older version might also work gcc 47 required minimum cmake 283 required minimum building building cmake install library cmake bash mkdir build cd build cmake dusecmaketrue sudo make install note usecmake default true catkin installed uninstall library bash cd build sudo make uninstall kindr included cmake project add following cmakeliststxt findpackagekindr includedirectorieskindrincludedirs building catkin build kindr catkin bash cd catkinwssrc git clone gitgithubcomanyboticskindrgit catkinmakeisolated c catkinws catkin command line tool bash cd catkinwssrc git clone gitgithubcomanyboticskindrgit catkin build w catkinws kindr kindr included catkin project add following cmakeliststxt findpackagecatkin component kindr includedirectoriescatkinincludedirs packagexml xml package builddependkindrbuilddepend package building documentation build documentation doxygen bash mkdir build cd build cmake make kindrdoc doxygen documentation found builddochtmlindexhtml building unit test gtest gtests built folder gtest exists root folder download use gtest bash wget unzip release170zip ln googletestrelease170 gtest mkdir build cd build cmake dusecmaketrue dbuildtesttrue make note usecmake default true catkin installed,"[('cd', 'build'), ('us', 'convention')]"
PX4/PX4-SITL_gazebo-classic,C++,px4 gazebo plugin suite mavlink sitl hitl build status macos build test flight simulator rover boat multirotors vtol fixed wing us motor model piece rotor simulator contrast rotor ha dependency original project use simulator academic work please cite rotor per readme link installation simulator designed used px4 autopilot please follow official developer toolchain installation instruction contributing testing please refer installation instruction normal usage get development environment installed section cover specific developer interested contribute simulator sitlgazebo plugin dependency plugins package require specific dependency protobuf required generate custom protobuf message published subscribed topic different plugins jinjais used generate sdf model template gstreamer required plugin stream video simulated camera build sitlgazebo clone repository computer important clone srcsitlgazebo remaining path instruction need adjusted bash mkdir p src cd src git clone recursive create build folder top level repository bash mkdir build navigate build directory invoke cmake bash cd srcsitlgazebo cd build cmake build gazebo plugins typing bash make jnproc lnproc next add location build directory gazebo plugin path eg add following line bashrc linux bashprofile mac file bash set plugin path gazebo find model sim export gazebopluginpathgazebopluginpathhomesrcsitlgazebobuild set model path gazebo find airframe export gazebomodelpathgazebomodelpathhomesrcsitlgazebomodels disable online model lookup since quite experimental unstable export gazebomodeldatabaseuri also need add root location repository eg add following line bashrc linux bashprofile mac file bash set path sitlgazebo repository export sitlgazebopathhomesrcsitlgazebo install wish library model usable anywhere system without specifying th path install shown note using ubuntu best see packaging section bash sudo make install testing gazebo launch typing gazebo shell bash usrsharegazebosetupsh usrsharemavlinksitlgazebosetupsh gazebo worldsirisworld please refer documentation particular flight stack run framework eg px4 unit test building running test installation googletest needed ubuntu installed bash sudo aptget install libgtestdev cd usrsrcgoogletest sudo cmake cd googletest sudo make jnproc lnproc sudo cp usrlib macos need installed source bash git clone pushd googletest mkdir build pushd build cmake make jnproc lnproc make install writing test important careful api function gazebo called gazebo server running test function produce undefined behaviour eg segfaults cuda hardware accelerated h264 encoding optional download cuda 100 download video codec sdk 90 install archive bash wget chmod x installvideocodecsdksh sudo installvideocodecsdksh sudo dpkg cudarepoubuntudeb sudo aptkey add varcudarepoversion7fa2af80pub sudo aptget update sudo aptget install cuda reboot system run command nvidiasmi verify successul installation cuda install gstreamer 1183 bash git clone b 1183 cd gstbuild meson dbuildtyperelease dstriptrue dgstpluginsbadintrospectionenabled dgstpluginsbadnvcodecenabled builddir ninja c builddir sudo meson install c builddir add usecudatrueusecuda gazebogstcameraplugin sdf file example modelsfpvcamfpvcamsdf catkin tool catkin unit test enabled default bash setting catkin workspace catkin build j4 l4 dbuildrospluginson cd buildmavlinksitlgazebo catkin runtests plain cmake building test plain cmake flag enableunittests need provided bash mkdir build cd build cmake denableunittestson build run test bash make jnproc lnproc make test packaging debian package create debian package ubuntu install system bash cd build cmake make rm deb cpack g deb sudo dpkg deb,"[('build', 'cmake'), ('make', 'jnproc')]"
neka-nat/cupoch,C++,robotics gpu computing build status build status version pypi python version downloads xscode cupoch library implement rapid 3d data processing robotics using cuda goal library implement fast 3d data computation robot system example ha application slam collision avoidance path planning tracking repository based open3d core feature 3d data processing robotics computation using cuda knn wip optimizing lbvhconstruction hierarchytraversal accelerate knn query point cloud using gpu flann point cloud registration icp colored point cloud registration fast global registration filterreg point cloud feature fpfh shot point cloud keypoints point cloud clustering gdbscan gpu accelerated algorithm densitybased clustering point cloudtriangle mesh filtering sampling io several file typespcd ply stl obj urdf message create point cloud laser scan rgbd image visual odometry realtime visual odometry dense rgbd image robust odometry estimation rgbd camera kinect fusion stereo matching collision checking occupancy grid distance transform parallel banding algorithm compute exact distance transform gpu path finding graph structure path planning collision avoidance support memory pool managed allocator interactive gui opengl cuda interop imgui interoperability cupoch 3d data dlpack data structure installation library packaged 64 bit ubuntu linux 2004 cuda 117 install cupoch using pip pip install cupoch install cupoch source git clone recurse cd cupoch mkdir build cd build cmake make installpippackage j installation jetson nano also install cupoch using pip jetson nano please set jetson using jetpack install package apt sudo aptget install libxineramadev libxcursordev libglu1mesadev pip3 install cupoch compile source update version cmake necessary wget tar zxvf cmake3184targz cd cmake3184 bootstrap dcmakeuseopenssloff make sudo make install cd git clone b jetsonnano recurse cd cupoch mkdir build cd build export pathusrlocalcudabinpath cmake dbuildglewon dbuildglfwon dbuildpngon dbuildjsoncppon sudo make installpippackage use docker sh dockercompose xhost docker exec cupoch bash getting started please see use cupoch getting started first result figure show cupoch point cloud algorithm speedup open3d environment tested ha following spec intel core i77700hq cpu nvidia gtx1070 gpu ompnumthread1 get result running example script environment sh cd examplespythonbasic python benchmarkspy get following error executing example includes 3d drawing please start program follows sh cd examplesbasic python visualizationpy load ply point cloud print render mesa warning driver doe support 0xa7a0 pci id libgl error failed create dri screen libgl error failed load driver iris mesa warning driver doe support 0xa7a0 pci id libgl error failed create dri screen libgl error failed load driver iris error unknown error phongshadercu330 sh nvprimerenderoffload1 glxvendorlibrarynamenvidia python visualizationpy speedup visual odometry intel realsense d435 vo occupancy grid intel realsense d435 og kinect fusion intel realsense l515 kf stereo matching sm fast global registration fgr point cloud laser scan fgr collision detection forvoxel grid col drone path planning dp visual odometry d435 demo work following environment melodic python27 launch roscore rviz terminal cd examplespythonros python realsensergbdodometrynodepy vo visualization point cloud triangle mesh kinematics voxel grid occupancy grid distance transform graph image reference cuda repository forked open3d gpu computing robotics voxel collision comupation robotics citing misccupoch author kenta tanaka year 2020 note title cupoch robotics gpu computing,"[('point', 'cloud'), ('install', 'cupoch')]"
lugh56/control-and-system-book,Other,controlandsystembook collection textbook mathematics robotics automatic control contains chinese english textbook updated succession,"[('controlandsystembook', 'collection'), ('collection', 'textbook')]"
karlkurzer/path_planner,C++,hybrid path planner kth research concept vehicle build status repository contains implementation hybrid path planner autonomous vehicle specifically developed kth research concept vehicle hybrid algorithm powerful path planning approach combine benefit search continuous space discretized set heading enables generation efficient smooth path nonholonomic vehicle navigating complex environment table content introduction characteristic video image dependency setup visualization citation introduction code repository result master thesis written integrated research lab itrl kth royal institute technology 2016 code documented associated thesis found goal thesis hence code create realtime path planning algorithm nonholonomic research concept vehicle rcv algorithm us binary obstacle map input generated using lidar mounted top vehicle algorithm developed using c due realtime requirement combination ensure modularity portability well using rviz visualizationsimulation environment key characteristic sampling continuous space 72 different heading per celldiscretization constrained heuristic nonholonomic without obstacle unconstrained heuristic holonomic obstacle dubin shot c realtime implementation 10 hz large part implementation closely related hybrid algorithm developed dmitri dolgov sebastian thrun path planning autonomous vehicle unknown semistructured environment doi 1011770278364909359210 video path planning search visualization dubin path constrained heuristic 2d search unconstrained heuristic open loop path planning using sensor fusion image dependency open motion planning library ompl rosmapserver setup run following command clone build launch package requires source environment sudo apt install libompldev mkdir p catkinwssrc cd catkinwssrc git clone cd catkinmake source develsetupbash rospack profile roslaunch hybridastar manuallaunch visualization rviz add topic map path pathvehicle visualizenode2dposes click 2d pose estimate set start point map p click 2d nav goal set goal point map g wait path searched process visualized optional citation would appreciate cite work case using work thank bibtex mastersthesiskurzer1057261 title path planning unstructured environment realtime hybrid implementation fast deterministic path generation kth research concept vehicle author kurzer karl year 2016 series tritaave number 201641 page 63 issn 16517660 institution kth integrated transport research lab itrl school kth integrated transport research lab itrl abstract way fully autonomously driving vehicle multitude challenge overcome one common problem navigation vehicle start pose goal pose environment doe provide specic structure preferred way movement typical example environment parking lot construction site scenario vehicle need navigate safely around obstacle ideally using optimal regard specied parameter path start goal pose work conducted throughout master thesis focus development suitable path planning algorithm research concept vehicle rcv integrated transport research lab itrl kth royal institute technology stockholm sweden development path planner requires pure algorithm code need tested respective result evaluated addition resulting algorithm need wrapped way deployed easily interfaced di erent system research vehicle thus thesis also try give insight way achieving realtime capability necessary experimental testing well setup visualization environment simulation debugging cited complete angatkina g alleyne wissa robust design evaluation novel modular origamienabled mobile robot oscar journal mechanism robotics 2022 chichkanov shawin algorithm finding optimal obstacle avoidance maneuver wheeled robot moving along trajectory 2022 16th international conference stability oscillation nonlinear control system pyatnitskiys conference 2022 guan z r song manocha l zhang tn terrain traversability mapping navigation system autonomous excavator proceeding robotics science system new york city ny usa 2022 miao e el amam p slaets pissoort improved realtime collisionavoidance algorithm based hybrid multiobjectencountering scenario autonomous surface vessel ocean engineering 2022 c zhang song j wang convolutionbased grid map reconfiguration method autonomous driving highly constrained environment 2022 ieee intelligent vehicle symposium iv 2022 angatkina design control origamienabled soft crawling autonomous robot oscar university illinois urbanachampaign 2021 chung yp yang hardwareintheloop simulation selfdriving electric vehicle dynamic path planning model predictive control electronics 2021 g huang l yang cai zhang terrain classificationbased rover traverse planner kinematic constraint mar exploration planetary space science 2021 tw kang jg kang jw jung bidirectional interpolation method postprocessing samplingbased robot path planning sensor 2021 b maity chauffeur benchmark suite design endtoend analysis selfdriving vehicle embedded system acm transaction embedded computing system tec 2021 j p moura others investigacao desempenho planejador de trajetorias motion planning network 2021 x shi j zhang c liu h chi k chen state estimation reconstruction noncooperative target based kinematic model direct visual odometry 2021 ieee 11th annual international conference cyber technology automation control intelligent system cyber 2021 b tang k hirota x wu dai z jia path planning based improved hybrid algorithm journal advanced computational intelligence intelligent informatics 2021 zhang z jian x deng chen z nan n zheng hierarchical motion planning autonomous driving largescale complex scenario ieee transaction intelligent transportation system 2021 z zhang wan wang x guan w ren g li improved hybrid path planning method spherical mobile robot based pendulum international journal advanced robotic system 2021 z zhang r wu pan wang g li initial pose estimation update robot path planning loop 2021 china automation congress cac 2021 j zhao z zhang z xue l li hierarchical vehicle motion planning method cruise parking area 2021 5th caa international conference vehicular control intelligence cvci 2021 arshad sualeh kim van nam gw kim clothoid integrated hierarchical framework autonomous driving dynamic urban environment sensor 2020 b motion planning terrain vehicle path generation radialconstrained trajectory optimization ntnu 2020 h esteban cabezos optimization parking manoeuvre 1trailer truck 2020 koziol multiobjective path planning autonomous robot using reconfigurable analog vlsi ieee access 2020 j krook r kianfar fabian formal synthesis safe stop tactical planner automated vehicle ifacpapersonline 2020 luo x li z sun optimizationbased motion planning method autonomous driving vehicle 2020 3rd international conference unmanned system icu 2020 k narula worrall e nebot twolevel hierarchical planning known semistructured environment 2020 ieee 23rd international conference intelligent transportation system itsc 2020 n van sualeh kim gw kim hierarchical control system autonomous driving towards urban challenge applied science 2020 n van dinh yg ha gw kim universal control system selfdriving car towards urban challenge 2020 ieee international conference big data smart computing bigcomp 2020 pj wang lidar online visibilitybased decomposition search approach realtime autonomous vehicle motion planning university california santa cruz 2020 z zhao l bi new challenge path planning autonomous truck openpit mine last transport section applied science 2020 j krook l svensson li l feng fabian design formal verification safe stop supervisor automated vehicle 2019 international conference robotics automation icra 2019 nemec gregor e bubenikova hrubos r pirnik improving hybrid method nonholonomic wheeled robot international journal advanced robotic system 2019 zhang chen chen n zheng hybrid abased curvature continuous path planning complex dynamic environment 2019 ieee intelligent transportation system conference itsc 2019,"[('path', 'planning'), ('motion', 'planning')]"
mint-lab/awesome-robotics-datasets,Other,toc toc dataset collection robotics radish robotics data set repository andrew howard nicholas roy working repository robotics computer vision datasets mrpt memo includes malaga datasets classic datasets published radish ijrr data paper ijrr awesome slam datasets younggun chocomputer vision cvonline image database cvonline computer vision datasets web cvpapersyacvid yet another computer vision index datasets hayko riemenschneidercomputer vision online datasets computer vision online others machine learning repository uci kaggle datasets kaggle ieee dataport ieee placespecific datasets driving datasets kitti vision benchmark suite kitti360 andreas geiger et alsemantickitti jens behley et al waymo open dataset waymo cityscape dataset appoloscape dataset berkely deepdrive dataset bdd100k bair uc berkely nuscenes dataset aptiv d2city dataset didi ford campus vision lidar data set perl univ michigan mit darpa urban challenge dataset mit kaist multispectral recognition dataset day night rcv lab kaist kaist complex urban dataset irap lab kaist new college dataset mrg oxford univ chinese driving bike view cdbv ca culane dataset cuhk rom road marking image database jeanphilippe tarel et al flying datasets zurich urban micro aerial vehicle dataset rpg ethz uzhfpv drone racing dataset rpg ethz multidrone public dataset multidrone project blackbird dataset agiledrones group mit underwater datasets marine robotics datasets acfr outdoor datasets rawseeds project memo includes bovisa dataset outdoor bicocca dataset indoor planetary mapping navigation datasets asrl univ toronto indoor datasets robotics 2dlaser datasets cyrill stachniss memo includes classic datasets published radish longterm mobile robot operation lincoln univ mit stata center data set marine robotics group mit kth cold database andrzej pronobis shopping mall datasets irc atr rgbd dataset 7scenes microsoft topicspecific datasets robotics localization mapping slam slam benchmarking ai univ freiburg robotic 3d scan repository univ wurzburg univ osnabruck 3d pose graph optimization luca carlone landmarkbased localization rangeonly data localization cmu ri roh angulation dataset hyunchul roh wireless sensor network dataset kamin whitehouse path planning navigation pathfinding benchmark moving ai lab univ denver task motion planner benchmarking r 2018 workshop topicspecific datasets computer vision feature affine covariant feature datasets vgg oxford repeatability benchmark tutorial vlfeat list feature performance evaluation datasets maintained openmvg saliency foreground saliency mit saliency benchmark mit salient object detection benchmark mingming cheng foregroundchange detection background subtraction changedetectionnet aka cdnet motion pose estimation adelaidermf robust model fitting data set hoi sim wong structurefrommotion 3d reconstruction object ivlsynthesfm v2 davide marelli et al fujisfm dataset jordi genemola et al large geometric model archive georgia tech stanford 3d scanning repository stanford univ place photo tourism data uw microsoft object tracking visual object tracking challenge aka votvisual tracker benchmark aka otb object place event recognition pedestrian eurocity person dataset aka ecp daimler pedestrian benchmark data set crowdhuman object rgbd object dataset uw sweet pepper peduncle 3d datasets inkyu sa place loop closure detection david filliat et al traffic surveillance best benchmark evaluation surveillance task sjtu virat video dataset research group tum cvg datasets tag visualinertia odometry visual slam 3d reconstruction oxford vgg datasets tag visual feature visual recognition 3d reconstruction qut cyphy datasets tag visual slam lidar slam univ bonn univ stachniss lab datasets tag slam epfl cvlab datasets tag 3d reconstruction local keypoint optical flow rgbd pedestrian middlebury computer vision page tag stereo matching 3d reconstruction mrf optical flow color caltech cvg datasets tag object pedestrian car face 3d reconstruction turntable,"[('computer', 'vision'), ('3d', 'reconstruction')]"
jrin771/Everything-LLMs-And-Robotics,Other,everythingllmsandrobotics world largest github repository intersection llm multimodal included robotics heavily inspired awesomellmrobotics logistics want make change repository click made go doe repository education llm education robotics education llm robotics research reasoning research planning research manipulation research instruction navigation research simulation framework research perception project demo thoughtful twitter thread citation llm educational resource start transformer scratch brandon rohrer website stanford transformer class cs25 transformer united stanford 2022 website andrej karpathy gpt tutorial let build gpt scratch code spelled andrej karpathy 2023 youtube video robotics educational resource aienabled robotics class cs199 stanford robotics independent study stanford 2023 website llm robotics educational resource google 2022 research google research 2022 beyond robotics google 2023 website controlling robot via large language model controlling robot via large language model sanjiban choudhury c 47565756 cornell 2023 slide reasoning autotamp autotamp autoregressive task motion planning llm translator checker arxiv june 2023 paper llm design robot large language model design robot arxiv mar 2023 paper palme palme embodied multimodal language model arxiv mar 2023 paper website demo rt1 rt1 robotics transformer realworld control scale arxiv dec 2022 paper code website progprompt generating situated robot task plan using large language model arxiv sept 2022 paper codeaspolicies code policy language model program embodied control arxiv sept 2022 paper code website saycan say grounding language robotic affordances arxiv apr 2021 paper code website socratic socratic model composing zeroshot multimodal reasoning language arxiv apr 2021 paper code website piglet piglet language grounding neurosymbolic interaction 3d world acl jun 2021 paper code website planning llmgrop task motion planning large language model object rearrangement arxiv mar 2023 paper bio lab task planning llm generate robotic script goaloriented instruction biological laboratory automation arxiv april 2023 paper promptcraft robotics chatgpt robotics design principle model ability microsoft 2023 paper website code clarify error useful prompt instruction guided task programming verifierassisted iterative prompting arxiv march 2023 paper lmnav robotic navigation large pretrained model language vision action arxiv july 2022 paper pytorch code website innermonlogue inner monologue embodied reasoning planning language model arxiv july 2022 paper website housekeep housekeep tidying virtual household using commonsense reasoning arxiv may 2022 paper pytorch code website lid pretrained language model interactive decisionmaking arxiv feb 2022 paper pytorch code website zsp language model zeroshot planner extracting actionable knowledge embodied agent icml jan 2022 paper pytorch code website manipulation moo openworld object manipulation using pretrained visionlanguage model arxiv march 2023 paper website tidybot tidybot personalized robot assistance large language model arxiv may 2023 paper website paper website dialrobotic skill acquistion via instruction augmentation visionlanguage model arxiv nov 2022 paper website clipfieldsclipfields weakly supervised semantic field robotic memory arxiv oct 2022 paper pytorch code website vimavima general robot manipulation multimodal prompt arxiv oct 2022 paper pytorch code website perceiveractora multitask transformer robotic manipulation corl sep 2022 paper pytorch code website latte latte language trajectory transformer arxiv aug 2022 paper tensorflow code website robot enact malignant stereotype robot enact malignant stereotype facct jun 2022 paper website washington post wired code access request atla leveraging language accelerated learning tool manipulation corl jun 2022 paper zest foundation model perform zeroshot task specification robot manipulation l4dc apr 2022 paper lsengu semantic exploration language abstraction pretrained representation arxiv apr 2022 paper embodiedclip simple effective clip embeddings embodied ai cvpr nov 2021 paper pytorch code cliport cliport pathway robotic manipulation corl sept 2021 paper pytorch code website instruction navigation text2motion text2motion natural language instruction feasible plan arxiv mar 2023 paper chatgpt robot collaboration improved trust humanrobot collaboration chatgpt arxiv april 2023 paper adapt adapt visionlanguage navigation modalityaligned action prompt cvpr may 2022 paper pretrained vision model control unsurprising effectiveness pretrained vision model control icml mar 2022 paper pytorch code website cow clip wheel zeroshot object navigation object localization exploration arxiv mar 2022 paper recurrent vlnbert recurrent visionandlanguage bert navigation cvpr jun 2021 paper pytorch code vlnbert improving visionandlanguage navigation imagetext pair web eccv apr 2020 paper pytorch code interactive language interactive language talking robot real time arxiv oct 2022 paper website simulation framework minedojo minedojo building openended embodied agent internetscale knowledge arxiv jun 2022 paper code website open database habitat 20 habitat 20 training home assistant rearrange habitat neurips dec 2021 paper code website behavior behavior benchmark everyday household activity virtual interactive ecological environment corl nov 2021 paper code website igibson 10 igibson 10 simulation environment interactive task large realistic scene iros sep 2021 paper code website alfred alfred benchmark interpreting grounded instruction everyday task cvpr jun 2020 paper code website babyai babyai platform study sample efficiency grounded language learning iclr may 2019 paper code perception matcha agent chat environment interactive multimodal perception using large language model iros 2023 paper poster code video website lgx embodied agent find catshaped mug llmbased zeroshot object navigation arxiv mar 2023 paper robot acquire skill vlms robotic skill acquisition via instruction augmentation visionlanguage model arxiv nov 2022 paper occulation insight occlusion insight object search semantic shelf using large language model arxiv feb 2023 paper project demo robotgpt pt2 twitter video voiceinput llmpowered robot arm orangewood lab 2023 video spot gpt boston dynamic integration chatgpt spot robot boston dynamic 2023 video robotgpt orangewood lab robogpt demo orangewood lab 2023 video mona vitruvian work robot demonstration vitruvian work 2023 video ameca ameca expression gpt3engineered art 2023 video sarcastic robot sarcastic robot powered gpt4 gabrael levine hackathon project 2023 video droneformer droneformer controlling uavs natural language brian wu hackathon project stanford university 2023 video thoughtful twitter thread bitter lesson 20 hausmank 2023 thread citation find repository useful please consider citing list miscrintamaki2023everythingllmsandroboticsrepo titleeverythingllmsandrobotics authorjacob rintamaki journalgithub repository url year2023,"[('2022', 'paper'), ('code', 'website')]"
google-deepmind/dm_robotics,Python,dmrobotics library tool task created used robotics research deepmind package overview package summary transformation rigid body transformation geometry scene robot geometry primitive vision visual blob detection tracking agentflow reinforcement learning agent composition library manipulation rgb object mesh manipulation task moma manipulation environment definition library simulated real robot controller qpoptimization based cartesian controller controller binding python binding controller least square qp qp task definition solver installation library distributed pypi package dmroboticstransformations dmroboticsgeometry dmroboticsvision dmroboticsagentflow dmroboticsmanipulation dmroboticsmoma dmroboticscontrollers python version 37 38 39 310 supported dependency moma manipulation controller depend mujoco package see individual package information dependency building build test library run buildsh script assumes mujoco installed dmcontrol installed cmake version 3202 installed python 37 38 39 310 system header installed gcc versionor later installed numpy installed python library tested tox c code built tested cmake tox distshare mechanism used share built source distribution package package,"[('moma', 'manipulation'), ('37', '38')]"
real-stanford/diffusion_policy,Python,diffusion policy project page paper data colab state colab vision cheng chi siyuan feng yilun du zhenjia xu eric cousineau benjamin burchfiel shuran song 1columbia university 2toyota research institute 3mit try selfcontained google colab notebook easiest way play diffusion policy provide separate notebook statebased environment visionbased environment checkout experiment log experiment used generate table iii iv paper providea configyaml contains parameter needed reproduce experimentdetailed trainingeval logsjsontxt every training stepcheckpoints best epochtestmeanscoreckpt last latestckpt epoch run experiment log hosted website nested directory format within experiment directory may find configyaml metric logsjsontxt train0 checkpoint epoch0300testmeanscore1000ckpt latestckpt logsjsontxt train1 checkpoint epoch0250testmeanscore1000ckpt latestckpt logsjsontxt train2 checkpoint epoch0250testmeanscore1000ckpt latestckpt logsjsontxt metricslogsjsontxt file aggregate evaluation metric alltraining run every 50 epoch using multirunmetricspy number reported paper correspond max kmintrainloss aggregation key download file subdirectory use console wget recursive noparent nohostdirectories relative rejectindexhtml installation simulation reproduce simulation benchmark result install conda environment linux machine nvidia gpu ubuntu 2004 need install following apt package mujoco console sudo apt install libosmesa6dev libgl1mesaglx libglfw3 patchelf recommend mambaforge instead standard anaconda distribution faster installation console mamba env create f condaenvironmentyaml use conda well console conda env create f condaenvironmentyaml condaenvironmentmacosyaml file development macos doe full support benchmark real robot hardware pusht 1x ur5cb3 ur5e rtde interface 2x realsense d415 1x 3dconnexion spacemouse teleop 1x millibar robotics manual tool changer need robot side 1x 3d printed end effector 1x 3d printed tblock usbc cable screw realsense software ubuntu 20043 tested mujoco dependency sudo apt install libosmesa6dev libgl1mesaglx libglfw3 patchelf realsense sdk spacemouse dependency sudo apt install libspnavdev spacenavd sudo systemctl start spacenavd conda environment mamba env create f condaenvironmentrealyaml reproducing simulation benchmark result download training data repo root create data subdirectory console diffusionpolicy mkdir data cd data download corresponding zip file console data wget extract training data console data unzip pushtzip rm f pushtzip cd grab config file corresponding experiment console diffusionpolicy wget imagepushtdiffusionpolicycnnyaml running single seed activate conda environment login wandb already console diffusionpolicy conda activate robodiff robodiffdiffusionpolicy wandb login launch training seed 42 gpuconsole robodiffdiffusionpolicy python trainpy configdir confignameimagepushtdiffusionpolicycnnyaml trainingseed42 trainingdevicecuda0 hydrarundir dataoutputsnowymdnowhmsnametaskname create directory format dataoutputsyyyymmddhhmmssmethodnametaskname configs log checkpoint written policy evaluated every 50 epoch success rate logged testmeanscore wandb well video rollouts console robodiffdiffusionpolicy tree dataoutputs20230301200203traindiffusionunethybridpushtimage wandb dataoutputs20230301200203traindiffusionunethybridpushtimage checkpoint epoch0000testmeanscore0134ckpt latestckpt hydra configyaml hydrayaml overridesyaml logsjsontxt medium 2k5u6wlimp4 2kvovxmsmp4 2pxd9f6bmp4 2q5gjt5fmp4 2sawbf6mmp4 538ubl79mp4 trainlogdirectories 13 file running multiple seed launch local ray cluster large scale experiment might want setup aws cluster autoscaling command remain console robodiffdiffusionpolicy export cudavisibledevices012 select gpus managed ray cluster robodiffdiffusionpolicy ray start head numgpus3 launch ray client starttraining workersseeds andmetrics monitor worker console robodiffdiffusionpolicy python raytrainmultirunpy configdir confignameimagepushtdiffusionpolicycnnyaml seeds424344 monitorkeytestmeanscore multirunrundir dataoutputsnowymdnowhmsnametaskname multirunwandbnamebase nowymdhmsnametaskname addition wandb log written training worker individually metric monitor worker log wandb project diffusionpolicymetrics metric aggregated alltraining run local config log checkpoint written dataoutputsyyyymmddhhmmssmethodnametaskname directory structure identical training log console robodiffdiffusionpolicy tree dataoutputs20230301221358traindiffusionunethybridpushtimage wandbmedia dataoutputs20230301221358traindiffusionunethybridpushtimage configyaml metric logsjsontxt metricsjson metricslog train0 checkpoint epoch0000testmeanscore0174ckpt latestckpt logsjsontxt trainlog train1 checkpoint epoch0000testmeanscore0131ckpt latestckpt logsjsontxt trainlog train2 checkpoint epoch0000testmeanscore0105ckpt latestckpt logsjsontxt trainlogdirectories 16 file evaluate pretrained checkpoint download checkpoint published training log folder run evaluation script console robodiffdiffusionpolicy python evalpy checkpoint data0550testmeanscore0969ckpt outputdir datapushtevaloutput device cuda0 generate following directory structure console robodiffdiffusionpolicy tree datapushtevaloutput datapushtevaloutput evallogjson medium 1fxtno84mp4 224l7jqdmp4 2fo4btlfmp4 2in4cn7amp4 34b3o2qqmp4 3p7jqn32mp4directoryfiles evallogjson contains metric logged wandb training console robodiffdiffusionpolicy cat datapushtevaloutputevallogjson testmeanscore 09150393806777066 testsimmaxreward4300000 10 testsimmaxreward4300001 09872969750774386 trainsimvideo1 datapushtevaloutputmedia2fo4btlfmp4 demo training eval real robot make sure ur5 robot running accepting command network interface emergency stop button within reach time realsense camera plugged workstation tested realsenseviewer spacemouse connected spacenavd daemon running verify systemctl status spacenavd start demonstration collection script press c start recording use spacemouse move robot press stop recording console robodiffdiffusionpolicy python demorealrobotpy datademopushtreal robotip 1921680204 result demonstration dataset datademopushtreal structure example real pusht training dataset train diffusion policy launch training config console robodiffdiffusionpolicy python trainpy confignametraindiffusionunetrealimageworkspace taskdatasetpathdatademopushtreal edit diffusionpolicyconfigtaskrealpushtimageyaml camera setup different assuming training ha finished checkpoint dataoutputsblahcheckpointslatestckpt launch evaluation script console python evalrealrobotpy dataoutputsblahcheckpointslatestckpt dataevalpushtreal robotip 1921680204 press c start evaluation handing control policy press stop current episode codebase tutorial codebase structured requirement thatimplementing n task method require onm amount code instead onmwhile retaining maximum flexibility achieve requirement maintained simple unified interface task method made implementation task method independent design decision come cost code repetition task method however believe benefit able addmodify taskmethods without affecting remainder able understand taskmethod reading code linearly outweighs cost copying pasting split task side dataset adapts thirdparty dataset interface envrunner executes policy accepts interface produce log metric configtasktasknameyaml contains information needed construct dataset envrunner optional env gym0210 compatible class encapsulates task environment policy side policy implement inference according interface part training process workspace manages lifecycle training evaluation interleaved method configworkspacenameyaml contains information needed construct policy workspace interface low dim lowdimpolicy take observation dictionary ob tensor shape btodo predicts action dictionary action tensor shape btada lowdimdataset return sample dictionary ob tensor shape action tensor shape ta da getnormalizer method return linearnormalizer key obsaction policy handle normalization gpu copy linearnormalizer parameter linearnormalizer saved part policy weight checkpoint image imagepolicy take observation dictionary key0 tensor shape bto key1 tensor shape eg btohw3 01 float32 predicts action dictionary action tensor shape btada imagedataset return sample dictionary ob dict key0 tensor shape key1 tensor fo shape tohw3 action tensor shape ta da getnormalizer method return linearnormalizer key key0key1action example totatooo aaaa oo aaaaa aa terminology paper varname codebase observation horizon tonobssteps action horizon tanactionsteps prediction horizon thorizon classical eg mdp single step observationaction formulation included special case to1 ta1 key component workspace workspace object encapsulates state code needed run experiment inherits baseworkspace single omegaconf config object generated hydra contain information needed construct workspace object running experiment config correspond configworkspacenameyaml hydra override run method contains entire pipeline experiment checkpoint happen workspace level training state implemented object attribute automatically saved savecheckpoint method state experiment implemented local variable run method entrypoint training trainpy us hydramain decorator read hydra official documentation command line argument config override example argument tasktaskname replace task subtree config content configtasktasknameyaml thereby selecting task run experiment dataset dataset object inherits torchutilsdatadataset return sample conforming interface depending whether task ha low dim image observation ha method getnormalizer return linearnormalizer conforming interface normalization common source bug project development sometimes helpful print specific scale bias vector used key linearnormalizer implementation dataset us combination replaybuffer sequencesampler generate sample correctly handling padding beginning end demonstration episode according ta important good performance please read sequencesampler implementing sampling method policy policy object inherits baselowdimpolicy baseimagepolicy ha method predictaction given observation dict predicts action conforming interface ha method setnormalizer take linearnormalizer handle observationaction normalization internally policy optional might ha method computeloss take batch return loss optimized optional usually policy class correspond workspace class due difference training evaluation process method envrunner envrunner object abstract away subtle difference different task environment ha method run take policy object evaluation return dict log metric value compatible wandblog maximize evaluation speed usually vectorize environment using modification gymvectorasyncvectorenv run individual environment separate process workaround python gil since subprocesses launched using fork linux need specially careful environment creates opengl context initialization eg robosuite inherited child process memory space often cause obscure bug like segmentation fault workaround provide dummyenvfn construct environment without initializing opengl replaybuffer replaybuffer key data structure storing demonstration dataset inmemory ondisk chunking compression make heavy use zarr format also ha numpy backend lower access overhead disk stored nested directory eg datapushtcchiv7replayzarr zip file eg datarobomimicdatasetssquaremhimageabshdf5zarrzip due relative small size datasets often possible store entire imagebased dataset ram jpeg2000 compression eliminates disk io training expense increasing cpu workload example datapushtcchiv7replayzarr data action 25650float32 img 25650 96 96float32 keypoint 256502 float32 ncontacts 25650float32 state 25650float32 meta episodeends 206 int64 array data store one data field episode concatenated along first dimension time metaepisodeends array store end index episode along fist dimension sharedmemoryringbuffer sharedmemoryringbuffer lockfree filo data structure used extensively real robot implementation utilize multiple cpu core avoiding pickle serialization locking overhead multiprocessingqueue example would like get recent frame fromrealsense camera launchrealsense sdkpipeline per process using singlerealsense continuously writes captured image sharedmemoryringbuffer shared main process quickly get last frame main process due filo nature sharedmemoryringbuffer also implemented sharedmemoryqueue fifo used rtdeinterpolationcontroller realenv contrast openai gym police interact environment asynchronously realenv step method gym split two method getobs execactions getobs method return latest observation sharedmemoryringbuffer well corresponding timestamps method call time evaluation episode execactions method accepts sequence action timestamps expected time execution step called action simply enqueued rtdeinterpolationcontroller method return without blocking execution adding task read imitate diffusionpolicydatasetpushtimagedatasetpy diffusionpolicyenvrunnerpushtimagerunnerpy diffusionpolicyconfigtaskpushtimageyaml make sure shapemeta correspond input output shape task make sure envrunnertarget datasettarget point new class added training add taskyourtaskname trainpy argument adding method read imitate diffusionpolicyworkspacetraindiffusionunetimageworkspacepy diffusionpolicypolicydiffusionunetimagepolicypy diffusionpolicyconfigtraindiffusionunetimageworkspaceyaml make sure workspace yaml target point new workspace class created license repository released mit license see license additional detail acknowledgement conditionalunet1d implementation adapted planning diffusion transformerfordiffusion implementation adapted mingpt bet baseline adapted original repo ibc baseline adapted kevin zakka reimplementation robomimic task observationencoder used extensively project pusht task adapted ibc block pushing task adapted bet ibc kitchen task adapted bet relay policy learning sharedmemory data structure heavily inspired sharedndarray2,"[('console', 'robodiffdiffusionpolicy'), ('tensor', 'shape')]"
cartographer-project/cartographer,C++,copyright 2016 cartographer author licensed apache license version 20 license may use file except compliance license may obtain copy license unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license cartographer buildjammy buildfocal buildbionic buildbullseye buildbuster doc license purpose cartographer system provides realtime simultaneous localization mapping slam 2d 3d across multiple platform sensor configuration video cartographer slam getting started learn use cartographer read doc site ask question creating issue read doc site creating issue contributing find information contributing cartographer contribution page contribution page open house slide archive past regular openforall meeting discus progress plan cartographer slide cartographer open house meeting listed march 14 2019 slide february 21 2019 slide january 17 2019 slide november 22 2018 slide october 25 2018 slide september 13 2018 slide august 16 2018 slide august2018 slide july2018 slide june 21 2018 slide june2018 slide may 24 2018 slide may2018 slide march 29 2018 slide february 22 2018 slide february2018 slide january 18 2018 slide january 11 2018 slide december2017 slide november 23 2017 slide november2017 slide october 26 2017 slide october 12 2017 slide september 14 2017 slide august 17 2017 slide july 20 2017 slide july2017 slide june 22 2017 slide june2017 slide buildjammy image alt ubuntu 2204 build status scale 100 target buildfocal image alt ubuntu 2004 build status scale 100 target buildbionic image alt ubuntu 1804 build status scale 100 target buildbullseye image alt debian bullseye build status scale 100 target buildbuster image alt debian buster build status scale 100 target doc image alt documentation status scale 100 target license image alt apachelicense scale 100 target video image alt cartographer 3d slam demo scale 100 target,"[('2018', 'slide'), ('image', 'alt')]"
ethz-asl/voxblox,C++,voxblox build test voxbloxsmall voxblox volumetric mapping library based mainly truncated signed distance field tsdfs varies sdf library following way cpuonly run singlethreaded multithreaded integrator support multiple different layer type containing different type voxels serialization using protobufs different way handling weighting merging different way inserting pose information scan tight integration voxbloxros package easily extensible whatever integrator want feature implementation building euclidean signed distance field esdfs edts directly tsdfs looking skeletonizationsparse topology planning application please refer mavvoxbloxplanning repo want create ground truth map mesh gazebo environment please check voxbloxgroundtruth pakage examplegif documentation voxblox documentation found readthedocs page table content paper video credit example output performance installation running voxblox using voxblox planning transformation voxblox contributing voxblox library api paper video video showing sample output voxblox seen video voxblox used online planning onboard multicopter seen using voxblox scientific publication please cite following paper available helen oleynikova zachary taylor marius fehr juan nieto roland siegwart voxblox incremental 3d euclidean signed distance field onboard mav planning ieeersj international conference intelligent robot system iros 2017 latex inproceedingsoleynikova2017voxblox authoroleynikova helen taylor zachary fehr marius siegwart roland nieto juan booktitleieeersj international conference intelligent robot system iros titlevoxblox incremental 3d euclidean signed distance field onboard mav planning year2017 credit library wa written primarily helen oleynikova marius fehr significant contribution zachary taylor alexander millane others marching cube meshing mesh generation taken heavily derived openchisel retained copyright header relevant file offlinemanifold,"[('signed', 'distance'), ('distance', 'field')]"
norlab-ulaval/libpointmatcher,C++,mentioned awesome lidar awesome lidar mentioned awesome robotics library awesome robotics library mentioned awesome robotics awesome robotics documentation tutorial libpointmatcher modular library implementing iterative closest point icp algorithm aligning point cloud ha application robotics computer vision library written c effeciency binding python quick link tutorial page tutorial also available readthedocsorg tutorial written using markdown syntax stored project doc folder scope range introductory material performing point cloud registration instruction experienced developer extend library codebase libpointmatcher source code fully documented based doxygen provide easy api developer example api found suggested use one build version dochtml libpointmatcher developed francois pomerleau stephane magnenat part work asleth read latest change release note quick start although suggest use tutorial quick version library ha light dependency list eigen versiona modern c matrix linearalgebra library boost version 148 portable c source library libnabo version 107 fast k nearest neighbour library lowdimensional space wa compiled ubuntu see mac x see window see partially supported compilation installation beginner user familiar compiling installing library linux go detailed instruction compile libpointmatcher source code comfortable linux cmake already installed prerequisite following command install libpointmatcher system bash mkdir build cd build cmake make sudo make install testing libpointmatcher ship version google testing framework gtest unit test located utest directory compiled libpointmatcher cmake variable buildtests must set true compiling run test make sure compiled version working correctly run test executable build directory bash cd build utestutest path examplesdata linking external project mainly develop cmake project provide example file examplesdemocmake help project also provide qt creator example examplesdemoqt manually list dependency file demopro would need ajust path point appropriate location system detailled procedure check linking project libpointmatcher section bug reporting please use github issue tracker report bug running library ubuntu copypaste output script listversionsubuntush simplify search answer file format library support different file format importing exporting data csv comma separated value vtk visualization toolkit file ply polygon file format pcd point cloud library format functionnalities available without increasing list dependency expense limited functionality support detail see tutorial importing exporting point cloud example executables using file format command line found example directory described detail citing use libpointmatcher academic context please cite following publication articlepomerleau12comp author pomerleau franc cois cola francis siegwart roland magnenat st ephane title comparing icp variant realworld data set journal autonomous robot year 2013 volume 34 number page 133148 month feb andor inproceedingspomerleau11tracking author franc cois pomerleau st ephane magnenat francis cola ming liu roland siegwart title tracking depth camera parameter exploration fast icp booktitle proc ieeersj international conference intelligent robot system iros publisher ieee press page 38243829 year 2011 extra reading interested learning different registration algorithm recently put together literature review surveying multiple solution review organized way library many example provided based real deployment f pomerleau f cola r siegwart 2015 review point cloud registration algorithm mobile robotics foundation trend robotics volnopp 1104 access journal download point cloud also produced freely available data set test different registration solution challenging data set point cloud registration algorithm alt tag download file csv vtk format directly supported library io module project partner using libpointmatcher project would like listed please contact francois pomerleau european project nifti fp7 ict247870 search rescue project dynamic environment result video multifloor reconstruction video railyard reconstruction result realtime computation nasa ames stereo pipeline planetary reconstruction satellite observation result used mar moon earth point cloud armasuisse st ugv research program artor development technique reliable autonomous navigation wheeled robot rough outdoor terrain result video urban dynamic 3d reconstruction video open space 3d reconstruction realtime computation swiss national science foundation limnobotics robotic solution toxic algae monitoring lac result video 3d shore reconstruction realtime computation cgal includes library registration pipeline norlab maintaining using library research autonomous navigation harsh environment anybotics ag investigating autonomous navigation algorithm using library point laz mining lidar expert scanning mine shaft ensure infrastructure safety larger list work realized libpointmatcher please see page application publication license libpointmatcher released permissive bsd license enjoy boost,"[('point', 'cloud'), ('awesome', 'robotics')]"
ros-planning/moveit,C++,moveit motion planning framework rosrepository see moveiteasytouse open source robotics manipulation platform developing commercial application prototyping design benchmarking algorithm overview moveit installation instruction documentation get involved branch policy develop latest feature master devel branch correspond released stable version moveit specific distribution noeticdevel synced master currently bug fix occasionally get backported released version moveit facilitate compiletime switching patch version moveitversion development branch incremented bywrt packagexml version number moveit status continuous integration service melodic master github format ci format ci codecov codecov codecov build farm build status build status docker automated build docker license fossa status buildfarm moveit package melodic source melodic debian noetic source noetic debian moveit build status build status build status build status moveitcore build status build status build status build status moveitkinematics build status build status build status build status moveitplanners build status build status build status build status moveitplannersompl build status build status build status build status moveitplannerschomp build status build status build status build status chompmotionplanner build status build status build status build status moveitchompoptimizeradapter build status build status build status build status pilzindustrialmotionplanner build status build status build status build status pilzindustrialmotionplannertestutils build status build status build status build status moveitplugins build status build status build status build status moveitfakecontrollermanager build status build status build status build status moveitsimplecontrollermanager build status build status build status build status moveitroscontrolinterface build status build status build status build status moveitros build status build status build status build status moveitrosplanning build status build status build status build status moveitrosmovegroup build status build status build status build status moveitrosplanninginterface build status build status build status build status moveitrosbenchmarks build status build status build status build status moveitrosperception build status build status build status build status moveitrosoccupancymapmonitor build status build status build status build status moveitrosmanipulation build status build status build status build status moveitrosrobotinteraction build status build status build status build status moveitrosvisualization build status build status build status build status moveitroswarehouse build status build status build status build status moveitservo build status build status build status build status moveitruntime build status build status build status build status moveitcommander build status build status build status build status moveitsetupassistant build status build status build status build status moveitmsgs build status build status build status build status geometricshapes build status build status build status build status srdfdom build status build status build status build status moveitvisualtools build status build status build status build status moveittutorials build status build status stargazer time stargazer time,"[('build', 'status'), ('status', 'build')]"
ros-visualization/rviz,C++,rviz logo format ci ci rviz 3d visualizer robot operating system framework information please see wiki maintainer robert haschke 2019 william woodall 20132018 david gossow 2013 dave hershberger 20112013 josh faust 2010 package contains public domain icon downloaded icon graphic contained package released public domain well copyright notice icon graphic package public domain dedication copyrightonly dedication based united state law public domain certification person person associated work document dedicator certifier hereby either certifies best knowledge work authorship identified public domain country work published b hereby dedicates whatever copyright dedicators hold work authorship identified work public domain certifier moreover dedicates copyright interest may associated work purpose described dedicator certifier ha taken reasonable step verify copyright status work certifier recognizes good faith effort may shield liability fact work certified public domain dedicator make dedication benefit public large detriment dedicator heir successor dedicator intends dedication overt act relinquishment perpetuity present future right copyright law whether vested contingent work dedicator understands relinquishment right includes relinquishment right enforce lawsuit otherwise copyright work dedicator recognizes placed public domain work may freely reproduced distributed transmitted used modified built upon otherwise exploited anyone purpose commercial noncommercial way including method yet invented conceived source,"[('public', 'domain'), ('icon', 'graphic')]"
pypose/pypose,Python,pypose library robot learning physicsbased optimization robot deep learning ha remarkable success robotic perception datacentric nature suffers come generalizing everchanging environment contrast physicsbased optimization generalizes better doe perform well complicated task due lack highlevel semantic information reliance manual parametric tuning take advantage two complementary world present pypose roboticsoriented pytorchbased library combine deep perceptual model physicsbased optimization technique design goal pypose make userfriendly efficient interpretable tidy wellorganized architecture using imperative style interface easily integrated realworld robotic application current feature lietensor lie group so3 se3 sim3 rxso3 lie algebra so3 se3 sim3 rxso3 module system lti ltv nls filter ekf ukf pf pnp solver epnp linear quadratic regulator lqr imu preintegration imupreintegrator secondorder optimizers gaussnewton levenbergmarquardt want feature create issue requst new feature pypose highly efficient support parallel computing jacobian lie group lie algebra see following comparison img width1167 altimage src efficiency memory comparison batched lie group operation take theseus performance asmore information efficiency comparison go paper pypose getting started installation install pypi bash pip install pypose install source requirement ubuntu masos window install pytorch run bash pip install r requirementsruntimetxt install locally bash git clone cd pypose python setuppy develop run test bash pytest contributor make sure installation correct go contributingmd example following code sample show rotate random point compute gradient batched rotation python import torch pypose pp random so3 lietensor r pprandnso32 requiresgradtrue so3type lietensor tensor 01606 00232 15516 00807 07184 01102 requiresgradtrue r rexp equivalent r ppexpr so3type lietensor tensor 00724 00104 06995 07109 00395 03513 00539 09339 gradfn p r torchrandn3 rotate random point tensor 08045 08555 05260 03502 08337 09154 gradfn psumbackward compute gradient rgrad print gradient tensor07920 09510 17110 02659 05709 03855 example show estimate batched inverse transform secondorder optimizer two usage option scheduler provided work independently python torch import nn import torch pypose pp pyposeoptim import lm pyposeoptimstrategy import constant pyposeoptimscheduler import stoponplateau class invnetnnmodule def initself dim superinit init pprandnse3dim selfpose ppparameterinit def forwardself input error selfpose inputlog return errortensor device torchdevicecuda input pprandnse32devicedevice invnet invnet2 2todevice strategy constantdamping1e4 optimizer lminvnet strategystrategy scheduler stoponplateauoptimizer steps10 patience3 decreasing1e3 verbosetrue 1st option full optimization scheduleroptimizeinputinput 2nd option step optimization schedulercontinual loss optimizerstepinput schedulersteploss note remove one option usage usage see documentation application see example citing pypose use pypose please cite paper may also download bibtex inproceedingswang2023pypose title pypose library robot learning physicsbased optimization author wang chen gao dasong xu kuan geng junyi hu yaoyu qiu yuheng li bowen yang fan moon brady pandey abhinav aryan xu jiahe wu tianhao haonan huang daning ren zhongqiang zhao shibo fu taimeng reddy pranay lin xiao wang wenshan shi jingnan talak rajat cao kun du yi wang han yu huai wang shanzhao chen siyu kashyap ananth bandaru rohan dantu karthik wu jiajun xie lihua carlone luca hutter marco scherer sebastian booktitle ieeecvf conference computer vision pattern recognition cvpr year 2023,"[('physicsbased', 'optimization'), ('lie', 'group')]"
UiPath/ReFrameWork,Other,documentation included documentation folder reframework documentation reframework template robotic enterprise framework built top transactional business process template using state machine layout phase automation project offering high level exception handling application recovery keep external setting configxlsx file orchestrator asset pull credential credential manager orchestrator asset get transaction data orchestrator queue update back status take screenshots case application exception provides extra utility workflow like sending templated email run sample notepad application dummy excel input data work initialize process initiallsettings load config data file asset initiallapplications login application per configopenapps field getappcredentials orchestrator asset local credential manager failing retry time per configprocessretries get transaction data frameworkgettransactiondata fetch orchestrator queue per configtransactionqueue gettransactiondata sample working excel input file process transaction try processtransaction application exception happen saveerrorscreen configerrorsfolder exception message going reinitialize settransactionstatus success failed rejected reason frameworksettransactionstatus update orchestrator queue item settransactionstatus sample updating excel input file end process closeallapplications listed configcloseapps new project check configxlsx file addcustomize required field value implement openapp closeapp workflow linking configxlsx field implement gettransactiondata settransactionstatus use framework version orchestrator queue implement processtransaction workflow invoked others,"[('orchestrator', 'queue'), ('orchestrator', 'asset')]"
leggedrobotics/ros_best_practices,C++,best practice convention trick best practice ros2 making see foxy branch meanwhile loose collection best practice convention trick using robot operating system build official documentation resource meant summary overview read head wiki get started report share issue encounter submitting improve make practice even better submit pr improve specific topic also check package rospackagetemplatereadmemd,"[('best', 'practice'), ('practice', 'convention')]"
robotframework/SeleniumLibrary,Python,seleniumlibrary content introduction seleniumlibrary web testing library robot framework utilizes selenium tool internally project hosted github downloads found pypi seleniumlibrary work seleniumandit support python 36 newer addition normal python interpreter work also pypy seleniumlibrary based old seleniumlibrary wa forked selenium2library later renamed back seleniumlibrary see version history section information different version overall project history image target image target image target image target keyword documentation see keyword documentation available keywords information library general installation recommended installation method using pip pip install upgrade robotframeworkseleniumlibrary running command installs also latest selenium robot framework version still need install browser driver separately upgrade option omitted installing library first time migrating selenium2library install seleniumlibrary exposed also selenium2library pip install upgrade robotframeworkselenium2library command installs normal seleniumlibrary well new selenium2library version thin wrapper seleniumlibrary allows importing selenium2library test migrating seleniumlibrary install last legacy selenium2library version use command instead pip install robotframeworkselenium2library180 recent version pip possible install directly github repository install latest source master branch use command pip install git please note installation take time pip clone seleniumlibrary project temporary directory perform installation see robot framework installation instruction detailed information installing python robot framework detail using pip see documentation pip browser driver installing library still need install browser operating system specific browser driver browser want use test exact driver need use selenium also using seleniumlibrary information driver found selenium documentation general approach install browser driver downloading right driver chromedriver chrome placing directory path driver different browser found via selenium documentation using favorite search engine search term like selenium chrome browser driver new browser driver version released support feature new browser fix bug otherwise need keep eye know update driver use alternatively use tool called webdrivermanager find latest version required version appropriate webdrivers download linkcopy right location tool run major operating system support downloading chrome firefox opera edge webdrivers example code bash pip install webdrivermanager webdrivermanager firefox chrome linkpath usrlocalbin usage use seleniumlibrary robot framework test library need first imported using library setting library library accepts import time argument documented keyword documentation along keywords provided library using robot framework generally recommended write easytounderstand test possible keywords provided seleniumlibrary pretty low level though often require implementationspecific argument like element locator passed argument thus typically good idea write test using robot framework higherlevel keywords utilize seleniumlibrary keywords internally illustrated following example seleniumlibrary keywords like input text primarily used higherlevel keywords like input username code robotframework setting documentation simple example using seleniumlibrary library seleniumlibrary variable login url browser chrome test case valid login open browser login page input username demo input password mode submit credential welcome page open teardown close browser keywords open browser login page open browser login url browser title login page input username argument username input text usernamefield username input password argument password input text passwordfield password submit credential click button loginbutton welcome page open title welcome page example slightly modified version example demo project illustrates using robot framework seleniumlibrary see demo example also execute machine information robot framework test data syntax general see robot framework user guide extending seleniumlibrary creating library extends seleniumlibrary please consider would extension also useful also general usage could useful also general usage please create new issue describing enhancement request even better issue backed pull request enhancement generally useful example solution domain specific seleniumlibrary offer public apis used build plugins library plugin api allows u add new keywords modify existing keywords modify internal functionality library also new library built top seleniumlibrary please see extending documentation detail available method example library extended community provided documentation enough various community channel available robotframeworkusers mailing list seleniumlibrary seleniumlibrarydev channel robot framework slack community robot framework forum ha channel seleniumlibrary seleniumlibrary issue tracker bug report concrete enhancement request community channel including paid support version seleniumlibrary ha year lived seleniumlibrary selenium2library name different library version supported different selenium python version summarized table history section afterwards explains project history bit project selenium version python version comment seleniumlibrary 292 earlier seleniumandpython 2527 original seleniumlibrary using selenium rc api selenium2library 180 earlier seleniumandpython 2627 fork seleniumlibrary using selenium webdriver api seleniumlibrary 30 31 seleniumandpython 27 33 selenium2library renamed pythonsupport new architecture seleniumlibrary 32 seleniumpython 27 34 drop seleniumsupport seleniumlibrary 40 seleniumpython 27 34 plugin api support event friging webdriver seleniumlibrary 41 seleniumpython 27 35 drop python 34 support seleniumlibrary 42 seleniumpython 27 35 support selenium 31410 newer seleniumlibrary 44 seleniumandpython 27 36 new pythonlibcore dropped python 35 support seleniumlibrary 50 seleniumandpython 36 pythonand jython support dropped seleniumlibrary 51 seleniumandpython 36 robot framework 31 support dropped selenium2library 30 depends seleniumlibrary depends seleniumlibrary thin wrapper seleniumlibrary 30 ease transition history seleniumlibrary originally used selenium remote controller rc api seleniumwas introduced new backwards incompatible webdriver api seleniumlibrary kept using selenium rc separate selenium2library using webdriver wa forked project contained mostly keywords case selenium2library wa dropin replacement seleniumlibrary year development old seleniumlibrary stopped also selenium rc api used wa deprecated selenium2library wa developed replaced old library de facto web testing library robot framework seleniumwas released 2016 wa otherwise backwards compatible seleniumbut deprecated selenium rc api wa removed two important effect old seleniumlibrary could anymore used new selenium version project wa pretty much dead selenium2library wa badly named supported seleniumjust fine project needed new name time seleniumwas released selenium2library wa going larger architecture change order ease future maintenance make adding pythonsupport easier big internal external change made sense rename selenium2library back seleniumlibrary decision basically meant following change create separate repository old seleniumlibrary preserve history since selenium2library wa forked rename selenium2library project library seleniumlibrary add new selenium2library project ease transitioning selenium2library seleniumlibrary going forward new development happen new seleniumlibrary project robot framework selenium seleniumlibrary selenium2library old seleniumlibrary pip pypi github keyword documentation python pypy jython ironpython demo project robot framework user guide robot framework installation instruction robotframeworkusers extending documentation slack community robot framework forum issue tracker community channel,"[('robot', 'framework'), ('browser', 'driver')]"
alexbaucom17/DominoRobot,C++,domino robot code mark rober domino robot project find bunch info project including detail software architecture website video mark made project mark video folder structure interested browsing file repo general structure get oriented doc high level documentation stuff much probably date experimentaltesting various experimental file src real stuff master code running master controller gui robot code run raspberry pi robot robotmotordriver code run clearcore robot tool various utility script usage recommended repository exists mostly interested browsing code see work almost certainly bad idea try download code use unless identical hardware robot video andor really know consider code completely unsupported plan make future update fix bug may find reason really want try run code date instruction run master code also possibly also date info library used compiling robot code good luck,"[('robot', 'code'), ('domino', 'robot')]"
gazebosim/gz-sim,C++,gazebo sim robotic simulator maintainer michael openrobotics dot org github open issue github open pull request discourse topic hexpm build status test coverage codecov ubuntu focal build status homebrew build status window build status gazebo sim open source robotics simulator gazebo sim user access high fidelity physic rendering sensor model additionally user developer multiple point entry simulation including graphical user interface plugins asynchronous message passing service gazebo sim derived gazebo classic represents 16 year development experience robotics simulation library part gazebo project table content feature install usage documentation testing folder structure code conduct contributing versioning license feature dynamic simulation access multiple highperformance physic engine gazebo physic advanced 3d graphic gazebo rendering possible use rendering engine ogre v2 realistic rendering environment highquality lighting shadow texture sensor noise model generate sensor data optionally noise laser range finder 2d3d camera kinect style sensor contact sensor forcetorque imu gps powered gazebo sensor plugins develop custom plugins robot sensor environment control graphical interface create introspect interact simulation pluginbased graphical interface powered gazebo gui simulation model access numerous robot including pr2 pioneer2 dx irobot create turtlebot construct environment using physically accurate model available gazebo fuel also build new model using sdf tcpip transport run simulation remote server interface gazebo sim socketbased message passing using gazebo transport command line tool extensive command line tool increased simulation introspection control install see installation tutorial usage gazebo sim run command line installed using gz sim help command line option use gz sim h known issue command line tool event installation mix debian source command line tool gztools may work correctly workaround single package define environment variable gzconfigpath point location gazebo library installation yaml file package found export gzconfigpathusrlocalsharegz however environment variable take single path mean installation source different location one specified another workaround working multiple gazebo library command line using symbolic link library yaml file mkdir gztoolsconfigs p cd gztoolsconfigs ln usrlocalsharegzfuel8yaml ln usrlocalsharegztransport12yaml ln usrlocalsharegztransportlog12yaml export gzconfigpathhomegztoolsconfigs issue tracked documentation see installation tutorial testing see installation tutorial see writing test section contributor guide help creating modifying test folder structure refer following table information important directory file repository gzsim example various example run binary source installs gzsim plugin example plugins standalone example standalone program use gzsim library world example sdf world file includegzsim header file downstream user expected use detail header file intended downstream use mainly template implementation src source file unit test gui graphical interface source code system system source code test integration integration test performance performance test plugins plugins used test regression regression test tutorial tutorial written markdown changelogmd changelog cmakeliststxt cmake build script migrationmd migration guide readmemd readme contributing please see contributingmd code conduct please see codeofconductmd versioning library us semantic versioning additionally library part gazebo project periodically release versioned set compatible complimentary library see gazebo website version release information license library licensed apache 20 see also license file,"[('command', 'line'), ('gazebo', 'sim')]"
opendr-eu/opendr,Python,modular open nonproprietary toolkit core robotic functionality harnessing deep learning installation python example ros1 ros2 c api customization known issue roadmap changelog license license test suite master test package doi aim opendr project develop modular open nonproprietary toolkit core robotic functionality harnessing deep learning provide advanced perception cognition capability meeting way general requirement robotics application application area healthcare agrifood agile production opendr provides mean link robotics application software library deep learning framework eg pytorch tensorflow operating environment opendr focus ai cognition core technology order provide tool make robotic system cognitive giving ability tointeract people environment developing deep learning method human centric environment active perception cognitionlearn categorize developing deep learning tool training inference common robotics setting andmake decision derive knowledge developing deep learning tool cognitive robot action decision making result developed opendr toolkit also enable cooperative humanrobot interaction well development cognitive mechatronics sensing actuation closely coupled cognitive system thus contributing another two core technology beyond ai cognition opendr aim develop train deploy evaluate deep learning model improve technical capability core technology beyond current state art start start installing opendr toolkit opendr installed following waysby cloning repository cpugpu supportusing pip cpugpu support onlyusing docker cpugpu support opendr provides opendr provides intuitive easy use python interface c api performance critical application wealth usage example supporting tool well readytouse node opendr built support webots open source robot simulator also extensively follows industry standard onnx model format openai gym interface start using opendr find detailed documentation opendr wiki main point reference installing toolkit tool index starting find detailed documentation tool included opendr interested readytouse node directly jump ros1 ros2 workspace interested readytouse example checkout project folder contains example tutorial perception control simulation hyperparameter tuning tool want explore c api explore provided c demo interface opendr opendr built upon python therefore main opendr interface written python available opendr package furthermore opendr provides ros1 ros2 interface well c interface note use many tool wish time since hardware limitation number tool run time however hardware limitation eg gpu memory might restrict number tool run given moment roadmap opendr ha following roadmap v10 2021 baseline deep learning tool core robotic functionality v20 2022 optimized lightweight highresolution deep learning tool robotics v30 2023 active perceptionenabled deep learning tool improved robotic perception contribute please follow instruction provided wiki cite u use opendr research please cite following paper introduces opendr architecture design inproceedingsopendr2022 titleopendr open toolkit enabling high performance low footprint deep learning robotics authorpassalis nikolaos pedrazzi stefania babuska robert burgard wolfram dia daniel ferro francesco gabbouj moncef green ole iosifidis alexandros kayacan erdal kober jens michel olivier nikolaidis nikos nousi paraskevi pieters roel tzelepi maria valada abhinav tefas anastasios booktitle proceeding 2022 ieeersj international conference intelligent robot system appear year2022 acknowledgment opendr project ha received funding european union horizon 2020 research innovation programme grant agreement 871449,"[('deep', 'learning'), ('learning', 'tool')]"
openai/robogym,Python,status archive code provided asis update expected robogym robogym simulation framework us openai gym mujoco physic simulator provides variety robotics environment suited robot learning diverse setting supported platform package ha tested mac mojave catalina ubuntu 1604 lts probably fine recent mac linux operating system requires python 374 greater installation install mujoco following instruction mujocopy package checkout code install via pip install run bash git clone gitgithubcomopenairobogymgit cd robogym pip install e install directly via bash pip install git citation please use bibtex entry cite framework miscrobogym2020 authoropenai titlerobogym year2020 howpublishedurl usage visualizing environment visualize interact environment using robogymscriptsexaminepy example following script visualize dactyllockedpy environment bash python robogymscriptsexaminepy robogymenvsdactyllockedpy constant randomize true note constant randomize true argument set constant environment similarly set parameter environment well show command visualizing block rearrange environment withobjects bash python robogymscriptsexaminepy robogymenvsrearrangeblockspy parameter simulationparams numobjects support teleoperation rearrange environment via teleoperate option allows user interact environment controlling robot keyboard example command teleoperation bash python robogymscriptsexaminepy robogymenvsrearrangeblockspy parameter simulationparams numobjects teleoperate holdout environment specified via jsonnet config also visualized teleoperated using mechanism bash python robogymscriptsexaminepy robogymenvsrearrangeholdoutsconfigsrainbowjsonnet teleoperate creating python environment environment extend openai gym support reinforcement learning interface offered gym including step reset render observe method environment implementation robogymenvs module instantiated calling makeenv function example following code snippet creates default locked cube environment python robogymenvsdactyllocked import makeenv env makeenv see section customization detail customize environment environment environment class subclass robogymrobotenvrobotenv classmethod robotenvbuild main entry point constructing environment object pointed makeenv environment customized parameter constant defined subclass robotenvparameters robotenvconstants physic simulator setup wrapped within robogymmujocosimulationinterfacesimulationinterface 11 mapping one instance simulationinterface one instance robotenv environment contains robot object accessible via envrobot implement robotinterface training testing environment dactyl environment dactyl environment utilize shadow robot hand robot simulation 20 actuated degree freedom perform inhand manipulation task full list environment provided category imagenamedescription dactyllockedpy manipulate locked cube internal degree freedom match target pose dactylfaceperpendicularpymanipulate rubik cube withinternal degree freedom match target pose face angle dactylfullperpendicularpymanipulate rubik cube full internaldegrees freedom match target pose face angle dactylreachpyreach task fingertip target position rearrange environment environment based ur16e robot equipped robotiq 2f85 gripper able rearrange variety object distribution tabletop setting several different type robot control mode supported detailed various goal generator provided enable different task stack pickandplace reach rearrange specified given object distribution list rearrange environment configs described document list object distribution supported category imagenamedescription rearrangeblockspysamples block different color rearrangeycbpysamples ycb rearrange environment also provide variety holdout task typically used evaluation purpose goal state various holdout environment seen image grid customizing robotics environment robotics environment support customization providing additional parameter via constant argument makeenv find constant supported environment looking definition envnameconstants class usually life file makeenv commonly supported constant randomize true randomization applied physic action observation mujocosubsteps number substeps per step mujoco simulation used balance simulation accuracy training speed maxtimestepspergoal max number timesteps allowed achieve goal timeout similarly parameter argument customized together constant find parameter supported environment looking definition envnameparameters default setting use train robotics environment python env makeenv constant randomize true mujocosubsteps 10 maxtimestepspergoal 400 parameter nrandominitialsteps 10 interface environment randomization robogym provides way intervene environment parameter training support domain randomization curriculum learning show example intervening number object block rearrange environment use interface define curriculum number object python robogymenvsrearrangeblocks import makeenv create environment default number objectsenv makeenv parameter simulationparams numobjects maxnumobjects acquire number object parameter interface param envunwrappedrandomizationgetparameterparametersnumobjects set numobjectsfor next episode paramsetvalue3 reset randomly generate environment numobjectsobs envreset see document interface environment randomization detail create new rearrange environment provide set tool help create customized rearrange environment via teleoperation see document build new rearrange environment detail,"[('rearrange', 'environment'), ('robotics', 'environment')]"
NVIDIA-Omniverse/Orbit,Python,omniverse isaac orbit isaacsim python linux platform precommit doc status license isaac orbit orbit short unified modular framework robot learning powered nvidia isaac sim offer modular design easily efficiently create robotic environment photorealistic scene fast accurate simulation please refer documentation page learn installation step feature tutorial annoucement 22092023 currently phase heavy development team actively working various aspect framework enhance modularity overall functionality understand anticipation new release assure working diligently towards yet set exact release date share targeting release early october 2023 believe improvement making well worth wait detail please check post contributing orbit wholeheartedly welcome contribution community make framework mature useful everyone may happen form bug report feature request code contribution detail please check contribution guideline troubleshooting please see troubleshooting section common fix submit issue issue related isaac sim recommend checking documentation opening question forum support please use github discussion discussing idea asking question request new feature github issue used track executable piece work definite scope clear deliverable fixing bug documentation issue new feature general update acknowledgement nvidia isaac sim available freely individual license information license term please check orbit framework released bsd3 license license file dependency asset present docslicenses directory citation please cite paper use framework work miscmittal2023orbit author mayank mittal calvin yu qinxi yu jingzhou liu nikita rudin david hoeller jia lin yuan pooria poorsarvi tehrani ritvik singh yunrong guo hammad mazhar ajay mandlekar buck babich gavriel state marco hutter animesh garg title orbit unified simulation framework interactive robot learning environment year 2023 eprint arxiv230104195,"[('isaac', 'sim'), ('please', 'check')]"
nasa/astrobee,C++,astrobee robot software three nasa astrobee freeflying robot operating inside international space station since 2019 astrobee repository contains source code astrobee robot software consisting flight software run onboard astrobee robot software simulator supporting tool primarily written c astrobee flight software performs visionbased localization provides autonomous navigation docking perching manages various sensor actuator support humanrobot interaction colocated astronaut via screenbased display light signaling sound flight software hosted astrobee three internal single board computer us opensource robot operating system framework messagepassing middleware provides highlevel astrobee command api controlling robot ha multiple operating mode execute plan command sequence individual operator command teleoperation command guest science code running onboard astrobee astrobee robot software simulator built using gazebo enables flight software evaluated without need robot hardware supporting tool include tool process imagery build map astrobee localization along many others released separately astrobee ground data system gd includes astrobee control station software communicates astrobee flight software via data distribution service dd network protocol kuip spacetoground link control station written primarily java using eclipse rcp framework source code astrobeegds repository download binary release together astrobee robot ground software nasa software year award runnerup 2020 astrobee robot software remains work progress please consult release note current list feature limitation usage instruction installing using astrobee robot software contributing astrobee robot software open source welcome contribution public please submit pull request develop branch code must follow astrobee code style u merge pull request must request contributor sign submit contributor license agreement due nasa legal requirement thank understanding documentation extensive documentation autogenerated content repository brief guide astrobees flight software astrobee demo package provides cpython interface implement custom control method information read astrobeerelated publication learning astrobee platform software localization good starting point guest science astrobee facility maintains collection resource guest scientist interested conducting research astrobee including astrobee guest science guide overview guest science code run onboard astrobee usually hosted android java app running astrobee highlevel processor hlp guest science apps use astrobee command api java binding astrobeeandroid repository contains source code astrobee service run hlp example guest science apps well guest science readme guest science developer guide focused hlp guest science apps license copyright c 2017 united state government represented administrator national aeronautics space administration right reserved astrobee platform licensed apache license version 20 license may use file except compliance license may obtain copy license unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license,"[('guest', 'science'), ('astrobee', 'robot')]"
hbrobotics/ros_arduino_bridge,Python,overview branch indigodevel intended indigo us catkin buildsystem may also compatible hydro stack includes arduino library called rosarduinobridge collection package controlling arduinobased robot using standard message service stack doe depend serial feature stack include direct support ping sonar sharp infrared gp2d12 sensor also read data generic analog digital sensor control digital output eg turn switch led support pwm servo configurable base controller using required hardware stack includes base controller differential drive robot accepts twist message publishes odometry data back pc base controller requires use motor controller encoders reading odometry data current version stack provides support following base controller hardware pololu vnh5019 dual motor controller shield pololu mc33926 dual motor shield robogaia mega encoder shield onboard wheel encoder counter note robogaia mega encoder shield used arduino mega onboard wheel encoder counter currently supported arduino uno l298 motor driver library easily extended include support motor controller encoder hardware library official documentation standard rosstyle version documentation found wiki system requirement python serial install pythonserial package ubuntu use command sudo aptget install pythonserial nonubuntu system use either sudo pip install upgrade pyserial sudo easyinstall u pyserial arduino ide 166 higher note preprocessing conditional include statement broken earlier version arduino ide ensure arduino bridge firmware compiles correctly sure install version 166 higher arduino ide download ide hardware firmware work arduinocompatible controller reading sensor controlling pwm servo however use base controller need supported motor controller encoder hardware described hardware still try package reading sensor controlling servo see note section end document instruction use base controller must also install appropriate library motor controller encoders pololu vnh5019 dual motor shield library found pololu mc33926 dual motor shield library found robogaia mega encoder library found l298 motor driver require library library installed standard arduino sketchbooklibraries directory finally assumed using version 10 greater arduino ide preparing serial port linux arduino likely connect linux computer port devttyacm devttyusb number like1etc depending many device connected easiest way make determination unplug usb device plug arduino run command l devttyacm l devttyusb hopefully one two command return result looking eg devttyacm0 return error file directory next need make sure readwrite access port assuming arduino connected devttyacm0 run command l l devttyacm0 see output similar following crwrwroot dialout 16620130224 0831 devttyacm0 note root dialout group readwrite access therefore need member dialout group work usb device plug later add dialout group run command sudo usermod g dialout yourusername yourusername linux login name likely log xwindow session log simply reboot machine want sure log back try command group see list group belong including dialout installation rosarduinobridge stack cd catkinworkspacesrc git clone cd catkinworkspace catkinmake provided arduino library called rosarduinobridge located rosarduinofirmware package sketch specific hardware requirement also used arduinotype board eg uno turning base controller described note section end document install rosarduinobridge library follow step cd sketchbookpath sketchbookpath path arduino sketchbook directory cp rp rospack find rosarduinofirmwaresrclibrariesrosarduinobridge rosarduinobridge last command copy rosarduinobridge sketch file sketchbook folder next section describes configure compile upload sketch loading rosarduinobridge sketch using base controller make sure already installed appropriate motor controller encoder library arduino sketchbooklibrariesfolder launch arduino 10 ide load rosarduinobridge sketch able find going filesketchbookrosarduinobridge note required base controller hardware still want try code see note end file choose one supported motor controller uncommenting define statement commenting others default pololu vnh5019 driver chosen choose supported encoder library uncommenting define statement commenting others robogaia mega encoder shield chosen default want control pwm servo attached controller look line define useservos make sure commented like define useservos must edit include file servosh change nservos parameter well pin number servo attached compile upload sketch arduino firmware command rosarduinolibrary accepts singleletter command serial port polling sensor controlling servo driving robot reading encoders command sent arduino serial interface including serial monitor arduino ide note trying command set serial monitor baudrate 57600 line terminator carriage return nl cr using two pulldown menu lower right serial monitor window list command found file commandsh current list includes define analogread define getbaudrate b define pinmode c define digitalread define readencoders e define motorspeeds define ping p define resetencoders r define servowrite define servoread define updatepid u define digitalwrite w define analogwrite x example get analog reading pinuse command ato change mode digital pinto output send command c1 get current encoder count e move robot forward 20 encoder tick per second 20 20 testing wiring connection differential drive robot motor connected motor controller terminal opposite polarity similarly ab lead encoders connected reverse sense however still need make sure wheel move forward given positive motor speed b encoder count increase wheel move forward placing robot block use serial monitor arduino ide test requirement use command activate motor e command get encoder count r command reset encoders toremember firmware level motor speed given encoder tick per second encoder resolution say 4000 count per wheel revolution command 20 20 move wheel fairly slowly wheel move forseconds default setting autostopinterval also remember first argument left motor speed second argument right motor speed similarly using e command first number returned left encoder count second number right encoder count finally use r e command verify expected encoder count rotating wheel hand roughly one full turn checking reported count configuring rosarduinopython node arduino running required sketch configure side thing pc define robot dimension pid parameter sensor configuration editing yaml file directory rosarduinopythonconfig first move directory roscd rosarduinopythonconfig copy provided config file one modify cp arduinoparamsyaml myarduinoparamsyaml bring copy params file myarduinoparamsyaml favorite text editor start looking like port devttyusb0 baud 57600 timeout 01 rate 50 sensorstaterate 10 usebasecontroller false basecontrollerrate 10 robot drivetrain parameter wheeldiameter 0146 wheeltrack 02969 encoderresolution 8384 pololu 1311 motor gearreduction 10 motorsreversed true pid parameter kp 20 kd 12 kiko 50 accellimit 10 sensor definition example edit robot sensor type one follow case sensitive ping gp2d12 analog digital pololumotorcurrent phidgetsvoltage phidgetscurrent 20 amp dc sensor motorcurrentleft pintype pololumotorcurrent rate motorcurrentright pintype pololumotorcurrent rate irfrontcenter pintype gp2d12 rate 10 sonarfrontcenter pintype ping rate 10 arduinoled pin 13 type digital ratedirection output note use tab yaml file parser barf back try load always use space instead also defining sensor parameter last sensor list doe get comma end line rest must comma let look section file port setting port likely either devttyacm0 devttyusb0 set accordingly megarobogaiapololu arudino sketch connects 57600 baud default polling rate main rate parameter 50 hz default determines fast outside loop run default suffice case event least fast fastest sensor rate defined sensorstaterate determines often publish aggregated list sensor reading sensor also publishes topic rate usebasecontroller parameter set false default set true use base control assuming required hardware also set pid paramters follow basecontrollerrate determines often publish odometry reading defining sensor sensor parameter defines dictionary sensor name sensor parameter name sensor whatever like remember name sensor also become topic name sensor four important parameter pin type rate direction rate defines many time per second want poll sensor example voltage sensor might polled second even everyseconds rate05 whereas sonar sensor might polled 20 time per second type must one listed case sensitive default direction input define output pin set direction explicitly output example arduino led pin 13 turned rate oftimes per second setting drivetrain pid parameter use base controller uncomment set robot drivetrain pid parameter sample drivetrain parameter fordrive wheel 115 apart note us meter distance convert accordingly sample encoder resolution tick per revolution spec pololu 1311 motor set appropriate number motorencoder combination set motorsreversed true find wheel turning backward otherwise set false pid parameter trickier set start sample value sure place robot block sending first twist command launching rosarduinopython node take look launch file arduinolaunch rosarduinopythonlaunch directory see point config file called myarduinoparamsyaml named config file something different change name launch file arduino connected running megarobogaiapololu sketch launch rosarduinopython node parameter roslaunch rosarduinopython arduinolaunch see something like following output processarduino1 started pid 6098 connecting arduino port devttyusb0 connected 57600 arduino ready info walltime 1355498525954491 connected arduino port devttyusb0 57600 baud info walltime 1355498525966825 motorcurrentright rate type pololumotorcurrent pin info etc ping sonar sensor robot defined config file start flashing indicate made connection viewing sensor data see aggregated sensor data echo sensor state topic rostopic echo arduinosensorstate see data particular sensor echo topic name rostopic echo arduinosensorsensorname example sensor called irfrontcenter see data using rostopic echo arduinosensorirfrontcenter also graph range data using rxplot rxplot p 60 arduinosensorirfrontcenterrange sending twist command viewing odometry data place robot block try publishing twist command rostopic pubcmdvel geometrymsgstwist angular z 05 wheel turn direction consistent counterclockwise rotation right wheel forward left wheel backward turn opposite direction set motorsreversed parameter config file opposite current setting kill restart arduinolaunch file stop robot command rostopic pubcmdvel geometrymsgstwist view odometry data rostopic echo odom rxplot p 60 odomposeposepositionxy odomtwisttwistlinearx odomtwisttwistangularz service rosarduinopython package also defines service follows digitalsetdirection set direction digital pin rosservice call arduinodigitalsetdirection pin direction pin pin number direction isfor input andfor output digitalwrite send lowor highsignal digital pin rosservice call arduinodigitalwrite pin value pin pin number value isfor low andfor high servowrite set position servo rosservice call arduinoservowrite id po id index servo defined arduino sketch servosh po position radians314 servoread read position servo rosservice call arduinoservoread id id index servo defined arduino sketch servosh using onboard wheel encoder counter arduino uno firmware support onboard wheel encoder counter arduino uno allows connecting wheel encoders directly arduino board without need additional wheel encoder counter equipment robogaia encoder shield speed code directly addressing specific atmega328p port interrupt making implementation atmega328p arduino uno dependent easy adapt boardsavr chip though use onboard wheel encoder counter connect wheel encoders arduino uno follows left wheel encoder output arduino uno pinleft wheel encoder b output arduino uno pin right wheel encoder output arduino uno pin a4 right wheel encoder b output arduino uno pin a5 make following change rosarduinobridge sketch disable robogaia encoder shield enable onboard one robogaia encoder shield define robogaia encoders directly attached arduino board define arduinoenccounter compile change upload controller using l298 motor driver wiring l298 motor driver arduino board defined motordriverh firmware follow define rightmotorbackwarddefine leftmotorbackwarddefine rightmotorforwarddefine leftmotorforward 10 define rightmotorenable 12 define leftmotorenable 13 wire way change want make sure l298 motor driver defined compile upload firmware note hardware required run base controller follow instruction still use arduinocompatible controller read sensor control pwm servo first need edit rosarduinobridge sketch top file comment line define usebase look like define usebase note using version arduino ide previous 166 also need comment line look like file encoderdriverino include megaencodercounterh look like include megaencodercounterh compile change upload controller next edit myarduinoparamsyaml file make sure usebasecontroller parameter set false,"[('base', 'controller'), ('wheel', 'encoder')]"
zeke/semantic-pull-requests,Other,service longer maintained maintained project kept webservice running several year wa often difficult timeconsuming generally low priority list compared thing like work family final blow wa heroku incident april 2022 heroku githubrelated secret compromised heroku invalidated existing secret disabled support githubrelated integration looking alternative way semantically checking pr see alternative section readme github action way go thanks understanding wish luck journey semantic englightenment love zeke semantic pull request github status check ensures pull request follow conventional commits spec using semanticrelease conventional commit message install probot app repos ensure pull request semantic merge hand wanna check pull request using github action workflow instead see alternative work note default behavior bot police commit message rather ensure every pr ha enough semantic information able trigger release appropriate goal gather semantic information way make life harder project contributor especially newcomer may know amend git commit history default pr title least one commit message need semantic prefix wish change behavior see configuration section scenario status status check message pr title semanticconventional commit type ready squashed commit semantic ready merged rebased nothing semantic add semantic commit pr title example scenario take pr example none commit message semantic pr title status remains yellow img width580 altscreen shot 20180714 at22 58 pm src img width791 altscreen shot 20180714 at22 10 pm src edit pr title adding semantic prefix like fix feat conventional commit type use squash merge squash branch onto master write standardized commit message img width613 altscreen shot 20180714 at23 11 pm src img width785 altscreen shot 20180714 at23 23 pm src installation githubcomappssemanticpullrequests configuration default configuration necessary wish override behavior add semanticyml file github directory following optional setting yml disable validation skip status check creation enabled false yml always validate pr title ignore commits titleonly true yml always validate commits ignore pr title commitsonly true yml always validate pr title commits titleandcommits true yml require least one commit valid relevant using commitsonly true titleandcommits true validate commits default anycommit true yml define list valid scope scope scope1 scope2 yml default type specified commitizenconventionalcommittypes used see override valid type type feat fix doc style refactor perf test build ci chore revert yml allow use merge commits eg github merge branch master featurerideunicorns relevant using commitsonly true titleandcommits true allowmergecommits true yml allow use revert commits eg github revert feat ride unicorn relevant using commitsonly true titleandcommits true allowrevertcommits true alternative project github app install one many repository making convenient choice want use lot different repos even entire github organization full repos github app longer available semantic pr used dropin replacement github app however want control exactly pull request semantically checked consider writing custom action workflow using github action like amannnactionsemanticpullrequest see also github app add empty commit open pull request single commit title wa changed license apache 20 conventional commit type,"[('pr', 'title'), ('pull', 'request')]"
wh200720041/ssl_slam,C++,sslslam lightweight 3d localization mapping solidstate lidar intel realsense l515 example update would like enable save map test localization separately check repo sslslam2 code implementation paper lightweight 3d localization mapping solidstate lidar accepted ieee robotics automation letter 2021 summary video demo found video modifier wang han nanyang technological university singaporesolidstate lidar sensor example 11 scene reconstruction 12 sfm building example 13 localization mapping l515 prerequisite 21 ubuntu ubuntu 64bit 1804 melodic installation 22 cere solver follow cere installation 23 pcl follow pcl installation tested 181 24 octomap follow octomap installation sudo aptget install rosmelodicoctomap 25 trajectory visualization visualization purpose package us hector trajectory sever may install package sudo aptget install rosmelodichectortrajectoryserver alternatively may remove hector trajectory server node trajectory visualization neededbuild 31 clone repository cd catkinwssrc git clone cd catkinmake source catkinwsdevelsetupbash 32 download test rosbag may download recorded data 5gb dont realsense l515 defult file homeuserdownloads unzip file cd downloads unzip downloadsl515testzip 33 launch would like create map time run roslaunch sslslam sslslammappinglaunch create probability map roslaunch sslslam sslslamoctomappinglaunch localization required may refer run roslaunch sslslam sslslamlaunchsensor setup new realsense l515 sensor may follow setup instruction 41 l515 42 librealsense follow librealsense installation 43 realsenseros copy realsenseros package catkin folder cd catkinwssrc git clone cd catkinmake 44 launch roslaunch sslslam sslslaml515launch run sslslammappinglaunch live l515 datacitation use work research may want cite paper citation appreciated articlewang2021lightweight authorh wang c wang l xie journalieee robotics automation letter titlelightweight 3d localization mapping solidstate lidar year2021 volume6 number2 pages18011807 doi101109lra20213060392,"[('localization', 'mapping'), ('roslaunch', 'sslslam')]"
ros-planning/moveit2,C++,moveit motion planning framework rosfor rosrepository see moveiteasytouse open source robotics manipulation platform developing commercial application prototyping design benchmarking algorithm continuous integration status formatting precommit ci rolling humble code coverage getting started see extensive tutorial documentation install binary install source build info get involved development roadmap future release date moveitmigration guideline moveitmigration progress supporter open source project maintained supporter around world see moveit maintainer core contributor href picknik inc leading development moveit would like support project please contact hellopicknikai href port roswas supported rosin rosindustrial qualityassured robot software component information href project ha received funding european union horizon 2020 research innovation programme grant agreement 732287 generate api doxygen documentation see generate api doxygen reference locally buildfarm package humble binary iron binary rolling binary geometricshapes build status build status build status moveit build status build status build status moveitcommon build status build status build status moveitcore build status build status build status moveithybridplanning build status build status build status moveitkinematics build status build status build status moveitmsgs build status build status build status moveitplanners build status build status build status moveitplannersompl build status build status build status moveitplannersstomp build status build status build status moveitplugins build status build status build status moveitresources build status build status build status moveitresourcesfanucdescription build status build status build status moveitresourcesfanucmoveitconfig build status build status build status moveitresourcespandadescription build status build status build status moveitresourcespandamoveitconfig build status build status build status moveitresourcespr2description build status build status build status moveitros build status build status build status moveitrosbenchmarks build status build status build status moveitrosmovegroup build status build status build status moveitrosoccupancymapmonitor build status build status build status moveitrosperception build status build status build status moveitrosplanning build status build status build status moveitrosplanninginterface build status build status build status moveitrosrobotinteraction build status build status build status moveitrosvisualization build status build status build status moveitroswarehouse build status build status build status moveitruntime build status build status build status moveitservo build status build status build status moveitsetupappplugins build status build status build status moveitsetupassistant build status build status build status moveitsetupcontrollers build status build status build status moveitsetupcoreplugins build status build status build status moveitsetupframework build status build status build status moveitsetupsrdfplugins build status build status build status moveitsimplecontrollermanager build status build status build status pilzindustrialmotionplanner build status build status build status pilzindustrialmotionplannertestutils build status build status build status randomnumbers build status build status build status srdfdom build status build status build status warehouseros build status build status build status warehouserossqlite build status build status build status,"[('build', 'status'), ('status', 'build')]"
hybridgroup/artoo,Other,artoo artoo microframework robotics using ruby artoo provides simple yet powerful domainspecific language dsl robotics physical computing want use javascript robot check sister project cylonjs want use go programming language power robot check sister project gobot code climate build status example basic arduino led button using firmata protocol ruby require artoo connection arduino adaptor firmata port devttyacm0 device led driver led pin 13 device button driver button pinwork button push proc ledtoggle end parrot ardrone 20 ruby require artoo connection ardrone adaptor ardrone device drone driver ardrone work dronestart dronetakeoff after25seconds dronehoverland after30seconds dronestop end modular also write modular classoriented code allows control swarm robot ruby require artoorobot spheros 4567 4568 4569 4570 4571 class spherorobot artoorobot connection sphero adaptor sphero device sphero driver sphero work every3seconds spheroroll 90 rand360 end end end robot spheroseach p robot spherorobotnewconnections sphero port p spherorobotworkrobots ruby version supported ruby 21 ruby 20 ruby 193 jruby 174 rubinius 21 rubinius requires 19 mode install rubinius 19 mode using rvm rvm get head rvm install rbx211 19 artoo conceptualy influenced sinatra well borrowing code artoo provides robust actorbased messaging architecture support fully multithreaded operation highconcurrency long supported ruby version executing mean need use jruby rubinius maximum concurrency large extent due built top celluloid celluloidio reel hardware support artoo ha extensible system connecting hardware device following robotics physical computing platform currently supported arduino adaptor ardrone adaptor beaglebone adaptor crazyflie adaptor digispark adaptor joystick adaptor keyboard adaptor leap motion adaptor opencv adaptor pebble adaptor raspberry pi adaptor roomba adaptor spark core adaptor sphero adaptor platform coming soon artoo also ha support device work across multiple hardware platform gpio general purpose inputoutput device driver i2c device driver hardware yet supported artoo want help help u help get touch getting started installation ruby gem install artoo install gem required hardware want use example wanted integrate ps3 controller fly ardrone ruby gem install artoojoystick gem install artooardrone using socket serial commuication required use jruby rubinius ready start programming hardware want connect via serial port directly using mri install hybridgroupserialport gem ruby gem install hybridgroupserialport writing robot code ready write code take look example directory whole bunch code use help get started recommend using tdr testdriven robotics preferred test framework running robot ruby ruby myrobotrb api artoo includes restful api query status robot running within group including connection device status device streaming data via websockets activate api use api command like ruby require artoo connection loop device passthru api host 127001 port 4321 work put hello api running apihostapiport end robot group working view main api page host port specified testdriven robotics artoo make easy test driven development tdd robotic device using favorite ruby test mocking framework example us minitest mocha timecop ruby require testhelper require testrobot describe sphero letrobot artoomainrobotnew let start timenow timecoptravelstart robotwork end timecopreturn end ha work everyseconds robothasworkevery 3secondswontbenil end receives collision event robotexpectscontact robotspheropublishcollision clunk sleep 005 end must roll everyseconds timecoptravelstart 3seconds robotspheroexpectsroll sleep 005 end timecoptravelstart 6seconds robotspheroexpectsroll sleep 005 end end end describe following sphero robot ruby require artoo connection sphero adaptor sphero port 1270014560 device sphero driver sphero def contactargs contact contact put contact contact end work sphero collision contact every3seconds spheroroll 90 rand360 end end repo full example using artoo test driven robotics located cli artoo us gort command line interface cli access important feature right command line call robotops aka devops robotics scan connect update device firmware artoo also ha cli generate new robot use console artoo command artoo console robot run robot using robi console artoo generate subcommand args generates new robot adaptor artoo help command describe available command one specific command artoo install subcommand args installs utility program artoo start robot run robot artoo version display current version console artoo includes console based pry allow interactively debug control robot artoo console exampleshellorb run robi exampleshellorb 20130703t171135793913 5527 info registering connection loop 20130703t171135794939 5527 info preparing work robi start starting main robot 20130703t171148950888 5527 info initializing connection loop 20130703t171148955804 5527 info starting work 20130703t171148956152 5527 info connecting loop port robi list robi hello hello hello robi stop stopping robot robi exit 20130703t171204413060 5527 debug terminatingactors 20130703t171204414300 5527 debug shutdown completed cleanly generator want integrate hardware device artoo support yet generator easily generate new skeleton artoo adaptor help get started simply run artoo generate adaptor command generator create new directory file place new adaptor gem artoo generate adaptor awesomedevice creating artooawesomedevice adaptor create artooawesomedevice exist artooawesomedevice create artooawesomedevicegemfile create artooawesomedevicelicense create artooawesomedevicereadmemd create artooawesomedevicerakefile create artooawesomedeviceartooawesomedevicegemspec create artooawesomedevicelibartooawesomedevicerb create artooawesomedevicelibartooawesomedeviceversionrb create artooawesomedevicelibartooadaptorsawesomedevicerb create artooawesomedevicelibartoodriversawesomedevicerb create artooawesomedevicetestadaptorsawesomedeviceadaptortestrb create artooawesomedevicetestdriversawesomedevicedrivertestrb create artooawesomedevicetesttesthelperrb done documentation check documentation lot information use artoo want help u documentation site go artooio branch follow instruction irc need help want say hello come visit u irc freenode artoo contributing patch must provided apache 20 license please use option git sign commit work providing apache 20 license submit github pull request appropriate branch ideally discus change u irc look patch test give feedback avoid minor whitespace change renamings etc along merged content done maintainer time time complicate merges done seperately take care maintain existing coding style add unit test new changed functionality pull request fast forward commits use git rebase local change may need use git stash git help see progit awesome free book git c 20122016 hybrid group,"[('ruby', 'require'), ('end', 'end')]"
symforce-org/symforce,C++,open internship interested contributing symforce visit program page learn feature symbolic implementation geometry camera type lie group operation code generation fast native runtime code symbolic expression reducing duplication minimizing bug novel tool compute fast correct tangentspace jacobians expression avoiding handwritten derivative strategy flattening computation leveraging sparsity yield 10x speedup standard autodiff fast tangentspace optimization library c python based factor graph rapid prototyping analysis complex problem symbolic math seamless workflow production use embeddedfriendly c generation templated eigen code zero dynamic memory allocation highly performant modular tested extensible code read paper import symforcesymbolic sf sfrot3 installs precompiled c component symforce linux mac using pip wheel doe include c header want compile c symforce type like symoptimizer currently need build source tutorial let walk simple example modeling solving optimization problem symforce example robot move 2d plane goal estimate pose multiple time step given noisy measurement robot measure distance traveled odometry sensor relative bearing angle known landmark scene robot heading angle defined counterclockwise xaxis relative bearing measurement defined robot forward direction explore math import symforce symbolic api contains augmented sympy api well geometry camera type python import symforcesymbolic sf create symbolic 2d pose landmark location using symbolic variable let u explore build math pure form python pose sfpose2 tsfv2symbolict rsfrot2symbolicr landmark sfv2symbolicl let transform landmark local frame robot choose represent pose worldtbody meaning take landmark world frame get position body frame python landmarkbody poseinverse landmark beginbmatrix rre l0 rim l1 rim t1 rre t0 rim l0 rre l1 rim t0 rre t1 endbmatrix see sfrot2 represented internally complex number im study rotates landmark exploration purpose let take jacobian bodyframe landmark respect tangent space pose2 parameterized x python landmarkbodyjacobianpose beginbmatrix l0 rim l1 rre t0 rim t1 rre rre rim l0 rre l1 rim t0 rre t1 rim rim rre endbmatrix note even though orientation stored complex number tangent space scalar angle symforce understands compute relative bearing angle python sfatan2landmarkbody1 landmarkbody0 atan2rim l0 rre l1 rim t0 rre t1 rre l0 rim l1 rim t1 rre t0 one important note atan2 singular at0 symforce handle placing symbol epsilon preserve value expression limit ofbut allows evaluating runtime small nonzero value function singularity accept epsilon argument python sfv3symbolicxnormepsilonsfepsilon sqrtx02 x12 x22 epsilon see epsilon tutorial symforce doc information build optimization problem model problem factor graph solve nonlinear leastsquares first need tell symforce use nonzero epsilon prevent singularity necessary playing around symbolic expression like important want numerically evaluate result information check epsilon tutorial need python import symforce symforcesetepsilontosymbol need done part symforce imported following along notebook add top restart kernel epsilon set instantiate numerical value problem including initial guess unknown pose set identity python import numpy np symforcevalues import value numposesnumlandmarks initialvalues value posessfpose2identity numposes landmarkssfv22sfv21sfv25 distances17 14 anglesnpdeg2rad145 335 55 185 310 70 215 310 70tolist epsilonsfnumericepsilon next set factor connecting variable residual function comprises two term one bearing measurement one odometry measurement let formalize math defined bearing measurement symbolic residual function python def bearingresidual pose sfpose2 landmark sfv2 angle sfscalar epsilon sfscalar sfv1 tbody poseinverse landmark predictedangle sfatan2tbody1 tbody0 epsilonepsilon return sfv1sfwrapanglepredictedangle angle function take pose landmark variable return error predicted bearing angle measured value note call sfwrapangle angle difference prevent wraparound effect residual distance traveled even simpler python def odometryresidual posea sfpose2 poseb sfpose2 dist sfscalar epsilon sfscalar sfv1 return sfv1posebt poseatnormepsilonepsilon dist create factor object residual function set key key named string function argument accessed name value class later instantiate numerical quantity python symforceoptfactor import factor factor bearing factor rangenumposes j rangenumlandmarks factorsappendfactor residualbearingresidual keysfposesi flandmarksj fanglesij epsilon odometry factor rangenumposes factorsappendfactor residualodometryresidual keysfposesi fposesi fdistancesi epsilon visualization structure factor graph solve problem goal find pose robot minimize residual factor graph assuming landmark position world known create optimizer factor tell optimize pose key rest held constant python symforceoptoptimizer import optimizer optimizer optimizer factorsfactors optimizedkeysfposesi rangenumposes save information iteration visualize later debugstatstrue run optimization return optimizerresult object contains optimized value error statistic periteration debug stats enabled python result optimizeroptimizeinitialvalues check optimization succeeded look final error python assert resultstatus optimizerstatussuccess printresulterror let visualize optimizer orange circle represent fixed landmark blue circle represent robot dotted line represent bearing measurement python symforceexamplesrobot2dlocalizationplotting import plotsolution plotsolutionoptimizer result code example also found symforceexamplesrobot2dlocalization symbolic v numerical type symforce provides sym package runtime code geometry camera type generated symbolic geo cam package multiple version class like pose3 common source confusion canonical symbolic class sfpose3 life symforce package python sfpose3identity autogenerated python runtime class sympose3 life sym package python import sym sympose3identity autogenerated c runtime class sympose3 life sym namespace c sympose3identity matrix type symbolic code sfmatrix generated python numpyndarray c eigenmatrix symbolic class also handle numerical value dramatically slower generated class symbolic class must used defining function codegen optimization generated function always accept runtime type codegen factor object require symbolic type function math generate code however code generated numerical type used invoking generated function initial value calling optimizer convenience python optimizer class accept symbolic type value convert numerical type invoking generated function done tutorial example simplicity generate runtime c code let look hood understand optimization worked factor symforce introspects form symbolic function pass symbolic input build output expression automatically computes tangentspace jacobians output expression wrt optimized variable generates fast runtime code codegen class central tool generating runtime code symbolic expression case pas bearing residual function configure generate c code python symforcecodegen import codegen cppconfig codegen codegenfunctionbearingresidual configcppconfig create another codegen object computes gaussnewton linearization codegen object doe introspecting symbolically differentiating given argument python codegenlinearization codegenwithlinearization whichargspose generate c function computes linearization wrt pose argument python metadata codegenlinearizationgeneratefunction printopenmetadatageneratedfiles0read c code depends eigen computes result single flat function share common subexpressions c pragma include include namespace sym function wa autogenerated symbolic function modify hand symbolic function bearingresidual args pose pose2 landmark matrix21 angle scalar epsilon scalar output matrix11 jacobian 1x3 jacobian wrt arg pose hessian 3x3 gaussnewton hessian arg pose rh 3x1 gaussnewton rh arg pose template void bearingfactorconst sympose2 pose const eigenmatrix landmark const scalar angle const scalar epsilon eigenmatrix const nullptr eigenmatrix const jacobian nullptr eigenmatrix const hessian nullptr eigenmatrix const rh nullptr total ops 66 input array const eigenmatrix pose posedata intermediate term 24 const scalar tmp0 pose1 pose2 const scalar tmp1 pose0 pose3 const scalar tmp2 pose0 landmark1pose1 landmark0 const scalar tmp3 tmp0 tmp1 tmp2 const scalar tmp4 pose0 pose2 pose1 pose3 const scalar tmp5 pose1 landmark1 const scalar tmp6 pose0 landmark0 const scalar tmp7 tmp4 tmp5 tmp6 const scalar tmp8 tmp7 epsilon tmp7tmp7 scalar05 const scalar tmp9 angle stdatan2tmp3 tmp8 const scalar tmp10 tmp9scalarmpi stdfloorscalar1 scalar2 tmp9 scalarmpi scalarmpi const scalar tmp11 scalar10 tmp8 const scalar tmp12 stdpowtmp8 scalar2 const scalar tmp13 tmp3 tmp12 const scalar tmp14 tmp11 tmp4 tmp5 tmp6 tmp13 tmp0 tmp1 tmp2 const scalar tmp15 tmp12 stdpowtmp3 scalar2 const scalar tmp16 tmp12 tmp15 const scalar tmp17 tmp14 tmp16 const scalar tmp18 pose0 tmp13 pose1 tmp11 const scalar tmp19 tmp16 tmp18 const scalar tmp20 pose0 tmp11 pose1 tmp13 const scalar tmp21 tmp16 tmp20 const scalar tmp22 stdpowtmp8 scalar4 stdpowtmp15 scalar2 const scalar tmp23 tmp18 tmp22 output term nullptr eigenmatrix res0tmp10 jacobian nullptr eigenmatrix jacobian jacobian jacobian0tmp17 jacobian0tmp19 jacobian0tmp21 hessian nullptr eigenmatrix hessian hessian hessian0stdpowtmp14 scalar2 tmp22 hessian00 hessian00 hessian1tmp14 tmp23 hessian1stdpowtmp18 scalar2 tmp22 hessian10 hessian2tmp14 tmp20 tmp22 hessian2tmp20 tmp23 hessian2stdpowtmp20 scalar2 tmp22 rh nullptr eigenmatrix rh rh rhs0tmp10 tmp17 rhs1tmp10 tmp19 rhs2tmp10 tmp21 namespace sym symforce also generate runtime python code depends numpy code generation system written pluggable jinja template minimize work add new backend language top candidate add typescript cuda pytorch optimize c generate c function residual function also run optimization purely c get python entirely loop production use c const int numposesconst int numlandmarks stdvector factor bearing factor int ii numposes int jj numlandmarks j factorspushbacksymfactorhessian symbearingfactor p l j j e key p key optimize odometry factor int ii numposesi factorspushbacksymfactorhessian symodometryfactor p p e key p p key optimize const auto params symdefaultoptimizerparams symoptimizer optimizer params factor symkdefaultepsilon symvalues value int ii numposes valuesset p sympose2didentity set additional value valuesset l eigenvector2d2valuesset l eigenvector2d1valuesset l eigenvector2d5valuesset 17 valuesset 14 const stdarrayangles 55 245 35 95 220 20 125 220 20 int ii anglessize int jj angles0size j valuesset j anglesij mpi 180 valuesset e symkdefaultepsilond optimize const auto stats optimizeroptimizevalues stdcout exit status statsstatus stdendl stdcout optimized value value stdendl tutorial show central workflow symforce creating symbolic expression generating code optimizing approach work well wide range complex problem robotics computer vision applied science however piece may also used independently optimization machinery work handwritten function symbolic math code generation useful outside optimization context learn visit symforce tutorial build source best result build latest tagged release also build main another branch everything le guaranteed work symforce requires python 38 later build currently tested linux macos symforce window untested see 145 strongly suggest creating virtual python environment install gmp package one bash apt install libgmpdev ubuntu brew install gmp mac conda install c condaforge gmp conda symforce contains c python code c code built using cmake build package either calling pip calling cmake directly building pip call cmake hood run cmake build c component encounter build issue please file issue build pip want build install symforce without repeatedly modifying source recommended way pip symforce directory bash pip install modifying symforce python source editable install instead let modify python component symforce without reinstalling going repeatedly modify c source instead build cmake directly described symforce directory bash pip install e verify installationverifyyourinstallation note pip install install pinned version symforce dependency install compatible version also install package required run symforce test build target eg building doc running linters want package required pip install dev instead one group extra requirement setuppy additionally want pinned version dependency exact version guaranteed ci pas test install pip install r devrequirementstxt note editable installs root system python ubuntu debian derivative broken setuptools6400 bug debian something symforce fix situation either use virtual environment upgrade setuptools version 6400 use different installation method build cmake modifying c part symforce build cmake directly instead method install symforce python environment need add pythonpath separately install python requirement bash pip install r devrequirementstxt build symforce requires c14 later bash mkdir build cd build cmake make j nproc need add symforce along genpython thirdpartyskymarshal within symforce lcmtypespython27 within build directory pythonpath order use example bash export pythonpathpythonpathpathtosymforcepathtosymforcebuildlcmtypespython27 want install symforce use c library another cmake project bash make install symforce doe currently integrate cmake findpackage see 209 currently need add library link dependency cmake project manually verify installation python import symforce symforcegetsymbolicapi symengine symforce import ccsym see sympy instead symengine import ccsym installation probably broken submit issue license symforce released apache 20 license see license file information sponsor symforce developed maintained skydio released free opensource library robotics community contributing symforce already power ten thousand robot skydio public library new releasing beta stage beginning excited engagement community thank helping u develop symforce best way get started file issue bug desired feature many feature excited add symforce would love see contributed community outlined issue major desired contribution add backend language typescript glslhlsl improvement experimental cuda pytorch backends support webassembly compilation lie group type particular sim3 support constraint optimizer integration ispc window conda package,"[('const', 'scalar'), ('nullptr', 'eigenmatrix')]"
uzh-rpg/rpg_quadrotor_control,C++,rpg quadrotor control license rpg quadrotor control repository provides package intended used research code expect change often fitness particular purpose disclaimed source code released mit license instruction instruction installation usage software provided along detail wiki question problem framework please use issue tracker summary repository contains complete framework flying quadrotors based control algorithm developed robotics perception group also provide interface rotor gazebo plugins use algorithm simulation together provided simple trajectory generation library used test sofware entirely simulation also provide utility command quadrotor gamepad framework well calibration routine compensate varying battery voltage finally provide interface communicate flight controller used firstpersonview racing theory behind included algorithm summarized theory document contained repository well ral18 paper technical report attached detail well ral17 paper repository make use basic functionality rpgquadrotorcommon repository working real hardware gpio adc functionality rpgsingleboardio repository might come handy publication use work academic context please cite following two ral publication faessler franchi scaramuzza differential flatness quadrotor dynamic subject rotor drag accurate tracking highspeed trajectory ieee robot autom lett ral volnopp 620626 apr 2018 pdf articlefaessler18ral author matthias faessler antonio franchi davide scaramuzza title differential flatness quadrotor dynamic subject rotor drag accurate tracking highspeed trajectory journal ieee robot autom lett year 2018 volume number page 620626 month apr doi 101109lra20172776353 issn 23773766 faessler falanga scaramuzza thrust mixing saturation bodyrate control accurate aggressive quadrotor flight ieee robot autom lett ral volnopp 476482 apr 2017 pdf articlefaessler17ral author matthias faessler davide falanga davide scaramuzza title thrust mixing saturation bodyrate control accurate aggressive quadrotor flight journal ieee robot autom lett year 2017 volume number page 476482 month apr doi 101109lra20162640362 issn 23773766 watch video demonstrating done control algorithm repository differential flatness quadrotor dynamic subject rotor drag video teaser presentation icra 2018 icra 2018 video teaser differential flatness quadrotor dynamic subject rotor drag,"[('differential', 'flatness'), ('flatness', 'quadrotor')]"
MRPT/mrpt,C++,mrpt project source 33 window precompiled version executables ex dlls development library h libs included nightly built window installer 34 ros1ros2 package mrpt also shipped ros1 ros2 package named mrpt2 installed via bash sudo apt install rosrosdistromrpt2 mrpt2 status build farm distro develop branch stable release next build ros1 noetic u2004 build status version build status ros2 humble u2204 build status version build status ros2 iron u2204 build status version build status ros2 rolling u2204 build status version build status eol distro last release ros1 melodic u1804 version ros2 foxy u2004 version license mrpt released new bsd license contributor href source 33 window precompiled version executables ex dlls development library h libs included nightly built window installer 34 ros1ros2 package mrpt also shipped ros1 ros2 package named mrpt2 installed via bash sudo apt install rosrosdistromrpt2 mrpt2 status build farm distro develop branch stable release next build ros1 noetic u2004 build status version build status ros2 humble u2204 build status version build status ros2 iron u2204 build status version build status ros2 rolling u2204 build status version build status eol distro last release ros1 melodic u1804 version ros2 foxy u2004 version license mrpt released new bsd license contributor href img src version repository repology,"[('build', 'status'), ('status', 'version')]"
askrella/whatsapp-chatgpt,Other,gpt dalle whatsapp ai assistant docker prettier license mit discord invite whatsapp bot us openai gpt dalleto respond user input talk bot voice message bot transcribe respond robot disclaimer operation performed bot free charged openai request make bot us puppeteer run real instance whatsapp web avoid getting blocked note guarantee blocked using method although doe work whatsapp doe allow bot unofficial client platform considered completely safe contributor used library,"[('bot', 'us'), ('gpt', 'dalle')]"
rtv/Stage,C++,stage simulator stage readme file containing introduction license citation information stage 25d robotics standalone simulator also used c library build simulation environment uptodate documentation found release note see releasetxt installation note see installtxt copyright richard vaughan contributor 19982011 part player project build status license program free software redistribute andor modify term gnu general public license versionas published free software foundation program distributed hope useful without warranty without even implied warranty merchantability fitness particular purpose see gnu general public license detail copy license included sourcecode file copying copying redistribution permitted term license introduction stage robot simulator provides virtual world populated mobile robot sensor along various object robot sense manipulate three way use stage stage program standalone robot simulation program load robot control program library provide stage plugin player libstageplugin provides population virtual robot popular player networked robot interface system write simulator libstage c library make easy create run customize stage simulation inside program model stage provides several sensor actuator model including sonar infrared ranger scanning laser rangefinder colorblob tracking fiducial tracking bumper grippers mobile robot base odometric global localization design stage wa designed multiagent system mind provides fairly simple computationally cheap model lot device rather attempting emulate device great fidelity design intended useful compromise conventional highfidelity robot simulation minimal simulation described jakobiand gridworld simulation common artificial life researchwe intend stage realistic enough enable user move controller stage robot real robot still fast enough simulate large population also intend stage comprehensible undergraduate student yet sophisticated enough professional reseachers player also contains several useful virtual device including sensor preprocessing sensorintegration algorithm help rapidly build powerful robot controller easy use stage citation use stage work appreciate citation time writing suitable reference either richard vaughan massively multiple robot simulation stage swarm intelligence 224189208 2008 springer download pdf using playerstage brian gerkey richard vaughan andrew howard playerstage project tool multirobot distributed sensor system proceeding 11th international conference advanced robotics page 317323 coimbra portugal june 2003 icar 03 download pdf please help u keep track used correctly naming playerstage component use player used called player player stage used together referred playerstage system playerstage stage used without player called stage stage library used create custom simulator called libstage stage library player used 3d odebased simulation backend gazebo called playergazebo gazebo without player gazebo software part player project support funding stage ha provided part darpa usa nasa usa nserc canada drdc suffield canada nsf usa simon fraser university canada name name player stage inspired line world stage men woman merely player like william shakespeare referencesnick jakobi 1997 evolutionary robotics radical envelope noise hypothesis adaptive behavior volumeissuepp325 368stuart wilson 1985 knowledge growth artificial animal proceeding first international conference genetic agorithms application hillsdale new jersey pp1623,"[('richard', 'vaughan'), ('use', 'stage')]"
automagica/automagica,Python,automagica automagica project began 2018 focus creating open source software ensure robotic process automation technology accessible subsequent release automagica advanced feature wand portal required service infrastructure deliver resilient robot advanced service management control use service ha increased cost hosting maintaining service layer correspondingly increased order drive next phase development important service today 13th october 2020 pleased announce netcall plc leading provider lowcode customer engagement contact centre software ha acquired oakwood technology bv trading automagica netcall integrate automagicas rpa liberty platform providing powerful combination rpa lowcode customer engagement solution automagica robot longer available term agpl3 licence stopping use service robot already deployed continue operate wand ocr free charge three month today 13 oct 20 existing user automagica portal also able access free charge three month time user offered option migrate commercial service wish thank contributor project love automagica example component automagica suite consists following component automagica bot runtimeagent responsible performing automated task automagica flow visual flow designer build automation quickly full support python code automagica wand ui element picker powered ai automagica lab notebookstyle automation development environment based jupyter notebook requires jupyter installed automagica portal management bot credential automation log portal flow example browser working excel excel example automagica activity overview official automagica activity process description cryptography random key licensing copyright licensing source code file repository unless stated otherwise copyright netcall plc commercial license information licensing trial commercial use see page,"[('use', 'service'), ('netcall', 'plc')]"
ftctechnh/ftc_app,Other,notice repository contains v50 ftc sdk version pushed looking current version ftc sdk software please visit ftcrobotcontroller github repository ftcrobotcontroller repository v50 ha also posted release posted 201920 season gitgithub designed store large binary blob ftcapp repository ha grown 1gb doe violate github usage policy put undue burden user repository download foreseeable future season specific version repository hosted url different approach prevent size problem recurring evaluated ftc technology team realize creates problem team maintained history software within ftcapp workspace appreciate patience understanding work migrate permanent solution welcome github repository contains source code used build android app control first tech challenge competition robot use sdk downloadclone entire project local computer new first tech challenge software control system visit online wiki learn install configure use software control system note wiki evergreen document constantly updated edited contains current information first tech challenge software control system downloading project important note repository large take long time use lot space download would like save time space option choose download current version android project folder git user first recommends use depth command line argument clone current version repository git clone depth1 prefer use download zip button available main repository page downloading project zip file keep size download manageable also download project folder zip targz archive file downloads subsection release page repository downloaded uncompressed needed folder use android studio import folder import project eclipse adt gradle etc getting help user documentation tutorial first maintains online wiki information tutorial use first tech challenge software robot control system access wiki following address javadoc reference material javadoc reference documentation ftc sdk available online visit following url view ftc sdk documentation live website documentation ftc sdk also included repository subfolder called doc contains several subfolders folder apk contains apk file ftc driver station ftc robot controller apps folder javadoc contains javadoc user documentation ftc sdk online user forum technical question regarding sdk please visit ftc technology forum release information version 50 built 190614 support rev robotics control hub add java preview pane block editor add new offline export feature block editor display wifi channel network circle driver station add calibration logitech c270 update build tooling target sdk compliance google permission infrastructure required build tooling update keep alives mitigate motorola wifi scanning problem telemetry substitute longer necessary improves vuforia error reporting fix ftctechnhftcapp issue 621 713 miscellaneous bug fix improvement release information version 43 built 181031 includes missing tensorflowrelated library file release information version 42 built 181030 includes fix avoid deadlock situation watchdogmonitor could result usb communication error comm error appeared require user disconnect usb cable restart robot controller app recover robotcontrollerlogtxt would error message included word e robotcore lynx xmit lock abandoning lock includes fix correctly list parent module address rev robotics expansion hub configuration xml file bug version 40 41 would incorrect list address module parent rev robotics device parent module higher address value daisychained module bug would prevent robot controller communicating downstream expansion hub added requirement accesscoarselocation allow driver station running android oreo scan wifi direct device added google repo buildgradle aapt2 must downloaded google repository beginning version 32 android gradle plugin important note android studio user need connected internet first time build ftcapp project internet connectivity required first build appropriate file downloaded google repository user need connected internet subsequent build also fix buid issue android studio would complain could find comandroidtoolslintlintgradle2614 similar added support rev spark mini motor controller part configuration menu servopwm port rev expansion hub provide example playing audio file op mode block development tool change includes fix problem velocity block reported ftc technology forum block programming subforum change save completed successfully message white color contrast green background fixed download image feature work text block op mode introduce support google tensorflow lite technology object detetion 20182019 game tensorflow lite recognize gold mineral silver mineral 20182019 game example java block op mode included show determine relative position gold block left center right release information version 41 released 180924 change include fix prevent crash deprecated configuration annotation used change allow ftc robot controller apk autoupdated using first global control hub update script removed sample non supported non legal hardware improvement telemetryadddata block text socket updated block sample op mode list include rover ruckus vuforia example update sdk library version number release information version 40 released 180912 change include initial support uvc compatible camera uvc camera ha unique serial number rc detect enumerate serial number uvc camera lack unique serial number rc support one camera type connected calibration setting camera included see teamcodesrcmainresxmlteamwebcamcalibrationsxml detail user upload calibration file program manage web interface uvc camera seem draw fair amount electrical current usb bus doe appear present problem rev robotics control hub doe seem create stability problem using camera android phonebased robot controller ftc tech team investigating option mitigate issue phonebased robot controller updated sample vuforia navigation vumark op mode demonstrate use internal phonebased camera external uvc webcam support improved motor control rev robotics expansion hub firmware 18 greater support feed forward mechanism closed loop motor control ftc sdk ha modified support pidf coefficient proportional integral derivative feed forward ftc block development tool modified include pidf programming block deprecated older pidrelated method variable rev 18x pidfrelated change provide linear accurate way control motor wireless added 5ghz support wireless channel changing device support tested moto g5 e4 phone also tested currently nonapproved phone samsung galaxy s8 improved expansion hub firmware update support robot controller app change make system robust firmware update process performed robot controller app user longer ha disconnect downstream daisychained expansion hub updating expansion hub firmware user updating expansion hub firmware usb connection heshe doe disconnect rs485 connection expansion hub user still must use usb connection update expansion hub firmware user cannot update expansion hub firmware downstream device daisy chained rs485 connection expansion hub accidentally get bricked robot controller app likely recognize hub scan usb bus robot controller app able detect expansion hub even accidentally wa bricked previous update attempt robot controller app able install firmware onto hub even accidentally wa bricked previous update attempt resiliency ftc software detect enable ftdi reset feature available rev robotics v18 expansion hub firmware greater enabled expansion hub detect communicated robot controller ftdi usb connection hub heard robot controller reset ftdi connection action help system recover esdinduced disruption various fix improve reliability ftc software block fixed error string list index block export java support usb connected uvc webcam refactored optimized block vuforia code support rover ruckus image target added programming block support pidf proportional integral derivative feed forward motor control added formatting option telemetry miscellaneous category user set many decimal place display numerical value support play audio file uploaded block web interface driver station addition robot controller fixed bug download image block feature support rev robotics blinkin led controller support rev robotics 2m distance sensor added support rev touch sensor longer configure generic digital device added block dcmotorex method enhanced method use supported motor controller hardware rev robotics expansion hub support enhanced method enhanced method include method getset motor velocity encoder pulse per second getset pidf coefficient etc modest improvement logging decrease frequency battery checker voltage statement removed nonftc related log statement wherever possible introduced match logging feature setting user enabledisable feature disabled default enabled user provides match number driver station user interface top screen match number used create log file specifically log statement particular op mode run match log file stored sdcardfirstmatlogs robot controller op mode run complete match number cleared convenient way create separate match log statement related specific op mode run new device support rev robotics blinkin led controller support rev robotics 2m distance sensor added configuration option rev 201 hd hex motor added support rev touch sensor longer configure generic digital device miscellaneous fixed error definition acceleration velocity javadoc documentation added ability play audio file driver station user configuring expansion hub led expansion hub change blink pattern purplecyan indicate hub currently configured renamed i2csensortype i2cdevicetype added external sample op mode demonstrates localization using 20182019 rover ruckus presented qualcomm vuforia target added external sample op mode demonstrates use rev robotics 2m laser distance sensor added external sample op mode demonstrates use rev robotics blinkin led controller recategorized external java sample op mode teleop instead autonomous known issue initial support uvc compatible camera uvc camera seem draw significant amount current usb bus doe appear present problem rev robotics control hub doe seem create stability problem using camera android phonebased robot controller ftc tech team investigating option mitigate issue phonebased robot controller might possible deadlock cause rc become unresponsive using uvc webcam nougat android robot controller wireless user selects wireless channel channel doe necessarily persist phone power cycled tech team hoping eventually address issue future release issue ha present since apps introduced ie new v40 release wireless channel currently displayed wifi direct connection miscellaneous blink indication feature show expansion hub currently configured doe work newly created configuration file user ha first save newly created configuration file close reedit file order blink indicator work release information version 36 built 171218 change include block change us updated google blockly software allow user edit op mode apple io device including ipad iphone improvement block tool handle corrupt op mode file autonomous op mode longer get switched back teleop reopening edited system detect type mismatch runtime alert user message driver station updated javadoc documentation setpower method reflect correct range valuesto modified vuforialocalizerimpl allow user rendering frame added useroverrideable onrenderframe method get called class renderframe method release information version 35 built 171030 change version 35 include introduced fix prevent random op mode stop occur robot controller app ha paused resumed example user temporarily turn display robot controller phone turn screen back introduced fix prevent random op mode stop previously caused random peer disconnect event driver station fix issue log file would closed pause rc reopened upon resume fix issue battery handler voltage startstop race fix issue android studio generated op mode would disappear available list certain situation fix problem onbot java would build rev robotics control hub fix problem onbot java would build date time robot controller device wa rewound set earlier datetime improved error message onbot java occurs renaming file fails removed unneeded resource androidjar binary used onbot java reduce final size robot controller app added mranalogtouchsensor block block programming tool release information version 34 built 170906 change version 34 include added telemetryupdate statement blanklinearopmode template renamed sample block op mode consistent java sample added additional sample block op mode reworded onbot java readme slightly version 33 built 170904 version software includes improves ftc block programming tool onbot java programming tool change verion 33 include android studio ftcapp project ha updated use gradle plugin 233 android studio ftcapp project already using gradle 35 distribution robot controller log ha renamed sdcardrobotcontrollerlogtxt note change wa actually introduced w v32 improvement i2c reliability optimized i2c read rev expansion hub v17 firmware greater updated externalsamples available onbot android project folder vuforia added support vumarks used 20172018 season game block update latest google blockly release sample op mode selected template creating new op mode fixed bug block would disappear temporarily mouse button held added block rangeclip rangescale user disableenable block op mode fix prevent occasional block deadlock onbot java significant improvement autocomplete function onbot java editor sample op mode selected template creating new op mode fix change complete hardware setup feature updated useful onbot welcome message known issue android studio updating new v33 android studio project folder get error message indicating invalidvirtualfileaccessexception might need fileinvalidate cache restart clear error onbot java sometimes push build button build op mode rc return error message build failed press build button second time build typically suceeds version 32 built 170802 version software introduces onbot java development tool similar ftc block development tool ftc onbot java development tool allows user create edit build op mode dynamically using javascriptenabled web browser onbot java development tool integrated development environment ide served robot controller op mode created edited using javascriptenabled browser google chromse recommended op mode saved robot controller android device directly onbot java development tool provides java programming environment doe need android studio change version 32 include enhanced webbased development tool introduction onbot java development tool webbased programming management feature always user longer need put robot controller programming mode webbased management interface user change robot controller name also easily download robot controller log file onbot java block management feature available web based interface block programming development tool changed lynxi2ccolorrangesensor block rev colorrange sensor block fixed tooltip colorsensorislighton block added block colorsensorgetnormalizedcolors lynxi2ccolorrangesensorgetnormalizedcolors added example op mode digital touch sensor rev robotics color distance sensor user selectable color theme includes many minor enhancement fix numerous list known issue auto complete function incomplete doe support following access via keyword access via super keyword member super cloass overridden class method provided current class inner class handle casted object object coming parenthetically enclosed expression version 310 built 170509 version software provides support rev robotics expansion hub version also includes improvement usb communication layer effort enhance system resiliency using 2x version software previously updating version 31 requires also update driver station software addition updating robot controller software also note version 310 software setmaxspeed getmaxspeed method longer available deprecated removed sdk also note new 3x software incorporates motor profile user select heshe configures robot change include block change added vuforiatrackabledefaultlistenergetpose vuforiatrackpose block added optimized block support vuforia extended tracking added atan2 block math category added usecompetitionfieldtargetlocations parameter vuforiainitialize block set false target location placed 000 target orientation specified tutorial op mode incorporates additional improvement usb comm layer improve system resiliency recover greater number communication disruption additional note regarding version 300 built 170413 addition release change listed see section labeled version 300 built 1704013 version 300 ha following important change version 300 software us new version ftc robocol robot protocol upgrade v30 robot controller andor android studio side must also upgrade driver station software match new robocolversion 300 software remove setmaxspeed getmaxspeed method dcmotor class op mode formerly used method need remove referencescalls method instead v30 provides max speed information use motor profile selected user robot configurationversion 300 software currently doe mechanism disable extra i2c sensor hope reintroduce function release near future version 300 built 170413 use version software risk software released alpha version use version risk prerelease software contains significant change including change wifi direct pairing mechanism rewrite i2c sensor class change usbftdi layer introduction support rev robotics expansion hub rev robotics colorrangelight sensor change implemented improve reliability resiliency ftc control system please note however version 300 considered alpha code code released first community opportunity test new rev expansion hub electronics module becomes available may developer recommend using code critical application ie competition use use version software risk change include major rework sensorrelated infrastructure includes rewriting sensor class implement synchronous i2c communication fix reset autonomous timer back 30 second implementation specific motor profile approved 12v motor includes tetrix andymark matrix rev model modest improvement enhance wifi p2p pairing fix telemetry log addition race publishes source select includes block programming improvement addition optimized vuforia block auto scrollbar project sound page fixed block paste bug block execute whileopmodeisactive loop allow cleanup exiting op mode added gyro integratedzvalue block fix bug project page firefox browser added isspeaking block androidtexttospeech implement support rev robotics expansion hub implement support integral rev imu physically installed i2c bususes bosch bno055axis absolute orientation sensor adafruit 9dof ab orientation sensor implement support rev colorrangelight sensor provides support update expansion hub firmware ftc sdk detects rev firmware version record log file includes support rev control hub note rev control hub yet approved ftc use implement ftc block programming support rev expansion hub sensor hardware detects alert i2c device disconnect version 262 built 170107 added null pointer check calling modetobyte finishmodeswitchifnecessary method modernroboticsusbdcmotorcontroller class change enhance modern robotics usb protocol robustness version 261 released 161219 block programming mode change fix correct issue exception wa thrown opticaldistancesensor object appears twice hardware map second time lightsensor version 26 released 161216 fix gyro class improve decrease sensor refresh latency fix iscalibrating issue block programming mode change block ignores device configuration xml name empty device work configuration work fine version 25 internal release released 161213 block programming mode change added block support adafruitbno055imu added download op mode button ftcbockshtml added support copying block one opmode pasting opmode clipboard content stored phone programming mode server must running modified utility section toolbox programming mode display information active connection fixed paste location workspace ha scrolled added block support android accelerometer fixed issue block upload op mode truncated name first dot added block support android soundpool added type safety block acceleration added type safety block adafruitbno055imuparameters added type safety block analoginput added type safety block angularvelocity added type safety block color added type safety block colorsensor added type safety block compasssensor added type safety block crservo added type safety block digitalchannel added type safety block elapsedtime added type safety block gamepad added type safety block gyrosensor added type safety block irseekersensor added type safety block led added type safety block lightsensor added type safety block linearopmode added type safety block magneticflux added type safety block matrixf added type safety block mri2ccompasssensor added type safety block mri2crangesensor added type safety block opticaldistancesensor added type safety block orientation added type safety block position added type safety block quaternion added type safety block servo added type safety block servocontroller added type safety block telemetry added type safety block temperature added type safety block touchsensor added type safety block ultrasonicsensor added type safety block vectorf added type safety block velocity added type safety block voltagesensor added type safety block vuforialocalizerparameters added type safety block vuforiatrackable added type safety block vuforiatrackables added type safety block enums adafruitbno055imuparameters added type safety block androidaccelerometer androidgyroscope androidorientation androidtexttospeech version 24 released 161113 fix avoid crashing nonexistent resource block programming mode change added block support openglmatrix matrixf vectorf added block support angleunit axesorder axesreference cameradirection cameramonitorfeedback distanceunit tempunit added block support acceleration added block support linearopmodegetruntime added block support magneticflux position fixed typo made block elapsedtime consistent object added block support quaternion velocity orientation angularvelocity added block support vuforiatrackables vuforiatrackable vuforialocalizer vuforiatrackabledefaultlistener fixed block added type checking new block updated latest blockly added default variable block navigation matrix block fixed toolbox entry openglmatrixrotationwithaxesargs user downloads blocksgenerated op mode blk file downloaded user uploads blocksgenerated op mode blk file javascript code auto generated added dbglog support added logging block file readwritten fixed bug properly render block even missing device configuration file added support additional character alphanumeric block file name download upload added support opmode flavor autonomous teleop group change sample prevent tutorial issue incorporated suggested change public pull 216 replace path remove servo glitch robot stopped user hit cancel editing configuration file clear unsaved change reverts original unmodified configuration added log info help diagnose robot controller app wa terminated example watch dog function added ability transfer log controller fixed inconsistency angularvelocity limit unbounded growth data telemetry user doe call telemetryupdate linearopmode timely manner data added telemetry might get lost size limit exceeded version 235 released 161006 blockly programming mode removed unnecesary idle call block new project version 230 released 161005 blockly programming mode mechanism added save blockly op mode programming mode server onto local device avoid clutter block displayed categorized folder added support digitalchannel added support modernroboticsi2ccompasssensor added support modernroboticsi2crangesensor added support voltagesensor added support analoginput added support analogoutput fix compasssensor setmode block vuforia fix deadlock make camera data available vuforia running update vuforia 60117 recommended vuforia google close security loophole fix autonomous 30 second timer bug timer wa effect even though appeared timed opmodeisactive change allow cleanup op mode stopped enforcedsecond safety timeout fix avoid reading i2c twice updated sample op mode improved logging fixed intermittent freezing added digital io sample cleaned device name sample op mode consistent pushbot guide fix allow use irseekersensorv3 version 220 released 160908 support modern robotics compass sensor support modern robotics range sensor revise device name pushbot template match name used pushbot guide fixed bug irseekersensorv3 device accessible irseekersensor hardwaremap modified computer vision code require individual vuforia license per legal requirement ptc minor fix blockly enhancement support voltage sensor support analog input support analog output support light sensor support servo controller version 210 released 160903 support adafruit imu improvement modernroboticsi2cgyro class block reset z axis iscalibrating return true gyro calibration updated sample gyro program blockly enhancement support androidgraphicscolor added support elapsedtime improved look legibility block support compass sensor support ultrasonic sensor support irseeker support led support color sensor support crservo prompt user configure robot using programming mode provides ability disable audio cue various bug fix improvement version 200 released 160819 new release upcoming 20162017 first tech challenge season channel change enabled ftc robot controller app moto g 2nd 3rd gen phone user use annotation registerdisable op mode change android sdk jdk build tool requirement minsdk19 java 17 build tool 2303 standardized unit analog input cleaned code existing analog sensor class setchannelmode getchannelmode removed dcmotorcontroller class important longer set motor mode motor controller setmode getmode added dcmotor class continuousrotationservo class ha added ftc sdk rangeclip method ha overloaded support operation int short byte integer change made new method added user access item hardware map user set zero power behavior dc motor motor brake float power zero prototype blockly programming mode ha added ftc robot controller user place robot controller mode use device laptop ha javascript enabled browser write blocklybased op mode directly onto robot controller user configure robot remotely ftc driver station app android studio project support android studio 21x compile sdk version 23 marshmallow vuforia computer vision sdk integrated ftc sdk user use sample vision target get localization information standard ftc field project structure ha reorganized teamcode package user use place localcustom op mode package inspection function ha integrated ftc robot controller driver station apps thanks team hazmat 9277 10650 audio cue incorporated ftc sdk swap mechanism added ftc robot controller configuration activity example two motor controller robot misidentified configuration file use swap button swap device within configuration file manually reenter configuration info two device fix mechanism added user replace electronic module easily example suppose servo controller dy robot replace broken module new module ha different serial number original servo controller use fix button automatically reconfigure configuration file use serial number new module improvement made fix resiliency responsiveness system linearopmode user must telemetryupdate update telemetry data driver station update mechanism ensures driver station get updated data properly time auto configure function robot controller template based commonly used robot configuration template created auto configure mechanism used quickly configure robot type logic detect runaway op mode linearopmode opmode type abort run auto recover ha improvedimplemented fix ha incorporated logitech f310 gamepad mapping correct marshmallow user release 160708 ftcapp project gradle file modified support android studio 21x release 160330 mit app inventor design block new icon better represent function design component change made shutdown logic ensure robust shutdown usb service change wa made linearopmode allow given instance executed required app inventor javadoc improvedupdated release 160309 change made make ftc sdk synchronous significant change waitonefullhardwarecycle waitfornexthardwarecycle longer needed deprecated runopmode linearopmode decoupled system hardware readwrite thread loop opmode decoupled system hardware readwrite thread method synchronous example call setmodedcmotorcontrollerrunmoderesetencoders motor encoder guaranteed reset method call complete legacy module nxt compatible user longer ha toggle read write mode reading writing legacy device change made enhance reliabilityrobustness esd event change made make code thread safe debug keystore added usergenerated robot controller apks use signed key avoid conflict team ha multiple developer laptop example firmware version information modern robotics module logged change made improve usb comm reliability robustness added support voltage indicator legacy nxtcompatible motor controller change made provide auto stop capability op mode linearopmode class stop statement runopmode complete user doe push stop button driver station op mode stopped driver station run awayuninterruptible thread persisting app log error message force crash stop runaway thread driver station ui modified display lowest measured voltage current voltage 12v battery driver station ui modified color background current voltage greengood yellowcaution reddanger extremely low voltage javadoc improved edits additional class added app build time activity driver station robot controller apps display local ip address driver station activity added i2cdevicesynchimpl added i2cdevicesync interface added second millisecond elapsedtime clarity added getcallbackcount i2cdevice added missing cleari2cportactionflag added code create log message waiting linearopmode shutdown fix wifi direct config activity longer launch multiple time added ability specify alternate i2c address software modern robotics gyro release 160209 improved battery checker feature voltage value get refreshed regularly every 250 msec driver station user interface improved software robot controller rc much resilient selfhealing usb disconnect user attempt startrestart rc one module missing display warning still start running op mode one module get disconnected rc display warningsand robot keep working spite missing module disconnected module get physically reconnected rc auto detect module user regain control recently connected module warning message helpful identifies type module thats missing plus usb serial number code change fix null gamepad reference user try reference gamepads init portion op mode nxt light sensor output properly scaled note team might readjust light threshold value op mode user interface gamepad icon driver disappear matching gamepad disconnected gamepad get designated different driver robot protocol robocol version number info displayed screen rc apps incorporated display filter pairing screen filter device dont use format filter turned show wifi direct device updated text license file fixed formatting error opticaldistancesensortostring fixed issue blank device name would disrupt wifi direct pairing made change wifi info battery info displayed quickly upon connecting rc improved javadoc generation modified code make easier support language localization future release 160104 updated compilesdkversion apps prevent wifi entering power saving mode removed unused import driver station corrrected dead zone joystick code ledgetdevicename getconnectioninfo return null apps check robocolversion mismatch fix telemetry also ha offbyone error data string sizing short size limitation error user telemetry output sorted added formatting variant dbglog robotlog apis code modified allow long list op mode name change improve thread safety robocoldatagramsocket fix missing hardware leaf robot controller disconnected driver station error fix fast tapping initstart cause problem toast instantiated ui thread added log statement thread life cycle moved gamepad reset logic inside initactiveopmode robustness change made mitigate risk race condition public method change try flag wifi direct name contains nonprintable character fix correct race condition run close readwriterunnablestandard updated ftdi driver made readwriterunnablestanard interface public fixed offbyone error command constructor moved specific hardware implmentations package moved specific gamepad implemnatations hardware library changed license file new bsd version fixed race condition shutting modern robotics usb device method colorsensor class synchronized corrected isbusy status reflect end motion corrected back button keycode notsupported method gyrosensor class wa changed protected public release 151104001 added support modern robotics gyro gyrosensor class support mr gyro sensor user access heading data z axis user also access raw gyro data x z ax example mrgyrotestjava op mode included improved error message descriptive error message exception user code updated dcmotor api enable read mode new address seti2caddress fix driver station app reset gamepads switching op mode usbrelated code change make usb comm responsive display explicit error message fix usb recover properly usb bus return garbage data fix usb initializtion race condition better error reporting ftdi open explicit message usb failure fixed bug usb device closed event loop teardown method wa called fixed timer ui issue fixed duplicate name ui bug legacy module configuration fixed race condition eventloopmanager fix keep reference stable updating gamepad legacy matrix motorservo controller removed necessity appending motor servo controller name updated ht color sensor driver use constant modernroboticsusblegacymodule class updated mr color sensor driver use constant modernroboticsusbdeviceinterfacemodule class correctly handle i2c address change color sensor updatedcleaned op mode updated comment lineari2caddresschangejava example op mode replaced call setchannelmode setmode match new dcmotor method removed k9autotimejava op mode added mrgyrotestjava op mode demonstrates use mr gyro sensor added mrrgbexamplejava op mode demonstrates use mr color sensor added htrgbexamplejava op mode demonstrates use ht legacy color sensor added matrixcontrollerdemojava demonstrates use legacy matrix controller updated javadoc documentation updated release apk file robot controller driver station apps eng november2015 release 151006002 added support legacy matrix 96v motorservo controller cleaned buildgradle file minor ui bug fix driver station robot controller apps throw error ultrasonic sensor nxt configured legacy module portor eng october2015 latest version ftc sdk 20150803001 following change noted new user interface ftc driver station ftc robot controller apps init method added opmode class release init triggered right start method eventually init method triggered user press init button driver station init loop method required ie need overridden user op mode start stop method optional new linearopmode class introduced team use linearopmode mode create linear event driven program model team use blocking statement like threadsleep within linear op mode api legacy module core device interface module updated support encoders legacy module working hardware loop ha updated better performance eng august2015,"[('op', 'mode'), ('robot', 'controller')]"
atenpas/gpd,C++,grasp pose detection gpd author website license wrapper grasp pose detection gpd package detect 6dof grasp pose 3dof position 3dof orientation 2finger robot hand eg parallel jaw gripper 3d point cloud gpd take point cloud input produce pose estimate viable grasp output main strength gpd work novel object cad model required detection work dense clutter output 6dof grasp pose enabling topdown grasp gpd consists two main step sampling large number grasp candidate classifying candidate viable grasp example input output reference package grasp pose detection point cloud table content requirement installation generate grasp point cloud file parameter view input channel neural network cnn framework network training grasp image reference troubleshooting requirement pcl 19 newer eigen 30 newer opencv 34 newer installation following instruction tested ubuntu 1604 similar instruction work linux distribution install pcl eigen indigo kinetic installed good go install opencv 34 tutorial clone repository folder git clone build package cd gpd mkdir build cd build cmake make j optionally install gpd sudo make install used project shared library building package doe work try modify compiler flag cmakecxxflags file cmakeliststxt generate grasp point cloud file run gpd point cloud file pcd ply detectgrasps cfgeigenparamscfg tutorialskrylonpcd output look similar screenshot shown window pcl viewer press q close window h see list command visualization convention gpd us grasp pose position orientation grasp grasp position indicated orange cross orientation colored arrow parameter brief explanation parameter given cfgeigenparamscfg two parameter typically want play improve number grasp found workspace numsamples first defines volume space search grasp cuboid dimension minx maxx miny maxy minz maxz centered origin point cloud frame second number sample drawn point cloud detect grasp set workspace small possible number sample large possible code parallelized improve runtime set numthreads number physical cpu core computer ha available view use package single two depth sensor package come caffe model file find file modelscaffe15channels single sensor use singleview15channelscaffemodel two depth sensor use twoviews15channelsangle angle angle two sensor view illustrated picture twoviews setting want register two point cloud together sending gpd providing camera position configuration file cfg important enables pcl estimate correct normal direction point toward camera alternatively using wrapper multiple camera position provided switch one two sensor view change parameter weightfile config file input channel neural network package come weight file two different input representation neural network used decide grasp viable notor 15 channel default 15 channel however use thechannels achieve better runtime loss grasp quality detail please see reference cnn framework gpd come number different classifier framework exploit different hardware different dependency switching framework requires run cmake additional argument example use openvino framework cmake duseopenvinoon use ccmake check possible cmake option gpd support following three framework openvino installation instruction open source version cpu gpus fpgas intel caffe gpus nvidia cpu custom lenet implementation using eigen library cpu additional classifier added subclassing classifier interface openvino openvino recommended speed use openvino need run following command compiling gpd export inferenceenginedirpathtodldtinferenceenginebuild network training create training data c code need install opencv 34 contribs next need compile gpd flag dbuilddatageneration like cd gpd mkdir build cd build cmake dbuilddatagenerationon make j four step train network predict grasp pose first need create grasp image generatedata cfggeneratedatacfg modify generatedatacfg according need next need resize created database trainoffset testoffset see terminal output generatedata example resize training set use following command size set value trainoffset cd pytorch python reshapehdf5py pathtotrainingseth5 outh5 size third step train neural network easiest way training network existing code requires pytorch framework train network use following command cd pytorch python trainnet3py pathtotrainingseth5 pathtotestseth5 numchannels fourth step convert model onnx format python torchtoonxxpy pathtopytorchmodelpwf pathtoonnxmodelonnx numchannels last step convert onnx file openvino compatible format tutorial give two file loaded gpd modifying weightfile modelfile parameter cfg file grasp imagedescriptor generate grasp pose corresponding imagesdescriptors testgraspimage tutorialskrylonpcd 3456modelslenet15channelsparams detail grasp image created check journal paper 10 reference like package use work please cite journal paperif interested shorter conference version check out1 andreas ten pa marcus gualtieri kate saenko robert platt grasp pose detection point cloud international journal robotics research vol 36 issue 1314 pp 14551473 october 2017marcus gualtieri andreas ten pa kate saenko robert platt high precision grasp pose detection dense clutter iros 2016 pp 598605 11 troubleshooting tip remove cmake cache rm cmakecachetxt make clean remove build folder rebuild update gcc g version 5,"[('grasp', 'pose'), ('point', 'cloud')]"
ANYbotics/grid_map,C++,grid map overview c library interface manage twodimensional grid map multiple data layer designed mobile robotic mapping store data elevation variance color friction coefficient foothold quality surface normal traversability etc used robotcentric elevation mapping package designed rough terrain navigation feature multilayered developed universal 25dimensional grid mapping support number layer efficient map repositioning data storage implemented twodimensional circular buffer allows nondestructive shifting map position eg follow robot without copying data memory based eigen grid map data stored eigen data type user apply available eigen algorithm directly map data versatile efficient data manipulation convenience function several helper method allow convenient memory safe cell data access example iterator function rectangular circular polygonal region line implemented interface grid map directly converted message type pointcloud2 occupancygrid gridcells custom gridmap message conversion package provide compatibility costmap2d pcl octomap data type opencv interface grid map seamlessly converted opencv image type make use tool provided opencv visualization gridmaprvizplugin render grid map 3d surface plot height map rviz additionally gridmapvisualization package help visualize grid map point cloud occupancy grid grid cell etc filter gridmapfilters provides range filter process grid map sequence filter parsing mathematical expression allows flexibly setup powerful computation thresholding normal vector smoothening variance inpainting matrix kernel convolution research code expect change often fitness particular purpose disclaimed source code released bsd 3clause license author peter fankhauser affiliation anybotics maintainer maximilian wulf mwulfanyboticscom magnus gartner mgaertneranyboticscom contribution simone arreghini tanja baumann jeff delmerico remo diethelm perry franklin magnus gartner ruben grandia edo jelavic dominic jud ralph kaestner philipp krusi alex millane daniel stonier elena stumm martin wermelinger christos zalidis projected wa initially developed eth zurich autonomous system lab robotic system lab work conducted part anymal research community advance legged robotics publication use work academic context please cite following publication p fankhauser hutter universal grid map library implementation use case rough terrain navigation robot operating system complete reference volumea koubaa ed springer 2016 pdf incollectionfankhauser2016gridmaplibrary author fankhauser p eter hutter marco booktitle robot operating system complete reference volume title universal grid map library implementation use case rough terrain navigation chapter editor koubaa ani publisher springer year 2016 isbn 9783319260525 doi 10100797833192605495 url documentation introduction grid map library including tutorial given book chapter c api documented gridmapcore gridmapros gridmapcostmap2d gridmapcv gridmapfilters gridmapoctomap gridmappcl installation installation package install package grid map library debian package use sudo aptget install rosrosdistrogridmap building source dependency gridmapcore package depends linear algebra library eigen sudo aptget install libeigen3dev package depend additionally standard installation roscpp tf filter sensormsgs navmsgs cvbridge format specific conversion package eg gridmapcv gridmappcl etc depend package described package overview building build source clone latest version repository catkin workspace compile package using cd catkinwssrc git clone cd catkinmake maximize performance make sure build release mode specify build type setting catkinmake dcmakebuildtyperelease package overview repository consists following package gridmap metapackage grid map library gridmapcore implement algorithm grid map library provides gridmap class several helper class iterators package implemented without dependency gridmapros main package dependent project using grid map library provides interface convert grid map several message type gridmapdemos contains several node demonstration purpose gridmapfilters build filter package process grid map sequence filter gridmapmsgs hold message service definition around gridmapmsggridmap message type gridmaprvizplugin rviz plugin visualize grid map 3d surface plot height map gridmapsdf provides algorithm convert elevation map 3d signed distance field gridmapvisualization contains node written convert gridmap message message type example visualization rviz additional conversion package gridmapcostmap2d provides conversion grid map costmap2d map type gridmapcv provides conversion grid map opencv image type gridmapoctomap provides conversion grid map octomap octomap map gridmappcl provides conversion grid map point cloud library pcl polygon mesh point cloud detail see grid map pcl package readme unit test run unit test catkinmake runtestsgridmapcore runtestsgridmapros catkin build gridmap nodeps verbose catkinmakeargs runtests using catkin tool usage demonstration gridmapdemos package contains several demonstration node use code verify installation grid map package get started usage library simpledemo demonstrates simple example using grid map library node creates grid map add data publishes see result rviz execute command roslaunch gridmapdemos simpledemolaunch tutorialdemo extended demonstration library functionality launch tutorialdemo roslaunch gridmapdemos tutorialdemolaunch iteratorsdemo showcase usage grid map iterators launch roslaunch gridmapdemos iteratorsdemolaunch imagetogridmapdemo demonstrates convert data image grid map start demonstration roslaunch gridmapdemos imagetogridmapdemolaunch gridmaptoimagedemo demonstrates save grid map layer image start demonstration rosrun gridmapdemos gridmaptoimagedemo gridmaptopicgridmap filehomeuserdesktopgridmapimagepng opencvdemo demonstrates map manipulation help opencv function start demonstration roslaunch gridmapdemos opencvdemolaunch resolutionchangedemo show resolution grid map changed help opencv image scaling method see result use roslaunch gridmapdemos resolutionchangedemolaunch filtersdemo us chain filter process grid map starting elevation terrain map demo us several filter show compute surface normal use inpainting fill hole smoothenblur map use math expression detect edge compute roughness traversability filter chain setup configured filtersdemofilterchainyaml file launch demo roslaunch gridmapdemos filtersdemolaunch information grid map filter see gridmapfilters interpolationdemo show result different interpolation method resulting surface start demo useroslaunch gridmapdemos interpolationdemolaunch user play different world surface different interpolation setting interpolationdemoyaml file visualization display ground truth green yellow color interpolation result shown red purple color also demo computes maximal average interpolation error well average time required single interpolation query grid map feature four different interpolation method order increasing accuracy increasing complexity nn nearest neighbour fastest least accurate linear linear interpolation cubic convolution piecewise cubic interpolation implemented using cubic convolution algorithm cubic cubic interpolation slowest accurate detail check literature listed cubicinterpolationhpp file convention definition iterators grid map library contains various iterators convenience grid map submap circle line polygon ellipse spiral using iterator loop common example iterate entire grid map gridmapiterator gridmapgridmapiterator iteratormap iteratorispastend iterator cout value index iteratortranspose mapatlayer iterator endl grid map iterators follow form find example use different iterators iteratorsdemo node note maximum efficiency using iterators recommended locally store direct access data layer grid map gridmapmatrix data maplayer outside loop gridmapmatrix data maplayer gridmapiterator iteratormap iteratorispastend iterator const index indexiterator cout value index indextranspose dataindex0 index1 endl find benchmarking performance iterators iteratorbenchmark node gridmapdemos package run rosrun gridmapdemos iteratorbenchmark beware iterators convenient often cleanest efficient make use builtin eigen method example setting constant value cell layer maplayersetconstant30 adding two layer mapsum maplayer1 maplayer2 scaling layer maplayer 20 maplayer max value two layer mapmax maplayer1cwisemaxmaplayer2 compute root mean squared error mapadderror mapgetlayer1 mapgetlayer2cwiseabs unsigned int ncells mapgetsizeprod double rootmeansquarederror sqrtmaperrorarraypow2sum ncells changing position map two different method change position map setposition change position map without changing data stored map change corresponce data map frame move relocates region captured grid map wrt static grid map frame use move grid map boundary without relocating grid map data take care data handling grid map data stationary grid map frame data overlapping region position change remains stored data fall outside map new position discarded cell cover previously unknown region emptied set nan data storage implemented twodimensional circular buffer minimize computational effort note due circular buffer structure neighbouring index might fall close map frame assumption hold index obtained getunwrappedindex setposition move package gridmaprvizplugin rviz plugin visualizes grid map layer 3d surface plot height map separate layer chosen layer color information gridmapsdf package provides efficient algorithm convert elevation map dense 3d signed distance field point 3d grid contains distance closest point map together gradient gridmapvisualization node subscribes topic type gridmapmsgsgridmap publishes message visualized rviz published topic visualizer fully configure yaml parameter file number visualization different parameter added example configuration file tutorialdemo point cloud vector occupancy grid grid cell parameter gridmaptopic string default gridmap name grid map topic visualized see description visualizer subscribed topic gridmap gridmapmsgsgridmap grid map visualize published topic published topic configured yaml parameter file possible topic pointcloud sensormsgspointcloud2 show grid map point cloud select layer transform point layer parameter name elevation type pointcloud params layer elevation flat false optional flatpointcloud sensormsgspointcloud2 show grid map flat point cloud ie point height z convenient visualize 2d map image even video stream rviz help color transformer parameter height determines desired zposition flat point cloud name flatgrid type flatpointcloud params height 00 note order omit point flat point cloud emptyinvalid cell specify layer checked validity setbasiclayers vector visualizationmsgsmarker visualizes vector data grid map visual marker specify layer hold x zcomponents vector layerprefix parameter parameter positionlayer defines layer used start point vector name surfacenormals type vector params layerprefix normal positionlayer elevation scale 006 linewidth 0005 color 15600153 red occupancygrid navmsgsoccupancygrid visualizes layer grid map occupancy grid specify layer visualized layer parameter upper lower bound datamin datamax name traversabilitygrid type occupancygrid params layer traversability datamin 015 datamax 015 gridcells navmsgsgridcells visualizes layer grid map grid cell specify layer visualized layer parameter upper lower bound lowerthreshold upperthreshold name elevationcells type gridcells params layer elevation lowerthreshold 008 optional default inf upperthreshold 008 optional default inf region visualizationmsgsmarker show boundary grid map name mapregion type mapregion params color 3289650 linewidth 0003 note color value rgb form concatenated integer channel value 0255 value generated like example color green redgreen 255 bluegridmapfilters gridmapfilters package containts several filter applied grid map perform computation data layer grid map filter based filter mean chain filter configured yaml file furthermore additional filter written made available plugin mechanism inpaintfilter gridmapcv package several basic filter provided gridmapfilters package gridmapfiltersthresholdfilter set value output layer specified value conditionlayer exceeding either upper lower threshold one threshold time name lowerthreshold type gridmapfiltersthresholdfilter params conditionlayer layername outputlayer layername lowerthreshold 00 alternative upperthreshold setto 00 us nan inf gridmapfiltersmeaninradiusfilter compute cell layer mean value inside radius name meaninradius type gridmapfiltersmeaninradiusfilter params inputlayer input outputlayer output radius 006 gridmapfiltersmedianfillfilter compute nan cell layer median finites inside patch radius optionally apply median calculation value already finite patch radius point given existingvalueradius note fill computation performed fillmask valid point name median type gridmapfiltersmedianfillfilter params inputlayer input outputlayer output fillholeradius 011 filterexistingvalues false default false enabled also doe median computation existing value existingvalueradius 02 note option ha effect filterexistingvalues set true fillmasklayer fillmask layer used compute area fill present input automatically computed debug false enabled additional debuginfillmasklayer published debuginfillmasklayer infillmask layer used visualize intermediate sparseoutlier removed fill mask published debug enabled gridmapfiltersnormalvectorsfilter compute normal vector layer map name surfacenormals type gridmapfiltersnormalvectorsfilter params inputlayer input outputlayersprefix normalvectors radius 005 normalvectorpositiveaxis z gridmapfiltersnormalcolormapfilter compute new color layer based normal vector layer name surfacenormals type gridmapfiltersnormalcolormapfilter params inputlayersprefix normalvectors outputlayer normalcolor gridmapfiltersmathexpressionfilter parse evaluate mathematical matrix expression layer grid map see eigenlab documentation expression name mathexpression type gridmapfiltersmathexpressionfilter params outputlayer output expression acosnormalvectorsz slope expression abselevation elevationsmooth surface roughness expression 05 10 slope 06 05 10 roughness 01 weighted normalized sum gridmapfiltersslidingwindowmathexpressionfilter parse evaluate mathematical matrix expression within sliding window layer grid map see eigenlab documentation expression name mathexpression type gridmapfiltersslidingwindowmathexpressionfilter params inputlayer input outputlayer output expression meanoffinitesinput box blur expression sqrtsumoffinitessquareinput meanoffinitesinput numberoffinitesinput standard deviation expression sumoffinites010151010elevationinpainted sharpen kernel matrix computeemptycells true edgehandling crop option inside crop empty mean windowsizein number cell optional defaultmake sure make compatible kernel matrix windowlength 005 instead windowsize gridmapfiltersduplicationfilter duplicate layer grid map name duplicate type gridmapfiltersduplicationfilter params inputlayer input outputlayer output gridmapfiltersdeletionfilter delete layer grid map name delete type gridmapfiltersdeletionfilter params layer color score list layer additionally gridmapcv package provides following filter gridmapcvinpaintfilter use opencv inpaintfill hole layer name inpaint type gridmapcvinpaintfilter params inputlayer input outputlayer output radius 005 build status devel job status kinetic melodic noetic gridmap build status build status build status doc build status build status build status release job status kinetic melodic noetic gridmap build status build status build status gridmapcore build status build status build status gridmapcostmap2d build status build status build status gridmapcv build status build status build status gridmapdemos build status build status build status gridmapfilters build status build status build status gridmaploader build status build status build status gridmapmsgs build status build status build status gridmapoctomap build status build status build status gridmappcl build status build status build status gridmapros build status build status build status gridmaprvizplugin build status build status build status gridmapsdf build status build status build status gridmapvisualization build status build status build status bug feature request please report bug request feature using issue tracker navmsgsgridcells,"[('grid', 'map'), ('build', 'status')]"
Farama-Foundation/Metaworld,Python,metaworld license build status current version metaworld work progress find bugserrors please open issue metaworld opensource simulated benchmark metareinforcement learning multitask learning consisting 50 distinct robotic manipulation task aim provide task distribution sufficiently broad evaluate metarl algorithm generalization ability new behavior background information please refer website accompanying conference publication provides baseline result forstateoftheart meta multitask rl algorithm table content installation using benchmark basic seeding benchmark instance running ml1 mt1 running ml10 ml45 mt10 mt50 accessing single goal environment citing metaworld accompanying baseline become contributor acknowledgement join community metaworld maintained farama foundation interact community new developer discord server maintenance status current roadmap metaworld found installation install everything run pip install git alternatively clone repository install editable version locally sh git clone cd metaworld pip install e user attempting reproduce result found metaworld paper please use command pip install git using benchmark list benchmark environment metarl ml multitaskrl mt ml1 metarl benchmark environment test fewshot adaptation goal variation within single task choose test variation within 50 task benchmark ml10 metarl benchmark test fewshot adaptation new task comprises 10 metatrain task andtest task ml45 metarl benchmark test fewshot adaptation new task comprises 45 metatrain task andtest task mt10 mt1 mt50 multitaskrl benchmark environment learning multitask policy perform 10and 50 training task respectively mt1 similar ml1 choose test variation within 50 task basic provide benchmark api allows constructing environment following gymnasiumenv interface use benchmark first construct sample task allowed one run algorithm benchmark construct least one instance environment listed benchmarktrainclasses benchmarktestclasses environment task must assigned using envsettasktask benchmarktraintasks benchmarktesttasks respectively task assigned environment key benchmarktrainclasses benchmarktestclasses matching taskenvname please see section running ml1 mt1 running ml10 ml45 mt10 mt50 detail may wish access individual environment used metaworld benchmark research see accessing single goal environment detail seeding benchmark instance purpose reproducibility may important seed benchmark instance example ml1 benchmark environment pickplacev2 environment following way python import metaworld seedsome seed number benchmark metaworldml1 pickplacev2 seedseed running ml1 mt1 python import metaworld import random printmetaworldml1envnames check available environment ml1 metaworldml1 pickplacev2 construct benchmark sampling task env ml1trainclasses pickplacev2 create environment task pickplace task randomchoiceml1traintasks envsettasktask set task ob envreset reset environment envactionspacesample sample action ob reward done info envstepa step environment sampled random action mt1 run way except doe contain anytesttasks running benchmark create environment train task ml10 mt10 ml45 mt50 python import metaworld import random ml10 metaworldml10 construct benchmark sampling task trainingenvs name envcls ml10trainclassesitems env envcls task randomchoicetask task ml10traintasks taskenvname name envsettasktask trainingenvsappendenv env trainingenvs ob envreset reset environment envactionspacesample sample action ob reward done info envstepa step environment sampled random action create environment test task work ml10 ml45 since mt10 mt50 separate set test taskspython import metaworld import random ml10 metaworldml10 construct benchmark sampling task testingenvs name envcls ml10testclassesitems env envcls task randomchoicetask task ml10testtasks taskenvname name envsettasktask testingenvsappendenv env testingenvs ob envreset reset environment envactionspacesample sample action ob reward done info envstepa step environment sampled random action accessing single goal environment may wish access individual environment used metaworld benchmark research provide constructor creating environment goal ha hidden zeroing goal observation environment goal observable called goalhidden goalobservable environment respectively access following way python metaworldenvs import allv2environmentsgoalobservable allv2environmentsgoalhidden ordered dicts key value envname envconstructor import numpy np dooropengoalobservablecls allv2environmentsgoalobservabledooropenv2goalobservable dooropengoalhiddencls allv2environmentsgoalhiddendooropenv2goalhidden env dooropengoalhiddencls envreset reset environment envactionspacesample sample action ob reward done info envstepa step environment sampled random action assert obs3 npzeros3all goal zeroed env hiddengoal choose initialize random seed environment state rng remain unaffected environment constructed env1 dooropengoalobservableclsseed5 env2 dooropengoalobservableclsseed5 env1reset reset environment env2reset a1 env1actionspacesample sample action a2 env2actionspacesample nextobs1 env1stepa1 step environment sampled random action nextobs2 env2stepa2 assert nextobs13 nextobs23allenvs initialized seed goal assert nextobs23 npzeros3all env goal observable meaning goal zero env3 dooropengoalobservableclsseed10 construct environment different seed env1reset reset environment env3reset a1 env1actionspacesample sample action a3 env3actionspacesample nextobs1 env1stepa1 step environment sampled random action nextobs3 env3stepa3 assert nextobs13 nextobs33allenvs initialized different seed different goal assert nextobs13 npzeros3all env goal observable meaning goal zero citing metaworld use metaworld academic research please kindly cite corl 2019 paper using following bibtex entry inproceedingsyu2019meta titlemetaworld benchmark evaluation multitask meta reinforcement learning authortianhe yu deirdre quillen zhanpeng ryan julian karol hausman chelsea finn sergey levine booktitleconference robot learning corl year2019 eprint191010897 archiveprefixarxiv primaryclasscslg url accompanying baseline looking implementation baseline algorithm used metaworld conference publication please look sister directory garage note exact baseline used original conference publication however true original baseline become contributor welcome contribution metaworld please refer contributor guide prepare contribution acknowledgement metaworld work tianhe yu stanford university deirdre quillen uc berkeley zhanpeng columbia university ryan julian university southern california karol hausman google ai chelsea finn stanford university sergey levine uc berkeley code metaworld wa originally based multiworld developed vitchyr h pong murtaza dalal ashvin nair shikhar bahl steven lin soroush nasiriany kristian hartikainen coline devin metaworld author grateful effort providing great framework foundation work also would like thank russell mendonca work reward function environment,"[('reset', 'environment'), ('sample', 'action')]"
pandolia/qqbot,Python,smart qq 20193 qqbot python smartqq qq linux window mac osx github qqbot qq qq python 2734 pip pip install qqbot cd pip install qqbot qqbot qqbot qq qqbot q qq linux gvfsopen shotwell gnome gvfs windows10 png qqbot qqbot qq qqbot qq helpstoprestartfreshrestart qq list buddygroupdiscuss cinfoclike cinfo qqnamekeyval clike likeqqlikenamekeylikename qq list groupmemberdiscussmember oinfoolike cinfoclike oinfo oqqonameokeyoval cinfo qqnamekeyval olike likeoqqlikeonameokeylikeoname clike likeqqlikenamekeylikename qq update buddygroupdiscuss qq update groupmemberdiscussmember ginfo qq send buddygroupdiscuss rinfo message qq plugunplug myplugin qq plugins list qq list buddy xxx qq list group xxx jack qq list buddy markjack 456 qq list groupmember 456 456 mike qq list groupmember 456 cardmike xx jack qq list discussmember xx jack keyval namexxnickxxmarkxxcardxxqqxx keyval qq qq list group list like qq list buddy like qq 234 qq list group like234 jack qq list buddy marklikejack 456 qq list groupmember 456 like 456 mike qq list groupmember 456 cardlikemike xx jack qq list discussmember like jack v225 list prettytablepng consolas 120 update list qq update buddy qq update group 456 qq update groupmember 456 send list buddygroupdiscuss groupmemberdiscussmember jack qq send buddy jack 198 qq send group 198 qq 12345 qq send buddy 12345 xxx qq send discus mydiscuss hello facemappy nt send buddy jack n http api web url qq url command urltestbotmd url utf8 nihao wohao javascript encodeuricomponent qqbot qq qq version qqbot qqbotv2xx qq qq python coding utf8 def onqqmessagebot contact member content content hello botsendtocontact qq elif content stop botsendtocontact qq botstop onqqmessage samplepy utf8 qqbottmpplugins win7 cusersxxx import python libsitepackages qqbot qq plug sample onqqmessage qqbot qq qq hello qq stop qq qq unplug sample qqbot qq qqbot bot qqbot listsendtostoprestart contact qcontact ctypeqquinnickmarkcardname member qcontact content str contact ctype buddygroupdiscuss member ctype groupmemberdiscussmember member none contact member qcontact qcontact qcontactattr qcontact qqbot sendto qcontact botsendtocontact xxx botsendtomember xxx qqbot qqbot listupdatesendtoplugunplugloginstoprestartfreshrestartconf conf ide pythonshell qqbot ide pythonshell qqbot import bot bot botlogin q 1234 botlisttinfo cinfo contact0 contact1 none list qcontact none tinfo list tinfo tinfotinfo buddygroupdiscuss botlist buddy jack botlist buddy jack botlist group botlist group tinfotinfo ctype groupdiscuss qcontact 456 jack g botlist group 4560 g group 456 botlistg 456 botlistg cardjack 456 jack botlistg card jack list qqbot tinfo cinfo qq cinfo qq none list tinfo cinfo cinfo none qq list list qcontact str g botlist group g group printg typeg gqq gname guin gmark g qcontact qcontactattr botupdatetinfo truefalse update tinfo list qq10 20002 true false botupdate buddy botupdate group gl botlist group 456 gl g gl0 botupdateg botsendtocontact content resendon1202true xx qcontact facemappy xx qq 1202 v2117 botsendto resendon1202 true qq 12020 false true false 1202 resendon1202 contact botlist qcontact onqqmessage jack bl botlist buddy jack bl b bl0 botsendtob hello botconf botconf botconftermserverport qqbot botconfqq qq botconf onqqmessage oninitonqrcodeonstartupcompleteonintervalonupdateonplugonunplugonexit sampleslotspy mainpng qqbot onqqmessage onqqmessage onqqmessage content python def onqqmessagebot contact member content content botsendtocontact membername ab abc abc qq qqbot bot isme python def onqqmessagebot contact member content botismecontact member print 2113 qqbot qqbotsched python qqbot import qqbotsched qqbotschedhour 1117 minute 55 def mytaskbot gl botlist group 456 gl none group gl botsendtogroup 1155 1755 456 qqbotsched year month day week dayofweek hour minute second startdate enddate timezone 11 hour 1117 11xx 17xx minute 55 xx55 minute 0555 xx00 xx05 xx10 xx55 dayofweek monfri 04 qqbotsched python apscheduler unix crontab crontab python apscheduler crontab qqbot bot qqbot qqbot ossystem qq qq ossystem qq send buddy jack hello qq ossystem qq qq ossystem bot sendtolist qqbot webqq qq qqbot gui gui http term pillow wcwidth gui ip qq qq qq qq gui qrcodemanager qqbottmpv2xconf win7 cusersxxx linux homexxx qqbot qqbot qqbot u somebody somebody qqbot somebody somebody qqbotterm ip 127001 qq termserverport 8188 http ip ip http 8189 qq qq 3497303033 mailaccount 3497303033qqcom imapsmtp mailauthcode feregfgftrasdsew cmdqrcode false debug false qqbot restartonoffline false qqbot daemon daemon false qqbot startafterfetch false pluginpath plugins pluginsconf qq pluginpath plugins qqbotpluginssampleslots qqbotpluginsschedrestart pluginsconf qqbotpluginsschedrestart 800 termserverport 8188 8189 qq mailaccount mailauthcode cmdqrcode false debug false restartonoffline false daemon false startafterfetch false pluginpath plugins pluginsconf item item key somebody somebody qqbot qqbot u somebody somebody somebody qqbot u somebody mailaccount mailauthcode mailaccount mailauthcode imapsmtp pop3smtp qq mailaccount mailauthcode qq google ip qq cmdqrcode cmdqrcode true term pillow wcwidth pip qq qq qq qq qqbot qq restartonoffline restartonoffline true qqbot qqbot qqbot daemon unix daemon true daemon daemonqqlog qq qq startafterfetch qqbot startafterfetch true qqbot qqbotterm termserverport qqbot qqbotterm qq http api ip 127001 8188 termserverport qqbotterm 8188 qq qq 8100 send buddy jack hello qq 8100 list groupmember chatbot http api qqqqbotterm qq qqbot qqbot termserverport debug debug true pluginpath plugins import qqbottmpplugins pluginpath plugins qqbot qqbot h qqbot u somebody somebody qqbot v2xconf qqbot v2xconf plugins v2xpyxxxxxpickle 20170506200312xxxxcontactdb xxxxpng qq qqpid9816 daemon log daemonxxxlog qqbottmp qqbot bbench qqbot b bench python python python package qqbot pluginpath pppluginpath plugins python hotplug qqbot qq qq plug pluginname qq unplug pluginname bot botplug pluginname botunplug pluginname qqbot qqbot qqbot hotplug qqbot autoplugatstart qqbot plugins plplugins qqbotdefault package package qqbotdefault onplug onunplug reloadpluginname hotplug onplug reload autoplugatstart onplug onunplug github qqbotpluginssampleslots pandolia qqbotpluginsschedrestart pandolia qqbotpluginsminiirc pandolia irc passwordlogin pandolia adblock feisuweb chatlog feisuweb irc linux qq qqbotpluginsminiirc irc qq plug qqbotpluginsminiirc qqbot pl qqbotpluginsminiirc plugins qqbotpluginsminiirc 6667 irc irc weechat irssi weechat weechat weechat connect localhost join groupname join discussname query buddyname qq ctrlp ctrln list irc qq smartqq smartqq facemappy http qq miniirc irc qqbotsched smartqq cookie2 qqbotpluginsschedrestart xml qq jack xxx jack qqbot scienjusqqbot ruby floatinghotpotqqbot nodejs sjdy521mojowebqq perl scienjus smartqq,"[('qq', 'qq'), ('qq', 'list')]"
xipengwang/AprilSAM,Other,aprilsam realtime smoothing mapping paper aprilsam realtime smoothing mapping video tutorial notebook copyright april lab install default installation place header usrlocalinclude shared library usrlocallib also installs pkgconfig script usrlocallibpkgconfig make sudo make install usage basic aprilsam application seen exampleaprilsamtutorialc create graph aprilgrapht graph aprilgraphcreate initialize optimize parameter struct aprilgraphcholeskyparam cholparam calloc1sizeofaprilgraphcholeskyparamt aprilgraphcholeskyparaminitcholparam cholparamshowtiming cholparamdeltaxy 01 cholparamdeltatheta 01 cholparamnthreshold 100 add xyt node double ninit3 000 double nstate3 000 double ntruth3 000 aprilgraphnodet node aprilgraphnodexytcreatenstate ninit ntruth nodeuid zarraysizegraphnodes zarrayaddgraphnodes node add xyt factor aprilgraphnodet na nb zarraygetgraphnodes aidx na zarraygetgraphnodes bidx na matdt w matdcreate33 matdelw0 10 pow01matdelw1 10 pow01matdelw2 10 powtoradians1aprilgraphfactort factor aprilgraphfactorxytcreatenauid nbuid z null w zarrayaddgraphfactors factor matddestroyw cholesky optimization void aprilgraphcholeskygraph cholparam aprilsam increnmetal optimization void aprilgraphcholeskyincgraph cholparam graph chi2 error fxzt sigma1 fxz double aprilgraphchi2graph example saving loading graph file seen exampleaprilsamgraphsavesimplec save graph void aprilgraphsaveaprilgrapht graph const char path load graph aprilgrapht aprilgraphcreatefromfileconst char path example saving retrieving graphnodefactor attribute seen exampleaprilsamgraphsavewithattributesc add attribute void aprilgraphattrputaprilgrapht graph const stypet type const char key void data void aprilgraphnodeattrputaprilgraphnodet node const stypet type const char key void data void aprilgraphfactorattrputaprilgraphfactort factor const stypet type const char key void data get attribute void aprilgraphattrgetaprilgrapht graph const char key void aprilgraphnodeattrgetaprilgrapht graph const char key void aprilgraphfactorattrgetaprilgrapht graph const char key example evaluting aprilsam manhattan3500 dataset seen exampleaprilsamdemoc test aprilsam optimization load aprilsam graph file aprilsamdemo test aprilsam optimization load text file aprilsamdemo datapath datam3500txt test batch update step step optimization aprilsamdemo datapath datam3500txt batchupdateonly,"[('const', 'char'), ('char', 'key')]"
engnadeau/pybotics,Python,pybotics python toolbox robotics explore doc view demo example report bug request feature item badge repo github issue github fork github star github repo size release github tag pypi version pypi wheel pypi format semanticrelease semanticrelease angular pypi downloads compatibility pypi python pypi implementation workflow test release publish documentation documentation status citation doi doi license pypi license social twitter follow twitter content pybotics content overview usage documentation installation application example featured citing development community guideline local development docker development commits dependency management submit issue contributing testing github action overview pybotics opensource python toolbox robot kinematics calibration wa designed provide simple clear concise interface quickly simulate evaluate common robot concept kinematics dynamic trajectory generation calibration toolbox specifically designed use modified denavithartenberg parameter convention usage documentation please visit installation bash python3 mapped pip inside venv pip install pybotics python3pip pip3 install pybotics pipenv install pybotics poetry add pybotics application example basic usage kinematics calibration trajectory path planning machine learning dynamic featured impedance control selfcalibration collaborative robot using kinematic coupling pycon canada 2017 talk photo slide montrealpython 2017 citing please cite following article use pybotics research nadeau 2019 pybotics python toolbox robotics journal open source software 441 1738 articlenadeau2019pybotics doi 1021105joss01738 url year 2019 month sep publisher open journal volume number 41 page 1738 author nicholas nadeau title pybotics python toolbox robotics journal journal open source software nadeau nicholas ilian bonev ahmed joubair impedance control selfcalibration collaborative robot using kinematic coupling robotics 82 2019 33 articlenadeau2019impedance titleimpedance control selfcalibration collaborative robot using kinematic coupling volume8 issn22186581 url doi103390robotics8020033 number2 journalrobotics publishermdpi ag authornadeau nicholas bonev ilian joubair ahmed year2019 monthapr pages33 development community guideline local development use poetry install dev virtual environment bash poetry install docker development docker great tool test package isolated environment especially useful debugging issue python version bash launch container attached current directory docker run v pwdbasename pwd w basename pwd python3 bash install deps pip install poetry poetry install run test make test commits repo abides semver semanticrelease angular commit message syntax highly recommended use commitizen cli see commit example change commit type bumped dependency version build bumped python requirement feat dependency management bash refresh lock file poetry lock noupdate submit issue navigate repository issue tab search related existing issue necessary create new issue using provided template contributing please see contributingmd code conduct contribute project testing please review makefile overview available test important test make command highlighted bash autoformat code make format perform static test make lint run python test make test github action repo us semanticreleases generate release release note automatically commits personaltoken action secret personal token publicrepo scope needed ci release icon made pixel perfect,"[('python', 'toolbox'), ('test', 'make')]"
ANYbotics/elevation_mapping,C++,robotcentric elevation mapping overview package developed elevation mapping mobile robot software designed local navigation task robot equipped pose estimation eg imu odometry distance sensor eg structured light kinect realsense laser range sensor stereo camera provided elevation map limited around robot reflects pose uncertainty aggregated motion robot robotcentric mapping method developed explicitly handle drift robot pose estimation research code expect change often fitness particular purpose disclaimed source code released bsd 3clause license author peter fankhauser coauthor maximilian wulf affiliation anybotics maintainer maximilian wulf mwulfanyboticscom magnus gartner mgaertneranyboticscom projected wa initially developed eth zurich autonomous system lab robotic system lab work conducted part anymal research community advance legged robotics video elevation mapping software use citing robotcentric elevation mapping method used software described following paper available use work academic context please cite following publication p fankhauser bloesch hutter probabilistic terrain mapping mobile robot uncertain localization ieee robotics automation letter ral volnopp 30193026 2018 pdf articlefankhauser2018probabilisticterrainmapping author fankhauser p eter bloesch michael hutter marco doi 101109lra20182849506 title probabilistic terrain mapping mobile robot uncertain localization journal ieee robotics automation letter ral volume number page 30193026 year 2018 p fankhauser bloesch c gehring hutter r siegwart robotcentric elevation mapping uncertainty estimate international conference climbing walking robot clawar 2014 pdf inproceedingsfankhauser2014robotcentricelevationmapping author fankhauser p eter bloesch michael gehring christian hutter marco siegwart roland title robotcentric elevation mapping uncertainty estimate booktitle international conference climbing walking robot clawar year 2014 installation dependency software built robotic operating system need installed first additionally robotcentric elevation mapping depends following software grid map grid map library mobile robot kindr kinematics dynamic library robotics kindrros wrapper kindr point cloud library pcl point cloud processing eigen linear algebra library building order install robotcentric elevation mapping clone latest version repository catkin workspace compile package using cd catkinworkspacesrc git clone cd catkin config cmakeargs dcmakebuildtyperelease catkin build unit test build test roscd elevationmapping catkin build catkinmakeargs runtests run test rostest elevationmapping elevationmappingtest basic usage order get robotcentric elevation mapping run robot need adapt parameter easiest duplicate adapt parameter file need change elevationmappingdemos package eg simpledemo example specifically parameter file config launch file launch folder turtlebot3 waffle simulation running example provided making use turtlebot3 simulation environment example used test elevation mapping starting point integration start turtlebot3 simulation dependency need installed sudo apt install rosmelodicturtlebot3 elevation mapping demo together turtlebot3 simulation started roslaunch elevationmappingdemos turtlesim3waffledemolaunch control robot keyboard new terminal window need opened remember source environment run export turtlebot3modelwaffle roslaunch turtlebot3teleop turtlebot3teleopkeylaunch velocity input sent robot pressing key wd x stop robot completely press simple demo ground truth demo ply published static pointcloud elevationmapping subscribes publishes elevation map visualize rviz visualization select elevationmappingelevationmapraw note might need toggle visibility gridmapplugin visualize bash roslaunch elevationmappingdemos groundtruthdemolaunch ground truth demo estimate height map frame simple demo set realistic deployment scenario elevationmap configured track base frame get started suggest play around also visualize published topic elevationmappingelevationmapraw change height layer another layer eg elevationinpainted node node elevationmapping main robotcentric elevation mapping node us distance sensor measurement pose covariance robot generate elevation map variance estimate subscribed topic point sensormsgspointcloud2 distance measurement pose geometrymsgsposewithcovariancestamped robot pose covariance tf tftfmessage transformation tree published topic elevationmap gridmapmsgsgridmap entire fused elevation map published periodically see fusedmappublishingrate parameter triggerfusion service called elevationmapraw gridmapmsgsgridmap entire raw elevation map fusion step service triggerfusion stdsrvsempty trigger fusing process entire elevation map publish example trigger map fusion step console rosservice call elevationmappingtriggerfusion getsubmap gridmapmsgsgetgridmap get fused elevation submap requested position size example get fused elevation submap position 05 00 size 05 12 described odom frame save text file form console rosservice call elevationmappinggetsubmap odom 05 00 05 12 getrawsubmap gridmapmsgsgetgridmap get raw elevation submap requested position size example get raw elevation submap position 05 00 size 05 12 described odom frame save text file form console rosservice call elevationmappinggetrawsubmap odom 05 00 05 12 clearmap stdsrvsempty initiate clearing entire map resetting purpose trigger map clearing rosservice call elevationmappingclearmap maskedreplace gridmapmsgssetgridmap allows setting individual layer elevation map service call layer mask used set certain cell entire map cell containing nan mask set others set layer mask supplied entire map set intersection map provided map different size position map altered example service call set cell marked mask elevation layer 05 rosservice call elevationmappingmaskedreplace map info header seq stamp secsnsecs 80000000 frameid odom resolution 01 lengthx 03 lengthy 03 pose position x 50 00 z 00 orientation x 00 00 z 00 w 00 layer elevationmask basiclayers elevation data layout dim label columnindex sizestride label rowindex sizestride dataoffset data 05 05 05 05 05 05 05 05 05 layout dim label columnindex sizestride label rowindex sizestride dataoffset data0nan nan nan0 outerstartindex innerstartindex savemap gridmapmsgsprocessfile save current fused grid map raw grid map rosbag file field topicname must base name ie leading slash character field topicname empty elevationmap used per default example default topic name rosservice call elevationmappingsavemap filepath homeintegrationelevationmapbag topicname loadmap gridmapmsgsprocessfile load fused grid map raw grid map rosbag file field topicname must base name ie leading slash character field topicname empty elevationmap used per default example default topic name rosservice call elevationmappingloadmap filepath homeintegrationelevationmapbag topicname reloadparameters stdsrvstrigger trigger reload elevation mapping parameter used online reconfigure parameter example usage rosservice call elevationmappingreloadparameters disableupdates stdsrvsempty stop updating elevation map sensor input trigger update stopping rosservice call elevationmappingdisableupdates enableupdates stdsrvsempty start updating elevation map sensor input trigger update starting rosservice call elevationmappingenableupdates parameter deprecated pointcloudtopic string default point name distance measurement topic use inputsources instead inputsources list input source default none specify input elevation mapping currently pointcloud input supported example configuration yaml inputsources front name identify input source type pointcloud supported type pointcloud topic lidarfrontdepthpoints queuesize publishonupdate true wheter publish elevation map callback source rear type pointcloud topic lidarreardepthpoints queuesize publishonupdate false input source configured empty array yaml inputsources robotposetopic string default robotstatepose name robot pose covariance topic baseframeid string default robot id robot base tf frame mapframeid string default map id tf frame elevation map trackpointframeid string default robot elevation map moved along robot following track point id tf frame track point defined trackpointx trackpointy trackpointz double default 00 00 00 elevation map moved along robot following track point position track point trackpointframeid robotposecachesize int default 200 minthe size robot pose cache minupdaterate double default 20 mininum update rate hz elevation map updated either new measurement robot pose estimate fusedmappublishingrate double default 10 rate publishing entire fused elevation map relocaterate double default 30 rate hz elevation map checked relocation following tracking point lengthinx lengthiny double default 15 min 00 size elevation map positionx positiony double default 00 position elevation map center elevation map frame parameter set planar position offset generated elevation map frame published mapframeid useful trackpointframeid parameter used resolution double default 001 min 00 resolution cell size mcell elevation map minvariance maxvariance double default 90e6 001 minimum maximum value elevation map variance data mahalanobisdistancethreshold double default 25 cell elevation map ha uncertainty height value depending mahalonobis distance existing height distribution new measurement incoming data fused existing estimate overwritten ignored parameter determines threshold mahalanobis distance determines incoming measurement processed sensorprocessorignorepointsabove double default inf hard threshold height point introduced depth sensor point height threshold considered valid data collection step sensorprocessorignorepointsbelow double default inf hard threshold height point introduced depth sensor point height threshold considered valid data collection step multiheightnoise double default 90e7 noise added measurement higher current elevation map particular position noiseadding process performed point fall mahalanobis distance threshold higher value useful adapt faster dynamic environment eg moving object might cause noise height estimation minhorizontalvariance maxhorizontalvariance double default powresolution 2005 minimum maximum value elevation map horizontal variance data enablevisibilitycleanup bool default true enabledisable separate thread remove element map visible anymore mean raytracing originating sensor frame visibilitycleanuprate double default 10 rate hz visibility cleanup performed enablecontinuouscleanup bool default false enabledisable continuous cleanup elevation map enabled arrival new sensor data elevation map cleared filled latest data sensor continuous cleanup enabled visibility cleanup automatically disabled since needed case numcallbackthreads int defaultmin number thread use processing callback thread result higher throughput cost resource usage postprocessorpipelinename string default postprocessorpipeline name pipeline execute postprocessing expects pipeline configuration loaded private namespace node name eg node pkgelevationmapping typeelevationmapping nameelevationmapping outputscreen rosparam commandload filefind elevationmappingdemosconfigpostprocessorpipelineyaml node pipeline gridmapfilter chain see gridmapdemosfiltersdemoyaml filter information postprocessornumthreads int defaultminthe number thread use asynchronous postprocessing thread result higher throughput cost resource usage scanningduration double default 10 sensor scanning duration used visibility cleanup set roughly duration take two consecutive full scan eg 0033 tof camera 30 hz rotating laser scanner depending dense sparse scan increase reduce scanning duration smaller value lead faster dynamic object removal bigger value help reduce faulty map cleanup sensorcutoffmindepth sensorcutoffmaxdepth double default 02 20 minimum maximum value length distance sensor measurement measurement outside interval ignored sensormodelnormalfactora sensormodelnormalfactorb sensormodelnormalfactorc sensormodellateralfactor double data sensor noise model initializeelevationmap bool initializationmethod int lengthinxinitsubmap double lengthinyinitsubmap double initsubmapheightoffset double initsubmapvariance double targetframeinitsubmap string enabled initializeelevationmap true initializes plane initializationmethodof size submaplengthx submaplengthy height offset initsubmapheightoffset around origin targetframeinitsubmap variance set initsubmapvariance increaseheightalpha double default 00 min 00 max 099 elevation increaseheightalpha previousz 10 increaseheightalpha newmeasuredz convex combination parameter form new fused height observation distribution point observation height upper mahalanobis threshold cell observed scanningduration trigger reinitialization height estimate reinitialization parameterized convex combination prior height estimate observation 00 new observation serf initialize new mode prior data discarded 10 new observation higher distribution point current scan put account prior kept mode higher value put bias existing prior estimate convex combination height variance estimate measurement formed initialize new gaussian height distribution changelog see changelog bug feature request please report bug request feature using issue tracker gridmapmsgsprocessfile,"[('elevation', 'map'), ('double', 'default')]"
PetoiCamp/OpenCat-Old,C++,opencat repository nybble redundent large image file obsolete please visit new repository opencat work nybble bittle repository opencat project goal collaborate talent cute quadruped robot still complex system skilled maker yet want share public mass production bringing cost wiki tab slow documenting process going acquired official domain subscribe official newsletter random update posted twitter petoicamp instagram petoicamp youtube channel,"[('repository', 'opencat'), ('opencat', 'repository')]"
ethz-adrl/control-toolbox,C++,control toolbox github top language github diff important note july 2021 library currently scarcely maintained may take respond bug feature request control toolbox efficient c library control estimation optimization motion planning robotics link wiki quickstart find detailed documentation overview adrl control toolbox ct opensource c library efficient modelling control estimation trajectory optimization model predictive control ct applicable broad class dynamic system feature additional modelling tool specially designed robotics page outline general concept major building block highlight selected application example library contains several tool design evaluate controller model dynamical system solve optimal control problem ct wa designed following feature mind system dynamic intuitive modelling system governed ordinary differential difference equation trajectory optimization optimal control nonlinear model predictive control intuitive modelling cost function constraint common interface optimal control solver nonlinear model predictive control currently supported algorithm classical single shooting ilqr ilqg iterative linear quadratic optimal control multipleshooting ilqr gaussnewtonmultipleshooting gnms classical direct multiple shooting dm standardized interface solver ipopt first second order snopt hpipm custom riccatisolver performance solve large scale optimal control problem mpc fashion robot modelling rigid body kinematics dynamic straightforward interface stateof art rigid body dynamic modelling tool robcogenrobcogenurl implementation basic nonlinearprogramming inverse kinematics solver fixbase robot automatic differentiation first second order automatic differentiation arbitrary vectorvalued function including cost function constraint automatic differentiation code generation rigid body dynamic derivative code generation maximum efficiency robot application example control toolbox ha used hardware simulation control task flying walking ground robot slightly complex optimization example including gait optimization quadruped availabe ctros ct common task researcher practitioner control robotics community model system implement equation motion design modelbased controller estimator planning algorithm etc sooner later one confronted question efficient implementation computing derivative information formulating cost function constraint running controller modelpredictive control fashion control toolbox specifically designed task written entirely c ha strong focus highly efficient code run online loop robot actuated hardware major contribution ct implementation optimal control algorithm spanning range simple lqr reference implementation constrained model predictive control ct support automatic differentiation autodiff allows generate derivative code arbitrary scalar vectorvalued function designed toolbox usability mind allowing user apply advanced concept nonlinear model predictive control nmpc numerical optimal control easily minimal effort provide interface stateofthe art autodiff compatible robot modelling software module independent particular modelling framework allowing code interfaced existing cc code library ct ha successfully used variety different project including large number hardware experiment demonstration academic publication example hardware application online trajectory optimization collision avoidance cite giftthaler2017autodiff trajectory optimization quadruped cite neunert2017ral mobile manipulator cite giftthaler2017efficient well nmpc ground robot cite neunert2017mpc uavs cite neunert16hexrotor project originated research conducted agile dexterous robotics lab eth zurich continuously extended cover field application algorithm scope ct software one key building block robotic system great effort creating software tool library robotics however come control especially numerical optimal control many open source tool available easy use fast development well efficient enough online usage exist mature toolbox numerical optimal control trajectory optimization highly specialized standalone tool due provide sufficient flexibility application ct step ct ha designed ground provide tool needed fast development evaluation control method optimized efficiency allowing online operation emphasis lie control tool provided also used simulation estimation optimization application contrast robotic software ct rigid integrated application seen quite literal toolbox offer variety tool used combined solve task hand easeofuse ha major criterion design application example provided using ct still requires programming control knowledge however free user implementing standard method require indepth experience linear algebra numerical method furthermore using common definition type seamless integration different component system controller integrator provided enabling fast prototyping design implementation main focus ct efficiency fully implemented c since ct designed toolbox rather integrated application tried provide maximum flexibility user therefore tied specific middleware dependency kept minimum two essential dependency ct eigen kindr based eigen eigen dependency intentional since eigen defacto standard linear algebra c provides highly efficient implementation standard matrix operation well advanced linear algebra method kindr header kinematics library build top provides data type different rotation representation quaternion euler angle rotation matrix structure module ct control toolbox consists three main module core ctcore module optimal control ctoptcon module rigid body dynamic ctrbd module clear hierarchy module mean module depend order eg use core module without optcon rbd module core ctcore module provides general type definition mathematical tool example contains data type definition definition system controller well basic functionality numerical integrator differential equation optimal control ctoptcon module build top core module add infrastructure defining solving optimal control problem contains functionality defining cost function constraint solver backends general mpc wrapper rigid body dynamic ctrbd module provides tool modelling rigid body dynamic system interface ctcore ctoptcon data type testing well example also provide model module ctmodels contains various robot model including quadruped robotic arm normal quadrotor quadrotor slung load four different main module detailed following ctcore core definition fundamental type control simulation dynamic system ctcoresystem state ctcorestatevector control ctcorecontroller trajectory ctcorediscretetrajectorybase numeric integration ctcoreintegrator various ode solver including fixed step ctcoreintegratoreuler ctcoreintegratorrk4 variable step ctcoreintegratorrk5variable ctcoreode45 integrator well symplectic semiimplicit integrator numerical approximation trajectory sensitivity ctcoresensitivity eg forwardintegrating variational differential equation common feedback controller eg ctcorepidcontroller derivativesjacobians general function using numerical differentiation ctcorederivativesnumdiff automaticdifferentiation codegeneration ctcorederivativescppadcg justintime jit compilation ctcorederivativescppadjit ctoptcon optimal control definition optimal control problem ctoptconoptconproblem optimal control solver ctoptconoptconsolver costfunction toolbox allowing construct cost function file providing firstorder secondorder approximation see ctoptconcostfunction constraint toolbox formulating constraint optimal control problem well automatically computing jacobians reference c implementation linear quadratic regulator infinitehorizon lqr timevarying lqr ctoptconlqr ctoptcontvlqr riccatisolver ctoptcongnriccatisolver unconstrained linearquadratic optimal control problem interface highperformance thirdparty riccatisolvers constrained linearquadratic optimal control problem iterative nonlinear optimal control solver ie gaussnewton solver ilqr ctoptconilqr gaussnewton multiple shootingctoptcongnms constrained direct multipleshooting ctoptcondmssolver nonlinear model predictive control ctoptconmpc definition nonlinear programming problem nlp ctoptconnlp interface thirdparty nlp solver ctoptconsnoptsolver ctoptconipoptsolver ctrbd rigid body dynamic standard model rigid body dynamic definition state rigid body system expressed general coordinate ctrbdrbdstate routine different flavor forward inverse dynamic ctrbddynamics rigid body endeffector kinematics ctrbdkinematics operational space controller basic soft autodifferentiable contact model arbitrary frame ctrbdeecontactmodel actuator dynamic ctrbdactuatordynamics backend us robcogenrobcogenurl highly efficient rigid body dynamic library robcogenurl ctmodels various standard model testing evaluation including uavs ctmodelsquadrotor ground robot legged robot ctmodelshyq robot arm ctmodelshya inverted pendulum etc mean creating linear approximation model get started get started control toolbox please build repository documentation doxygen follow getting started tutorial support contact devs controltoolboxdevgooglegroupscom acknowledgement contributor markus giftthaler markusgft gmail dot com michael neunert markus stauble farbod farshidian diego pardo timothy sandy jan carius ruben grandia hamza merzic funding software ha developed agile dexterous robotics lab eth zurich switzerland 2014 2018 time development ha made possible financial support swiss national science foundation snf snf professorship award jonas buchli national competence center research nccr robotics digital fabrication licence information control toolbox released bsd2 clause license please see licencetxt noticetxt cite ct articleadrlct titlethe control toolbox opensource c library robotics optimal model predictive control authormarkus giftthaler michael neunert markus stauble jonas buchli journal2018 ieee international conference simulation modeling programming autonomous robot simpar year2018 pages123129 earlier version earlier version v23 hosted bitbucket found related publication toolbox ha used ha helped realize following academic publication markus giftthaler michael neunert markus stauble jonas buchli control toolbox opensource c library robotics optimal model predictive control ieee simpar 2018 best student paper award arxiv preprint markus giftthaler michael neunert markus stauble jonas buchli moritz diehl family iterative gaussnewton shooting method nonlinear optimal control iros 2018 arxiv preprint jan carius rene ranftl vladlen koltun marco hutter trajectory optimization implicit hard contact ieee robotics automation lettersno2018 33163323 michael neunert markus stauble markus giftthaler dario bellicoso jan carius christian gehring marco hutter jonas buchli whole body model predictive control contact quadruped ieee robotics automation letter 2017 arxiv preprint markus giftthaler jonas buchli projection approach equality constrained iterative linear quadratic optimal control 2017 ieeeras international conference humanoid robot november 1517 birmingham uk ieee xplore markus giftthaler michael neunert markus stauble marco frigerio claudio semini jonas buchli automatic differentiation rigid body dynamic optimal control estimation advanced robotics simpar special issue november 2017 arxiv preprint michael neunert markus giftthaler marco frigerio claudio semini jonas buchli fast derivative rigid body dynamic control optimization estimation 2016 ieee international conference simulation modelling programming autonomous robot san francisco best paper award ieee xplore michael neunert farbod farshidian alexander w winkler jonas buchli trajectory optimization contact automatic gait discovery quadruped ieee robotics automation letter ieee xplore michael neunert cedric de crousaz fadri furrer mina kamel farbod farshidian roland siegwart jonas buchli fast nonlinear model predictive control unified trajectory optimization tracking 2016 ieee international conference robotics automation icra ieee xplore markus giftthaler farbod farshidian timothy sandy lukas stadelmann jonas buchli efficient kinematic planning mobile manipulator nonholonomic constraint using optimal control ieee international conference robotics automation 2017 singapore arxiv preprint markus giftthaler timothy sandy kathrin dorfler ian brook mark buckingham gonzalo rey matthias kohler fabio gramazio jonas buchli mobile robotic fabrication 11 scale situ fabricator construction robotics springer journal 41693 arxiv preprint timothy sandy markus giftthaler kathrin dorfler matthias kohler jonas buchli autonomous repositioning localization situ fabricator ieee international conference robotics automation 2016 stockholm sweden ieee xplore michael neunert farbod farshidian jonas buchli 2014 adaptive realtime nonlinear model predictive motion control iros 2014 workshop machine learning planning control robot motion preprint,"[('optimal', 'control'), ('jonas', 'buchli')]"
qboticslabs/mastering_ros,C++,mastering robotics programming mastering robotics programming book tutorial source code buy book packt amazoncom amazonin author lentin joseph installation code compatible jade indigo detail installation instruction package mentioned book tutorial chapterintroduction package management chapterworking 3d robot modeling chaptersimulating robot using gazebo chapterusing moveit navigation stack chapterworking pluginlib nodelets gazebo plugins chapterwriting controller visualization plugins chapterinterfacing io board sensor actuator chapterprogramming vision sensor using opencv pcl chapterbuilding interfacing differential drive mobile robot hardware chapter 10 exploring advanced capability rosmoveit chapter 11 industrial robot chapter 12 troubleshooting best practice robotics project robotics project buy book packt amazoncom amazonin author lentin joseph installation code comaptible kinetic indigo detail installation instruction package mentioned book tutorial chaptergetting started robotics application development chapterface detection tracking using opencv dynamixel servo chapterbuilding sirilike chatbot chaptercontrolling embedded board using chapterteleoperate robot using hand gesture chapterobject detection recognition chapterdeep learning using tensorflow chapterros matlab android chapterbuilding autonomous mobile robot chapter 10 creating selfdriving car using chapter 11 teleoperating robot using vr headset leap motion chapter 12 controlling robot web learning robotics using python learning robotics using python book tutorial source code buy book packt amazoncom amazonin author lentin joseph installation code comaptible jade indigo detail installation instruction package mentioned book tutorial chapterintroduction robotics chaptermechanical design service robot chapterworking robot simulation using gazebo chapterdesigning chefbot hardware chapterworking robotic actuator wheel encoders chapterworking robotic sensor chapterprogramming vision sensor using python chapterworking speech recognition synthesis using python chapterapplying artificial intelligence chefbot using python chapter 10 integration chefbot hardware interfacing using python chapter 11 designing gui robot using qt python chapter 12 calibration testing chefbot,"[('using', 'python'), ('book', 'tutorial')]"
robotframework/RIDE,Python,ride ifdefenvgithuboutfilesuffix adoc ride development environment robot framework test case instant communication join ride channel robot framework slack signup page insecure connection warning support site ride section topic use tag robotframeworkide search ask welcome development version ride next major release version 21 looking latest released version get source code branch see note latest release version 207 version wa last release supporting python 27 current development version based 207 support python 36 311 13th august 2023 currently unit test tested python 310 recommended version likewise current version wxpython 421 ride known work 407 411 version 36 python 311 install current released version 207 pip install u robotframeworkride install current development version 208dev pip install u 36 python 311 install current beta version 21a1 source shell pip install u pre robotframeworkride see unit testing status linux py36 py37 py38 py39 image test link linux fedora 38 py311 ubuntu 2204 py310 image test link window python 311 image test link quality gate status image link link pypi statistic stats usage instruction tip trick found bug reportenhancement request use tracker question hesitate use list framework forumtoolsride development information file stargazer time image time link,"[('development', 'version'), ('python', '311')]"
google-research/tensor2robot,Python,tensor2robot repository contains distributed machine learning reinforcement learning infrastructure used internally alphabet opensourced intention making research robotics google reproducible broader robotics computer vision community project publication using tensor2robot qtopt grasp2vec watch try learn bcz feature tensor2robot t2r library training evaluation inference largescale deep neural network tailored specifically neural network relating robotic perception control based tensorflow deep learning framework common task robotics research involves adding new sensor modality new label tensor neural network graph involveschanging data savedchanging data pipeline code read new modality training timeadding new tfplaceholder handle new input modality test time main feature tensor2robot automatic generation tensorflow code stepsandtensor2robot automatically generate placeholder model match input alternatively export savedmodel used tfexportedsavedmodelpolicy original graph doe reconstructed another common task encountered ml involves cropping transforming input modality jpegdecoding applying random image distortion training time preprocessor class declares input feature label expected output shape compatible input feature label model example preprocessors found preprocessors design decision scalability codebase designed training largescale realworld robotic perception model algorithm require tight perceptionactionlearning loop supervised learning offpolicy reinforcement learning large computer vision model example setup might involve multiple gpus pulling data asynchronously replay buffer training offpolicy rl algorithm data collection agent periodically update checkpoint push experience replay buffer also run single workstation smallerscale experiment t2r generalpurpose reinforcement learning library due size model work eg grasping vision inference assumed within 110hz without realtime guarantee training assumed distributed default reinforcement learning small network eg twolayer perceptron onpolicy rl eg ppo require hard realtime guarantee probably right codebase use recommend using tfagents dopamine use case minimize boilerplate tensor2robot model autogenerate data input pipeline provide sensible default optimizers common architecture actor critic traineval scaffolding model automatically work gpus tpus via tpuestimator parsing bmpgifjpegpngencoded image ginconfigurable ginconfig used configure model policy experiment hyperparameters quickstart requirement python git clone optional create virtualenv python3 venv venv source venvbinactivate pip install r tensor2robotrequirementstxt python tensor2robotresearchposeenvposeenvtest install protoc compile protobufs pip install protobuf cd tensor2robotproto protoc pythonoutpwd tensor2robott2rproto python tensor2robotresearchposeenvposeenvmodelstest t2rmodel use tensor2robot user defines t2rmodel object define input requirement specification one feature featurespec one label labelspec specification define required optional tensor order call modelfn input pipeline parameterized model input pipeline ensure required specification fulfilled note always omit batch dimension specify shape single element training time t2rmodel provides modeltrainfn modelevalfn modelfn argument tfestimatorestimator class modeltrainfn modelevalfn defined respect feature label output inferencenetworkfn presumably implement shared portion traineval graph bash class mymodelt2rmodel def getfeaturespecificationself mode spec tensorspecutilstensorspecstruct spec state extendedtensorspec shape8128 dtypetffloat32 name def getlabelspecificationself mode spec tensorspecutilstensorspecstruct spec action extendedtensorspecshape8 dtypetffloat32 name def inferencenetworkfnself feature tensorspecutilstensorspecstruct label optionaltensorspecutilstensorspecstruct mode tfestimatormodekeys config runconfigtype none params paramstype none dictorspec inferenceoutputs inferenceoutputs prediction layersfullyconnectedfeaturesstate return inferenceoutputs def modeltrainfnself feature tensorspecutilstensorspecstruct label tensorspecutilstensorspecstruct inferenceoutputs dictorspec mode tfestimatormodekeys config runconfigtype none params paramstype none modeltrainoutputtype see base class del feature config loss tflossesmeansquarederror labelsaction inferenceoutputs prediction return loss note key left hand side ha value name different one right hand side within extendedtensorspec key left used within modelfn access loaded tensor whereas name used creating parsetfexamplefn numpyfeeddict ensure name unique within whole spec unless spec match otherwise cannot guarantee mapping functionality benefit inheriting t2rmodel selfcontained input specification feature label autogenerated tfdatadataset pipeline tftrainexamples tftrainsequenceexamples policy inference t2rmodels generate placeholder export savedmodels hermetic used exportsavedmodelpolicy automatic construction modelfn estimator training evaluation graph share single inferencenetworkfn possible compose multiple model inferencenetworkfn modeltrainfn together single model abstraction allows u implement generic metalearning model eg maml call submodel modeltrainfn automatic support distributed training gpus tpus policy placeholder performance reason policy inference done vanilla sessionrun predictfn call output model instead estimatorpredict tensorspecutilsmakeplaceholders automatically creates placeholder spec structure used combination matching hierarchy numpy input create feeddict bash batchsizeno batch size prepended spec batchsize none prepend none variable batchsize batchsizewe fixed batchsize placeholder tensorspecutilsmakeplaceholdershierarchicalspec batchsizenone feeddict inferencemodelmakefeeddictplaceholders numpyinputs passed sessrun function evaluate model use tfexportedsavedmodelpolicy note t2rmodel query static batch shape xshape0 graph placeholder generation creates input unknown batch shape none causing static shape retrieval fail instead use tfshapex0 access batch shape dynamically working tensor specification specification hierarchical data structure either dictionary dict tuples tuple list list tensorspecstruct preferred leaf element type tensorspec extendedtensorspec preferred following present example using extendedtensorsec tensorspecstruct illustrate different usecases use tensorspecutilstensorspecstruct specifying spec since data structure mutuable provides attribute dot access item iteration use pytype ensure compile time type checking data structure hierarchical flat dictionary interface using item flat representing hierarchical data path shown later however maintain hierarchical interface using attribute access also shown later therefore use data structure order create alter hierarchical specification work tpuestimator estimator since apis operate dictionary view hierarchical example creating hierarchical spec spec using tensorspecutilscopytensorspec bash simplespec tensorspecutilstensorspecstruct simplespec state extendedtensorspec shape8128 dtypetffloat32 name simplespec action extendedtensorspecshape8 dtypetffloat32 name hierarchicalspec tensorspecutilstensorspecstruct hierarchicalspectrain tensorspecutilscopytensorspecsimplespec prefixtrain note use attribute access define train hierarchy copy spec simplespec internally bash train trainstate simplespecstate trainaction simplespecaction forbid following pattern bash hierarchicalspectrain tensorspecutilstensorspecstruct encourage user use pattern instead bash train tensorspecutilstensorspecstruct trainstuff extendedtensorspec hierarchicalspectrain train hierarchicalspec trainstuff extendedtensorspec bash following statement true hierarchicalspectrainstate simplespecstate hierarchicalspectrainaction simplespecaction hierarchicalspeckeys trainstate trainaction hierarchicalspectrainkeys state action want use spec another time input bash hierarchicalspecval tensorspecutilscopytensorspec simplespec prefix val following statement true hierarchicalspeckeys trainstate trainaction valstate valaction hierarchicalspectrainkeys state action hierarchicalspectrainstatename train hierarchicalspecvalkeys state action hierarchicalspecvalstatename vals manually extendingcreating hierarchical spec existing simple spec also possible tensorspec immutable data structure therefore recommend way alter spec bash hierarchicaltrainstate extendedtensorspecfromspec hierarchicaltrainstate parameter overwrite different way changing hierarchical spec would bash key value simplespecitems hierarchicaltest key extendedtensorspecfromspec value namesomethingrandomvaluename hierarchicalspeckeys trainstate trainaction valstate valaction teststate testaction hierarchicalspectrainkeys state action hierarchicalspecvalkeys state action hierarchicalspectestkeys state action hierarchicalspecteststatename somethingrandoms sequential input tensor2robot parse tftrainexample tftrainsequenceexample protos useful training recurrent model like lstms declare model whose data parsed sequenceexamples set issequencetrue bash spec state extendedtensorspec shape8128 dtypetffloat32 name issequencetrue result parsed tensor shape b128 b batch size second dimension unknown sequence length known runtime note issequencetrue extendedtensorspec tensorspecstruct proto assumed sequenceexample nonsequential tensor assumed reside examplecontext flattening hierarchical specification structure valid spec structure flattened tensorspecutilstensorspecstruct following show different hierarchical data structure effect flattenspecstructure bash flathierarchy tensorspecutilsflattenspecstructurehierarchical note tensorspecutilstensorspecstruct flat dictionary access printaccesschange element spec iterating item bash key value flathierarchyitems print path spec formatkey value print path trainstate spec extendedtensorspec shape8 128 dtypetffloat32 name train path trainaction spec extendedtensorspec shape8 dtypetffloat32 name traina path valstate spec extendedtensorspec shape8 128 dtypetffloat32 name vals path valaction spec extendedtensorspec shape8 dtypetffloat32 name vala path teststate spec extendedtensorspec shape8 128 dtypetffloat32 name somethingrandoms path testaction spec extendedtensorspec shape8 dtypetffloat32 name somethingrandoma data structure still maintains hierarchical user interface train flathierarchytrain key value flathierarchyitems print path spec formatkey value print path state spec extendedtensorspec shape8 128 dtypetffloat32 name train path action spec extendedtensorspec shape8 dtypetffloat32 name traina note path ha changed name still hierarchy important distinction model could access data different manner name used access tfexamples feeddicts order feed tensor alternative hierarchical spec using namedtuples bash hierarchy namedtuple hierarchy train val sample namedtuple sample state action hierarchy hierarchy trainsample stateextendedtensorspecshape8 128 dtypetffloat32 name train actionextendedtensorspecshape8 dtypetffloat32 name traina evalsample stateextendedtensorspecshape8 128 dtypetffloat32 name vals actionextendedtensorspecshape8 dtypetffloat32 name vala flathierarchy tensorspecutilsflattenspecstructurehierarchy key value flathierarchyitems print path spec formatkey value print path trainstate spec extendedtensorspec shape8 128 dtypetffloat32 name train path trainaction spec extendedtensorspec shape8 dtypetffloat32 name traina path valstate spec extendedtensorspec shape8 128 dtypetffloat32 name vals path valaction spec extendedtensorspec shape8 dtypetffloat32 name vala note hierarchy namedtuple immutable whereas flathierarchy mutable instance tensorspecstruct validate flatten pack tensorspecutilsvalidateandflatten tensorspecutilsvalidateandpack allow verify existing eg loaded spec data structure filled tensor fulfills expected spec structure flattened packed hierarchical structure disclaimer official google product external support guaranteed api may change subject alphabet need file github issue question,"[('dtypetffloat32', 'name'), ('spec', 'extendedtensorspec')]"
MAPIRlab/rf2o_laser_odometry,C++,rf2olaserodometry estimation 2d odometry based planar laser scan rf2o fast precise method estimate planar motion lidar consecutive range scan useful mobile robot inaccurate wheel odometry every scanned point formulate range flow constraint equation term sensor velocity minimize robust function resulting geometric constraint obtain motion estimate conversely traditional approach method doe search correspondence performs dense scan alignment based scan gradient fashion dense 3d visual odometry low computational cost 09 millisecond single cpu core together whit high precision make rf2o suitable method robotic application require planar odometry full description algorithm please refer planar odometry radial laser scanner range flowbased approach icra 2016 available,"[('planar', 'odometry'), ('rf2olaserodometry', 'estimation')]"
Opentrons/opentrons,Other,opentrons platform codecovbadge overview opentrons make robot biologist mission provide scientific community common platform easily share protocol reproduce work robot automate experiment would otherwise done hand allowing user spend time pursuing answer 21st century important question le time pipetting repository contains source code opentrons api ot app love explore hack build upon opentrons api opentrons api simple framework designed make writing automated biology lab protocol easy designed way hope accessible anyone basic computer wetlab skill bench scientist able code automated protocol way read like lab notebook python pipetteaspiratelocationtrough a1 volume30 pipettedispenselocationwellplate a1 volume30 example tell opentrons ot2 pipette 30 l liquid trough well plate learn documentation source code opentrons app easily upload protocol calibrate position run experiment computer download documentation source code opentrons protocol designer easily create protocol run robot graphical tool access documentation source code contributing love contributor best way work u filing bug report fix quickly appreciate help uncovering bug code submit pull request new feature added branch api app reach talk integration testing launching product information development setup instruction please read contributing guide enjoy,"[('source', 'code'), ('code', 'opentrons')]"
mikeferguson/ros2_cookbook,Other,ros2 cookbook client library rclcpp api logging node component parameter point cloud time tf2 workarounds rclpy api node parameter time tf2 ros2launch networking dd cyclonedds command line tool ros2 run pkg node ros2 node list ros2 topic list ros2 topic info topicname verbose give detail qos ros2 param list colcon build tool ros2 doctor report give ton information cmake packaging setting bloomgit always use ssh git config global urlsshgitgithubcominsteadof rosdep install frompaths src ignoresrc rosdistrohumble package documentation status page humble debian build status foxy debian build status rolling debian build status compare foxyrolling license rellicense href content cookbook placed public domain cc0 license use code snippet code without attribution without impact license choice cookbook provided asis without warranty kind see full text cc0 license required license want copy entire cookbook somewhere please give attribution,"[('debian', 'build'), ('build', 'status')]"
AngelLM/Thor,Other,thor open source printable robot arm six degree freedom configuration yawrollrollyawrollyaw used manipulator robot market extended position thor 625mm high lift load 750 gram project started 2015 final degree project called design implementation open source 3d printed 6dof robotic arm since project ha continued develop little little main purpose project wa design robot could used university school teach roboticswith mind design affordable accessible releasing source file open source licence wa best option anyone could study element robot depth moreover modify adapt need cost whole material 350 affordable think almost every schooluniversitymaker could make good use least one term license wanted project open source want anyone opportunity study modify improve thor ha developed using open source tool freecad 3d modeling kicad pcb design gbrl firmware control electronics way access knowledge guaranteed anyone anywhere without economic cost single reason hacking thor want know project visit thor website find documentation manual forum solve doubt repository index doc misc documentation file freecadsrc freecad source file every piece thor step step file every piece thor stl stl file every piece thor wiki faq frequently asked question component list buy list every component needed project link online shop bought thorbuilders list thor builder license file included repository licensed creative common attributionsharealike 40 international license,"[('open', 'source'), ('file', 'every')]"
fredoverflow/karel,Other,brauchst du hilfe beim installieren window dann schau dir karel robot installieren window hangthelampions table content background getting started autosave language reference primitive command custom command repeat ifelse primitive condition ifelse summary compound condition keyboard shortcut background karel robot simple teaching environment imperative programming basic original idea wa developed 1970s richard pattis stanford university 1970s stanford graduate student named rich pattis decided would easier teach fundamental programming student could somehow learn basic idea simple environment free complexity characterize programming language pattis sophisticated language like java many detail learning detail often becomes focus course happens much critical issue problem solving tend get lost shuffle starting karel concentrate solving problem beginning karel encourages imagination creativity quite lot fun along way project started 2012 due dissatisfaction available karel environment since thousand german university student introduced basic imperative programming via project getting started brauchst du hilfe beim installieren window dann schau dir karel robot installieren window please take time read following instruction carefully problem stem skipping misunderstanding important step window macos visit click latest release button download java installer wait download finish open downloads folder via window explorer finderspotlight respectively doubleclick openjdk start java installer click next next install finish click kareljar download karel karel fails download continue troubleshooting window troubleshooting macos open downloads folder doubleclick kareljar start karel karel fails start continue troubleshooting window troubleshooting macos troubleshooting window stepsthroughinstall java worked stepsdownload karel orstart karel failed read move mouse script button appears top right corner script click button copy script cmd cd downloads exist kareljarzip erase kareljarzip curl kareljar echo java version karelcmd echo java jar kareljar karelcmd karelcmd press window key key bottom left window logo writecmd confirm enter terminal appears rightclick anywhere inside terminal paste execute script simply doubleclick karelcmd downloads folder start karel feel free move kareljar karelcmd desktop folder prefer troubleshooting macos stepsthroughinstall java worked stepsdownload karel orstart karel failed read move mouse script button appears top right corner script click button copy script sh cd downloads curl kareljar chmod x kareljar echo java version karelsh echo java jar kareljar karelsh chmod x karelsh karelsh presscommand spaceor click magnifying glass top right corner screen open spotlight writeterminaland confirm enter terminal appears presscommand v paste execute script simply doubleclick karelsh downloads folder start karel feel free move kareljar karelsh desktop folder prefer ubuntu linux mint debian sh sudo apt install defaultjdk cd downloads curl kareljar chmod x kareljar echo java version karelsh echo java jar dsunjava2dopengltrue kareljar karelsh chmod x karelsh karelsh simply doubleclick karelsh downloads folder start karel feel free move kareljar karelsh desktop folder prefer autosave code automatically saved new file time click start button save folder named karel located home directory full path displayed title bar language reference primitive command shortcut command meaning f1 moveforward karel move one square forward direction currently facesfails wall block way f2 turnleft karel turn 90 left f3 turnaround karel turn 180 around f4 turnright karel turn 90 right f5 pickbeeper karel pick beeper square currently stand onfails beeper f6 dropbeeper karel drop beeper onto square currently stand onfails already beeper custom command sometimes sequence command appears multiple time void roundtrip moveforward moveforward moveforward moveforward moveforward moveforward moveforward moveforward moveforward turnaround moveforward moveforward moveforward moveforward moveforward moveforward moveforward moveforward moveforward extract sequence command new custom command void moveacrossworld moveforward moveforward moveforward moveforward moveforward moveforward moveforward moveforward moveforward use like primitive command void roundtrip moveacrossworld turnaround moveacrossworld deciding sequence command worth extracting choosing good name custom command essential development skill acquire time repeat instead writing sequence command multiple time void dance moveforward turnleft moveforward turnleft moveforward turnleft moveforward turnleft use repeat write void dance repeat moveforward turnleft ifelse sometimes want something condition hold onbeeper pickbeeper optionally also specify case condition doe hold onbeeper pickbeeper else dropbeeper note condition checked control flow actually reach corresponding line highlighted code editor condition periodically checked background large program lot potentially contradicting conditionals periodic background check would quickly lead incomprehensible program behavior primitive condition shortcut condition meaning f7 onbeeper karel check whether beeper square currently stand f8 beeperahead karel check whether beeper square immediately front f9 leftisclear karel check whether wall square left f10 frontisclear karel check whether wall square front f11 rightisclear karel check whether wall square right ifelse else nothing another inside leftisclear turnleft else rightisclear turnright simplified leaving block else leftisclear turnleft else rightisclear turnright note without else karel might turn left immedately turn right given frontisclear originally held else prevents second executing case first condition wa already true ifelse empty first block onbeeper else dropbeeper simplified negating condition leading onbeeper dropbeeper nothing another inside frontisclear beeperahead moveforward pickbeeper simplified combining condition frontisclear beeperahead moveforward pickbeeper ifelse identical block frontisclear turnright else beeperahead turnright simplified combining condition frontisclear beeperahead turnright summary compound condition condition meaning hold doe hold vice versa b hold b hold b hold b hold b c b c check condition executes block void moveforwardsafely frontisclear moveforward line executedortimes rechecks condition block executed void movetowall frontisclear moveforward line executedtotimes keyboard shortcut window effect macintosh f1 moveforward f1 f2 turnleft f2 f3 turnaround f3 f4 turnright f4 f5 pickbeeper f5 f6 dropbeeper f6 f7 onbeeper f7 f8 beeperahead f8 f9 leftisclear f9 f10 frontisclear f10 f11 rightisclear f11 f12 startstep intoreset f12 tabenter autoindent tabenter ctrl space autocomplete control shift space ctrl alt r rename command command option r ctrl delete line command ctrl c copy command c ctrl x cut command x ctrl v paste command v ctrl z undo command z ctrl redo command,"[('moveforward', 'moveforward'), ('echo', 'java')]"
SintefManufacturing/python-urx,Python,urx python library control robot universal robot published lgpl license come absolutely guarantee meant easy use module pick place operation although ha used welding sensor based application require high control frequency secondary port interface realtimematlab interface ur controller used urx optionally use pythonmath3d library receive send transformation matrix robot urx known work release robot universal robot urx wa primarily developed olivier rouletdubonnet sintef raufoss manufacturing install easiest probably use pip pip install urx example use python import urx rob urxrobot1921680100 robsettcp0010robsetpayload20 01 sleep02 leave time robot process setup command robmovej135a v robmovelx z rx ry rz v print current tool pose robgetl robmovel0100a v relativetrue move relative current pose robtranslate010 v move tool keep orientation robstopja robmovelx z rx ry rz waitfalse true sleep01 sleep first since robot may processed command yet robisprogramrunning break robmovelx z rx ry rz waitfalse robgetforce 50 sleep001 robisprogramrunning break robstopl try robmovel0001000 relativetrue except roboterror ex printrobot could execute move emergency stop example something ex development using transform object math3d library python urx import robot import math3d m3d robot robot19216811 mytcp m3dtransform create matrix tool tcp mytcpposz 018 mytcporientrotatezbpi3 robotsettcpmytcp timesleep02 get current pose transform move robot new pose trans robotgetpose get current transformation matrix tool base transposz 03 transorientrotateybpi2 robotsetposetrans acc05 vel02 apply new pose work orientation part robotgetorientation orotateybpi robotsetorientationo interactive methodsproperties python urx import robot rob robot19216811 robx return current x robrx returnscould return x component axis vector usefull robrx 01 rotate tool around x axis robzt 001 move robot tool z axis 1cm csys robnewcsysfromxpy generate new csys frompoints x origin robsetcsyscsys robotiq gripper urx also control robotiq gripper attached ur robot robotiq class wa primarily developed mark silliman example use python import sys import urx urxrobotiqtwofingergripper import robotiqtwofingergripper name main rob urxrobot1921680100 robotiqgrip robotiqtwofingergripper iflensysargv print false sysexit ifsysargv1 close robotiqgripclosegripper ifsysargv1 open robotiqgripopengripper robsendprogramrobotiqgripretprogramtorun robclose print true sysexit,"[('robmovelx', 'z'), ('z', 'rx')]"
lgsvl/simulator,Other,svl simulator autonomous vehicle simulator website documentation download sunsetting svl simulator lg ha made difficult decision suspend active development svl simulator january2022 plan new bugfix release svl simulator 2022 new source code change pushed github review merging pull request submitted github svl simulator related plugins new simulator asset built shared update made existing asset svl simulator team make reasonable effort keep wisesvlsimulatorcom website running least thursday june 30 2022 also maintain svlsimulatorcom web site including simulator documentation page least thursday june 30 2022 time plan remove svl simulator source code related plugin project github open source project source code remain available anyone want build modify svl simulator apologize inconvenience may cause appreciate understanding sincerely svl simulator team question q svl simulator run locally without wisesvlsimulatorcom web site latest released version svl 20213 requires use wise web user interface cloud service download asset configure simulation cluster create launch simulation may possible remove dependency eg fork see build launch local simulator instance q lg release source code wise web user interface cloud service plan time release source code wise q would lg interested transferring svl simulator project someone interested taking project plan time transfer svl simulator project wise cloud service q simulator software license agreement changed plan time change simulator software license agreement q user share source code change fork svl simulator github project anyone able create fork fact already 500 fork svl simulator project user make change even submit pull request back original parent project plan review merge change main project user free review open pr create local build public fork q user share new build svl simulator simulator software license agreement allows modify create derivative work licensed material restricts commercial use therefore ok user share new build svl simulator long build sold otherwise used commercial purpose q svl simulator premium product andor cloud simulation service plan time offer svl simulator premium product cloud service q user still post technical question github technical question may posted svl simulator issue page github may answered svl simulator team encourage user help question issue posted q question addressed document question may posted svl simulator issue page github project readme stay informed check latest news subscribe mailing list get latest update introduction lg electronics america rd lab ha developed hdrp unitybased multirobot simulator autonomous vehicle developer provide outofthebox solution meet need developer wishing focus testing autonomous vehicle algorithm currently ha integration autoware foundation autowareauto use simulator apollo 60 master first download simulator binary follow running latest apollo doc use simulator autowareauto first download simulator binary follow guide autowareauto user china view latest video download simulator release code 6k91 paper using svl simulator research paper please cite itsc 2020 paper lgsvl simulator high fidelity simulator autonomous driving articlerong2020lgsvl titlelgsvl simulator high fidelity simulator autonomous driving authorrong guodong shin byung hyun tabatabaee hadi lu qiang lemke steve movzeiko marticnvs boise eric uhm geehoon gerow mark mehta shalin others journalarxiv preprint arxiv200503778 year2020 getting started find complete uptodate guide documentation website running simulator reasonable performance frame rate perception related task requires high performance desktop recommended system running simulator high quality currently working performance improvement better experience recommended system ghz quad core cpu nvidia gtx 1080 8gb gpu memory window 10 64 bit easiest way get started running simulator download latest release run standalone executable currently running simulator window yield better performance running linux downloading starting simulator download latest release svl simulator supported operating system window linux unzip downloaded folder run executable see full installation guide building running source would like customize simulator build simulation content access specific feature available developer mode clone project unity editor build project source check instruction getting started building source simulator instruction 20211 release onwards starting simulator see button link cloud use button link local simulator instance cluster web user interface create random traffic simulation standard setup select borregasave map jaguar2015xe apollo 50 sensor configuration vehicle click run begin vehicle spawn inside map environment wa selected read explanation current keyboard shortcut control follow guide respective autoware apollo 50 repository instruction running platform simulator note using release older 20211 please follow instruction documentation archive guide simulator functionality look guide currently available functionality feature contact please feel free provide feedback ask question creating github issue inquiry collaboration please email u contactsvlsimulatorcom copyright license copyright c 20192021 lg electronics inc software contains code licensed described license,"[('svl', 'simulator'), ('source', 'code')]"
robotframework/QuickStartGuide,Python,robot framework quick start guide robot framework quick start guide introduces important robot framework feature simply browse look example also use guide executable demo guide quickstartrst file,"[('robot', 'framework'), ('framework', 'quick')]"
ilpincy/argos3,C++,argo readme author carlo pinciroli email ilpincygmailcom date november 26th 2019 argo argo physicsbased simulator designed simulate largescale robot swarm benchmark result show argo perform physicsaccurate simulation involving thousand robot fraction real time argo main feature multithreaded deeply modular architecture flexible simulator equivalent feature possibility run multiple physic engine time possibility divide physical space region assign different region different physic engine starting versionargos released term mit license downloading argo download binary package argo alternatively download development source git git clone argos3 compiling argo requirement downloaded source argo want compile code need unix system linux macosx microsoft window supported g 54 linux clang 31 macosx cmake 351 want compile simulator need freeimage 315 openglbased graphical visualization compiled following library found qt 55 freeglut 260 libxidev ubuntu debianbased system libxmudev ubuntu debianbased system want create lua wrapper need lua 53 want create documentation need create api doxygen 173 graphvizdot 228 create html version readme asciidoc 862 debian debian install necessary requirement following command sudo aptget install cmake libfreeimagedev libfreeimageplusdev qt5default freeglut3dev libxidev libxmudev liblua53dev lua53 doxygen graphviz libgraphvizdev asciidoc opensuse opensuse 132 install necessary requirement following command sudo zypper ar n opensuse132graphics graphic sudo zypper refresh sudo zypper install git cmake gcc gccc freeimagedevel doxygen graphviz asciidoc luadevel libqt5qtbase freeglutdevel rpmbuild mac osx mac install necessary requirement using command line type following command brew install pkgconfig cmake libpng freeimage lua qt docbook asciidoc graphviz doxygen compiling code compilation argo configured cmake fast compilation instruction compiling argo simulator cd argos3 mkdir buildsimulator cd buildsimulator cmake src make compiling argo robot execute command installing argo laptop command meant install argo real robot cd argos3 mkdir buildmyrobot cd buildmyrobot cmake dargosbuildformyrobot src make compiling documentation cd argos3 cd buildsimulator cd buildmyrobot make doc argo source eclipse use eclipse argo source must installed optionally also install modify cmakeliststxt file comfortably within eclipse configure argo source eclipse better avoid compiling code separate build directory detail see thus execute cmake follows cd argos3 cmake g eclipse cdt4 unix makefiles src open eclipse click file import select existing project workspace click next set base argos3 directory root directory dialog appears click next ready go advanced compilation configuration compilation argo configured set cmake option optionsheader variable type meaning default value cmakebuildtype string build type debug release etc empty cmakeinstallprefix string install prefix usr usrlocal etc usrlocal argosbuildfor string target compilation simulator robot name simulator argosbuildnative boolean whether use platformspecific instruction argosthreadsafelog boolean use threadsafe version loglogerr argosdynamicloading boolean compile use dynamic loading facility argosusedouble boolean use double float argosdocumentation boolean create api documentation argosinstallldsoconf boolean install file etcldsoconfargos3conf linux mac pas wanted value command line instance wanted set explictly default value compiling linux would write cd argos3buildsimulator cmake dcmakebuildtypedebug dcmakeinstallprefixusrlocal dargosbuildforsimulator dargosbuildnativeoff dargosthreadsafelogon dargosdynamicloadingon dargosusedoubleon dargosdocumentationon dargosinstallldsoconfon src important argosbuildfor set simulator argosthreadsafelog argosdynamicloading must important want install argo without root privilege remember set argosinstallldsoconf otherwise installation fail midway tip production environment recommended compile argo cmakebuildtype set release want debug argo recommended set cmakebuildtype debug standard setting empty relwithdebinfo supported avoided tip want squeeze maximum performance argo along compiling cmakebuildtype set release also set argosbuildnative setting instructs compiler use compiler flag marchnative mtunenative code run faster use entire instruction set processor generated binary portable computer different processor using argo simulator source tree important install argo systemwide run source version time intend run argo source must uninstall system running argo simulator want install argo system run source tree directory buildsimulator find bash script called setupenvsh executing script configure current environment run argo cd argos3 cd buildsimulator setupenvsh source setupenvsh cd core argos3 q show plugins recognized argo execute argo graphical visualization notice icon model texture missing normal argo default look default install location fix need edit default setting gui linux edit file homeconfigiridiaulbargosconf follows mainwindow stuff icondirpathtoargos3srcpluginssimulatorvisualizationsqtopenglicons texturedirpathtoargos3srcpluginssimulatorvisualizationsqtopengltextures modeldirpathtoargos3srcpluginssimulatorvisualizationsqtopenglmodels stuff mac write following command terminal window fix path manually default write infoargossimargos mainwindowtexturedir string pathtoargos3srcpluginssimulatorvisualizationsqtopengltextures default write infoargossimargos mainwindowmodeldir string pathtoargos3srcpluginssimulatorvisualizationsqtopenglmodels default write infoargossimargos mainwindowicondir string pathtoargos3srcpluginssimulatorvisualizationsqtopenglicons killall u yourusername cfprefsd use command delete path argo look default write infoargossimargos killall u yourusername cfprefsd sure substitute pathto correct path contains argos3 folder yourusername username displayed terminal debugging argo simulator debug argo code using gdb since code scattered across multiple directory need gdbinit file luckily file created automatically compile argo use need remember run argo simulator buildsimulatorcore directory cd argos3buildsimulatorcore gdb argos3 installing argo compiled binary install argo compiled source enough write cd argos3 cd buildsimulator cd buildmyrobot make doc documentation required sudo make install alternatively one create package build package supported system run command cd argos3 git tag xyzrelease give package unique version format must shown x version major version minor z version patch release textual label cd buildsimulator cd buildmyrobot cmake let cmake read newly set tag make doc documentation required make compile code sudo make package make package typically creates selfextracting targz archive tarbz2 archive zip archive platformspecific archive deb rpm macosx package determine package create setting variable cpackbinarydeb cpackbinaryrpm cpackbinarystgz cpackbinarytbz2 cpackbinarytgz cpackbinarytz important creation source package command make packagesource supported easier option install argo package distributed,"[('cd', 'argos3'), ('install', 'argo')]"
hungpham2511/toppra,Python,toppra timeoptimal path parameterization integrate overview support citing toppra overview toppra library computing timeoptimal path parametrization robot subject kinematic dynamic constraint general given input geometric path p insend list constraint joint velocity joint acceleration tool cartesian velocity et cetera toppra return timeoptimal path parameterization sdot fastest trajectory qt satisfies given constraint found documentation tutorial available install package pip shell pip install toppra install source development shell pip install r requirement3txt pip install e support bug tracking please report issue question feature request via github issue tracker quick question try asking slack channel contribution pull request welcome create pull request review proposal credit toppra wa originally developed hung pham eureka robotics former cri group pham quang cuong eureka robotics cri group major contribution talented contributor joseph mirabel c api edsterg python3 support taken part developing supporting library feel free add name list development also generously supported eureka robotics citing toppra use library research encourage reference accompanying paper new approach timeoptimal path parameterization based reachability analysis ieee transaction robotics vol 343 pp 645659 2018 put star repository,"[('timeoptimal', 'path'), ('path', 'parameterization')]"
isl-org/OpenBot,Other,turning smartphones robot english openbot leverage smartphones brain lowcost robot designed small electric vehicle cost 50 serf robot body software stack android smartphones support advanced robotics workload person following realtime autonomous navigation get started openbot build robot body flash arduino firmware install android apps drive robot via controller train driving policy get source code download repo zip file extract folder choice clone openbot repository github following command bash git clone fork openbot repository clone local copy recommended especially want contribute video contact join slack channel connect openbot community contact u via email contribute please read contribution guideline sure start look open issue citation please cite paper use openbot bib inproceedingsmueller2021openbot title openbot turning smartphones robot author muller matthias koltun vladlen booktitle proceeding international conference robotics automation icra year 2021,"[('turning', 'smartphones'), ('smartphones', 'robot')]"
nokia/RED,Other,red robot editor important red currently actively developed maintained general information red modern editor based eclipse ide provide efficient comfortable work robotframework testware latest release red 095 20200724 install marketplaceupdate site marketplace click help eclipse marketplace type find field red update site click help install new software add set address location red help red robot editor application help red provides text editor validation code coloring table editor like ride fully synced source debugremote debug breakpoints testcase stepping step step runtime variable lookup modification debugging robot testcases python libs one red instance code assistance completion variable keywords testcases resource library real time testcase validation execution view support plugins via eclipse mechanism support robot format txt robot tsv html format supported binary distribution red distributed independent binary red eclipse product eclipse feature installed existing eclipse binary binary found release folder installation instruction found look feel license project licensed apache20 license see license,"[('red', 'robot'), ('robot', 'editor')]"
mjbots/moteus,C++,moteus brushless servo contains full design moteus brushless servo actuator including firmware pcbs warning software project includes design moderately high power electronics ha yet burned anyone know house guarantee specification name r411 n1 voltage input 1044v 1054v peak electrical power 500w 1200w mass 142g 146g control rate 1530khz pwm switching rate 1560khz cpu 170mhz stm32g4 peak phase current 100a communication 5mbps canfd dimension 46x53mm 46x46x8mm assembled tested board purchased directory structure hw hardware mechanical electrical design controller pcb design moteusr411 n1 pcb design moteusn1 fw firmware brushless controller lib client side software utils diagnostic tool tool bazel build configure doc documentation documentation getting started reference discord misc travisci build status support moteus development easiest way support development moteus hardware firmware followsbuy thing build awesome machine reason want go beyond sponsor mjbots github license file contained repository unless otherwise noted available apache 20 license trademark mjbots robotic system llc owns protects mjbots moteus trademark many jurisdiction want use name project product please read trademark policy,"[('moteus', 'brushless'), ('brushless', 'servo')]"
ros-controls/ros_controllers,C++,roscontrollers see roscontrol roscontrollers documentation rosorg build status indigo kinetic lunar melodic noetic build status build status build status build status build status branch sourcebased installation indigo kinetic lunar melodic indigodevel kineticdevel kineticdevel melodicdevel publication find work useful please give credit author citing chitta e mardereppstein w meeussen v pradeep rodriguez tsouroukdissian j bohren coleman b magyar g raiola ludtke e fernandez perdomo roscontrol generic simple control framework journal open source software 2017 pdf articleroscontrol author chitta sachin mardereppstein eitan meeussen wim pradeep vijay rodr iguez tsouroukdissian adolfo bohren jonathan coleman david magyar bence raiola gennaro ludtke mathias fern andez perdomo enrique title roscontrol generic simple control framework journal journal open source software year 2017 doi 1021105joss00456 url,"[('build', 'status'), ('status', 'build')]"
utiasSTARS/pykitti,Python,pykitti package provides minimal set tool working kitti datasetin python far raw datasets odometry benchmark datasets supported working adding support others welcome contribution community installation using pip install pykitti via pip using pip install pykitti source install package source simply clone download repository machine git clone run provided setup tool cd pykitti python setuppy install assumption package assumes also downloaded calibration data associated sequence want work separate file sequence directory structure unchanged original structure laid kitti zip file notation homogeneous coordinate transformation provided 4x4 numpyarray object denoted tdestinationframeoriginframe pinhole camera intrinsics camera n provided 3x3 numpyarray object denoted kcamn stereo pair baseline given meter bgray monochrome stereo pair cam0 cam1 brgb color stereo pair cam2 cam3 example detailed example found demo directory general idea specify dataset want load access part need something camera velodyne data available via generator easy sequential access eg visual odometry indexed getter method random access eg deep learning image loaded pilimage object using pillow python import pykitti basedir yourdatasetdir date 20110926 drive 0019 frame argument optional default none load whole dataset calibration timestamps imu data read automatically camera velodyne data available via property create generator accessed getter method provide random access data pykittirawbasedir date drive framesrange0 50datasetcalib calibration data accessible named tuple datasettimestamps timestamps parsed list datetime object datasetoxts list oxts packet 6dof pose named tuples datasetcamn return generator load individual image camera n datasetgetcamnidx return image camera n idx datasetgray return generator load monochrome stereo pair cam0 cam1 datasetgetgrayidx return monochrome stereo pair idx datasetrgb return generator load rgb stereo pair cam2 cam3 datasetgetrgbidx return rgb stereo pair idx datasetvelo return generator load velodyne scan xyzreflectance datasetgetveloidx return velodyne scan idx pointvelo nparray0001 pointcam0 datacalibtcam0velodotpointvelo pointimu nparray0001 pointw otwimudotpointimu dataoxts cam0image datacam0 something pas cam2image cam3image datagetrgb3 opencv pil image data converted opencvfriendly format using numpy cv2cvtcolor python imgnp nparrayimg imgcv2 cv2cvtcolorimgnp cv2colorrgb2bgr note package doe actually require opencv installed system except run demorawcv2py referencesa geiger p lenz c stiller r urtasun vision meet robotics kitti dataset int j robot research ijrr vol 32 11 pp 12311237 sep 2013,"[('stereo', 'pair'), ('return', 'generator')]"
openrr/openrr,Other,openrr open rust robotics build status cratesio codecov doc developer future user doc discord tutorial openrr pronounced like opener open rust robotics platform heavily development supported platform oscoreguirosros2 linux ubuntu macos window use without installation linuxmacos ros2 support experimental see arciros2 detail dependency linux bash sudo apt install cmake buildessential libudevdev xorgdev libglu1mesadev libasound2dev libxkbcommondev protobufcompiler cmake buildessential openrrplanner assimpsys libudevdev arcigamepadgilrs xorgdev libglu1mesadev libxkbcommondev openrrgui egui libasound2dev arcispeakaudio protobufcompiler openrrremote architecture architecture arci hardware abstraction layer openrr currently ros1 urdfviz static simulator actually viewer implemented write platformhardware independent code use arci trait openrr openrr contains abstract robot interface arci concrete implementation interface arciros arciurdfviz library us interface openrrclient tool openrrapps pure library nothing arci openrrplanner tool currently tool control realsim robot see openrrapps detail jointtrajectorysender inspired jointstatepublishergui img width400 altjointsender src use gui anything implement arcijointtrajectoryclient write small binary main function robotcommand general cli access arci robot client support sending joint trajectory directly support inverse kinematics selfcollision check navigation format format use nightly rustfmt bash cargo nightly fmt license licensed apache license version 20 related openrr repository k kinematics library rosnalgebra rosrust nalgebra converter generator rrt rrtdualconnect path planner trajectory trajectory interpolator urdfrs urdf parser urdfviz urdf visualizer gear deprecated motion planning library openrrplanner openrr strongly believe rust future robotics openrr world first robotics platform made rust made rust reference base future robotic people like u contribution appreciate contribution create issue first discord server using openrr read tutorial book following link english japanese,"[('open', 'rust'), ('rust', 'robotics')]"
dougsm/ggcnn,Python,note cleanedup pytorch port ggcnn code original kera implementation see rss2018 branch main change major code cleanup documentation improved ggcnn2 model ability use jacquard dataset simpler evaluation generative grasping cnn ggcnn ggcnn lightweight fullyconvolutional network predicts quality pose antipodal grasp every pixel input depth image lightweight singlepass generative nature ggcnn allows fast execution closedloop control enabling accurate grasping dynamic environment object moved grasp attempt repository contains implementation generative grasping convolutional neural network ggcnn paper closing loop robotic grasping realtime generative grasp synthesis approach douglas morrison peter corke jurgen leitner robotics science system r 2018 arxiv video use work please cite text inproceedingsmorrison2018closing titleclosing loop robotic grasping realtime generative grasp synthesis approach authormorrison douglas corke peter leitner jurgen booktitleproc robotics science system r year2018 contact question comment contact doug morrison installation code wa developed python 36 ubuntu 1604 python requirement installed bash pip install r requirementstxt datasets currently cornell grasping dataset jacquard dataset supported cornell grasping dataset download extract cornell grasping dataset convert pcd file depth image running python utilsdatasetprocessinggeneratecornelldepth path dataset jacquard dataset download extract jacquard dataset pretrained model example pretrained model ggcnn ggcnn2 downloaded full saved model torchsavemodel andthe weight state dict torchsavemodelstatedict example loading ggcnn replace ggcnn ggcnn2 required bash enter directory cloned repo cd pathtoggcnn download weight wget unzip weight unzip ggcnnweightscornellzip load weight python eg python import torch optionload model directly may print warning based installed version python model torchload ggcnnweightscornellggcnnepoch23cornell model ggcnn conv1 conv2d1 32 kernelsize9stride3padding3 conv2 conv2d32 16 kernelsize5stride2padding2 conv3 conv2d16kernelsize3stride2padding1 convt1 convtranspose2d8kernelsize3stride2padding1outputpadding1 convt2 convtranspose2d8 16 kernelsize5stride2padding2outputpadding1 convt3 convtranspose2d16 32 kernelsize9stride3padding3outputpadding1 posoutput conv2d32kernelsize2stride1 cosoutput conv2d32kernelsize2stride1 sinoutput conv2d32kernelsize2stride1 widthoutput conv2d32kernelsize2stride1 optioninstantiate model load weight modelsggcnn import ggcnn model ggcnn modelloadstatedicttorchload ggcnnweightscornellggcnnepoch23cornellstatedictpt training training done trainggcnnpy script run trainggcnnpy help see full list option dataset augmentation validation option basic example bash train ggcnn cornell dataset python trainggcnnpy description trainingexample network ggcnn dataset cornell datasetpath train ggcnn2 jacquard datset python trainggcnnpy description trainingexample2 network ggcnn2 dataset jacquard datasetpath trained model saved outputmodels default validation score appended evaluationvisualisation evaluation visualisation trained network done using evalggcnnpy script run evalggcnnpy help full set option important flag ioueval evaluate using iou grasping rectangle metric jacquardoutput generate output file format required simulated testing jacquard dataset vi plot network output predicted grasping rectangle example bash python evalggcnnpy network path trained network dataset jacquard datasetpath path dataset jacquardoutput ioueval running robot implementation running grasping system see original implementation running experiment kinva mico arm found repository,"[('jacquard', 'dataset'), ('dataset', 'jacquard')]"
ClemensElflein/OpenMower,Other,openmower diy smart mowing robot everyone license cc byncsa 40 discord join discord server openmower discussion warning disclaimer 100 sure please try home ask discord question project active hardware repository might seem project inactive since hardware pretty stable development work done code project want see quick overview check video current state basic mowing function finally work see video map teaching mowing work expected even return docking station automatically soon battery get low continues recharged point recommend brave tech savvy user build one since quite expensive complex project please shy ask question glad help hardware stable revision mainboard well two motor controller go xesc mini xesc 2040 currently using xesc mini build work well problem controller part currently hard source created xesc 2040 based rp2040 chip lowcost variant support currently experimental hardware todo x low level firmware implementation x voltage current sense x emergency stop button tracking x imu communication x rain sensor x charging state x sound module x ui board communication discharge current accurate battery charge estimation x hardware interface software basic software basically done prototype work intended able avoid obstacle yet software robot found separate repository software todo x mowing state machine docking mowing x path planning obstacle avoidance x app visualization getting started want read get started building robot check openmower website help help starting openmower build help validate concept help create useful documentation new user additionally help starring watching repository since help visibility also subscribe youtube channel compatible robotic mower disassembling bot wondered mainboard instead yardforce read gforce checking internet gforce robot found similar looking robotic mower sold herkules brand naturally tried dig deeper actually found evidence mainboard manufactured chinese company sumec hardware therefore quite safe assume many robot mower basically device different case would huge win community since would mean making one robot smarter could upgrade lot robot therefore might good idea start list compatible device cheap robotic lawn mower check wa already disassembled list would nice check contains mainboard add robot list picture model number list compatible mower guy disassembled mower look good initially hoped gforce board basically used yardforce rebranded version eu market exact hardware wa found mower using yardforce classic 500 recently manufactured sa650 ecos sa650 ha different chassis way mounting gps antenna yet therefore moment compatible mower mine yardforce classic 500 want look disassembled mower check google doc info page contains basic overview project follow current development state check blog patent local law liability building robot based design published please make sure allowed specific region may patent law prohibiting codeschematicspcb file distributed hope useful without warranty without even implied warranty merchantability fitness particular purpose basically mean documenting project mine free time resource check device built using information safe use legal use even work intended need technical knowhow use project liable damage device anyone anything license current state basic mowing function finally work see video map teaching mowing work expected even return docking station automatically soon battery get low continues recharged point recommend brave tech savvy user build one since quite expensive complex project please shy ask question glad help hardware stable revision mainboard well two motor controller go xesc mini xesc 2040 currently using xesc mini build work well problem controller part currently hard source created xesc 2040 based rp2040 chip lowcost variant support currently experimental hardware todo x low level firmware implementation x voltage current sense x emergency stop button tracking x imu communication x rain sensor x charging state x sound module x ui board communication discharge current accurate battery charge estimation x hardware interface software basic software basically done prototype work intended able avoid obstacle yet software robot found separate repository software todo x mowing state machine docking mowing x path planning obstacle avoidance x app visualization getting started want read get started building robot check openmower website help help starting openmower build help validate concept help create useful documentation new user additionally help starring watching repository since help visibility also subscribe youtube channel compatible robotic mower disassembling bot wondered mainboard instead yardforce read gforce checking internet gforce robot found similar looking robotic mower sold herkules brand naturally tried dig deeper actually found evidence mainboard manufactured chinese company sumec hardware therefore quite safe assume many robot mower basically device different case would huge win community since would mean making one robot smarter could upgrade lot robot therefore might good idea start list compatible device cheap robotic lawn mower check wa already disassembled list would nice check contains mainboard add robot list picture model number list compatible mower guy disassembled mower look good initially hoped gforce board basically used yardforce rebranded version eu market exact hardware wa found mower using yardforce classic 500 recently manufactured sa650 ecos sa650 ha different chassis way mounting gps antenna yet therefore moment compatible mower mine yardforce classic 500 want look disassembled mower check google doc info page contains basic overview project follow current development state check blog patent local law liability building robot based design published please make sure allowed specific region may patent law prohibiting codeschematicspcb file distributed hope useful without warranty without even implied warranty merchantability fitness particular purpose basically mean documenting project mine free time resource check device built using information safe use legal use even work intended need technical knowhow use project liable damage device anyone anything license rellicense href altcreative common license styleborderwidth0 src work licensed rellicense href common attributionnoncommercialsharealike 40 international license feel free use design privateeducational project try sell design product based without getting consent first idea share knowledge enable others simply sell work thank understanding,"[('xesc', 'mini'), ('xesc', '2040')]"
ros2/rviz,C++,rviz branch currently contained main ros2repos file rosand used rosthe latest release available rosdownload rosdoes wiki yet learn rviz functionality please refer rviz wiki page feature already ported feature already ported rosvisualizationrviz ros2rviz basic documentation still found rviz wiki page display documentation updated display tool view controller panel ax move camera orbit display camera focus camera xy orbit help depthcloud measure first person selection effort select third person follower time fluid 2d nav goal top orthographic tool property grid publish point view grid cell initial pose illuminance interact image interactive marker laser scan map marker marker array odometry point cloudand point polygon pose pose array pose covariance range relative humidity robot model temperature tf wrench yet ported feature stereo case wished see feature rviz rosfeel free add pull request make sure read developer guide migration guide new feature pluggable transformation library rviz rosthe frame transformation library used tf2 detailed information found rviz rosthe frame transformation library pluggable meaning different transformation library plugins loaded changed dynamically gui developer create use plugins provide custom transformation behavior two plugins bundled rviz plugin tf2 tfframetransformer rvizdefaultplugins provides standard tf2 functionality used default trivial plugin identityframetransformer rvizcommon always performs identity transforms plugin used default tf2 plugin available valid plugin specified anticipated order user choose plugin use rviz provides dedicated panel transformation panel note transformation plugins necessarily compatible rviz display eg default display like tf display work tf2 order take possibility account transformerguard class provided adding display ensures display disabled function case wrong transformer used detailed information write transformation plugin handle transformation specific display found plugin development guide developer guide build building rviz together rosthe simplest way build source use official installation guide since rviz part official rosrepos file building rviz separate workspace developing rviz beneficial build separate workspace note building current ros2 branch source latest rosrelease dependency might sufficient could necessary build rosmaster branch make sure source build rosavailable see installation procedure create new workspace mkdir p rviz2wssrc cd rviz2wssrc clone repository source folder git clone build package command colcon build mergeinstall mergeinstall flag optional ensures cleaner environment helpful development instruction example come addition rosdeveloper guide suggest following testing main rationale create code well tested avoiding highly coupled component avoid free function cannot mocked create abstract base class interface dependency allows mock completely independent actual implementing class use interface dependent code specify dependency constructor argument prefer stduniqueptr storing dependency instead raw pointer migration migrating rosvisualizationrviz ros2rviz please see extensive migration guide plugin development plugins extend rviz different extension point display panel tool frame transformation library view controller information writing plugins found plugin development guide icon copyright package contains public domain icon downloaded upstream author 20052009 ulisse perusin uliperugmailcom steven garrity sgarritysilverorangecom lapo calamandrei calamandreigmailcom ryan collier rcolliernovellcom rodney dawes dobeynovellcom andreas nilsson nissesmailhomese tuomas kuosmanen tigerttigertcom garrett lesage garrettnovellcom jakub steiner jimmacnovellcom icon graphic contained package released public domain well author 20122017 david gossow chad rockey kei okada julius kammerl acorn pooley rein appeldoorn copyright notice icon graphic package public domain dedication copyrightonly dedication based united state law public domain certification person person associated work document dedicator certifier hereby either certifies best knowledge work authorship identified public domain country work published b hereby dedicates whatever copyright dedicators hold work authorship identified work public domain certifier moreover dedicates copyright interest may associated work purpose described dedicator certifier ha taken reasonable step verify copyright status work certifier recognizes good faith effort may shield liability fact work certified public domain dedicator make dedication benefit public large detriment dedicator heir successor dedicator intends dedication overt act relinquishment perpetuity present future right copyright law whether vested contingent work dedicator understands relinquishment right includes relinquishment right enforce lawsuit otherwise copyright work dedicator recognizes placed public domain work may freely reproduced distributed transmitted used modified built upon otherwise exploited anyone purpose commercial noncommercial way including method yet invented conceived source,"[('public', 'domain'), ('transformation', 'library')]"
aurora-opensource/xviz,Other,xviz coverage status xviz protocol realtime transfer visualization autonomy data learn doc specification tool example repo contains following submodules xvizbuilder nodejs utility converting data xviz protocol xvizcli cli utility xviz protocol xvizio library loading accessing manipulating xviz data xvizparser clientside decoder synchronizer consuming xviz data xvizschema validation schema xviz protocol xvizserver complete server module supporting full xviz protocol example sample converter convert open datasets kitti nutonomy xviz protocol quick start need nodejs yarn run example bash clone xviz git clone cd xviz install dependency yarn bootstrap convert serve kitti example data bash download kitti data scriptsdownloadkittidatash convert kitti data necessary run xviz server client scriptsrunkittiexamplesh npm script bootstrap install dependency build rebuild module test run full test lint unit test node headless browser test bench bench run benchmark test test benchbrowser run benchmark test browser test node run unit test node test browser run test browser test browserheadless run test headless browser lint run lint lint fix run prettier publish beta publish beta release publish prod publish production release requirement contribution precommit hook yarn testfast requires jq installed brew install jq,"[('xviz', 'protocol'), ('test', 'node')]"
google-deepmind/tapnet,Python,tracking point tap tapvid tapir robotap blog post welcome official google deepmind repository tracking point tap home tapvid dataset topperforming tapir model robotap extension tapvid benchmark model perform task collection groundtruth point real synthetic video tapir matching stage independently locates suitable candidate point match query point every frame anda refinement stage update trajectory query feature based local correlation resulting model fast surpasses prior method significant margin tapvid benchmark robotap system utilizes tapir point track execute robotics manipulation task efficient immitation real world also includes dataset groundtruth point annotated real robotics manipulation video repository contains following tapir demo online using colab cloning repo tapvid benchmark dataset evaluation code robotap dataset point track based clustering code instruction training tapnet baseline presented tapvid paper tapir model kubric tapir demo simplest way run tapir use colab demo online also clone repo run tapir hardware including realtime demo colab demo run colab demo see tapir work also upload video try point tracking tapir provide two colab demo standard tapir powerful tapir model run whole video mainly report result model paper online tapir sequential tapir model allows online tracking point run realtime gpu platform live demo clone repository git clone switch project directory cd tapnet install requirement inference pip install r requirementsinferencetxt download checkpoint bash mkdir checkpoint wget p checkpoint add current path parent directory tapnet installed pythonpath export pythonpathcd pwdpwdpythonpath want use cuda make sure install driver version jax compatible cuda cudnn version refer jax manual install correct jax version cuda run pretrained causal tapir model live camera select point track bash cd python3 tapnetlivedemopy test achieved 17 fps 480x480 image quadro rtx 4000 tapvid benchmark tapvid dataset video along point track either manually annotated obtained simulator aim evaluate tracking trackable point solid physical surface algorithm receive single query point frame must produce rest track ie including point ha moved visible whether visible every frame requires pointlevel precision unlike prior work box segment tracking potentially deformable surface unlike structure motion long term unlike optical flow potentially object ie classagnostic unlike prior classspecific keypoint tracking human example annotated video davis kinetics datasets full benchmark incorporatesdatasets 30 video davis val set 1000 video kinetics val set 50 synthetic deepmind robotics video evaluation almost infinite point track ground truth largescale synthetic kubric dataset training detail downloading visualization dataset please see data section also include point tracking model tapnet code train kubric dataset tapnet outperforms optical flow structurefrommotion method tapvid benchmark achieving stateoftheart performance unsupervised human keypoint tracking jhmdb even though model track point clothes skin rather joint intended benchmark evaluating tapvid evaluationdatasetspy intended standalone copyandpasteable reader evaluator depends numpy basic tool tensorflow required reading kubric provides tensorflow reader default well file operation straightforward replace system without tensorflow dataset basic reader produce example dicts numpy array containing video query point target point occlusion flag evaluation datasets may used one two possible value querymode strided trajectory queried multiple time fixedlength stride query first trajectory queried first visible point query detail output see documentation samplequeriesstrided samplequeriesfirst compute metric use computetapvidmetrics file computes result batch final metric paper computed simple averaging across video dataset see documentation detail note output single query point depend query defined batch output whether query passed one time important query may leak information pixel grouped move property enforced current evaluation code algorithm violate principle considered valid competitor benchmark reader also supply video resized 256x256 resolution algorithm handle encourage using fullresolution video instead anticipate prediction video would scaled match 256x256 resolution computing metric prediction would however evaluated separate category consider comparable produced lowerresolution video note coordinate storage datasets x coordinate typically normalized raster coordinate ie0 upperleft corner upperleft pixel and1 lowerright corner lowerright pixel code however immediately convert regular raster coordinate matching output kubric reader0 upperleft corner upperleft pixel h w lowerright corner lowerright pixel h image height pixel w respective width working 2d coordinate typically store order x however typically work 3d coordinate order x x raster coordinate frame coordinate ierefers first frame 05 refers halfway first second frame please take care one pixel error make difference according metric comparison tracking without optical flow annotating video tapvid benchmark use track assist algorithm interpolates sparse point annotator click since requiring annotator click every frame prohibitively expensive specifically find track minimize discrepancy optical flow still connecting chosen point annotator check interpolation repeat annotation observe drift validate better approach simple linear interpolation clicked point annotated several davis video twice compare side side using flowbased interpolation using naive linear interpolation simply move point constant velocity point robotap benchmark point track based clustering robotap following work tapvid tapir demonstrates point tracking model important robotics robotap dataset follows annotation format tapvid released addition tapvid term domain robotap dataset mostly similar tapvidrgbstacking key difference robotics video real manually annotated video source object category also diversified benchmark dataset includes 265 video serving evaluation purpose detail downloading visualization dataset please see data section point track based clustering run colab demo see point track based clustering work given input video point track extracted tapir separated different cluster according different motion pattern purely based low level motion doe depend semantics segmentation label also upload video try point track based clustering tapnet tapir training inference install ffmpeg machine sudo apt update sudo apt install ffmpeg install openexr sudo aptget install libopenexrdev clone repository git clone add current path parent directory tapnet installed pythonpath export pythonpathcd pwdpwdpythonpath switch project directory cd tapnet install kubric subdirectory git clone install requirement pip install r requirementstxt want use cuda make sure install driver version jax compatible cuda cudnn version refer jax manual install correct jax version cuda usage configuration file located configstapnetconfigpy modify need create config file following example tapnetconfigpy launch experiment run command python experimentpy config configstapnetconfigpy python experimentpy config configstapirconfigpy evaluation run evaluation particular dataset ie tapviddavis using command bash python3 tapnetexperimentpy configtapnetconfigstapirconfigpy jaxlinemodeevaldavispoints configcheckpointdirtapnetcheckpoint configexperimentkwargsconfigdavispointspathpathtotapviddavispkl available eval datasets listed supervisedpointpredictionpy download baseline checkpoint tapnetcheckpoint must contain file checkpointnpy loadable using numpyfilecheckpointer download checkpoint wa obtained via opensource version code closely match one used write paper inference run inference particular video ie horsejumphighmp4 using command bash python3 tapnetexperimentpy configtapnetconfigstapnetconfigpy jaxlinemodeevalinference configcheckpointdirtapnetcheckpoint configexperimentkwargsconfiginferenceinputvideopathhorsejumphighmp4 configexperimentkwargsconfiginferenceoutputvideopathresultmp4 configexperimentkwargsconfiginferenceresizeheight256 configexperimentkwargsconfiginferenceresizewidth256 configexperimentkwargsconfiginferencenumpoints20 inference serf example resize video 256x256 resolution sample 20 random query point first frame track random point rest frame also note current checkpoint trained 256x256 resolution ha trained resolution citing work please use following bibtex entry cite work inproceedingsdoersch2022tapvid author doersch carl gupta ankush markeeva larisa continente adria recasens smaira kucas aytar yusuf carreira joao zisserman andrew yang yi title tapvid benchmark tracking point video booktitleneurips datasets track year 2022 articledoersch2023tapir titletapir tracking point perframe initialization temporal refinement authordoersch carl yang yi vecerik mel gokay dilara gupta ankush aytar yusuf carreira joao zisserman andrew journaliccv year2023 articlevecerik2023robotap titlerobotap tracking arbitrary point fewshot visual imitation authorvecerik mel doersch carl yang yi davchev todor aytar yusuf zhou guangyao hadsell raia agapito lourdes scholz jon journalarxiv preprint arxiv230815975 year2023 license disclaimer copyright 2022 deepmind technology limited software licensed apache license version 20 apache 20 may use file except compliance apache 20 license may obtain copy apache 20 license material licensed creative common attribution 40 international license ccby may obtain copy ccby license particular annotation tapvid well rgbstacking video released creative common license original source video davis come val set also licensed creative common license per creator see davis dataset detail kinetics video publicly available youtube subject individual license see kinetics dataset webpage detail unless required applicable law agreed writing software material distributed apache 20 ccby license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license official google product,"[('point', 'track'), ('tapvid', 'benchmark')]"
Hypfer/Valetudo,Other,free vacuum cloud valetudo cloud replacement vacuum robot enabling localonly operation custom firmware diagram illustrating core operation principle img src width360 tabletdesktop image image image image question valetudo telegram group honourable mention valetudo companion application developed using jetbrains ides webstorm license provided free jetbrains project context open source support program since multiple year thanks lot,"[('image', 'image'), ('free', 'vacuum')]"
simbody/simbody,C++,simbody travisci appveyorci codecovci simbody highperformance opensource toolkit science engineeringquality simulation articulated mechanism including biomechanical structure human animal skeleton mechanical system like robot vehicle machine anything else described set rigid body interconnected joint influenced force motion restricted constraint simbody includes multibody dynamic library modeling motion generalizedinternal coordinate time sometimes called featherstonestyle physic engine simbody provides c api used build domainspecific application standalone application example used biomechanists opensim roboticists gazebo biomolecular research macromoleculebuilder mmb artful simulation several rna molecule containing thousand body performed mmb samuel floresflores simbios read simbody simbody homepage simple example double pendulum code simulate visualize 2link chain cpp include simbodyh using namespace simtk int main define system multibodysystem system simbodymattersubsystem mattersystem generalforcesubsystem forcessystem forcegravity gravityforces matter yaxis 98 describe mass visualization property generic body bodyrigid bodyinfomassproperties10 vec30 unitinertia1 bodyinfoadddecorationtransform decorativesphere01 create moving mobilized body pendulum mobilizedbodypin pendulum1matterground transformvec30 bodyinfo transformvec300 mobilizedbodypin pendulum2pendulum1 transformvec30 bodyinfo transformvec300 set visualization systemsetuseuniformbackgroundtrue visualizer vizsystem systemaddeventreporternew visualizerreporterviz 001 initialize system state state state systemrealizetopology pendulum2setratestate 50 simulate 20 second rungekuttamersonintegrator integsystem timestepper tssystem integ tsinitializestate tsstepto200 see simbody user guideuser stepbystep explanation example feature wide variety joint constraint force type easily userextended forward inverse mixed dynamic motion driven force prescribed motion contact hertz hunt crossley model gradient descent interior point global cma optimizers variety numerical integrator error control visualizer using opengl want install simbody use simbody programuser view api documentation learn theory behind simbody extend simbody get support simbody forum report bug suggest feature dependency simbody depends following crossplatform building cmake 2810 later 313 later visual studio compiler visual studio 2015 2017 2019 window gcc 490 later typically linux clang 34 later apple clang xcodeor later linear algebra lapack 360 later blas visualization optional freeglut xi xmu api documentation optional doxygen 186 later recommend least 188 using simbody creating simbodyusing project cmake get started simbodyusing project check cmakesamplecmakeliststxt file installing simbody work window mac linux operating system use package manager build source file provide instruction fordifferent way installing simbody window build source using microsoft visual studio linux mac make build source using gcc clang make mac homebrew automated buildinstall homebrew ubuntudebian install prebuilt binary aptget freebsd install prebuilt binary pkg window using mingw build source using mingw windowsmaclinux install prebuilt binary conda package manager install using vcpkg download install simbody using vcpkg dependency manager use linux check repology see distribution provides package simbody way install simbody however example mac could use cmake xcode c11 gccclang simbody 36 later us c11 feature stdc11 flag simbody 33 earlier use c03 feature simbody 34 35 use either c03 c11 see simbodystandard11 cmake variable version note want use c11 flag project simbody must compiled c11 flag well window using visual studio get dependency needed library dependency provided simbody installation window including linear algebra visualization dependency download install microsoft visual studio version 2015 2017 2019 community edition free sufficient 2015 default visual studio 2015 doe provide c support installing sure select custom check programming language visual c common tool visual c 2015 already installed visual studio without c support simply rerun installer select modify 2017 later installer select desktop development c workload c code plan use simbody compiled compiler used simbody download install cmake version 313 higher optional want build api documentation download install doxygen version 188 higher download simbody source code methoddownload source code look highestnumbered release click zip button unzip computer assume unzipped source code csimbodysource methodclone git repository get git many option git window advanced tortoisegit intermediate good tortoisesvn user github desktop easiest clone github repository csimbodysource run following git bash git shell find way run equivalent command gui client git clone csimbodysource git checkout simbody37 last line assumed want build released version feel free change version want build want build latest development version bleeding edge simbody master branch omit checkout line see set release checkout specific version use following command git tag git checkout simbodyxyz configure generate project file open cmake field source code specify csimbodysource field build binary specify something like csimbodybuild inside source directory install simbody see click configure button prompted select generator dropdown optional platform generator choose x64 build 64bit binary leave blank build 32bit binary older version cmake select generator ending win64 build 64bit binary eg visual studio 14 2015 win64 visual studio 15 2017 win64 select one without win64 build 32bit binary eg visual studio 14 2015 visual studio 15 2017 click finish want install simbody computer set changing cmakeinstallprefix variable assume set csimbody choose different installation location make sure use use csimbody play around build option buildexamples see simbody default buildtesting ensure simbody work correctly default buildvisualizer able watch system move building remotely could turn default builddynamiclibraries build three library dynamic library default unless know leave one buildstaticlibraries build three library static library whose name end static default must activate either builddynamiclibraries buildstaticlibraries buildtestsandexamplesstatic static library test example built creates staticallylinked testsexamples take build unlikely use staticallylinked library buildtestsandexamplesshared test example built creates dynamicallylinked testsexamples unless know leave one click configure button click generate make visual studio project file build install open csimbodybuildsimbodysln visual studio select desired solution configuration dropdown top debug debugger symbol optimization 10x slower library visualizer name end relwithdebinfo debugger symbol optimized configuration recommend release debugger symbol optimized generated library executables smaller faster relwithdebinfo minsizerel minimum size optimized may slower relwithdebinfo release least want optimized library configuration debug optimized debug library coexist go full installation process twice configurationbuild project allbuild rightclicking selecting buildrun test rightclicking runtests selecting build make sure test pas use runtestsparallel faster test run multiple coresoptional build project doxygen get api documentation generated simbody source get warning doxygen version earlier doxygen 188 upgrade caninstall simbody rightclicking install selecting build play around example within build visual studio installation make sure configuration set release configuration eg relwithdebinfo right click one target whose name begin example select select startup project type ctrlf5 start program set environment variable test installation building simbody use opensim skip section allow executables find simbody library dll adding simbody bin directory path environment variable start menu windowsor 10 screen windowssearch environment select edit system environment variable click environment variable system variable click path click edit add csimbodybin front text field forget semicolon allow simbody project eg opensim find simbody environment variable window user variable click new variable name type simbodyhome variable value type csimbody change take effect newlyopened window close window explorer command prompt window test installation navigating csimbodyexamplesbin running simbodyinstalltestexe simbodyinstalltestnovizexe note example binary installed debug configuration present build environment however run run slowly layout installation simbody installation organized bin visualizer shared library dll used runtime doc manual well api doc simbodyapihtml example src source code example bin example compiled executables run installed debug build include header h file necessary project use simbody lib import library used linking cmake cmake file useful project use simbody linux mac using make instruction building simbody source either mac ubuntu check compiler version simbody us recent c feature require modern compiler installing simbody check compiler version command like g version clang version case compiler supported upgrade compiler upgrading gcc 49 ubuntu 1404 instruction upgrade gcc ubuntu 1404 distribution sudo addaptrepository ppaubuntutoolchainrtest sudo aptget update sudo aptget install gcc49 g49 one want set gcc49 g49 default compiler run following command sudo updatealternatives install usrbingcc gcc usrbingcc49 60 slave usrbing g usrbing49 remember several compiler cmake flag cmakeccompiler cmakecxxcompiler used select one desired example simbody configured following flag cmake dcmakeccompilergcc49 dcmakecxxcompilerg49 get dependency mac xcode developer package give lapack blas via accelerate framework mac come visualization dependency ubuntu need get dependency open terminal run following command get necessary dependency sudo aptget install cmake liblapackdev want use cmake gui install cmakeqtgui visualization optional sudo aptget install freeglut3dev libxidev libxmudev api documentation optional sudo aptget install doxygen lapack version 360 higher may required application opensim lapack downloaded compiled using following method sufficient set ldlibrarypath lapack install prefix build simbody using dbuildusingotherlapackpathpathtoliblapackso option cmake bash cmake lapack360 dcmakeinstallprefixpathtonewlapack dcmakebuildtyperelease dbuildsharedlibson make make install get simbody source code two way get source code methoddownload source code look highestnumbered release click zip button unzip computer assume unzipped source code simbodysource methodclone git repository get git mac might already especially xcode free app store one method install homebrew run brew install git terminal ubuntu run sudo aptget install git terminal clone github repository simbodysource git clone simbodysource git checkout simbody37 last line assumed want build released version feel free change version want build want build latest development version bleeding edge simbody master branch omit checkout line see set release checkout specific version use following command git tag git checkout simbodyxyz configure generate makefiles create directory build simbody assume choose simbodybuild choose location inside simbodysource mkdir simbodybuild cd simbodybuild configure simbody build cmake use cmake command could also use interactive tool ccmake cmakegui configuration option play want fuss option run cmake simbodysource want install simbody default installed usrlocal great default option especially think use one version simbody time change via cmakeinstallprefix variable let choose simbody cmake simbodysource dcmakeinstallprefixsimbody want library optimized speed contain debugger symbol change via cmakebuildtype variable areoptions debug debugger symbol optimization 10x slower library visualizer name end relwithdebinfo debugger symbol optimized configuration recommend release debugger symbol optimized generated library executables smaller faster relwithdebinfo minsizerel minimum size optimized may slower relwithdebinfo release least want optimized library configuration debug optimized debug library coexist go full installation process twice configuration typical use different build directory build type eg simbodybuilddebug simbodybuildrelease variable might want play buildexamples see simbody default buildtesting ensure simbody work correctly default buildvisualizer able watch system move building cluster could turn default builddynamiclibraries build three library dynamic library default buildstaticlibraries build three library static library whose name end static buildtestsandexamplesstatic test example built creates staticallylinked testsexamples take build unlikely use staticallylinked library buildtestsandexamplesshared test example built creates dynamicallylinked testsexamples unless know leave one combine option another example cmake simbodysource dcmakeinstallprefixsimbody dcmakebuildtyperelwithdebinfo dbuildvisualizeroff build install build api documentation optional doxygen get warning doxygen installation version older doxygen 188 make doxygen compile use jn flag build using n processor core example make j8 run test ctest j8 install chose cmakeinstallprefix location requires sudo access write like usrlocal prepend command sudo make j8 install know also uninstall delete file cmake placed cmakeinstallprefix simbodybuild make uninstall play around example build directory run simbody example program instance try examplependulum set environment variable test installation building simbody use opensim skip section allow executables find simbody library dylib adding simbody lib directory linker path mac user skip step cmakeinstallprefix usrlocal run sudo ldconfig cmakeinstallprefix neither usr usrlocal eg simbody mac echo export dyldlibrarypathdyldlibrarypathsimbodylib bashprofile ubuntu echo export ldlibrarypathldlibrarypathsimbodylibx8664linuxgnu bashrc command add line configuration file loaded every time open new terminal using ubuntu may need replace x8664linuxgnu appropriate directory computer allow simbody project eg opensim find simbody make sure replace simbody cmakeinstallprefix mac echo export simbodyhomesimbody bashprofile ubuntu echo export simbodyhomesimbody bashrcopen new terminaltest installation cd simbodysharedocsimbodyexamplesbin simbodyinstalltest simbodyinstalltestnoviz layout installation installation creates following directory cmakeinstallprefix directory x8664linuxgnu exists install usrlocal varies platform even case name directory may different includesimbody header h file necessary project use simbody libx8664linuxgnu shared library dylib cmakesimbody cmake file useful project use simbody pkgconfig pkgconfig file useful project use simbody simbodyexamples example compiled executables run installed debug build libexecsimbody simbodyvisualizer executable sharedocsimbody manual well api doc simbodyapihtml examplessrc source code example examplesbin symbolic link runnable example mac homebrew using mac homebrew dependency taken care install install homebrew open terminal add open source robotics foundation list repository homebrew brew tap osrfsimulation install latest release simbody brew install simbody install master branch instead append head command simbody installed simbody installed usrlocalcellarsimbodyversion version either version number eg 361 head specified head directory symlinked symbolically linked usrlocal system typically expects find executables shared library dylib header h etc following directory simbody installation symlinked includesimbody usrlocalincludesimbody lib usrlocallib sharedocsimbody usrlocalsharedocsimbody layout installation usrlocalcellarsimbodyversion directory includesimbody header h file necessary project use simbody lib shared library dylib used runtime cmakesimbody cmake file useful project use simbody pkgconfig pkgconfig file useful project use simbody simbodyexamples example compiled executables run installed debug build libexecsimbody simbodyvisualizer executable sharedocsimbody manual well api doc simbodyapihtml examplessrc source code example examplesbin symbolic link executable example ubuntu aptget starting ubuntu 1504 simbody available ubuntu debian repository see list simbody package ubuntu version ubuntu package website latest version simbody usually available ubuntu repository process getting new version simbody ubuntu repository could take year install open terminal run following command sudo aptget install libsimbodydev simbodydoc layout installation simbody installed usr directory directory x8664linuxgnu varies platform usrincludesimbody header h file necessary project use simbody usrlibx8664linuxgnu shared library cmakesimbody cmake file useful project use simbody pkgconfig pkgconfig file useful project use simbody usrlibexecsimbody simbodyvisualizer executable usrsharedocsimbody manual well api doc simbodyapihtml examplessrc source code example examplesbin symbolic link executable example freebsd pkg simbody available via freebsd package repository install open terminal run following command sudo pkg install simbody window using mingw warning mingw generation build experimental build still experimental various mingw version available thread model exception mechanism compiled library simbody depends blas lapack optionnaly glut three section give list supported version command line instruction reason obvious use mingw supported mingw version want go detail need mingw version posix thread model dwarf exception mechanism 32 bit computer posix thread model sjlj exception mechanism 64 bit computer version supported additional configuration table list various version mingw version tested thread exception comment url 64 bit posix sjlj feature supported binary included recommended version mingw64 gcc 520 64 bit posix seh need linked user blas lapack mingw64 gcc 520mingw52064posixseh 32 bit posix dwarf visualization binary included mingw64 gcc 520 32 bit posix sjlj visualization need linked user blas lapack mingw64 gcc 520mingw52032posixsjlj recommend use first configuration feature supported doe need additional library compile run url allows download directly version second version need linked user blas lapack cli example given blas lapack source downloaded netlib 3rd 4th version run target 32 bit behaviour visualization possible time due compile link problem glut moreover 4th one one need provide blas lapack library please note posix version mingw supported version supported cmake detect configuring stop instruction example command line instruction various case assumed running command build directory access simbody source command cd simbody recommended specify installation directory flag cmakeinstallprefix eg dcmakeinstallprefixcprogram filessimbody used installation directory cprogram file x86simbody 64 bit computer might confusing since 32 bit installation location example instruction one us blas lapack library provided used window terminal mingw path rem cmake configuration cmake simbody g mingw makefiles dcmakebuildtyperelease dcmakeinstallprefixcprogram filessimbody rem compilation mingw32make rem test mingw32make test rem installation mingw32make install example instruction one us blas lapack library provided used window terminal mingw path rem variable path definition set cmakecprogram filescmakebincmakeexe set mingwdircprogram filesmingww64i686520posixsjljrtv4rev0mingw32 set pathmingwdirbinmingwdiri686w64mingw32lib rem cmake configuration cmake simbody gmingw makefiles dcmakebuildtyperelease dcmakeinstallprefixcprogram filessimbody dcmakeccompilerpathmingwdirbingccexe dcmakecxxcompilerpathmingwdirbingexe dcmakemakeprogrampathmingwdirbinmingw32makeexe rem compilation mingw32make rem test mingw32make test rem installation mingw32make install example instruction one us blas lapack library provided used msys terminal mingw path cmake configuration cmake simbody g msys makefiles dcmakebuildtyperelease dcmakeinstallprefixcprogram filessimbody compilation make test make test installation make install example instruction one provides blas lapack library used msys terminal mingw path cmake configuration cmake simbody gmsys makefiles dcmakebuildtyperelease dcmakeinstallprefixcprogram filessimbody dcmakeccompilerpathcprogram filesmingww64i686520posixsjljrtv4rev0mingw32bingccexe dcmakecxxcompilerpathcprogram filesmingww64i686520posixsjljrtv4rev0mingw32bingexe dbuildusingotherlapackpathcprogram fileslapack350binliblapackdllcprogram fileslapack350binlibblasdll make test make test installation make install mingw detail paragraph explains reason one use mingw version mingw available two thread model win32 thread model posix thread model one ha use posix thread model since thread functionality eg stdmutex implemented ease building window simbody provides compiled library blas lapack window 32 bit compiled dwarf exception mechanism window 64 bit compiled sjlj exception mechanism one chooses mingw compilation need respect exception mechanism program rely mechanism mean want use compiled library mingw installation exception mechanism otherwise need provide blas lapack library see exception mechanism used user look dlls located bin directory mingw name mechanism present file libgccxxxxdll xxxx dw seh sjlj mingw version information also available looking result gcc version cmake check version mingw exception mechanism different configuration stop difference one provides blas lapack library cmake variable buildusingotherlapack compilation mingw always possible window mac linux using conda conda cross platform package manager used install simbody window mac linux install simbody using conda must first install miniconda anaconda either provide conda command invoked command line install simbody conda forge channel follows conda install c condaforge simbody command install simbody library header miniconda anaconda installation directory per standard layout operating system described conda forge simbody recipe found conda forge feedstock repository installing simbodyvcpkg download install simbody using vcpkg dependency manager git clone cd vcpkg bootstrapvcpkgsh vcpkg integrate install vcpkg install simbody simbody port vcpkg kept date microsoft team member community contributor version date please create issue pull request vcpkg repository acknowledgment grateful past continuing support simbody development stanford bioengineering department following grant nih u54 gm072970 simulation biological structure nih u54 eb020405 mobilize center nih r24 hd065690 simulation rehabilitation research osrf subcontract 12006 darpa hr001112c0111 robotics challenge prof scott delp principal investigator grant simbody used extensively scott neuromuscular biomechanics lab basis opensim biomechanical simulation software application medical research user simbios,"[('install', 'simbody'), ('visual', 'studio')]"
robotology/yarp,C++,yarp yarp homepage yet another robot platform latest release release date yarp library toolkit communication device interface used everything humanoid embedded device documentation yarp documentation installation see full instruction linux bash sudo aptget install cmake libacedev git clone cd yarp mkdir build cd build cmake make sudo make install optional window binary macos bash brew install robotologyformulaeyarp regular yarp build use ace library linux macos yarp compiled without ace adding dskipacetrue running cmake tutorial comprehensive list tutorial license license material included yarp copyright istituto italiano di tecnologia iit robotcub consortium contributor yarp component released term bsd3clause optional component released term lgpl21 later gpl20 later gpl30 later apache20 license see file copying license file detail ci status build status stats github commits since latest release github last commit github commit activity past weekweeks year github contributor github closed issue github issue github pull request github closed pull request github top language github language count development powered github slack zenhub shieldsio yarpino,"[('latest', 'release'), ('component', 'released')]"
robotopia-x/robotopia,Other,robot robotopia built choo v4 github license robotopia browser based programming environment kid young adult goal introduce kid basic programming concept cute little robot read article play action action feature x graphical programming environment x blockly code editor x game preview x tutorial introduce programming basic x command x condition x loop x event x basic arithmetic logic x competitive mode x client editor create bot x presenter present robot competition central monitor x p2p connection client presenter x 1v1 mode x programmable robot x movement x pathfinding x collecting resource x place marker x react event x robot script runtime x scriptable javascript x roundbased execution robot script x event could use short guide get started interested using tool organize coding event need around 15h time computer current browser kid projector big screen display competition tutor help kid question note impression thatsupervisor handlekids agendatutorials open computer kid start tutorial learn basic programming meanwhile tutor help struggle level general question kid completed tutorial begin competition open computer connected projector pick room name kid enter room name opening editorprogram robot point supervisor together assigned kid build competitive program show basic idea behind program make ready program robot swarm upload current code pressing upload button top right corner note run first competitive game withof build program let robot compete get back presenter projector press run button select two player already committed program press start button start competition note idea point people room look game running projector improving program first competition finished kid get time improve program thing noticed battling also kid build program get time opportunity commit program compete others note part event extended long kid interested installation want install robotopia local environment follow instruction precondition install nodejs install npm project setup first install budo globally first bash npm install g budo clone project github install bash git clone cd robotopia npm install directory robotopia call bash npm start local web server started configuration file indexjs configured signalinghub server communication presenter mode huburl serverurl add prefered server url related research repo presentation slide,"[('programming', 'environment'), ('basic', 'programming')]"
charlesq34/frustum-pointnets,Python,frustum pointnets 3d object detection rgbd data created charles r qi wei liu chenxia wu hao su leonidas j guibas stanford university nuro inc teaser introduction repository code release cvpr 2018 paper arxiv report work study 3d object detection rgbd data propose novel detection pipeline combine mature 2d object detector stateoftheart 3d deep learning technique pipeline firstly build object proposal 2d detector running rgb image 2d bounding box defines 3d frustum region based 3d point cloud frustum region achieve 3d instance segmentation amodal 3d bounding box estimation using pointnetpointnet network see reference bottom leveraging 2d object detector greatly reduce 3d search space object localization high resolution rich texture information image also enable high recall smaller object like pedestrian cyclist harder localize point cloud adopting pointnet architecture able directly work 3d point cloud without necessity voxelize grid project image plane since directly work point cloud able fully respect exploit 3d geometry one example series coordinate normalization apply help canocalizes learning problem evaluated kitti sunrgbd benchmark system significantly outperforms previous state art still leading position current href leaderboard detail architecture please refer paper project website citation find work useful research please consider citing articleqi2017frustum titlefrustum pointnets 3d object detection rgbd data authorqi charles r liu wei wu chenxia su hao guibas leonidas j journalarxiv preprint arxiv171108488 year2017 installation install href also dependency python library data processing visualization like cv2 mayavi etc highly recommended access gpus use frustum pointnets v2 model need access custom tensorflow operator pointnet tf operator included modelstfops need compile check tfxxxcompilesh ops subfolder first update nvcc python path necessary compile script written tf14 also option tf12 script using earlier version possible need remove dglibcxxusecxx11abi0 flag g command order compile correctly want evaluate 3d object detection ap average precision need also compile evaluation code running compilesh trainkittieval check trainkittievalreadmemd detail demo require mayavi library provided convenient script install mayavi package python handy package 3d point cloud visualization check mayavimayaviinstallsh installation succeeds able run mayavitestdrawlinepy simple demo note library work local machine seems support remote access ssh ssh x code tested tf12 tf14 gpu version python 27 versionshould also work ubuntu 1404 ubuntu 1604 nvidia gtx 1080 gpu highly recommended gpus machine required least 8gb available cpu memory usage currently support training testing frustum pointnets model well evaluating 3d object detection result based precomputed 2d detector output kittirgbdetections welcomed extend code base support 2d detector feed data network training prepare training data step convert original kitti data organized format training frustum pointnets new also directly download prepared data file 960mb support training evaluation unzip file move pickle file kitti folder firstly need download kitti 3d object detection dataset including left color image velodyne point cloud camera calibration matrix training label make sure kitti data organized required datasetreadmemd run python kittikittiobjectpy see whether data downloaded stored properly everything fine see image 3d point cloud visualization data prepare data simply run warning step generate around 47gb data pickle file sh scriptscommandprepdatash basically process extracting frustum point cloud along ground truth label original kitti data based ground truth 2d bounding box box 2d object detector extraction train kittiimagesetstraintxt validation set kittiimagesetsvaltxt using ground truth 2d box also extract data validation set predicted 2d box kittirgbdetectionsrgbdetectionvaltxt check kittipreparedatapy detail run python kittipreparedatapy demo visualize step data preparation command executes see three newly generated data file kitti folder run python trainproviderpy visualize training data frustum point cloud 3d bounding box label rect camera coordinate training frustum pointnets start training gputhe frustum pointnets model run following script cudavisibledevices0 sh scriptscommandtrainv1sh run scriptscommandtrainv2sh trian v2 model well training statiscs checkpoint stored trainlogv1 trainlogv2 v2 model run python traintrainpy h see option training new also prepared pretrained snapshot v1 v2 model find 40mb support evaluation script need unzip file move log folder train folder evaluation evaluate trained model assuming already finished previous training step validation set run cudavisibledevices0 sh scriptscommandtestv1sh similarly run scriptscommandtestv2sh evaluate trained v2 model script automatically evaluate frustum pointnets validation set based precomputed 2d bounding box 2d detector released run kitti offline evaluation script compute precision recall calcuate average precision 2d detection bird eye view detection 3d detection currently script evaluation test set yet possible evaluate test set need get output 2d detector kitti test set store something kittirgbdetections need prepare test set frustum point cloud test set modifying code kittipreparedatapy modify test script script changing data path idx path output file name test set result reported used entire trainval set training license code released apache 20 license see license file detail reference pointnet deep learning point set 3d classification segmentation qi et al cvpr 2017 oral presentation code data href pointnet deep hierarchical feature learning point set metric space qi et al nip 2017 code data href todo add demo script run inference frustum pointnets based raw input data add related script sunrgbd dataset,"[('point', 'cloud'), ('frustum', 'pointnets')]"
AutoRally/autorally,C++,autorally software autorally research platform autorally platform website autorally youtube channel platform paper bibtex articlegoldfain2019autorally titleautorally open platform aggressive autonomous driving authorgoldfain brian drew paul changxi barulic matthew velev orlin tsiotras panagiotis rehg james journalieee control system magazine volume39 number1 pages2655 year2019 publisherieee contributing welcome bug fix ehancements new feature feedback please submit pull request melodicdevel branch conform c style guide use gitflow master branch reserved release setup instruction content install prerequisite clone repository install autorally dependency compilationrunning generate documentation test setup simulation autonomous driving simulation install prerequisite install ubuntu 1804 64bit install required package sudo apt install git doxygen opensshserver libusbdev texinfo melodic support python 27 installing python package need ensure python point python 27 eg setting python 27 conda environment conda create n myrosenv python27 source activate myrosenv conda install defusedxml conda install c jdh88 rospkg following tool recommended required project cutecom cmakecursesgui synaptic pythontermcolor sudo apt install cutecom cmakecursesgui synaptic pythontermcolor install rosmelodicdesktopfull install mppi dependency gpu run mppi core idea behind mppi sample thousand trajectory really fast accomplished implementing sampling step gpu need cuda also use external library load python numpy zip archive npz file c install cuda install cnpy install gtsam follow gtsam quick start guide clone install develop branch gtsam instead cmake use cmake dgtsaminstallgeographiclibon dgtsamwitheigenmkloff install complete make sure linux see shared library sudo ldconfig update latest version gazebo 9xx want latest version gazebo clone fork repository get autorally repository catkin workspace suggested location catkinwssrc valid catkin worskspace source folder work suggest forking cloning working code also clone imu code pointgrey camera driver catkin workspace git clone git clone build pointgrey camera driver since prebuilt driver melodic follow instruction build driver sdk downloaded file download flycapture2213331amd64pkgubuntu1804tgz may need run sudo apt fixbroken install installing suggested package running sudo sh installflycapturesh install autorally dependency within catkin workspace folder run command install package project depends rosdep install frompath src ignoresrc ycompilation running first check eigen version pkgconfig modversion eigen3 least version 335 upgrade eigen following methodwithin included install file compile install run catkinmake catkin workspace folder version cuda doe support gcc7 may need use catkinmake dcmakeccompilergcc6 dcmakecxxcompilerg6 due additional requirement distributed launch system must run source srcautorallyautorallyutilsetupenvlocalsh using autorally component see wiki information set system distributed launch vehicle platform note unfamiliar catkin please know must run source catkinwsdevelsetupsh able locate autorally package thus must run sourcing setupenvlocalsh line added bashrc file automatically run opening terminalgenerate documentation generate update code documentation running doxygen autorally view code documentation open autorallydochtmlindexhtml web browserstart autorally simulation test configuration roslaunch autorallygazebo autorallytrackgazebosimlaunch use usb gamepad drive simulated platform around startup runstop message published joystick node false press button right stick normally labelled x b square triangle x circle toggle published value verify runstop motion enabled looking runstopmotionenabled field chassisstate topic rostopic echo chassisstate using gamepad configure another source runstop information platform move comment line include filefind autorallycontrollaunchjoystickcontrollerlaunch near end autorallygazebolaunchautorallytrackgazebosimlaunch rosrun rqtpublisher rqtpublisher configure rqtpublisher publish message topic runstop type autorallymsgsrunstop athz sender set rqtpublisher motionenabled set true verify runstopmotionenabled true chassisstate topic autonomous driving simulation end section robot driving autonomously simulation using controller available autorallycontrol position robot spot simulation start make sure runstop motion enabled set true start waypoint follower roslaunch autorallycontrol waypointfollowerlaunch start constant speed controller tell speed drive roslaunch autorallycontrol constantspeedcontrollerlaunch rosrun rqtpublisher rqtpublisher configure publisher topic constantspeedcontrollerspeedcommand type stdmsgsfloat64 rate 10 value ofyou adjust value everything running value target velocity soon platform move motion enabled robot turn hit barrier probably state estimator ha converged orientation estimate incorrect select track barrier move allow robot continue driving estimator converge vehicle return within barrier next detailed explanation controller state estimator found wiki state estimator waypoint follower constant speed controller mppi controller controlling autorally platform tutorial controller control autorally platform simulation hardware running vehicle simulation tutorial run gazebo two different world multiple vehicle configuring physical autorally platform next step configure compute box peripheral launch system instruction found platform configuration instruction,"[('autorally', 'platform'), ('catkin', 'workspace')]"
nmccrea/sobot-rimulator,Python,sobot rimulator robot programming tool sobot rimulator inspired simiam jp de la croix software simulates khepera iii robot navigating goal environment obstacle control system packaged software based principle hybrid automaton taught magnus egerstedt indepth discussion principle given article toptal engineering blog table content getting started user interface robot control system overview getting started requirement sobot rimulator requires pythonits main dependency gtkand pygobjectwhich used ui using pip need add gtk3 environment separately since python library using conda create new environment everything need like conda create n sobotrimulator c condaforge python3 gtk3 pygobject switch new environment conda activate sobotrimulator running simulator command line navigate project root directory type python simulatorpy user interface simulator interface contains following element simulation viewport alert text panel control panel simulation viewport program start randomized map loaded small blue black circular object center viewport robot dimension capability robot modeled khepera iii research robot khepera iii differentialdrive mobile robot equipped withinfrared proximity sensor forming skirt detect nearby obstacle green circle indicates location goal robot attempt reach red rectangle scattered throughout map obstacle robot make contact obstacle collision occur simulation end grid drawn onto map help judge distance major gridlines laid every meter minor gridlines laid every 20 centimeter alert text panel event collision successful arrival goal occur reported space simulation view port control panel simulation begin alert text panel blank control panel control panel divided three row first row button control simulation progress play cause simulation proceed stop robot reach goal collides obstacle stop stop simulation current state step advance simulation one simulation cycle simulation stopped button pressed reset clear progress robot reset simulation second row button give control map save map open save dialog default location save map map folder simulator directory saving map save current state simulation save location obstacle goal load map open load dialog load previously saved map random map generates random map fly simulation reset new random map generated third row button provides detailed visualization robot show invisibles cause extra information drawn simulation view would visible real world includes robot traverse path ha far robot infrared sensor cone robot current desired heading information specific current control mode robot green heading bar indicates robot currently go goal mode red heading bar indicates robot currently avoid obstacle mode accompanied black outline indicating robot detected surroundings orange heading bar indicates robot currently follow wall mode accompanied two black line one indicating followed surface calculated robot another indicating standoff distance obstacle surface robot control system overview following brief overview robot control implementation come software encouraged play code experiment different implementation simulated robot onboard control code found robotcontrol folder diagram give highlevel conceptual overview relationship different component runtime arrow represent direction information flow general downward arrow carry information robot current state upward arrow carry information robot desired next state robotsupervisor interface robot controlled supervisor instead talking directly simulated physical robot supervisor given robotsupervisorinterface robotsupervisorinterfacepy defines entirety available command supervisor send robot robotsupervisorinterface thought api robot providing instruction readproximitysensors readwheelencoders setwheeldriveratesvelocityleft velocityright supervisor supervisor supervisorpy brain robot contains robotsupervisorinterface supervisorstatemachine manages control state transition several different controller generate control parameter various criterion also contains odometry code maintaining estimate robot current position heading supervisor controlloop sequence follows update state update sensor reading odometry controller heading update supervisorstatemachine based new reading set new active controller based new control state execute controller generate new control parameter using active controller current sensor reading send command apply new control parameter robot sending appropriate robot command supervisor state machine supervisorstatemachine supervisorstatemachinepy manages robot control state version distributed sobot rimulator support following control state defined controlstatepy controlstateatgoal controlstategotogoal controlstateavoidobstacles controlstategtgandao controlstateslideleft controlstateslideright per control loop iteration supervisorstatemachine update first check certain condition met eg sensor indicate obstacle close depending set condition met state machine may transition control state new state state transition usually include changing active controller used supervisor supervisorcontroller interface supervisorcontrollerinterface supervisorcontrollerinterfacepy serf thin wrapper around supervisor simplify communication various controller controller software come five controller available supervisor gotogoalcontroller gotogoalcontrollerpy avoidobstaclescontroller avoidobstaclescontrollerpy followwallcontroller followwallcontrollerpy gotoanglecontroller gotoanglecontrollerpy gtgandaocontroller gtgandaocontrollerpy note gotoanglecontroller gtgandaocontroller currently used build may enable like see behave additional controller added fairly easily supervisorstatemachine update controller generates heading vector heading likely different representing direction robot go perform behavior particular controller designed implement heading compared supervisorstatemachine part test state transition supervisorstatemachine ha updated control state controller chose activate executed active controller generates movement parameter intended effectively move robot towards controller heading vector parameter given using unicycle model movement ie translational velocity parameter v angular velocity parameter omega controller update supervisor new parameter final movement parameter calculated applied supervisor transform unicycle model corresponding wheel movement rate differential drive model command robot drive wheel using rate,"[('control', 'state'), ('sobot', 'rimulator')]"
splintered-reality/py_trees,Python,py tree new documentation getting started next step release pytrees python implementation behaviour tree designed facilitate rapid development medium sized decision making engine use field like robotics brief feature list behaviour decorator sequence selector parallel behaviourtree blackboard data sharing useful library behaviour decorator idiom serialise dot graph render asciiunicode terminal tested linux mac ymmv window new 20230128 22x releasenew22x sequence selector without memory 20230128 get started pytrees 5mins 20230128 poetry project configuration governed pyprojecttoml vestigial setuppy assist distribution pep517 yet well supported documentation 22xdocs22ximagedocs22x 06xdocs06ximagedocs06x getting started get started codespaces mismatched environment issue 5mins fork project personal account click code codespaces create codespace enter terminal install dependency docker zenpytreesworkspacespytrees poetry install explore demo docker zenpytreesworkspacespytrees poetry shell pytreespy38 docker zenpytreesworkspacespytrees pytreesdemo pytreesdemoactionbehaviour pytreesdemocontextswitching pytreesdemologging pytreesdemobehaviourlifecycle pytreesdemodisplaymodes pytreesdemopickupwhereyouleftoff pytreesdemoblackboard pytreesdemodotgraphs pytreesdemoselector pytreesdemoblackboardnamespaces pytreesdemoeitheror pytreesdemosequence pytreesdemoblackboardremappings pytreesdemoeternalguard pytreesdemotreestewardship pytreespy38 docker zenpytreesworkspacespytrees pytreesdemoblackboard pytreespy38 docker zenpytreesworkspacespytrees exit hack code run formatter test linters mypy docker zenpytreesworkspacespytrees poetry run tox l py38 py310 format check mypy38 mypy310 docker zenpytreesworkspacespytrees poetry run tox e format docker zenpytreesworkspacespytrees poetry run tox e py38 docker zenpytreesworkspacespytrees poetry run tox e check contribute pr course work local environment poetry installed using vscode even need reopen project devcontainer froody next step pypi pytrees pytreesjs example readthedocs pytrees tutorial significantly edifying demo incrementally walk process building decision making layer robot use ros2 sparsely merely browsing enlightening regardless visualisation pytreesjs javascript library building runtime visualisation tool robotics pytreesros tree manager behaviour designed use specifically ros2 pytreesrosviewer qtros2 implementation pytreesjs release 22x selector sequence without memory improved testing styletype checking 21x chooser deprecated api housekeeping 20x blackboard v2 12x tree shutdown cleanly statustoblackboard eternalguard visitor get finalise 11x fix setup ticktock viz 10x behaviour decorator composite blackboard tree management viz tool 0yx first open source prereleases devel 22x 21x 20x 12x 07x 06x source 21xsources22ximagesources22x 20xsources20ximagesources20x 12xsources12ximagesources12x 06xsources06ximagesources06x compatibility python310docs python38docs python310docs python38docs python36docs python36docs python36docs python36docs python27docs ci develbuildstatus 22xbuildstatus documentation 22xdocsrtd22ximagedocs22x 20xdocsrtd20ximagedocs20x 12xdocsrtd12ximagedocs12x 06xdocsrtd06ximagedocs06x licenseimage new22x docs05x docs05ximage sources05x sources05ximage,"[('docker', 'zenpytreesworkspacespytrees'), ('zenpytreesworkspacespytrees', 'poetry')]"
G-Levine/OpenTorque-Actuator,Other,opentorque actuator powerful compliant actuator legged robotics exploded view,"[('opentorque', 'actuator'), ('actuator', 'powerful')]"
AtsushiSakai/MATLABRobotics,Other,matlabrobotics matlab sample code mobile robot navigation sorry project longer active interested robotics algorithm project might help atsushisakaipythonrobotics python sample code robotics algorithm localization sample code localization extenedkalmanfilterlocalization ekf sample code localization extended kalman filter document japanease matlab enigma unscentedkalmanfilterlocalization ukf sample code localization unscented kalman filter sigma point kalman filter document japanease unscentedmatlab enigma particlefilterlocalization pf sample code localization particle filter document japanease particle filtermatlab enigma mapping sample code mapping gridmapsample gridmap sample code mapping grid map document japanease matlab enigma pathplanning sample code path planning dijkstra dijkstra sample code path planning dijkstra method generate vector field goal dynamic proggramming document japanease matlab enigma astar astar sample code path planning star document japanease amatlab enigma pathsmoothing pathsmoothing sample code path smoothing gradient method document japanease matlabpath smoothing enigma dynamic window approach dynamic window approach sample code local path planning dyamic window approach document japanease dynamic window approachmatlab enigma slam sample code simultaneous localization mappingslam icp icp sample code relative movement estimation iterative closest point icp algorithm document japanease icpslammatlab enigma ekf slam ekfslam sample code ekf slam based feature point document japanease ekfslammatlab enigma machine learning sample code machine learning pattern recognition em algorithm em sample code parameter learning mixture gaussian model em algorithm document japanease emmatlab enigma nelder mead neldermead sample code nonlinear optimization neldermead algorithm document japanease neldermeadmatlab enigma steepest descent method steepest sample code nonlinear optimization steepest descent method document japanease matlab enigma conjugate gradient method conjugate sample code nonlinear optimization conjugate gradient method document japanease matlab enigma license mit author atsushi sakai atsushitwi,"[('sample', 'code'), ('document', 'japanease')]"
MyRobotLab/myrobotlab,Other,myrobotlab myrobotlab nixie release open source framework robotics creative machine control know robot project website project discord latest build nixie 11latest latest javadocs javdocs base requirement need java 11 newer running myrobotlab need jre java runtime environment going building source need jdk java development kit oracle openjdk work download myrobotlabjar download latest nixie 11x running myrobotlab downloading unzipping myrobtlabzip new folder start appropriate script linux macos myrobotlabsh window myrobotlabbat first time script run automatically install service dependency launch myrobotlab subsequent starting myrobotlab skip installation stage browser doe automatically start go see web user interface building project myrobotlab core written java maven project ide load maven work web ui written angularjs html service eg inmoov2 programab different repo developed seperately sobuild instruction set described development environment require git cloning source cloning repo create directory clone repository assuming window cloning cdev directory mkdir cdev cd dev git clone cd cdevmyrobotlab java core want making core change need install java developement environment install java 11 building eclipse download eclipse java developer building maven myrobotlab build using apache maven java build system download maven compile build myrobotlabjar first ensure mvn maven version 33 installed path mvn clean install produce local build myrobotlabjar file located myrobotlabtargetmyrobotlabjar want compile skip test use standard maven approach mvn clean install dskiptests web ui style guide title cap field name element semicolon field name label exist contributing development done develop branch contribute code typical approach create issue featurebug working github create branch based develop branch descriptive name associated issue number available locally switch new branch make code change commit push frequently code ready submit pull request develop branch enjoy code review address issue concern code review reviewer merges pull request develop reviewer deletes branch following config useful work directly webgui ui inmoov2 ui repos submoduled srcmainresourcesresourceinmoov2 srcmainresourcesresourceprogramab yml orgmyrobotlabserviceconfigwebguiconfig autostartbrowser false enablemdns false listener null peer null port 8888 resource two usual runtime resourcewebguiapp resource rest useful dev srcmainresourcesresourcewebguiapp srcmainresourcesresourceinmoov2peerswebguiapp srcmainresourcesresource type webgui yml orgmyrobotlabserviceconfigruntimeconfig enablecli true id null listener locale null loglevel info peer null registry runtime security webgui python resource srcmainresourcesresource type runtime virtual false network distributed architecture websockets default response new connection mermaid sequencediagram autonumber box process id p1 participant runtimep1 end box process id p2 participant webguip2 participant runtimep2 end note right runtimep1 client runtimep1 open brwebsocket remote webgui runtimep1webguip2 connectbrwslocalhost8888apimessagesuserrootpwdpwdsessionid2309adf3dlkdkidp1 note left webguip2 remote webguip2 runtimep2 attempt subscribe br describe method runtimep1 webguip2runtimep1 addlistener describe note left webguip2 runtimep2 sends describe request runtimep1 webguip2runtimep1 describe note right runtimep1 runtimep1 responds describe response runtimep1webguip2 ondescribe note left webguip2 based result describebr querying subscription processed opt server add listener describe reserve end minimal message api definition json name runtime method connect data path api definition servicenamemethodnamejsonparam1jsonparam2jsonparam3 path api definition simple way define restful api path parsed service name method name parameter extracted parameter json encoded converted correct type method invoked response returned json object rest cli use api definition example exact path used cli runtimegetuptime runtimeconnect arduinoconnectcom3 connection connection websocket start http get wslocalhost8888apimessagesuserrootpwdpwdsessionid2309adf3dlkdkidp1subscribe runtime describe connection established two different myrobotlab instance p1 p2 following message sent first message adding subscription runtime process subscription function describe second message describe request json msgid 1690145377501 name runtime sender webguip2 sendingmethod historylist property null status null encoding json method addlistener data topicmethoddescribecallbacknameruntimecaringhectorcallbackmethodondescribeclassorgmyrobotlabframeworkmrllistener class orgmyrobotlabframeworkmessage send describe json msgid 1690145377501 name runtime sender webguip2 sendingmethod historylist property null status null encoding json method describe data filluuid idcaringhectoruuid383b407028484c3d85f4e7f6e081d18eplatformoslinuxarchx86osbitness64jvmbitness64langjavavmnameopenjdk 64bit server vmvmversion11mrlversionunknownversionisvirtualfalseidcaringhectorbranchdeveloppid1500044hostnamet14gperrycommit55d0163663825dd0aaa10568bc01e035c7f21532buildnullmotdresistance futile cooky robot starttime1690135873670manifestgitbranchdevelopgitbuildhostt14gperrygitbuildtime20230723t1038460700gitbuilduseremailgrogmyrobotlaborggitbuildusernamegroggitbuildversion001snapshotgitclosesttagcommitcount13447gitclosesttagname10119gitcommitauthortime20230722t2015510700gitcommitcommittertime20230722t2015510700gitcommitid55d0163663825dd0aaa10568bc01e035c7f21532gitcommitidabbrev55d0163gitcommitiddescribe1011913447g55d0163gitcommitiddescribeshort1011913447gitcommitmessagefullcron enhanced1318nn improved cron cron historyrnrn forgot onernrn teamwork fix hd44780rnrn updated reviewgitcommitmessageshortcron enhanced1318gitcommittime20230722t2015510700gitcommituseremailgrogmyrobotlaborggitcommitusernamegroggitdirtyfalsegitlocalbranchahead0gitlocalbranchbehind0gitremoteoriginurlgitgithubcommyrobotlabmyrobotlabmyrobotlabgitgittags111194gittotalcommitcount14104shortcommit55d0163classorgmyrobotlabframeworkplatformclassorgmyrobotlabframeworkdescribequery class orgmyrobotlabframeworkmessage describe message sends instance platform information return return data describe return ondescribe message contains service information remote p2 processprocess ondescribe response json msgid1692478237121 nameruntimewebguiclient senderruntimeunhealthygiddy sendingmethoddescribe historylist unhealthygiddy propertiesnull statusnull encodingjson methodondescribe data idunhealthygiddyuuidnullrequestnullplatformoslinuxarchx86osbitness64jvmbitness64langjavavmnameopenjdk 64bit server vmvmversion11mrlversionunknownversionisvirtualfalseidunhealthygiddybranchgrogpid2462761hostnamet14gperrycommit5610a6602bef704a84160d7d067af3b417be1998buildnullmotdresistance futile cooky robot starttime1692478154179manifestgitbranchgroggitbuildhostt14gperrygitbuildtime20230819t0936360700gitbuilduseremailgrogmyrobotlaborggitbuildusernamegroggitbuildversion001snapshotgitclosesttagcommitcount13778gitclosesttagname10119gitcommitauthortime20230819t0921480700gitcommitcommittertime20230819t0921480700gitcommitclassorgmyrobotlabframeworkdescriberesults way way much data classorgmyrobotlabframeworkmessage response back include serialized service refactor minimal describe parameter return interface method service returned describe request registered default currently local registered service response refactored material returned related criterial requested example list service name needed returned specific service interface requested returned filluuid refactored,"[('api', 'definition'), ('develop', 'branch')]"
leggedrobotics/legged_gym,Python,isaac gym environment legged robot repository provides environment used train anymal robot walk rough terrain using nvidia isaac gym includes component needed simtoreal transfer actuator network friction mass randomization noisy observation random push training maintainer nikita rudin affiliation robotic system lab eth zurich contact rudinnethzch useful link project website paper installation create new python virtual env python 36 37 38 38 recommended install pytorch 110 cuda113 pip3 install torch1100cu113 torchvision0111cu113 torchaudio0100cu113 f install isaac gym download install isaac gym previewpreviewwill work cd isaacgympython pip install e try running example cd example python 1080ballsofsolitudepy troubleshooting check doc isaacgymdocsindexhtml install rslrl ppo implementation clone cd rslrl pip install e install leggedgym clone repository cd leggedgym pip install e code structure environment defined env file leggedrobotpy config file leggedrobotconfigpy config file contains two class one conatianing environment parameter leggedrobotcfg one training parameter leggedrobotcfgppo env config class use inheritance nonzero reward scale specified cfg add function corresponding name list element summed get total reward task must registered using taskregistryregistername envclass envconfig trainconfig done envsinitpy also done outside repository usage train python issacgymanymalscriptstrainpy taskanymalcflat run cpu add following argument simdevicecpu rldevicecpu sim cpu rl gpu possible run headless rendering add headless important improve performance training start press v stop rendering enable later check progress trained policy saved issacgymanymallogsexperimentnamedatetimerunnamemodeliterationpt experimentname runname defined train config following command line argument override value set config file task task task name resume resume training checkpoint experimentname experimentname name experiment run load runname runname name run loadrun loadrun name run load resumetrue ifwill load last run checkpoint checkpoint saved model checkpoint number ifwill load last checkpoint numenvs numenvs number environment create seed seed random seed maxiterations maxiterations maximum number training iteration play trained policy python issacgymanymalscriptsplaypy taskanymalcflat default loaded policy last model last run experiment folder runsmodel iteration selected setting loadrun checkpoint train config adding new environment base environment leggedrobot implement rough terrain locomotion task corresponding cfg doe specify robot asset urdf mjcf reward scale add new folder envs yourenvconfigpy inherit existing environment cfgs adding new robot add corresponding asset resourses cfg set asset path define body name defaultjointpositions pd gain specify desired traincfg name environment python class traincfg set experimentname runname needed implement environment py inherit existing environment overwrite desired function andor add reward function register env isaacgymanymalenvsinitpy modifytune parameter cfg cfgtrain needed remove reward set scale zero modify parameter envs troubleshooting get following error importerror libpython38mso10 cannot open shared object file file directory sudo apt install libpython38 known issue contact force reported netcontactforcetensor unreliable simulating gpu triangle mesh terrain workaround use force sensor force propagated sensor consecutive body resulting undesireable behaviour however legged robot possible add sensor feetend effector get expected result using force sensor make sure exclude gravity trhe reported force sensoroptionsenableforwarddynamicsforces example sensorpose gymapitransform name feetnames sensoroptions gymapiforcesensorproperties sensoroptionsenableforwarddynamicsforces false example gravity sensoroptionsenableconstraintsolverforces true example contact sensoroptionsuseworldframe true report force world frame easier get vertical component index selfgymfindassetrigidbodyindexrobotasset name selfgymcreateassetforcesensorrobotasset index sensorpose sensoroptions sensortensor selfgymacquireforcesensortensorselfsim selfgymrefreshforcesensortensorselfsim forcesensorreadings gymtorchwraptensorsensortensor selfsensorforces forcesensorreadingsviewselfnumenvs6 selfgymrefreshforcesensortensorselfsim contact selfsensorforces1,"[('isaac', 'gym'), ('pip', 'install')]"
ros-industrial/ur_modern_driver,C++,urmoderndriver deprecated deprecation notice note master branch contains deprecated version driver kept archival purpose urmoderndriver ha deprecated completely favour urrobotdriver user cb3 eseries controller use urrobotdriver refer announcement discourse information click see original readme overview new driver ur3ur5ur10 robot arm universal robot designed replace old driver transparently solving issue improving usability well enabling compatibility roscontrol improvement script running robot trajectory actually executing mean teach pendant used move robot around driver connected driver expose functionality previous urdriver action interface followjointtrajectory seamless integration moveit publishes robot joint state jointstates publishes tcp force wrench publishes io state urdriveriostates note string urdriver ha prepended compared old driver service call set output payload string urdriver ha prepended compared old driver note sure setting payload actually work robot gui doe update also true old urdriver besides driver subscribes two new topic urdriverurscript take message type stdmsgsstring directly forward robot note control done input use risk inteded sending movelmovej command directly robot conveyor tracking like jointspeed take message type trajectorymsgsjointtrajectory par first jointtracetorypoint sends specified joint speed acceleration robot interface intended visual servoing kind control requires speed control rather position control robot remember set value alljoints ignores field jointnames set value correct order added support roscontrol roscontrol want control robot time roscontrol compatibility set via parameter launchtime roscontrol active driver open actionlib interface publish jointstates wrench msg handled roscontrol instead currently two controller available controlling joint position robot useable trajectroy execution velocity based controller sends joint speed command robot using speedj command position based controller sends joint position command robot using servoj command far used velocity based controller one optimal depends application roscontrol continuesly control robot using teach pendant controller running cause controller robot crash obviously handle conflicting control input two source thus sure stop running controller moving robot via teach pendant list loaded running controller found call controllermanager rosservice call controllermanagerlistcontrollers running position trajectory controller stopped call rosservice call universalrobotcontrollermanagerswitchcontroller startcontrollers stopcontrollers posbasedpostrajcontroller strictnessremember use tabcompletion installation driver communicates robot via ethernet depends reliable continous communication possible reliably control ur virtual machine clone repository catkin working directory make catkinmake note package depends urmsgs hardwareinterface controllermanager cannot directly used version prior hydro usage driver designed dropin replacement urdriver package overwrite current driver though use test package without risking break current setup want test current setup use modified launch file included package instead urbringup everything else work usual would like run package connect hardware need run following launch file roslaunch urmoderndriver urxxbringuplaunch robotiprobotipaddress robotipaddress ur arm ip xx 10 depending robot launch file make call roscore launch file urxxdescription parameter server ha information robot arm urdescription installed please via sudo apt install rosurdescription distribution machine running may want run moveit plan execute action arm simply entering following command launching urmoderndriver roslaunch urxxmoveitconfig ur5moveitplanningexecutinglaunch roslaunch urxxmoveitconfig moveitrvizlaunch configtrue would like use roscontrolbased approach use launch file urxxroscontrollaunch xx 10 depending robot note using roscontrolbased approach needpackages found urdriver package urdriver package workspace simply copy package workspace src folder urxxmoveitconfig urdescription driver currently support two position trajectory controller position based velocity based loaded via launch file one running time default velocity based controller started switch controller calling appropriate service rosservice call universalrobotcontrollermanagerswitchcontroller startcontrollers velbasedpostrajcontroller stopcontrollers posbasedpostrajcontroller strictness sure stop currently running controller either call start new one otherwise fail position based controller stay closer commanded path velocity based react faster trajectory execution start within 5070 150180ms range positionbased usage without roscontrol well old driver also 170ms range mentioned lightning talk roscon 2013 note pid value optimally tweaked moment use roscontrol together moveit sure add desired controller controllersyaml urxxmoveitconfigconfig folder add following controllerlist name velbasedpostrajcontroller posbasedpostrajcontroller actionns followjointtrajectory type followjointtrajectory default true joint shoulderpanjoint shoulderliftjoint elbowjoint wrist1joint wrist2joint wrist3joint using tool0controller frame robot ur calibrated individually small error order millimeter endeffector reported urdf model endeffector reported controller driver broadcast transformation base link endeffector reported ur default frame name base tool0controller use tool0controller frame urdf need link name connected base example actual transform base tool0controller published robotstatepublisher taken driver via tf note need uptodate version robotstatepublisher able deal floating joint see compatibility compatible robot control box newest firmware tested real ur10 cb2 running 1814035 real ur5 cb2 running 1814035 simulated ur3 running 3118024 simulated ur5 running 3016471 simulated ur5 running 1816941 simulated ur5 running 1710857 simulated ur5 running 1608725 credit please cite following report using driver techreportandersen2015optimizing title optimizing universal robot driver institution technical university denmark department electrical engineering author andersen thomas timm year 2015 url report downloaded,"[('launch', 'file'), ('velocity', 'based')]"
mengyuest/iros2018-slam-papers,Other,iros2018 slam collection introduction repository contains slam paper iros2018 thanks effort paopaorobot reference slamiros2018 field visual inertial odometry tutorial quantitative trajectory evaluation visualinertial odometry zichao zhang davide scaramuzza pdf code challenge monocular visual odometry photometric calibration motion bias rolling shutter effect nan yang rui wang xiang gao daniel cremers pdf cvislam collaborative visualinertial slam marco karrer patrik schmuck margarita chli pdf embedding temporally consistent depth recovery realtime dense mapping visualinertial odometry hui cheng zhuoqi zheng jinhao chongyu chen keze wang liang lin hybrid contact preintegration visualinertialcontact state estimation using factor graph ross hartley maani ghaffari jadidi lu gan jiunnkai huang jessy w grizzle ryan eustice pdf video information sparsification visualinertial odometry jerry hsiung ming hsiao eric westman rafael valencia michael kaess pdf keyframe strategy fast imagescale change zero motion vio without persistent feature eren allak alexander hardtstremayr stephan wei comparison gauge freedom handling optimizationbased visualinertial state estimation zichao zhang guillermo gallego davide scaramuzza pdf online temporal calibration monocular visualinertial system tong qin shaojie shen pdf code realtime fully incremental scene understanding mobile platform johanna wald keisuke tateno jurgen sturm nassir navab federico tombari pdf project tum vi benchmark evaluating visualinertial odometry david schubert thore goll nikolaus demmel vladyslav usenko jorg stuckler daniel cremers pdf dataset trifovio robust efficient stereo visual inertial odometry using point line feng zheng grace tsai zhe zhang shaoshan liu chenchi chu hongbing hu pdf dataset soc heterogeneous soc architecture visual inertial slam application jie tang bo yu shaoshan liu zhe zhang weikang fang yanjun zhang robocentric visualinertial odometry zheng huai guoquan huang pdf robust visualinertial state estimation multiple odometries efficient mapping mav ultrawide fov stereo vision g muller f steidle j schuster p lutz maier stoneman tomic w sturzl unscented kalman filter lie group visualinertial odometry martin brossard silvere bonnabel axel barrau pdf rgbd camera perception based locomotion system humanoid robot adaptive footstep compensation task constraint iori kumagai mitsuharu morisawa shinichiro nakaoka takeshi sakaguchi hiroshi kaminaga kenji kaneko fumio kanehiro realtime 3d reconstruction using combination pointbased volumetric fusion maik keller damien lefloch martin lambers shahram izadi tim weyrich andreas kolb pdf edgebased robust rgbd visual odometryusing 2d edge divergence minimization changhyeon kim pyojin kim sangil lee h jin kim lidar maximum likelihood approach extract polylines 2d laser range scan alexander schaefer daniel buscher lukas luft wolfram burgard pdf code robust pose graph approach city scale lidar mapping sheng yang xiaoling zhu xing nian lu feng xiaozhi qu teng dynamic scaling factor covariance accurate 3d normal distribution transform registration hyunki hong b h lee integrating deep semantic segmentation 3d point cloud registration anestis zaganidis li sun tom duckett grzegorz cielniak pdf limo lidarmonocular visual odometry johannes graeter alexander wilczynski martin lauer pdf code lip lidarinertial 3d plane slam patrick geneva kevin eckenhoff yulin yang guoquan huang pdf code posemap lifelong multienvironment 3d lidar localization philipp egger paulo v k borges gavin catt andreas pfrunder roland siegwart renaud dube pdf video1 video2 stabilize unsupervised feature learning lidarbased place recognition peng yin lingyun xu zhe liu lu li hadi salman yuqing weiliang xu hesheng wang howie choset stereo camera localization 3d lidar map youngji kim jinyong jeong ayoung kim video legoloam lightweight groundoptimizedlidar odometry mapping variable terrain tixiao brendan englot pdf code video lidar camera calibration using motion estimated sensorfusion odometry ryoichi ishikawa takeshi oishi katsushi ikeuchi pdf scan context egocentric spatial descriptor place recognition within 3d point cloud map giseop kim ayoung kim event camera asynchronouscornerdetectionandtrackingforeventcamerasinrealtime ignacio alzugaray margarita chli pdf video mapping bspline mapping framework longterm autonomous operation romulo rodrigues pedro aguiar antonio pascoal video cblox scalable consistent tsdfbased dense mapping approach alexander millane zachary taylor helen oleynikova juan nieto roland siegwart cesar cadena pdf code efficient longterm mapping dynamic environment mara lazaro roberto capobianco giorgio grisetti code hmaps hybrid heightvoxel map environment representation lu garrote cristiano premebida david silva urbano j nunes humanintheloop augmented mapping abbas sidaoui imad h elhajj daniel asmar structured skip list compact data structure 3d reconstruction shijie li mingming cheng yun liu shaoping lu yahui wang victor adrian prisacariu pdf slam system arthroslam multisensor robust visual localization minimally invasive orthopedic surgery andres marmol peter corke thierry peynot dynaslam tracking mapping inpainting dynamic scene berta bescos jose facil javier civera jose neira pdf video improving repeatability experiment automatic evaluation slam algorithm francesco amigoni valerio castelli matteo luperto code indoor mapping localization pedestrian using opportunistic sensing smartphones qing liang lujia wang youfu li ming liu video misslam realtime large scale dense deformable slam system minimal invasive surgery based heterogeneous computing jingwei song jun wang liang zhao shoudong huang gamini dissanayake pdf omnidirectional dso direct sparse odometry fisheye camera hidenobu matsuki lukas von stumberg vladyslav usenko jorg stuckler daniel cremers pdf video openseqslam20 open source toolbox visual place recognition changing condition ben talbot sourav garg michael milford pdf code probabilistic dense reconstruction moving camera yonggen ling kaixuan wang shaojie shen code video robust longterm registration uav image crop field precision agriculture nived chebrolu thomas labe cyrill stachniss pdf semisupervised slam leveraging lowcost sensor underground autonomous vehicle position tracking adam jacobson fan zeng david smith nigel boswell thierry peynot michael milford towards robust visual odometry multicamera system peidong liu marcel geppert lionel heng torsten sattler andreas geiger marc pollefeys pdf code fast cylinder plane extraction depth camera visualodometry pedro f proenca yang gao pdf code video geometricbased line segment tracking hdr stereo sequence ruben gomezojeda javier gonzalezjimenez pdf code multimotion visual odometry mvo simultaneous estimation camera thirdparty motion kevin judd jonathan gammell paul newman pdf reliable fusion blackbox estimate underwater localization hendry ferreira chame matheus machado santos slvia silva da costa botelho code stereo visual odometry semantics based localization aerialrobots indoor environment hriday bavle stephan manthe paloma de la puente alejandro rodriguezramos carlos sampedro pascual campoy video backend ldso direct sparse odometry loop closure xiang gao rui wang nikolaus demmel daniel cremers pdf code video predicting objective function change posegraph optimization fang bai teresa vidalcalleja shoudong huang rong xiong scan similaritybased pose graph construction method graph slamwonsok yoo hanjun kim hyunki hong beom h lee pdf submapbased posegraph visual slam robust visual exploration localization system weinan chen lei zhu yisheng guan c ronald kube hong zhang pdf virtual occupancy grid map submapbased pose graph slam planning 3d environment bingjui ho paloma sodhi pedro teixeira ming hsiao tushar kusnur michael kaess pdf frontend combined rgb depth deor slam humanoid rasha sheikh stefan owald maren bennewitz pdf code good feature selection least square pose optimization vovslam yipu zhao patricio vela hbst hamming distance embedding binary search tree featurebased visual place recognition dominik schlegel giorgio grisetti pdf code keyframebased photometric online calibration color correction jan quenzel jannis horn sebastian houben sven behnke pdf video optimized contrast enhancement improve robustness visual tracking slam relocalisation context xi wang marc christie eric marchand pdf robust camera pose estimation via consensus ray bundle vector field haoang li ji zhao jeancharles bazin lei luo junlin wu jian yao unit quaternionbased parameterization point feature visual navigation james maley guoquan huang perspective correcting visual odometry agile mavs using pixel processor array colin greatwood laurie bose thomas richardson walterio mayolcuevas jianing chen stephen j carey piotr dudek pdf video deep slam variational feature encoding method 3d object probabilistic semantic slam h w yu b h lee pdf bayesian information recovery cnn probabilistic inference dmitry kopitkov vadim indelman pdf dsslam semantic visual slam towards dynamic environment chao yu zuxin liu xinjun liu fugui xie yi yang qi wei qiao fei pdf fast accurate semantic mapping geometricbased incremental segmentation yoshikatsu nakajima keisuke tateno federico tombari hideo saito pdf integrating deep semantic segmentation 3d point cloud registration anestis zaganidis lisun tom duckett grzegorz cielniak pdf learning monocular visual odometry dense 3d mapping dense 3d flow cheng zhao li sun pulak purkait tom duckett rustam stolkin pdf localization classified object slam using nonparametric statistic clustering asif iqbaland nicholas r gans pose estimation map formation spiking neural network towards neuromorphic slam raphaela kreiser panin pienroj alpha renner yulia sandamirskaya pdf robust exploration multiple hypothesis data association jinkun wang brendan englot pdf semantic monocular slam highly dynamic environment nikolas brasch aljaz bozic joe lallemand federico tombari unsupervised odometry depth learning endoscopic capsule robot mehmet turan evin pinar ornek nail ibrahimli giracoglu yasin almalioglumehmet fatih yanik metin sitti pdf,"[('pdf', 'code'), ('visual', 'odometry')]"
wpilibsuite/GradleRIO,Other,ci gradlerio gradlerio powerful gradle plugin allows team competing first robotics competition produce build code gradlerio work java c others window mac linux gradlerio automatically fetch wpilib tool vendor library 2019 gradlerio official build system first robotics competition officially supported ide visual studio code v code using wpilib extension frcdocs best place documentation ides like intellij idea eclipse visual studio clion also supported unofficially may also use tool exclusively command line allowing use ide text editor like sublime text atom vim getting started creating new project visual studio code recommended getting started v code please see frcdocs documentation without visual studio code follow installation instruction frcdocs note offline installer required save ton time highly recommended wpilibutility standalone project builder wpilib provides standalone project builder provides interface v code without use v code used installer find run wpilibutility cuserspublicwpilibyearutility window wpilibyearutilitymaclinux note mac user extract targz file run alternatively download vscodewpilib release extract run use wpilib utility whenever want create new project adding vendor library visual studio code open command palette ctrl shift p clicking wpilib icon open wpilib manage vendor library install new library online paste vendorprovided json url without visual studio code create folder vendordeps project directory already exist download json file vendorprovided url save vendordeps folder done running gradlew vendordep urlvendor url project command window user recommended use powershell instead cmd switch powershell powershell general gradlew build build robot code run unit test present gradlew deploy build deploy code gradlew installroboriotoolchain install c toolchains system required c tool gradlew glass launch glass data visualization tool similar simgui gradlew shuffleboard launch shuffleboard 2018 replacement smartdashboard gradlew smartdashboard launch smart dashboard note smartdashboard legacy software use shuffleboard instead gradlew robotbuilder launch robot builder tool generating robot project source file gradlew outlineviewer launch outline viewer viewing networktables gradlew pathweaver launch pathweaver tool generating motion profile using wpilib trajectory spline competition connected robot run offline flag eg gradlew deploy offline ide support visual studio code v code fully supported gradlerio frc use use wpilib v code extension see frcdocs instruction intellij idea intellij idea support unofficial frc sense well supported gradle team csa support guaranteed make sure prepared fix issue event import gradle project intellij idea please one following welcome screen click import project select buildgradle file project click open welcome screen file open another project open select buildgradle file project intellij prompt would like open project click open project intellij may ask import gradle project bottom right ide simple click import change import please see intellij idea help page gradle help eclipse eclipse support unofficial frc sense well supported gradle team csa support guaranteed make sure prepared fix issue event eclipse supported java c first install buildship gradle plugin made eclipse eclipse ide installation instruction found installed navigate file import gradle select gradle project press next button specify root directory project press finish finish import finish confirm please see buildship github page help specifically user documentation forum visual studio 2017 community full visual studio code vs2017 support unofficial frc sense well supported gradle team csa support guaranteed make sure prepared fix issue event start must apply visualstudio plugin buildgradle buildgradle put following code plugins block gradle plugins id visualstudio finally generate open solution following command gradlew openvisualstudio generate ide file vs2017 c open visual studio please see gradle guide building native software help upgrading upgrade gradle project gradlerio plugin one year next follow importing gradle project instruction wpilib documentation midseason update gradlerio edit buildgradle replace version plugin line change gradlerio line gradle plugins plugins id eduwpifirstgradlerio version replace latest version latest version obtained deploying alternate jre 2023 jre 17 deployed use jre 11 previous year following add wpijreartifactlocation eduwpifirstjdkroborio20211109u111 buildgradle set gctype cm frcjavaartifact block use cm garbage collector using alternate garbage collector gradlerio ha built setting cm garbage collector jdk 11 g1 jdk 17 set gctype frcjavaartifact block add appropriate jvmarg garbage collector setting frcjavaartifact eg default g1 setting jvmargsaddxxuseg1gc xxmaxgcpausemillis1 xxgctimeratio1 using gradlerio custom build use custom build gradlerio robot project build must published update version gradleproperties gradlerio overwrite existing version execute gradlew publishtomavenlocal update gradlerio version robot project buildgradle version defined gradlerio gradleproperties gradle plugins plugins id eduwpifirstgradlerio version replace published version,"[('visual', 'studio'), ('studio', 'code')]"
FidoProject/Fido,C++,fido mit license join chat fido lightweight highly modular c machine learning library embedded electronics robotics fido especially suited robotic embedded context written c minimal use standard library come packaged robotic simulator provides easy interface write robotic driver check project site documentation information library wa adapted universal robot control system author fido library wa primarily developed michael truell joshua gruenstein beta status library beta ha used couple project api may still change backwardincompatible way definetly bug contributing send u pull request looking thing check repo open issue find bug trouble library please open issue happy help author author contributor,"[('library', 'wa'), ('open', 'issue')]"
BCN3D/BCN3D-Moveo,C++,bcn3d moveo repository contains cad file stl file user manual assembly manual firmware bill material bcn3d moveo bcn3d technology keep taking important step order achieve goal bringing digital manufacturing technology everyone occasion presenting bcn3d moveo robotic arm design scratch developed engineer collaboration departament densenyament generalitat de catalunya structure fully printed using additive manufacturing technology electronics controlled software arduino moveo fully functional nowadays ha born bcn3d technology product open educational wish bcn3d moveo one departament densenyament worry high price material grade student must use internship holding mind open source robotic arm adaptable student low cost reproducible could take several educational itinerary mechanical design automatism industrial programing etc thus bcn3d moveo allow educational center enjoy modifiable easily accessible student price far lower usual industrial equipment used acquire enough output training purpose fundacio cim area bcn3d technology share educational vocation reason departament densenyament contacted u order suggest offer project year ago didnt hesitate taking opportunity robotic arm designed manufactured started last phase project consisted assembling fine tuning workshop 15 institute around catalonia took place bcn3d technology institute already bcn3d moveo classroom workshop present internship program prof knowledge arm september open source technology github done developed produtcs bcn3d moveo file available everyone thanks platform github website user around world share design anyone able obtain necessary information order assemble bcn3d moveo home unlike bcn3d product moveo wont commercialized project ha born developed order make move community progress starting departament densenyament idea nevertheless bcn3d fee moveo know github account bcn3d technology product thus user able find bill material bom needed component assembling arm come detailed cad design anyone able modify bcn3d moveo design wish furthermore github user find stl file structure printing assembling fine tuning firmware upload manual available english spanish acknowledgement project based project andreas holldorfer see original project hackadayio github youtube,"[('bcn3d', 'moveo'), ('bcn3d', 'technology')]"
spectresystems/jarvis,Other,jarvis jarvis alfred alternative window 10 jarvis currently development feature yet pull request currently accepted thing like performancememory optimization bug moment everything stable feature would like see jarvis please submit issue jarvis designed require elevated user privilege time index thing available current user scope indexed data never transmitted internet installation usage install jarvis github release page installed press altspace type query search file program start typing search wikipedia type wiki query search google type g query feature search installed win32 uwp application search user document search google search wikipedia requirement jarvis designed run window 10 work earlier version window great effort made officially support version window 10 contributing youre thinking contributing jarvis great really appreciated make sure read contribution guideline sending epic pull request fork repository create branch work make feature addition bug fix forget unit test send pull request issue find bug please submit issue code conduct project ha adopted code conduct defined contributor covenant clarify expected behavior community license copyright 2017 spectre system ab jarvis provided asis mit license information see license autofac see caliburnmicro see nitoasyncex see spectresystem see serilog see serilogsinksfile see hardcodetnotifyiconwpf see,"[('window', '10'), ('pull', 'request')]"
mlaiacker/rosbag2video,Python,rosbag2video text rosbag2videopy rosbag video file conversion tool maximilian laiacker 2020 postmlaiackerde contribution abel gabor 2019 bey hao yun 2021 baquatellegmailcom beyhy94gmailcom ajblightleedsacuk install ffmpeg needed installed ubuntu bash sudo apt install ffmpeg ros2 stuff bash sudo apt install python3sensormsgs python3opencv rosfoxyrosbag2transport usage bash ros2bag2videopy fps 25 rate 10 outputfile v topic bagfile1 convert image sequence bag file video file fixed frame rate using ffmpeg ffmpeg need installed fps set fps value passed ffmpeg default 25 h display help ofile set output file name output file name given filename outputmp4 used rate r may slow speed video default 10 keep original speed show every image extracted rosbag file topic image topic topic used video output v verbose message displayed example output bash source ros2 humble source optroshumblesetupbash run script rate greater 50 lead dropped frame test pc ros2bag2videopy fps25 rate50 cameranodeimagerawcompressed documentsrosbag220230419144456 fps int 25 rate float 10 topic str cameranodeimagerawcompressed output file str outputmp4 verbose bool false bagfile rosbag220230419144456 info 1619616391700087224 rosbag2storage opened database rosbag220230419144456rosbag220230419144456db3 readonly info 1619616392055535299 ros2bag2videos image received 128 info 1619616392077294702 ros2bag2videos image received 228 info 1619616392299152538 ros2bag2videos image received 328 info 1619616392792717810 ros2bag2videos image received 428 info 1619616393268813798 ros2bag2videos image received 528 info 1619616393724949415 ros2bag2videos image received 628 info 1619616394199588269 ros2bag2videos image received 728 info 1619616394667638765 ros2bag2videos image received 828 writing output file outputmp4,"[('ros2bag2videos', 'image'), ('image', 'received')]"
Chris-Annin/AR2,Python,ar2axis stepper motor robot control software ar2 small desktop robot modeled similar industrialaxis robot diy project built 3d printed component machined aluminum component us low cost stepper motor arduino controller project includes bill material instruction cad file 3d print component build robot arduino sketch stepper driver control software program operate robot kinematic model geared stepper motor driver available misc hardware offtheshelf item available multiple source see bill material info within manual alt text startup calibration calibration video programming programming video math work kinematic video please review video programming calibration try answer many email chrisanningmailcom important project free available everyone donation help ha gone would hugely appreciated thank much donate,"[('stepper', 'motor'), ('control', 'software')]"
nasa-jpl/open-source-rover,Other,jpl open source rover project note previous major version osr please see v310 jpl open source rover open source build scaled version thewheel rover design jpl us explore surface mar open source rover designed entirely consumer shelf cot part project intended teaching learning experience want get involved mechanical engineering software electronics robotics also excellent research platform rugged terrain prior skill knowledge required gallery community build including previous version rover found osr motivation jpl always looking inspire next generation scientist engineer roboticists help u explore learn solar system beyond release plan rover way try give budding enthusiast fun robotics project help teach get involved robotics sooner lower cost glance osr ha around since 2017 ha undergone many iteration premium robust robot unique look high customizability powerful ability hardware electronics designed expansion like head display robot arm mind spec value top speed 16ms slow running subject motor selection nb motor 10 structural material aluminum total cost 1600 cost turtlebotwaffle osr mostly us part gobilda opensource cheaper alternative exist slower le strong fragile see additional project feature rover designed function similarly thewheel rover design mar employ major driving mechanic mar rover use traverse rocky surface rockerbogie rockerbogie suspension system allows allwheels continually contact ground climbing obstacle differential pivot allows weight mechanically offloaded one side rover climbing 6wheel ackerman steering driving steeringturning mechanism governs wheel point fast move raspberry pi act brain rover versatility accessibility simplicity ability add upgrade modification method communicate raspberry pi bluetooth wifi usb device etc interfaced control system robot join community hundred builder considering building one best way ask question reach maintainer learn modification join community open source rover builder join slack group href note jpl caltech official affiliation forum run individual general public ask question need help clarification aspect project additionally post promote modification addons created project highly encourage addition modification posted project community grow maintenance status opensource hardware project rover continuously improving please check issue pull request slack forum see big change expected soon osr project proud opensource hardware certified online 3d model view 3d model latest version rover browser onshape skill necessary project ha element mechanical assemblyfabrication us host electrical component ha software run order complete project need experience following fabricationmachining part consumer offtheshelf cot part metal machining required complete base version rover however optional expansion may useful access following skillstools metal cutting using band sawdremel drilling using drill presshand drill filing sanding part cleanup general fabricationmachining safety electronics project us component like motor motor controller battery prior experience following skill required access someone help save lot time soldering electrical debugging wiring electrical safety software rover brain raspberry pi code found osrrovercode repository along stepbystep instruction set basic familiarity linux git python helpful though skill learn pick fairly quickly watching video research internet throughout project try give supplemental information well see build document information tool necessary project assumes standard tool help assemble project optional tool provide example online service use part fabricated sent mandatory tool metric hex key plier wire snip wire stripper solder iron solder digital multimeter wire stripper eg optional tool 3d printer laser cutter body plate online service available benchtop power supply test without using battery item operating raspberry pi keyboard mouse monitor 5v micro usb power adapter expected time commitment experience project take le 100 personhours build depending familiarity skill level involved could significantly experienced builder may able build project amount time however project generally meant teaching learning tool throughout documentation try give supplemental information might new kind project getting started rover build roadmap stageorder part want get started asap stagecreate wiring cable connect printed circuit board pcb body motor integrate rockerbogie corner assembly need built first stagemake electronics soldering pcb installing rover along peripheral connection also use wiring test pcbs stagemake mechanical assembly body two rockerbogies drive corner motor assembly instruction guide step step integrating cabling stageyou attach something start look like rover stagesetting configuring operating system rover code rover code repo readme file walk necessary step getting rover software running raspberry pi step completed point project way electronics mechanical part completed ready start driving controlling robot next add upgrade chose raspberry pi brain project easy add change upgrade build exciting thing top already cool robot upgrade idea get brainstorming sonar collision detection imu orientation closedloop driving obstacle mapping camera object identification tracking sensor package temperature pressure humidity solar panel even robotic arm ordering part part list part list readme contains part necessary build entirety robot listed documentation note educational builder may apply 15 discount gobilda filling form make sure time processing time may vary select higher rpm motor drive rover faster sacrifice max stall torque selection motor would integrate easily rest suggested rover design found gobilda 5203 series rover design software accommodate different wheel size find wheel like better additional project take look alternative mar rover replica sawppy rover esa exomy disclaimer reference herein specific commercial product process service trade name trademark manufacturer otherwise doe constitute imply endorsement united state government jet propulsion laboratory california institute technology government sponsorship acknowledged licensed apache license 20,"[('raspberry', 'pi'), ('open', 'source')]"
mangdangroboticsclub/QuadrupedRobot,Python,installation flash ubuntu preinstalled image sd card download ubuntu22042preinstalleddesktoparm64raspiimgxz official website mangdang google drive share link boot raspberry pi sh cd sudo aptget update sudo apt install git mkdir robotics cd robotics git clone cd quadrupedrobotlegacy sudo bash preinstallsh cd sudo bash installsh sudo reboot sudo mv mangdangsystemrestartjoyservice usrlibsystemdsystem sudo mv mangdangsystemjoystartsh usrsbin sudo systemctl enable restartjoy sudo reboot mini pupperis already launched kickstarter mini pupper opencv opensource pi robot dog online channel discord facebook youtube twitter document mini pupper make robotics easier school homeschool family enthusiast beyond support slamnavigation robot dog lowcost price endorsed opencv support opencv official oakdlite 3d camera module endorsed opencv opensource diy custom want hackadayprize raspberry pi super expandable endorsed raspberry pi mini pupper wa showed first page kickstarter makuake campaign platform got many backer mini pupper wonderful workshop amazon 2022 remars event mini pupper workshop roscon 2022 event regarding mini pupper story find interview katherine scottros audrow nashsense think act podcast 18 background maybe see many demo boston dynamic spot mini many guy want robot dog explore function price high accept easy explore robot dog feature turtlebot convenient wheeled robot study legged robot mean opensource robot dog platform study le 1000usd beginning 2020 stanford pupper vendor shipped many stanford pupper unit worldwide global success pupper took heart feedback endeavor customer want product kind product like 11 month pursuing request would like show came mini pupper solution product mini pupper opensource robot dog platform support slam navigation opencv ai feature lidar camera sensor really boston dynamic spot robot dog palm legged turtlebot study le 500usd mini pupper make robotics easier school homeschool family enthusiast beyond project generously supported nathan kau member stanford student robotics mangdang technology co limited design mini pupper servo custom servo meet requirement new pupper compact durable unique run mini pupper organically smoothly high torque highfidelity servo required tested many servo market found 9g servo task many qc issue finally gave offtheshelf hobbyist servo last thing want intelligent customer let poor quality servo spent several month optimizing configuring servo would work project including tuning servo parameter named mini pupper servo explore gait performance use mini pupper explore many gait performance trot diagonal pair pace lateral pair bound front rear pair confident mini pupper servo outperform servo balance performance price mechanical design mechanical design simple stable beautiful find many prototype quadruped robot go market complex design difficult assemble lack stability trotting require unpredictable costly repair average engineering student extremely curious individual quadruped work however suitable mass production mini pupper address issue creating professional robot designed specifically mass production driving unit cost low enough even lowbudget school acquire robot learning driving innovation next generation robotics enthusiast unlike 3d printed robot use metal threaded insert ensure customer disassemble reassemble easily making repair extensive use part secured quality fastener ensuring great fit function well durability unit cleaner build achieved customizing servo cable length integrating imu carry board reduce wiring necessary overall clean setup body mini pupper lose wire unlike enthusiastmade kit mini pupper doe require user plug unplug wire power unit simple flick switch need mini pupper battery charged without need remove battery robot onboard voltmeter sound alarm warn unit need energy mini pupper design wa based feedback received existing customer quadruped robot easier set play robot market customer minimal experience able use robot mini pupper ha 12 dof degree freedom unlike thedof available similar project wa lot debate within team whether keep norm produce samedof much debate concludeddof robot lack ability follow natural biological movement benefit andof quadruped seemed benefit producer cost robot part required would le would lost original inspiration project wa provide customer highest quality best performing robot price range servo controlled one one pca9685 gait performance dependent 12 servo control loop time requiring effort optimize 12 dof v 8dof doubt could accomplish low price point although wa challenge several month mini pupper first consumer 12 dof quadruped robot world mass production intention hmi humanmachineinterface hmi humanmachineinterface lcd another wonderful function taking mini pupper bunch screw motor animalistic appearance given mini pupper communicate customize mini pupper first consumer quadruped robot lcd adding animal behavior robot education course targeting mini pupper education education course work smart main software improvement pupper fsn full selfnavigation system based ubunturos opencv moving forward fsn target step step interface also open absolutely welcome people contribute project want join u move together u please hesitate send u email build get started check page linked part sourcing assembly bom list document purchase purchase part one one itll run 800 time however purchase kit build robot mangdang channel cheaper onestop shopping kickstarter makuake crowdfunding campaign already closed order channel website shopify amazon amazon u amazon japan robotshop aliexpress taobao stanford student robotics stanford student robotics entirely studentrun group dedicated building cool robot learning new thing find many amazing project website mini pupper project supported nathan kau stanford student robotics mangdang technology co limited founded 2020 mangdang specializes research development production robot product make people life better mangdang headquartered hongkong office beijingchina tokyojapan global team member many country region united state japan europe china dreamer look forward connecting talent worldwide innovating together perform splendid time business connect u mailsalesmangdangnet online channel discord youtube twitter facebook,"[('mini', 'pupper'), ('robot', 'dog')]"
openTCS/opentcs,Other,opentcs contributor covenant homepage changelog changelogadoc opentcs short open transportation control system free platform controlling fleet automated guided vehicle agvs mobile robot generally possible control automatic vehicle communication capability agvs main target opentcs maintained opentcs team fraunhofer institute material flow logistics software run java platform version 13 recommended java distribution one provided adoptium project library required compiling andor using freely available opentcs complete product use outofthebox control agvs primarily frameworkan implementation basic data structure algorithm routing dispatching scheduling needed running agv system one vehicle try generic possible allow interoperation vehicle practically vendor thus usually necessary least create integrate vehicle driver called communication adapter opentcsspeak translates abstract interface opentcs kernel communication protocol vehicle understands depending need might also necessary adapt algorithm add projectspecific strategy getting started get started opentcs please refer user guide developer guide api documentation document included binary distribution also read online opentcs homepage licensing code software project source code including script configuration file distributed mit license asset unless stated otherwise software project documentation resource bundle medium file distributed creative common attribution 40 international cc 40 license contributing welcome contribute project please see contributingmd guideline related,"[('software', 'project'), ('file', 'distributed')]"
mikeferguson/robot_calibration,C++,robot calibration package offer several ros2 node primary one called calibrate used calibrate number parameter robot 3d camera intrinsics extrinsics joint angle offset robot frame offset parameter inserted updated urdf updated camera configuration yaml case camera intrinsics two additional node used mobilebase related parameter tuning basecalibrationnode determine scaling factor gyro track width parameter rotating robot place tracking actual rotation based laser scanner view wall magnetometercalibration used hard iron calibration magnetometer calibrate node calibration work two step first step involves capture data sample robot sample comprises measured joint position robot two observation observation collection point detected sensor instance robot could use camera arm detect pose corner checkerboard case camera sensor collection point simply detected position corner checkerboard relative pose camera reference frame arm assumed checkerboard fixed relative virtual frame fixed relative end effector arm within virtual frame know position point checkerboard corner second step calibration involves optimization robot parameter minimize error error defined difference pose point based reprojection throuhg sensor case checkerboard transform virtual frame end effector becomes additional free parameter estimating parameter alongside robot parameter find set parameter reprojection checkerboard corner arm closely aligned reprojection camera associated kinematic chain instance pantilt head configuration configuration typically handled two set yaml file first yaml file specifies detail needed data capture chain kinematic chain robot controlled control move robot desired pose sampling feature configuration various feature finder making observation sample pose current finder include led detector checkerboard finder plane finder feature finder pluginbased create second configuration file specifies configuration optimization specifies several item baselink frame used internal calculation typically root urdf used often baselink calibrationsteps ros2 multistep calibration fully supported parameter calibrationsteps list step name majority calibration probably use single step step name must still yaml list format calibration step several parameter model model define reproject point basic model kinematic chain additional model reproject kinematic chain sensor 3d camera ik chain frame parameter tip ik chain model parameter list model name freeparams defines name singlevalue free parameter name joint joint offset calculated camera parameter focal length parameter driver offset primesense device freeframes defines name multivalued free parameter 6d transforms also defines axis free x z independently set free parameter roll pitch yaw also set free however important note calibration internally us angleaxis representation either allshould set free one free never set two three free parameter freeframesinitialvalues defines initial value freeframes x z offset meter roll pitch yaw radian frequently used setting initial estimate checkerboard position see detail errorblocks list error block name defined namespaces model type must specified type one chain3d represents kinematic chain baselink frame parameter moveitkdl term usually referred tip camera3d represents kinematic chain baselink frame parameter includes pinhole camera model parameter cx cy fx fy projection point model work sensor publishes camerainfo calibration obtained model used pinhole parameter free parameter valid physical sensor actually us camerainfo 3d projection generally true primesenseastra sensor error block type must specified type one chain3dtochain3d error block compute difference reprojection two 3d sensor tell u position certain feature interest sensor might 3d camera arm holding checkerboard wa previously called camera3dtoarm chain3dtomesh error block compute closeness projected 3d point mesh mesh must part robot body commonly used align robot sensor base robot chain3dtoplane error block compute difference projected 3d point desired plane common use case making sure ground plane robot see really ground planetoplane error block able compute difference two plane instance 3d camera may resolution actually see checkerboard align important axis making sure wall seen camera aligned outrageous sometimes calibration illdefined certain dimension would like avoid one free parameter becoming absurd outrageous error block used limit particular parameter checkerboard configuration using checkerboard need estimate transformation kinematic chain checkerboard calibration faster accurate initial estimate transformation close actual value especially regard rotation simplest way check initial estimate run calibration six dof checkerboard free parameter output value x z b c transformation important note b c roll pitch yaw axismagnitude representation get roll pitch yaw run torpy tool value b c ros2 run robotcalibration torpy b c print roll pitch yaw value put initial value insert value calibrationyaml yaml freeframesinitialvalues checkerboard checkerboardinitialvalues x 00 0225 z roll 00 pitch 1571 yaw 00 migrating ros1 number change migrating ros1 ros2 due difference ros2 system others finally cleanup mistake made earlier version robotcalibration chain model freeframes feature parameter used list yaml dictionary format easily supported ros2 list string name actual dictionary information appear associated name instance ros1 might yaml model name arm type chain frame wristrolllink name camera type camera3d frame headcamerargbopticalframe ros2 becomes yaml model arm camera arm type chain3d frame wristrolllink camera type camera3d frame headcamerargbopticalframe note chain type ha renamed chain3d ros2 consistency allow future chain2d multistep calibration fully supported new parameter calibrationsteps must declared list step name model free parameter specified step example yaml calibrationsteps firstcalibrationstep secondcalibrationstep firstcalibrationstep model freeparams secondcalibrationstep model freeparams capture pose specified yaml convertros1bagtoyaml script run ros1 export ros1 bagfile yaml file loaded ros2 example configuration ubr1 robot us package calibrate ros2 start calibratelaunchpy ubr1calibration package exported result exported result consist updated urdf file one updated camera calibration yaml file default file exported tmp folder filename include timestamp generation file need installed correct place properly loaded fetchcalibration package ha example python script installing updated file within updated urdf file two type exported result change freeframes applied offset joint origin change freeparams joint offset applied calibration tag urdf particular applied rising tag read robot driver offset applied joint value used controller offset need added joint position read device offset typically need subtracted commanded position sent device robot doe support calibration tag might possible use freeframes setting rotation joint axis free basecalibrationnode run basecalibrationnode node need somewhat open space largemeters wide wall point robot robot pointed wall spin around several different speed rotation stop capture laser data afterwards node us angle wall measured laser scanner determine far robot ha actually rotated versus measurement gyro odometry compute scalar correction gyro odometry node parameter basecontrollertrackwidth default track width imugyroscale initial gyro scale minanglemaxangle much laser scan use measuring wall angle radian accellimit acceleration limit rotation radianssecond2 node topic odom node subscribes odom data message type navmsgsodometry imu node subscribes imu data message type sensormsgsimu basescan node subscribes laser data message type sensormsgslaserscan cmdvel node publishes rotation command topic unless manual mode enabled message type geometrymsgstwist output node new scale gyro odometry application value largely dependent driver used robot robot using roscontrol robotcontrol trackwidth parameter typically supplied parameter launch file magnetometercalibration node magnetometercalibration node record magnetometer data compute hard iron offset calibration magnetometer used compass typically piping data imufiltermadgwick robotlocalization node parameter rotationmanual set true node publish command velocity user manually rotate magnetometer default false rotationduration long rotate robot second rotationvelocity yaw velocity rotate robot rad node topic imumag node subscribes magnetometer data message type sensormsgsmagneticfield cmdvel node publishes rotation command topic unless manual mode enabled message type geometrymsgstwist output calibration three parameter magbiasx magbiasy magbiasz used imufiltermadgwick package status humble devel job status build status,"[('free', 'parameter'), ('kinematic', 'chain')]"
MiRoboticsLab/cyberdog_ros2,C++,xiaomi cyberdog roslicense english mi 123 usbdownload ssh mi192168551 rosddscyclone dd 2galactic nvidiajetson202109ubuntu 1804 ubuntu 1804rosminirepos docker aptget update aptget install nvidial4tjetsonmultimediaapi cudacompiler102 arm64docker dockercolcon docker docker build armdocker10 buildarg gfw1 colcon colconcmakeargs dbuildinsidegfwon colcon build mergeinstall packagesselect sdl2vendor lcmvendor mpg123vendor toml11vendor cmakeargs dbuildinsidegfwon cyberdogros2 cyberdogros2 mkdir p rosappssrc cd rosappssrc git clone cd packagesuptosourceros colcon build mergeinstall packagesupto cyberdogbringup optros2cyberdog export outputdiroptros2cyberdog colcon build mergeinstall installbase outputdir packagesupto cyberdogbringup cyberdogros2 download cyberdogros2 mkdir p rosappssrc cd rosappssrc git clone cd sourceros colcon build mergeinstall optros2cyberdog export outputdiroptros2cyberdog colcon build mergeinstall installbase outputdir cmakeargsdxiaomixiaoaion optros2cyberdog restart service sudo systemctl restart cyberdogros2service cyberdogctrl cyberdogapp step contributingmd,"[('colcon', 'build'), ('build', 'mergeinstall')]"
dusty-nv/jetson-reinforcement,C++,img src deep reinforcement learning robotics note repo support pytorch v03 jetpack 32 newer example check openairos package gymgazebo2 repo isaac sdk sample tutorial creating artificially intelligent agent learn interacting environment gathering experience system reward deep reinforcement learning deep rl using endtoend neural network translate raw pixel action rltrained agent capable exhibiting intuitive behavior performing complex task ultimately aim train reinforcement learning agent virtual robotic simulation 3d transfer agent realworld robot reinforcement learner choose best action agent perform based environmental state like camera input reward provide feedback agent performance reinforcement learning learn behave optimally environment given policy task like obtaining reward many scenario state space significantly complex multidimensional neural network increasingly used predict best action deep reinforcement learning gpu acceleration come play deep reinforcement learning agent typically processing 2d imagery using convolutional neural network cnns processing input order magnitude complex lowdimensional rl ability learn vision endtoend network referred pixelstoactions img src repository includes discrete deep qlearning dqn continuous a3g algorithm pytorch example interoperability library api c integrating linux application robotics simulation deployment field table content building source verifying pytorch dqn openai gym cartpole lunar lander digging c api testing c api catch fruit 3d simulation robotic arm rover navigation continuous control appendix using lua note stream webinar topic follows tutorial building source run following command terminal build source bash sudo aptget install cmake git clone cd jetsonreinforcement git submodule update init mkdir build cd build cmake make cmake step pytorch compiled installed take awhile around 30 minute hour jetson stable version pytorch currently using 030 build script download pacekages ask sudo password install verifying pytorch proceeding make sure pytorch installed correctly get introduction pytorch already familiar provided jupyter ipython notebook called intropytorchipynb includes simple pytorch example verify install test cudacudnn support pytorch launch notebook locally system run following command bash cd jetsonreinforcementbuildaarch64bin cd x8664bin pc jupyter notebook click intropytorchipynb alternatively wish skip notebook run pytorch verification command directly launching interactive python shell python command running following python import pytorch printtorchversion print cuda available strtorchcudaisavailable torchcudafloattensor2zero print tensor stra b torchrandn2cuda print tensor b strb c b print tensor c strc pytorch installed correctly system output follows python python 2712 default nov 19 2016 064810 gcc 540 20160609 linux2 type help copyright credit license information import pytorch printtorchversion 030b0af3964a print cuda available strtorchcudaisavailable cuda available true torchcudafloattensor2zero print tensor stra tensor torchcudafloattensor sizegpub torchrandn2cuda print tensor b strb tensor b 02190 03212 torchcudafloattensor sizegpuc b print tensor c strc tensor c 02190 03212 torchcudafloattensor sizegpu verified pytorch loading able detect gpu acceleration able allocate tensor gpu able perform basic tensor operation using cuda dqn openai gym order first test verify deep reinforcement learning algorithm indeed learning run inside openai gym environment 2d introduction dqn algorithm second cudaenabled ipython notebook included repo introdqnipynb notebook applies dqn video captured gym cartpole environment learning vision gpu opposed lowdimensional parameter game like traditional rl although cartpole toy example vital start simple example eliminate potential issue early graduating complex 3d scenario become difficult debug since dqn learns raw 2d pixel array still considered deep reinforcement learning recommended follow along notebook familiarize dqn algorithm transition using c complex environment later repo cartpole launch notebook locally machine run following command bash cd jetsonreinforcementbuildaarch64bin cd x8664bin pc jupyter notebook click introdqnipynb inside notebook dqn set run 50 episode witnessed dqn start converge cartpole begin remain upright longer period time exit notebook run standalone gymdqnpy script terminal improved performance bash python gymdqnpy assuming current directory terminal still jetsonreinforcementbuildarchbin three window appear showing cartpole game graph peformance dqn agent begin learning longer dqn agent able balance pole moving cart point rewarded gym score 200 indicates scenario ha mastered short training agent achieve program quit lunar lander using similar script experiment different gym environment env parameter bash python gymrlpy envlunarlanderv2 render lunarlanderv2 environment fun explore similar task drone autolanding hence relevant robotics first lander crash wildly starting around episode 50 may notice start attempt remain flag couple hundred episode start land controlled descent terminal see reward becoming positive increasing time towards 200 episode 010 reward 50810 last length 079 average length 1820 episode 020 reward 30104 last length 088 average length 2502 episode 030 reward 20876 last length 102 average length 3196 episode 040 reward 9875 last length 071 average length 4818 episode 050 reward 15566 last length 107 average length 5396 episode 060 reward 10331 last length 091 average length 5813 episode 070 reward 6471 last length 095 average length 6451 episode 080 reward 9323 last length 147 average length 7615 episode 090 reward 15040 last length 120 average length 8676 episode 100 reward 21814 last length 100 average length 9821 episode 110 reward 9355 last length 101 average length 10055 episode 120 reward 3254 last length 120 average length 10552 episode 130 reward 11293 last length 183 average length 12030 episode 140 reward 18825 last length 110 average length 14931 episode 150 reward 7887 last length 176 average length 14866 episode 160 reward 1195 last length 174 average length 15323 episode 170 reward 13150 last length 252 average length 15550 episode 180 reward 11042 last length 128 average length 15447 episode 190 reward 8632 last length 161 average length 15621 episode 200 reward 11107 last length 505 average length 16206 next look integrating standalone python example robotics code via c wrapper library digging c api take deep reinforcement learner monolithic python example libray form integrated robot simulator provide c wrapper library api python code underneath library us python lowlevel c ffi pas tensor memory application pytorch without extra copy zerocopy library architected modular extended support new type learning algorithm pseudocode illustrating signature rlagent interface rl implementation inherit c base class deep reinforcement learning agent class rlagent public create new instance module training agent static rlagent create uint32t width uint32t height uint32t channel uint32t numactions destructor virtual rlagent input state predict next action virtual bool nextaction tensor state int action issue next reward training iteration virtual bool nextreward float reward bool endepisode included repo different implementation agent including dqnagent use simulation scenario follow user provides sensor data environmental state nextaction function call python script return predicted action user applies robot simulation next reward issued nextreward function provides feedback learner environment kick next training iteration make agent learn time testing c api make sure reinforcement learner still functioning properly c simple example using api called catch fruit provided similar concept pong catch ball drop top environment agent must catch ball reach bottom screen moving paddle left right catch unlike previous example monolithic python script catch sample simple cc program link reinforcement learning library outlined test textual catch sample run following executable terminal around 100 episode agent start winning episode nearly 100 time bash catch deeprl inputwidth 64 deeprl inputheight 64 deeprl inputchannelsdeeprl numactionsdeeprl optimizer rmsprop deeprl learning rate 001 deeprl replaymemory 10000 deeprl batchsize 32 deeprl gamma 09 deeprl epsilonstart 09 deeprl epsilonend 005 deeprl epsilondecay 2000 deeprl allowrandomdeeprl debugmodedeeprl creating dqn model instance deeprl dqn model instance created deeprl dqn script done init cuda cudaallocmapped 16384 byte cpu 0x1020a800000 gpu 0x1020a800000 deeprl pytorch thcstate 0x0318d490 deeprl nnconv2d output size 800 episode001 001 10000 episode004 005 08000 episode 10 007 010 07000 episode 15 010 015 06667 episode 20 013 020 06500 13 last 20 065 max065 episode 25 015 025 06000 11 last 20 055 max065 lost episode 30 018 030 06000 11 last 20 055 max065 lost episode 35 019 035 05429 09 last 20 045 max065 episode 40 022 040 05500 09 last 20 045 max065 lost episode 45 024 045 05333 09 last 20 045 max065 episode 50 027 050 05400 09 last 20 045 max065 episode 55 031 055 05636 12 last 20 060 max065 lost episode 60 034 060 05667 12 last 20 060 max065 episode 65 038 065 05846 14 last 20 070 max070 episode 70 042 070 06000 15 last 20 075 max075 lost episode 75 045 075 06000 14 last 20 070 max075 episode 80 050 080 06250 16 last 20 080 max080 episode 85 055 085 06471 17 last 20 085 max085 episode 90 059 090 06556 17 last 20 085 max085 episode 95 063 095 06632 18 last 20 090 max090 episode 100 068 100 06800 18 last 20 090 max090 episode 105 073 105 06952 18 last 20 090 max090 episode 110 078 110 07091 19 last 20 095 max095 episode 111 079 111 07117 19 last 20 095 max095 episode 112 080 112 07143 20 last 20 100 max100 internally catch using dqnagent api c library implement learning alternate argument optional command line parameter catch play around change dimension environment pixel array input size increasing complexity see impact convergence training time bash catch width96 height96 catch render enable text output environment 96x96 environment size catch agent achieves 75 accuracy around 150200 episode 128x128 environment size catch agent achieves 75 accuracy around 325 episode fruit next provide 2d graphical sample c called fruit agent appears random location must find fruit object gain reward win episode running bound timeout period expires fruit agent haspossible action choose moving left right screen order navigate object note c example running mostly gpu rudimentary 2d rasterization environment cuda along dqn display visualization opengl like learning vision using translate raw pixel array action using deep reinforcement learning analog complex navigation motion planning task simple fruit example intended prove dqnagent able visually identifying navigating object interest starting location later repo build pathplanning capability 3d robotic simulation running sample start fruit launch following executable terminal bash fruit achieve around 95 accuracy around 100 episode within default 48x48 environment action reward 00628 win 052 094 055 16 last 20 080 max080 action left reward 00453 win 052 094 055 16 last 20 080 max080 action left reward 00271 win 052 094 055 17 last 20 085 max085 action left reward 00084 win 052 094 055 17 last 20 085 max085 action reward 01208 win 052 094 055 17 last 20 085 max085 action left reward 01154 win 052 094 055 17 last 20 085 max085 action reward 10000 eoe win 053 095 056 17 last 20 085 max085 action reward 01441 win 053 095 056 18 last 20 090 max090 action reward 01424 win 053 095 056 18 last 20 090 max090 action reward 01406 win 053 095 056 18 last 20 090 max090 action reward 01386 win 053 095 056 18 last 20 090 max090 action reward 01365 win 054 096 057 19 last 20 095 max095 action reward 01342 win 054 096 057 19 last 20 095 max095 action right reward 00134 win 054 096 057 19 last 20 095 max095 alternate argument similar vein catch sample optional command line parameter fruit exercise bash fruit width64 height64 episodemaxframes100 increasing dimension environment pixel array input episodemaxframes increased accordingly agent require time get across screen larger environment episode timeout 3d simulation point repo environment 2d namely confirm deep rl algorithm learning intended migrate agent operating 3d world going use gazebo robotic simulator simulate different autonomous machine including robotic arm rover transfered realworld robot robotic arm first gazebo environment train robotic arm touch object without needing explicit ik inverse kinematics arm motion planning learned internally network get started run following script terminal bash gazeboarmsh img src plugins hook learning simulation located gazebo directory repo see armplugincpp code link gazebo dqnagent control arm joint notice arm agent converging object begin move object around scene pressing keyboard enable translation mode gazebo clicking dragging object around viewport note want move object arm still reach arm rotational base initially limited around 45 degree travel either direction rover navigation also skidsteer rover gazebo learns follow object avoiding wall environment similar fruit scenario launch rover simulation run script bash gazeboroversh img src press ctrlt subscribe cameralinkcameraimage topic visualize scene camera similar arm notice rover consistently finding object case green box move object around scene pressing first note episode timeout similar fruit want move object far away without first increasing rover maxepisodelength code recompiling continuous control dqn agent using discrete meaning network selects one output neuron per timestep user explicitly map defines correspond action typically increasingdecreasing position velocity delta amount mean degree freedom robotoutputs required one increase variable delta another decrease complex realworld scenarious often advantageous control degree freedom simultaneously network output precise value variable example wanted teach humanoid walk 2040 degree freedom controlling joint simultaneously would important stability img src continuous control exists class advanced deep reinforcement learner called actorcritic active area research recently yielded latest stateoftheart solution like ddpg acktr a3ca3g bipedal walker demonstrate continuous learner one challenging difficult openai gym environment bipedalwalkerhardcorev2 included repo demo a3g launch many gym instance learn quickly parallel using gpu launch a3g solver run following command terminal bash cd jetsonreinforcementpythona3g python mainpy env bipedalwalkerhardcorev2 workersgpuidsamsgrad true model conv stackframes img src depending setting system resource typically take a3g 90120 minute master environment clearing hurdle pitfall multiple gpus pc server disable rendering increase number worker thread specify additional gpuids speed training img src appendix using lua default repo build pytorch python however also support included torch7 lua script compile flag process scripted automatically install dependency like torch7 build project source may required enter sudo password point cloning github repo first make sure build tool bash sudo aptget install git cmake git clone configuring build bash cd jetsonreinforcement mkdir build cd build cmake duseluayes dusepythonno initiate building dependency like torch binding cudacudnn take time compiling bash cd jetsoninferencebuild omit pwd already directory step make depending architecture package built either armhf aarch64 following directory structure build aarch64 64bit bin application binary built include header reside lib library build armhf 32bit bin application binary built include header reside lib library build verifying lua torch install either building sourcebuildingfromsource downloading packagedownloadingthepackage verify luajit51 torch7 scripting environment command bash cd aarch64bin deeprlconsole hellolua verify lua interpreter consult unfamiliar lua deeprl created new luastate deeprl opened lua library deeprl loading hellolua hello lua variable equal 16 listmapx 10 one two46810 multiply 200 goodbye deeprl closing luastate command test loading torch7 package binding cudacudnn bash deeprlconsole testpackageslua load torch package binding deeprl created new luastate deeprl opened lua library deeprl loading testpackageslua deeprl hello within torchlua environment time0032163 deeprl loading lua package deeprl loading torch deeprl loading cutorch cutorchhashalf false deeprl loading nn deeprl loading cudnn deeprl loading math deeprl loading nnx deeprl loading optim deeprl done loading package time5234669 deeprl closing luastate script run normally verify lua torch environment sane deeprlconsole program launch user script command line cli playing catch lua qlearner next verify reinforcement qlearner learns like supposed let play simple game halfpong catch bash deeprlconsole catchdqnlua launching script begin jetson playing game catch plotting learning process realtime href src epoch one game play ball drop top screen bottom hundred epoch qlearner starting catch ball majority time,"[('last', '20'), ('last', 'length')]"
MarketSquare/robotframework-requests,Python,python build codecov pypi downloads latest version requestslibrary robot framework library aimed provide http api testing functionality wrapping well known python request library install stable version sh pip install robotframeworkrequests install prerelease version sh pip install robotframeworkrequests pre quick start robotframework setting library requestslibrary test case quick get request test response get quick get request parameter test response get paramsqueryciao expectedstatus200 quick get json body test response get equal stringsresponsejsonid new 09 sessionless keywords available get post etc need create session anymore robotframework resp get status request successfull use last response need pas response anymore robotframework get status 200 new 08 new keywords structure request keywords rewritten many backward compatible change allow near future request keywords without session example get request become get session soon also get session needed old keywords request deprecated removed 100 version implicit assert status code session keywords automatically fail error status code returned expectstatus could used specify status code 201 ok bad request want evaluate response case closer original request library new keywords parameter order structure original lot preparsing encoding ha removed accurate unchanged behaviour cleaner project architecture main keywords file ha split logic division allow better faster maintenance example robotframework setting library collection library requestslibrary suite setup create session jsonplaceholder test case get request test create session google respgoogle get session google expectedstatus200 respjson get session jsonplaceholder posts1 equal string respgooglereason ok dictionary contain value respjsonjson sunt aut facere repellat provident post request test data create dictionary titlerobotframework request bodythis test userid1 resp post session jsonplaceholder post jsondata expectedstatusanything status 201 resp keywords documentation robotframeworkrequests offer wide set keywords found keywords documentation test example find many test example inside atests folder contributing feel free contribute open issue order discus take look contribution guideline get touch community via slack user group robot framework slack request channel robot framework user group,"[('get', 'request'), ('get', 'session')]"
at-wat/neonavigation,C++,neonavigation metapackage build status codecov license metapackage autonomous vehicle navigation important notice topicservice namespace model migrated recommended style see package readme runtime migration message node install noteneonavigationmsgs metapackage required build neonavigation metapackage noteneonavigationrvizplugins metapackage required visualize pathwithvelocity message used planner3d trajectorytracker shell clone cd pathtoyourcatkinwssrc git clone git clone git clone build cd pathtoyourcatkinws rosdep install frompaths src ignoresrc install dependency catkinmake dcmakebuildtyperelease release build recommended demo quick demonstration simple simulated robot available roslaunch neonavigationlaunch demolaunch rviz image demo package costmapcspace 3dof configuration space costmap handler plannercspace 2d3dof seamless globallocal path motion planner serial joint collision avoidance safetylimiter collision prevention control trajectorytracker path following control path handling maporganizer layered map handler trackodometry slip compensation vehicle odometry objtopointcloud obj surface data pointcloud converter neonavigationlaunch sample launch file reference watanabe endo g yamauchi k nagatani neonavigation metapackage 2d3dof seamless globallocal planner development field test representative offshore oil plant 2016 ieee international symposium safety security rescue robotics ssrr lausanne switzerland 2016 pp 8691 doi 101109ssrr20167784282 contributing neonavigation metapackage developed github flow feel free open new issue andor pull request code repository following c style guide configuration file clangformat available license neonavigation metapackage available bsd license,"[('neonavigation', 'metapackage'), ('git', 'clone')]"
andyzeng/arc-robot-vision,Other,robotic pickandplace novel object clutter repository contains implementation major component robot perception part mitprinceton 1st place winning entry stow task amazon robotics challenge 2017 featuring suctionbased grasping torch implementation fully convolutional neural network fcns directly predicting suctionbased grasping affordances rgbd image baseline algorithm matlab implementation baseline algorithm predicts suctionbased grasping affordances computing variance surface normal 3d point cloud projected rgbd image lower variance higher affordance paralleljaw grasping torch implementation fully convolutional neural network fcns directly predicting paralleljaw grasping affordances heightmaps created rgbd image baseline algorithm matlab implementation baseline algorithm detecting antipodal paralleljaw grasp detecting hilllike geometric stuctures 3d point cloud projected rgbd image image matching torch implementation twostream convolutional neural network matching observed image grasped object product image recognition information approach please visit project webpage check paper robotic pickandplace novel object clutter multiaffordance grasping crossdomain image matching pdf arxiv webpage andy zeng shuran song kuanting yu elliott donlon francois r hogan maria bauza daolin orion taylor melody liu eudald romo nima fazeli ferran alet nikhil chavan dafle rachel holladay isabella morona prem qu nair druck green ian taylor weber liu thomas funkhouser alberto rodriguez ieee international conference robotics automation icra 2018 abstract paper present robotic pickandplace system capable grasping recognizing known novel object cluttered environment key new feature system handle wide range object category without needing taskspecific training data novel object achieve first us categoryagnostic affordance prediction algorithm select among four different grasping primitive behavior recognizes picked object crossdomain image classification framework match observed image product image since product image readily available wide range object eg web system work outofthebox novel object without requiring additional training data exhaustive experimental result demonstrate multiaffordance grasping achieves high success rate wide variety object clutter recognition algorithm achieves high accuracy known novel grasped object approach wa part mitprinceton team system took 1st place stowing task 2017 amazon robotics challenge citing find code useful work please consider citing bash articlezeng2018robotic titlerobotic pickandplace novel object clutter multiaffordance grasping crossdomain image matching authorzeng andy song shuran yu kuanting donlon elliott hogan francois robert bauza maria daolin taylor orion liu melody romo eudald fazeli nima alet ferran dafle nikhil chavan holladay rachel morona isabella nair prem qu green druck taylor ian liu weber funkhouser thomas rodriguez alberto booktitleproceedings ieee international conference robotics automation year2018 license code released apache license v20 refer license file detail datasets information download link grasping dataset image matching dataset found project webpage contact question find bug please let know andy zeng andyzatprincetondotedu change log nov 16 2017 fix added require util dataloaderlua requirement dependency nvidia gpu compute capability 35 torch package image optim inn cutorch cunn cudnn hdf5 matlab 2015b later implementation tested ubuntu 1604 nvidia titan x full pickandplace system implementation outside scope repository us lightweight c service wrapper control torchlua matlab process via tcp socket data shared process reading writing ramdisk suctionbased grasping torch implementation fully convolutional neural network predicting pixellevel affordances higher value indicate better surface location grasping suction given rgbd image input quick start run pretrained model get pixellevel affordances grasping suction clone repository navigate arcrobotvisionsuctionbasedgraspingconvnet bash git clone cd arcrobotvisionsuctionbasedgraspingconvnet download pretrained model suctionbased grasping bash wget direct download link suctionbasedgraspingsnapshot10001t7 4501 mb run model optional target rgbd image input color image 24bit rgb png depth image 16bit png depth value saved decimillimeters 104m bash th inferlua creates resultsh5 bash imgcolorpathimagepng imgdepthpathimagepng modelpathmodelt7 th inferlua creates resultsh5 visualize prediction matlab show heat map confidence value hotter region indicate better location grasping suction also display computed surface normal used decide robot motion primitive suctiondown suctionside run following matlab matlab visualize creates resultspng normalspng training train model navigate arcrobotvisionsuctionbasedgrasping bash cd arcrobotvisionsuctionbasedgrasping download suctionbased grasping dataset save file arcrobotvisionsuctionbasedgraspingdata information dataset found bash wget unzip suctionbasedgraspingdatasetzip unzip dataset direct download link suctionbasedgraspingdatasetzip 16 gb download torch resnet101 model pretrained imagenet bash cd convnet wget direct download link resnet101t7 4094 mb run training set optional parameter command line argument bash th trainlua tip run gpu memory cuda error2 reduce batch size modify network architecture modellua use smaller resnet50 2567 mb model pretrained imagenet evaluation evaluate trained model navigate arcrobotvisionsuctionbasedgraspingconvnet bash cd arcrobotvisionsuctionbasedgraspingconvnet run pretrained model get affordance prediction testing split grasping dataset bash th testlua creates evaluationresultsh5 run model bash modelpathmodelt7 th testlua creates evaluationresultsh5 run evaluation script matlab compute pixellevel precision manual annotation grasping dataset reported paper matlab evaluate baseline algorithm baseline algorithm predicts affordances suctionbased grasping first computing 3d surface normal point cloud projected rgbd image measuring variance surface normal higher variance lower affordance run baseline algorithm testing split grasping dataset navigate arcrobotvisionsuctionbasedgraspingbaseline bash cd arcrobotvisionsuctionbasedgraspingbaseline run following matlab matlab test creates resultsmat evaluate paralleljaw grasping torch implementation fully convolutional neural network predicting pixellevel affordances paralleljaw grasping network take rgbd heightmap input output affordances horizontal grasp input heightmaps rotated arbitrary angle structure allows use unified model predict grasp affordances possible grasping angle heightmaps generated orthographically reprojecting 3d point cloud rgbd image upwards along gravity direction height value bin bottomsee getheightmapm quick start run pretrained model get pixellevel affordances paralleljaw grasping clone repository navigate arcrobotvisionparalleljawgraspingconvnet bash git clone cd arcrobotvisionparalleljawgraspingconvnet download pretrained model paralleljaw grasping bash wget direct download link paralleljawgraspingsnapshot20001t7 4501 mb generate rgbd heightmap given two rgbd image run following matlab matlab getheightmap run model optional target rgbd heightmap input color image 24bit rgb png height image depth 16bit png height value saved decimillimeters 104m bin bottombash th inferlua creates resultsh5 bash imgcolorpathimagepng imgdepthpathimagepng modelpathmodelt7 th inferlua creates resultsh5 visualize prediction matlab show heat map confidence value hotter region indicate better location horizontal paralleljaw grasping run following matlab matlab visualize creates resultspng training train model navigate arcrobotvisionparalleljawgrasping bash cd arcrobotvisionparalleljawgrasping download paralleljaw grasping dataset save file arcrobotvisionparalleljawgraspingdata information dataset found bash wget unzip paralleljawgraspingdatasetzip unzip dataset direct download link paralleljawgraspingdatasetzip 7118 mb preprocess input data label paralleljaw grasping dataset save file arcrobotvisionparalleljawgraspingconvnettraining preprocessing includes rotating heightmaps 16 discrete rotation converting raw grasp label twopoint line dense pixelwise label augmenting label small amount jittering either run following matlab matlab cd convnet processlabels download already preprocessed input bash cd convnet wget unzip trainingparalleljawgraspingdatasetzip unzip dataset direct download link trainingparalleljawgraspingdatasetzip 7400 mb download torch resnet101 model pretrained imagenet bash wget direct download link resnet101t7 4094 mb run training set optional parameter command line argument bash th trainlua tip run gpu memory cuda error2 reduce batch size modify network architecture modellua use smaller resnet50 2567 mb model pretrained imagenet evaluation evaluate trained model navigate arcrobotvisionparalleljawgraspingconvnet bash cd arcrobotvisionparalleljawgraspingconvnet run model get affordance prediction testing split grasping dataset bash modelpathmodelt7 th testlua creates evaluationresultsh5 run evaluation script matlab compute pixellevel precision manual annotation grasping dataset reported paper matlab evaluate baseline algorithm baseline algorithm detects antipodal paralleljaw grasp detecting hilllike geometric feature bruteforce sliding window search 3d point cloud input heightmap color geometric feature satisfy two constraintsgripper finger fit within concavity along side hill andtop hill least 2cm lowest point concavity valid grasp ranked affordance score computed percentage 3d surface point gripper finger lowest point concavity run baseline algorithm testing split grasping dataset navigate arcrobotvisionparalleljawgraspingbaseline bash cd arcrobotvisionparalleljawgraspingbaseline run following matlab matlab test creates resultsmat evaluate image matching torch implementation twostream convolutional neural network matching observed image grasped object product image recognition one stream computes 2048dimensional feature vector product image stream computes 2048dimensional feature vector observed image training stream optimized feature similar image object dissimilar otherwise testing product image known novel object mapped onto common feature space recognize observed image mapping feature space finding nearest neighbor product image match training train model navigate arcrobotvisionimagematching bash cd arcrobotvisionimagematching download image matching dataset save file arcrobotvisionimagematchingdata information dataset found bash wget unzip imagematchingdatasetzip unzip dataset direct download link imagematchingdatasetzip 46 gb download torch resnet50 model pretrained imagenet bash wget direct download link resnet50t7 2567 mb run training change variable trainmode trainlua depending architecture want train bash th trainlua evaluation evaluate trained model navigate arcrobotvisionimagematching bash cd arcrobotvisionimagematching download pretrained model knet nnet twostage crossdomain image matching bash wget unzip knetzip wget unzip nnetzip direct download link knetzip 1753 mb nnetzip 1740 mb run pretrained model compute feature testing split image matching dataset change variable trainmode depending architecture want test bash trainmode1 snapshotsfoldersnapshotswithclass snapshotnamesnapshot170000 th testlua knet creates hdf5 output file save snapshot folder trainmode2 snapshotsfoldersnapshotsnoclass snapshotnamesnapshot8000 th testlua nnet creates hdf5 output file save snapshot folder run evaluation script matlab computevs 20 object recognition accuracy image matching dataset reported paper matlab evaluatetwostage run following matlab evaluation single model instead two stage system matlab evaluatemodel,"[('download', 'link'), ('baseline', 'algorithm')]"
MegviiRobot/CamLaserCalibraTool,C++,camera laser calibration tool tcl april tag apriltag kalibrtagpdf apriltag apriltagpdf radialtangential radtan distortioncoeffs k1 k2 r1 r2 equidistant equidistortioncoeffs k1 k2 k3 k4 info please visit kalibr website 120 2m c mkdir lasercameracalws mkdir src cd src git clone cd catkinmake dcmakebuildtyperelease41 c cd lasercameracalws source develsetupbash rosrun lasercamcalros simulationlasercamcalnode maincalibrsimulationcpp 42 configcalibraconfigyaml rosbag configyaml rosbag 03m 15m 43 kalibr txt c cd lasercameracalws source develsetupbash roslaunch lasercamcalros kalibraapriltaglaunch 44 c roslaunch lasercamcalros calibraofflinelaunch 45 c roslaunch lasercamcalros debuglaunch rosbag play databag debug todo author yijia question please contact heyijia2013 163 dot com xizhen xiao xiao liu homepage ref 2004 qilong zhang extrinsic calibration camera laser range finder improves camera calibration,"[('roslaunch', 'lasercamcalros'), ('camera', 'laser')]"
stepjam/PyRep,Python,pyrep build status discord pyrep toolkit robot learning research built top coppeliasim previously called vrep install running headless getting started usage supported robot adding robot contributing project using pyrep happened vrep citation install pyrep requires version 41 coppeliasim download ubuntu 1604 ubuntu 1804 ubuntu 2004 downloaded coppeliasim pull pyrep git bash git clone cd pyrep add following bashrc file note edit first line bash export coppeliasimrooteditmepathtocoppeliasiminstalldir export ldlibrarypathldlibrarypathcoppeliasimroot export qtqpaplatformpluginpathcoppeliasimroot remember source bashrc source bashrc zshrc source zshrc finally install python library bash pip3 install r requirementstxt pip3 install good go try running one example example folder although use coppeliasim platform communication via pyrep currently supported linux troubleshooting problem may encounter installation none solve problem please raise issue modulenotfounderror module named pyrepbackendvrepcffi getting error please check running interpreter project root python interpreter try import file rather installed file error command x8664linuxgnugcc failed may missing package needed building python extension try sudo aptget install python3dev rerun installation running headless run pyrepcoppeliasim headlessly virtualgl virtualgl open source toolkit give unix linux remote display software ability run opengl application full 3d hardware acceleration first insure nvidia proprietary driver installed ie get output running nvidiasmi run following command bash sudo aptget install xorg libxcbrandr0dev libxrenderdev libxkbcommondev libxkbcommonx110 libavcodecdev libavformatdev libswscaledev sudo nvidiaxconfig usedisplaydevicenone virtual1280x1024 install virtualgl wget virtualgl252amd64deb sudo dpkg virtualgldeb rm virtualgldeb need reboot start x serverbash sudo reboot nohup sudo x good go render application first gpu followingbash export display00 python mypyrepapppy render second gpu insetad set display asexport display01 acknowledgement special thanks boyuan chen uc berkeley bringing virtualgl attention getting started first take look usage example example folder see pyrep might able accelerate research take look coppeliasim tutorial usage best way see pyrep help research look example example folder launching simulation python pyrep import pyrep pr pyrep launch application scene file headless mode prlaunch scenettt headlesstrue prstart start simulation stuff prstop stop simulation prshutdown close application modifying scene python pyrepobjectsshape import shape pyrepconst import primitiveshape object shapecreatetypeprimitiveshapecylinder colorrgb sizew h positionx z objectsetcolorr g b objectsetpositionx z using robot robot designed modular arm treated separately grippers use robot ttm file defined robotsttms altered slightly original one shipped coppeliasim allow used motional planning box tip robot may want feel free play around python pyrep import pyrep pyreprobotsarmspanda import panda pyreprobotsendeffectorspandagripper import pandagripper pr pyrep launch application scene file contains robot prlaunch scenewithpandattt prstart start simulation arm panda get panda scene gripper pandagripper get panda gripper scene velocities246armsetjointtargetvelocitiesvelocities prstep step physic simulation done false open gripper halfway velocity 004 done done gripperactuate05 velocity004 prstep prstop stop simulation prshutdown close application recommend constructing robot dictionary small structure eg python class myrobotobject def initself arm gripper selfarm arm selfgripper gripper arm panda get panda scene gripper pandagripper get panda gripper scene create robot structure myrobot1 myrobotarm gripper myrobot2 arm arm gripper gripper running multiple pyrep instance pyrep instance need process achieved using python multiprocessing module simple example python multiprocessing import process process 10 def run pr pyrep prlaunch myscenettt headlesstrue prstart stuff prstop prshutdown process processtargetrun args rangeprocesses pstart p process pjoin p process supported robot list robot currently supported pyrep arm kinova mico kinova jaco rethink baxter rethink sawyer franka emika panda kuka lbr iiwar800 kuka lbr iiwa 14 r820 universal robot ur3 universal robot ur5 universal robot ur10 grippers kinova mico hand kinova jaco hand rethink baxter gripper franka emika panda gripper mobile robot kuka youbot turtle bot line tracer feel free send pull request new robot adding robot robot want currently supported add tutorial adding robot contributing want make pyrep best tool rapid robot learning research would like get involved please get contact pull request welcome bug fix project using pyrep use pyrep work get contact add list rlbench robot learning benchmark learning environment arxiv 2019 learning oneshot imitation human without human arxiv 2019 taskembedded control network fewshot imitation learning corl 2018 transferring endtoend visuomotor control simulation real world multistage task corl 2017 acknowledgement george nomicos imperial college london addition mobile platform boyuan chen uc berkeley bringing virtualgl attention happened vrep coppelia robotics discontinued development vrep instead focus effort coppeliasim coppeliasim 100 compatible vrep see information pyrep fully compatible vrep coppeliasim citation articlejames2019pyrep titlepyrep bringing vrep deep robot learning authorjames stephen freese marc davison andrew j journalarxiv preprint arxiv190611176 year2019,"[('robot', 'learning'), ('get', 'panda')]"
jcrocholl/rostock,Python,concept delta robot 3d printer design goal build volume 8x8x16 inch 200x200x400 mm footprint 12x12 inch print surface 8x8 inch heated glass never move mass moving platform hotend le 100 g mass moving platform two hotends le 150g positioning speed 800 mm alldirections positioning accuracy 100 stepsmm alldirections simplicity fewer 200 part including washer nut smdmounted electronics hardware cost le 500 usd part stepper motor 4x nema 17 plus extruder motor timing belt hightorque gt2 beltmm pitch pulley 12 groove aluminum 76 mm pitch diameter filament drive similar ultimaker ball bearing 8x 608 skateboard bearing linear bearing 8x lm8uu smooth rod 8x 762x8 mm diagonal rod hollow carbon fiber rod kite shop diagonal rod end cheap ball joint used model race car hotends makergear 175 mm top bottom frame lasercut plywood inspiration search youtube flexpicker adept quattro ancestor,"[('mass', 'moving'), ('moving', 'platform')]"
BYU-PCCL/holodeck,Python,holodeck read doc badge build status holodeck highfidelity simulator reinforcement learning built top unreal enginefeatures rich world training agent many scenario world linux window support easily extend modify training scenario train control one agent simple openai gymlike python interface high performance simulation speed 2x real time possible performance penalty need run headless watch agent learn question join discord installation pip install holodeck requires python 35 see installation complete instruction including docker documentation quickstart changelog example agent sensor available package world doc usage overview holodeck interface similar openai gym try provide battery included approach let jump right using holodeck minimal fiddling required demonstrate quick example using defaultworlds package python import holodeck load environment environment contains uav city env holodeckmakeurbancitymaxdistance must call reset newly created environment tickingstepping envreset uav takestorques thrust command command0100 range30 state reward terminal info envstepcommand state dict sensor name sensor value nparray reward reward received previous action terminal indicates whether current state terminal state info contains additional environment specific information want access data specific sensor import sensor retrieving correct value state dictionary python printstatelocationsensor multi agentenvironments holodeck support multiagent environment call step provide action main agent tick simulation act provides persistent action specific agent doe tick simulation action ha provided tick advance simulation forward action persisted another call act provides different action python import holodeck import numpy np env holodeckmakecyberpunkcityfollow envreset provide action agent envact uav0 nparray00 100 envact nav0 nparray00 advance simulation range300 action provided repeated state envtick access reward terminal location multi agent environment follows python task statesuav0followtask reward task0 terminal task1 location statesuav0locationsensor uav0 come scenario configuration file running holodeck headless holodeck run headless gpu accelerated rendering see using holodeck headless citation mischolodeckpccl author joshua greave max robinson nick walton mitchell mortensen robert pottorff connor christopherson derek hancock jayden milne david wingate title holodeck high fidelity simulator year 2018 holodeck project byu perception cognition control lab,"[('run', 'headless'), ('using', 'holodeck')]"
leggedrobotics/ocs2,C++,ocs2 toolbox summary ocs2 c toolbox tailored optimal control switched system ocs2 toolbox provides efficient implementation following algorith slq continuoustime domin ddp ilqr discretetime domain ddp sqp multipleshooting algorithm based hpipm pisoc path integral stochatic optimal control leggedrobot ocs2 handle general path constraint augmented lagrangian relaxed barrier method facilitate application ocs2 robotic task provides user additional tool set system dynamic kinematic dynamic model costconstraints selfcollision avoidance endeffector tracking urdf model library also provides automatic differentiation tool calculate derivative system dynamic constraint cost facilitate deployment robotic platform ocs2 provides tool interface toolbox efficient numerically stable implementation conjunction userfriendly interface paved way employing numerous robotic application limited onboard computation power information refer project documentation page,"[('ocs2', 'toolbox'), ('optimal', 'control')]"
wh200720041/ssl_slam2,C++,sslslam2 lightweight 3d localization mapping solidstate lidar intel realsense l515 example repo extension work sslslam similar rtabmap sslslam2 separate mapping module localization module map saving map optimization enabled mapping unit map loading localization enabled localziation unit code implementation paper lightweight 3d localization mapping solidstate lidar published ieee robotics automation letter 2021 paper summary video demo found video modifier wang han nanyang technological university singapore running speed 20 hz intel nuc 30 hz pcsolidstate lidar sensor example 11 scene reconstruction example 12 localization built map 13 comparison prerequisite 21 ubuntu ubuntu 64bit 1804 melodic installation 22 cere solver follow cere installation 23 pcl follow pcl installation tested 181 24 gtsam follow gtsam installation 25 trajectory visualization visualization purpose package us hector trajectory sever may install package sudo aptget install rosmelodichectortrajectoryserver alternatively may remove hector trajectory server node trajectory visualization neededsensor setup new realsense l515 sensor may follow setup instruction 31 l515 32 librealsense follow librealsense installation 33 realsenseros copy realsenseros package catkin folder cd catkinwssrc git clone cd catkinmakebuild sslslam2 41 clone repository cd catkinwssrc git clone cd catkinmake source catkinwsdevelsetupbash 42 download test rosbag may download recorded data mappingtestbag 3g localizationtestbag 6gif dont realsense l515 defult file homeuserdownloads unzip file may take unzip cd downloads unzip localizationtestzip unzip mappingtestzip 43 map building map optimization building roslaunch sslslam2 sslslam2mappinglaunch map optimization performed based loop closure specify loop clousre manually order trigger global optimization save map open new terminal rosservice call savemap upon calling serviece map automatically saved recommended loop closure reduce drift service called loop closure checked example rosbag provided loop closure appears frame 10601120 thus see totalframe 1070 totalframe 1110 may immediately type rosservice call savemap since current frame 1060 1120 loop closure triggered automatically global map optimized saved 44 localization type roslaunch sslslam2 sslslam2localizationlaunch map large may take load 45 parameter explanation map size depends number keyframes used keyframes used map buildin larger map minmapupdatedistance distance threshold add keyframe higher mean lower update rate minmapupdateangle angle threshold add keyframe higher mean lower update rate minmapupdateframe time threshold add keyframe higher mean lower update rate 46 relocalization relocalization module tracking loss still development must specify robot init pose wrt map coordinate starting position origin map set param nameoffsetx typedouble value00 param nameoffsety typedouble value00 param nameoffsetyaw typedouble value00 47 running speed realsense running 30hz computer may able support high processing rate may reduce processing rate skipping frame thid setting param nameskipframes typeint value1 implies skip frame ie 30hz implies skipframes ie 15hz small map building online however recommended record rosbag build map offline large mapping since dense map cannot generated realtimemap building multiple loop closure place 51 dataset may download larger dataset largemappingtestbag 10g defult file homeuserdownloads unzip file may take unzip cd downloads unzip largemappingtestzip 52 map building two loop closure place appear frame 01260 12703630 ie frameand frame 1260 place frame 1270 adn 3630 place run roslaunch sslslam2 sslslam2largemappinglaunch open new terminal see totalframe 1260 immediately type rosservice call savemap see totalframe 3630 immediately type rosservice call savemapcitation use work research may want cite paper citation appreciated articlewang2021lightweight authorh wang c wang l xie journalieee robotics automation letter titlelightweight 3d localization mapping solidstate lidar year2021 volume6 number2 pages18011807 doi101109lra20213060392,"[('loop', 'closure'), ('rosservice', 'call')]"
leggedrobotics/raisimLib,Other,license associated file repo expire nov 1st 2020 latest version available,"[('license', 'associated'), ('associated', 'file')]"
frankaemika/franka_ros,C++,integration franka emika research robot ci see franka control interface fci documentationfcidocs information license package frankaros licensed apache 20 license,"[('integration', 'franka'), ('franka', 'emika')]"
ARISE-Initiative/robosuite,Python,robosuite homepage white paper documentation arise initiative latest update 11152022 v14 backend migration deepmind official mujoco python binding robot texture bug fix robot release note documentation 10192021 v13 ray tracing physically based rendering tool sparkle access additional vision modality video spotlight release note documentation 02172021 v12 added observable sensor model eye dynamic randomization gamedie release note 12172020 v11 refactored infrastructure standardized model class much easier environment prototyping wrench release note robosuite simulation framework powered mujoco physic engine robot learning also offer suite benchmark environment reproducible research current release v14 feature longterm support official mujoco binding deepmind project part broader advancing robot intelligence simulated environment arise initiative aim lowering barrier entry cuttingedge research intersection ai robotics datadriven algorithm reinforcement learning imitation learning provide powerful generic tool robotics learning paradigm fueled new advance deep learning achieved exciting success variety robot control problem however challenge reproducibility limited accessibility robot hardware especially pandemic impaired research progress overarching goal robosuite provide researcher standardized set benchmarking task rigorous evaluation algorithm development modular design offer great flexibility design new robot simulation environment highquality implementation robot controller offtheshelf learning algorithm lower barrier entry framework wa originally developed since late 2017 researcher stanford vision learning lab svl internal tool robot learning research actively maintained used robotics research project svl ut robot perception learning lab rpl welcome community contribution project detail please check contributing guideline release robosuite contains seven robot model eight gripper model six controller mode nine standardized task also offer modular design apis building new environment procedural generation highlight primary feature standardized task set standardized manipulation task large diversity varying complexity rl benchmarking result reproducible research procedural generation modular apis programmatically creating new environment new task combination robot model arena parameterized 3d object robot controller selection controller type command robot jointspace velocity control inverse kinematics control operational space control 3d motion device teleoperation multimodal sensor heterogeneous type sensory signal including lowlevel physical state rgb camera depth map proprioception human demonstration utility collecting human demonstration replaying demonstration datasets leveraging demonstration data learning check sister project robomimic photorealistic rendering integration advanced graphic tool provide realtime photorealistic rendering simulated scene citation please cite robosuite use framework publication bibtex inproceedingsrobosuite2020 titlerobosuite modular simulation framework benchmark robot learning authoryuke zhu josiah wong ajay mandlekar roberto mart inmart abhishek joshi soroush nasiriany yifeng zhu booktitlearxiv preprint arxiv200912293 year2020,"[('release', 'note'), ('robot', 'learning')]"
RoboMaster/RoboRTS,C++,roborts build status gitter introduction roborts open source software stack realtime strategy research mobile robot developed robomaster motivated robomaster ai challenge framework roborts consists two part autonomous mobile robot layer intelligent decisionmaking layer autonomous mobile robot layer alone let robot offically supported robomaster ai robot platform demonstrate certain level intelligence onboard computer run perception motion planning decision module fully supported community driven well platformcustomized code example mcu rt lowlevel robot controller implemented govern robot driving system todo intelligent decisionmaking layer includes multiagent decisionmaking framework game simulator released soon future tutorial information robomaster ai robot platform roborts framework please refer roborts tutorial competition robomaster hold ai challenge since 2017 challenge multiple robot fight game field automatically different rule information please refer dji robomaster 2019 icra ai challenge dji robomaster 2018 icra ai challenge copyright license roborts provided gplv3,"[('ai', 'challenge'), ('mobile', 'robot')]"
pantor/ros-control-center,Other,control center control center universal tool controlling robot running run browser using websocket connection roslibjs robotwebtools screenshot general control center offer easy way show node topic service name subscribe publish message call service show change parameter feature like console rosout default output battery status view camera stream view advanced mode better usability implemented check installation robot rosbridgesuite robot web tool need run use control center existing project call roslaunch rosbridgeserver rosbridgewebsocketlaunch launch websocket server control center run computer particular without network open control center setting tab need enter ip address port robot open control tab reload feature multiple saved setting quick change several robot control center support image camera stream via webvideoserver package camera camera info message published according webvideoserver standard stream shown setting custom message service type download repository start server via console navigate toindexhtmlin browser add individualhtmltemplates theapptopicsorappservicesfolder path file must correspond service message type name see included common message standard service example html file writeangularjs code additional customizing formatting right sidebar show logger output rosout default left group name shown topic service parameter grouped together better overview work follows every topic service parameter name correspond groupnameelementname like url global parameter group name shown group list left side every element name start capital letter shown normal view mode element including lowercasenames system service topic parameter shown enabling advanced view mode right bottom corner battery status bar shown battery topic adapted setting tab contributing development nodejs need installed via npm install automatically download development dependency packagejson type npm start terminal live development server vagrant ssh roslaunch rostestproject mainlaunch start test project virtual ubuntu machine control center depends angular general javascript routing framework bootstrap design roslibjs connection contribution always welcome license control center released bsd license full term condition see license file contributor see full list contributor,"[('control', 'center'), ('topic', 'service')]"
UniversalRobots/Universal_Robots_ROS_Driver,C++,build badge universalrobotsrosdriver universal robot become dominant supplier lightweight robotic manipulator industry well scientific research education robot operating system ha developed communitycentered movement mature framework quasi standard providing rich set powerful tool robot engineer researcher working many different domain release ur new eseries demand driver support new manipulator newest release paradigm like roscontrol ha increased goal driver provide stable sustainable interface ur robot strongly benefit party core value universal robot empower people achieve goal within automation success criterion driver release follow vision providing community easy use stable powerful driver empowers community reach goal research automation without struggling unimportant technical challenge instability lacking feature acknowledgment driver forked urmoderndriver developed collaboration href supported rosin rosindustrial qualityassured robot software component information href project ha received funding european union horizon 2020 research innovation programme grant agreement 732287 report issue creating issue please look troubleshooting section document create issue issue board please use default template get help need help using driver please see roscategory ur developer forum feature work cb3 software version 3120 eseries software 551 robot us rtde interface communication whenever possible factory calibration robot inside reach cartesian target precisely realtimeenabled communication structure robustly cope 2ms cycle time eseries use compile run kernel preemptrt patch enabled see realtime setup guide achieve transparent integration teachpendant using urcaps system program running robot handle control command sent side robot paused stopped resumed without restarting driver future also enable usage roscomponents part complex urprogram teach pendant roscontrol robot quit using service call continue program execution tp use robot speedscaling speed scaling active due safety constraint speed slider used get correctly handled side well slowing trajectory execution accordingly note roscontrollers based position interface used driver may behave wrong speed slider set 100 speed scaling slows robot also pausing function used default scaled trajectory controller used rosservicebased replacement everyday tpinteractions offer using ur robot without interacting teach pendant desired robot started stopped even recovery safety event done using service action call see driver dashboard service robotstatehelper node detail use ontherobot interpolation cartesian jointbased trajectory extremely helpful application meet realtime requirement driver special type passthrough controller forward trajectory directly robot take care interpolation waypoints achieve best performance please see external feature list listing feature supported driver content repository contains new urrobotdriver couple helper package urcalibration package around extracting converting robot factory calibration information make usable robotdescription urdashboardmsgs message definition used interacting dashboard node urrobotdriver actual driver package requirement driver requires system setup recommended use ubuntu 2004 noetic make sure robot control affected system latency highly recommended use realtime kernel system see realtime setup guide information set install binary package install package support noetic want use ur robot arm rosplease see rosdriver install driver using bash sudo apt install rosrosdistrourrobotdriver building source building source make sure actually need recommend install driver binary package unless want join development submit change note driver consists c library abstract robot interface driver top library built without support catkin package therefore requires different treatment built inside workspace see alternative build method like build library source bash source global source optrossetupbash create catkin workspace mkdir p catkinwssrc cd catkinws clone driver git clone srcuniversalrobotsrosdriver clone description currently necessary use melodicdevel branch git clone b melodicdevel srcuniversalrobot install dependency sudo apt update qq rosdep update rosdep install frompaths src ignoresrc build workspace catkinmake activate workspace ie source source develsetupbash alternative allsource build would like also build library source clone library workspace well build using either catkinmakeisolated catkin build bash source optrosyourrosversionsetupbash mkdir p catkinwssrc cd catkinws git clone srcuniversalrobotsclientlibrary git clone srcuniversalrobotsrosdriver git clone b melodicdevel srcuniversalrobot sudo apt update qq rosdep update rosdep install frompaths src ignoresrc catkinmakeisolated source develisolatedsetupbash setting ur robot urrobotdriver prepare robot using urrobotdriver real robot need install externalcontrolxxxurcap found installing necessary urcap creating program please see individual tutorial setup cb3 robot setup eseries robot setup tool communication eseries robot please consider tool communication setup guide prepare pc using driver make sure installed either debian package built source inside catkin workspace extract calibration information ur robot calibrated inside factory giving exact forward inverse kinematics also make use first extract calibration information robot though step necessary control robot using driver highly recommended otherwise endeffector position might magnitude centimeter exists helper script roslaunch urcalibration calibrationcorrectionlaunch robotiprobotip targetfilenamehomemyrobotcalibrationyaml parameter robotip insert ip address pc reach robot targetfilename provide absolute path result saved recommend keeping calibration robot organization common package see package documentation detail quick start driver built externalcontrol urcap installed robot good go ahead starting driver note recommend though extract robot calibration first actually start robot driver use one existing launch file roslaunch urrobotdriver robottypebringuplaunch robotip19216856101 one ur3 ur5 ur10 ur3e ur5e ur10e ur16e note example load calibration parameter robot ur10example calibrated robot pas calibration launch file roslaunch urrobotdriver robottypebringuplaunch robotip19216856101 kinematicsconfigrospack find urcalibrationetcur10examplecalibrationyaml parameter file match one reported robot driver output error startup remain usable information launch file parameter see documentation robot driver started load previously generated program robot panel start external control program node execute moment robot fully functional make use pause function even stop stopbutton program simply press play button arrowforward driver reconnect inside terminal running driver see output robot ready receive control command control robot using use action server bash scaledposjointtrajcontrollerfollowjointtrajectory use client interface moveit simply rqtjointtrajectorycontroller gui rosrun rqtjointtrajectorycontroller rqtjointtrajectorycontroller may need install rqtjointtrajectorycontroller running sudo apt install rosrosdistrorqtjointtrajectorycontroller rosdistro replaced version elaborate tutorial get started please see usage example replacing robot description realworld scenario want replace robot description description containing whole scene robot acting bringup launchfiles offer argument robotdescriptionfile point launchfile loading robot description loadurxxxlaunch file urdescription package contain lot argument change robot model driver forward kinematicsconfig parameter file adaption please create loadurxxxlaunch file fit application pas urxxxbringuplaunch file package prefer decoupling loading robot description starting driver start urcontrollaunch launchfile directly robotdescription ha uploaded parameter server troubleshooting section cover previously raised issue started everything cannot control robot external control program node urcap running robot make sure create program containing node robot start inside terminal see output robot ready receive control command note interacting teach pendant sending primary program robot program stopped terminal see output connection robot dropped waiting new connection case restart program execution eg pressing play button tp calling rosservice call urhardwareinterfacedashboardplay explained general make sure completed following task install setup external control urcap explained also setup ip address pc inside urcap installation start driver handing ip robot explained quickstart load start previously generated program tp starting program tp get error connection remote pc could established make sure ip address setup correct described setup guide cb3 robot eseries robot note error also show driver running starting program tp get c207a0 error note current driver version issue happen fieldbus enabled driver ha started otherwise run 204 starting driver enabled ethernetip fieldbus probably ethernetip fieldbus enabled robot installation setup includes ethernetip fieldbus note ethernetip ethernet make sure connected properly ethernetip fieldbus installation screen eseries installation fieldbus ethernetip cb3 installation ethernetip select action executed upon loss ethernetip scanner connection select none save installation program exception raised connection fieldbus scanner established note get external control running probably want make sure connection fieldbus scanner indeed made use ethernetip fieldbusses disable installation screen starting driver crash variable speedslidermask currently controlled another rtde client probably running 204 currently driver cannot used together enabled ethernetip fieldbus disable ethernetip workaround error 204 contains guide cannot get realtime kernel running together nvidia graphic card known issue unfortunately solution nvidia kernel module seems compile every kernel recommend use multimachine setup situation realtimesystem running robot driver separate machine performing computation requiring graphic card driver use extracted calibration info startup mainly parameter loaded onto parameter server node started robotdescription concept inside designed changed system running consumer urdfrobotdescription term node update model loading initially technically robotdescription parameter could altered runtime node started afterwards would see updated model would lead inconsistent application state node use old model others use updated one word driver needsbenefits calibrated urdf rest application see calibrated version present parameter server node started additionally calibration stored side match one robot controller good chance reason would better make updating conscious decision human driver would know updating model would convenient safe run calibration extractiontransformation separate step make possible hide step end user driver used inside combined hardware interface yes possible however used inside combined hw interface recommend enable nonblocking read functionality sent raw script code robot executed eseries robot ha remote control mode accept script code external source ha switched teachpendant using dashboard work eseries robot ha remote control mode accept certain call dashboard server see available dashboard command detail passthrough controller robot doe fully reach trajectory point even though specified path tolerance beif using control mode forward trajectory robot currently path tolerance ignored corresponding interface robot clientlibrary level exists form blend radius utilized driver information see issue use cartesian controller together moveit directly moveit plan cartesian path creates joint trajectory execution common interface robot driver followjointtrajectory action supporting cartesian controller inside moveit change would made moveit,"[('make', 'sure'), ('ur', 'robot')]"
hrnr/m-explore,C++,mexplore build status package multi robot exploration installing package released kinetic lunar sudo apt install rosrosdistromultirobotmapmerge rosrosdistroexplorelite building build standard catkin package special dependency needed use rosdep resolve dependency use brach specific release ie kineticdevel kinetic master branch latest wiki package documented wiki explorelite multirobotmapmerge copyright package licensed bsd license see respective file detail,"[('mexplore', 'build'), ('build', 'status')]"
HKUST-Aerial-Robotics/DenseSurfelMapping,C++,densesurfelmapping news find paper project help paper please cite news updated vinssupported branch code fully checked refactoring encounted problem please let u know depth map fusion method depth map fusion method following icra 2019 submission realtime scalable dense surfel mapping kaixuan wang fei gao shaojie shen given sequence depth image intensity image camera pose proposed method fuse globally consistent model using surfel representation fusion method support orbslam2 vinsmono little modification required use rgbd stereo visualinertial case according setup develop method based motivation fusion methodcan support loop closure consistent stateoftheart slam methodsdo require much cpumemory resource reconstruct fine model realtimecan scaled large environment requirement vital importance robot navigation task robot safly navigate environment odometryconsistent dense map example show usage surfel mapping shown left overview environment middle reconstructed result visualized point cloud rviz method right result using openchisel use vinsmono track camera motion loop closure mvdepthnet estimate depth map black line path camera reconstruction loop closure enabled correct detected drift openchisel great project reconstruct environment using truncated signed distance function tsdf however shown example suitable used slam system loop closure ability system also applied kitti datasets realtime cpu computation top row reconstruction using stereo camera bottom row reconstruction using left camera detail found paper video used illustrate performance system apply autonomous navigation software opensourced surfel fusion system used reconstructing kitti dataset using orbslam2 vinsmono using teachandrepeat project opensource lately project consists three part surfelfusion modified orbslam2 kitti publisher orbslam2 orbslam2 original one modified publish necessary information may install orbslam2 following original instruction surfelfusion surfelfusion installed catkin workspace catkinmake kitti publisher kitti publisher simple python warper publish kitti dataset along precalculated depth map using psmnet data provide sequence 00 kitti dataset easily run code download dataset thislink run code installed three component software change line 23 kittipublisherscriptspublisherpy according downloaded dataset path change path homewangsoftwareorbslam2vocabularyorbvoctxt homewangsoftwareorbslam2examplesstereokitti0002yaml orbslam2orbkittilaunchsh according environment open four terminal window run orbslam2 orbkittilaunchsh run surfel fusion roslaunch surfelfusion kittiorblaunch run kitti publisher rosrun kittipublisher publisherpy run rviz rviz load rvizconfigrviz project load published message kitti publisher initialize window start publisher press key window press esc quit publisher save result code also support saving reconstructed model changing line 22 surfelfusionlaunchkittiorblaunch press crtlc surfel fusion cause software save mesh defined path quit process view saved mash using cloudcompare software,"[('kitti', 'publisher'), ('depth', 'map')]"
linorobot/linorobot,C++,linorobot build status linorobot suite open source compatible robot aim provide student developer researcher lowcost platform creating new exciting application top also check ros2 port project linorobot2 tutorial read full tutorial build robot multiplatform support multiple type robot base 2wd 4wd ackermann steering mecanum drive alt text work indigo ubuntu 1404 kinetic ubuntu 1604 hardware fabricate teensy 3132 shield alt text text wire wiring diagram also provided alt text supported imu gy85 mpu6050 mpu9150 mpu9250 imu driver based i2cdevlib supported motor driver l298 max 35v 2a bts7960 max 24v 43a electronic speed controller esc w reverse ha tested control brushless motor used rc car hoverboards supported compatible sensor xv11 lidar rplidar ydlidar x4 hokuyo scip 22 compliant intel realsense r200 kinect tested linux compatible arm dev board raspberry pi 3b jetson tk1 jetson tx1 odroid xu4 radxa rock pro technically also work arm dev board least 1gb ram run ubuntu trusty xenial installation alt text git clone cd linoinstall install base sensor firmware flexible configurable component linorobotwsteensyfirmwarelibconfiglinobaseconfigh robot base configuration uncomment base building define linobase differentialdrive define linobase skidsteer define linobase ackermann define linobase ackermann1 define linobase mecanum imu configuration uncomment imu using define usegy85imu define usemp6050imu define usempu9150imu define usempu9250imu motor driver configuration uncomment motor driver using define usel298driver define usebts7960driver define useesc motor configuration define robot spec define maxrpm 330 motor maximum rpm define countsperrev 1550 wheel encoder tick per rev define wheeldiameter 010 wheel diameter meter define pwmbitspwm resolution microcontroller define lrwheelsdistance 0235 distance left right wheel define frwheelsdistance 030 distance front rear wheel define maxsteeringangle 0415 max steering angle applies ackermann steering uploading code cd linorobotwssrclinorobotteensyfirmware platformio run target upload creating map alt text launch base driver roslaunch linorobot bringuplaunch launch mapping package roslaunch linorobot slamlaunch autonomous navigation launch base driver roslaunch linorobot bringuplaunch launch navigation package roslaunch linorobot navigatelaunch,"[('alt', 'text'), ('define', 'linobase')]"
openai/roboschool,Python,status archive code provided asis update expected deprecated please use pybullet instead news 2019 september 27 deprecating roboschool recommend using pybullet instead 2017 july 17 version 11 envs version bumped v1 due stronger stuck joint punishment improves odds getting good policy flagrunv1 much likely develop symmetric gait flagrunharderv1 ha new repeatunderlearned learning schedule allows trained stand walk turn without falling atlas robot model modified empty link removed overly powerful foot weakaned v1 envs shipped better zoo policy compared may version keyboardcontrolled humanoid included roboschool release blog post roboschool longterm project create simulation useful research roadmap follows replicate gym mujoco environment take step away trajectorycentric fragile mujoco task explore multiplayer game create task camera rgb image joint tuple teach robot follow command including verbal command wiki page contributing new environment help wanted environment list list roboschool environment follows roboschoolinvertedpendulumv1 roboschoolinvertedpendulumswingupv1 roboschoolinverteddoublependulumv1 roboschoolreacherv1 roboschoolhopperv1 roboschoolwalker2dv1 roboschoolhalfcheetahv1 roboschoolantv1 roboschoolhumanoidv1 roboschoolhumanoidflagrunv1 roboschoolhumanoidflagrunharderv1 roboschoolpongv1 obtain list import roboschool gym printnjoin specid spec gymenvsregistryall specidstartswith roboschool basic prerequisite roboschool compatible tested python3 35 36 osx linux may able compile python27 see installation source may require nontrivial amount work installation running ubuntu debian linux x easiest path install roboschool via pip bash pip install roboschool note headless machine eg docker container may need install graphic library achieved via aptget install libgl1mesadev running linuxunix distro want latest greatest code want tweak compiler optimization option read installation source prerequisite first make sure installing github repo source package pypi clone repo cd cloned folder bash git clone cd roboschool systemlevel dependency roboschool qt5 opengl boostpython3 boostpython compiling python2 assimp cmake linuxbased distros need patchelf utility tweak runtime path also version graphic library required qt5 assimp cmake patchelf rather straightforward install ubuntu debian bash sudo aptget install qtbase5dev libqt5opengl5dev libassimpdev cmake patchelf osx bash brew install qt assimp cmake next need boostpython3 osx brew install boostpython3 usually sufficient however linux always available systemlevel package sometimes available compiled wrong version python using anacondaminiconda boostpython3 installed via conda install boost otherwise despair course install source script installboostsh heavy lifting note need sudo install boostpython3 compilation done next need custom version bullet physic engine osx linux installation little involved fortunately helper script installbulletsh finally also need set environment variable pkgconfig know ha software installed done via sourcing exportssh script summarize prerequisite installed follows ubuntu debian bash sudo aptget install qtbase5 libqt5opengl5dev libassimpdev patchelf cmake installboostsh installbulletsh source exportssh ubuntu debian anaconda bash sudo aptget install qtbase5 libqt5opengl5dev libassimpdev patchelf cmake conda install boost installbulletsh source exportssh osx bash brew install qt assimp boostpython3 cmake installbulletsh source exportssh check installation successful run pkgconfig cflags qt5opengl assimp bullet see something resembling compiler option error message ready compile roboschool project compile install compiler option configured makefile feel free tinker leave compile project code install python package use following bash cd roboschoolcpphousehold make clean make j4 cd pip install e simple check resulting installation valid python import roboschool import gym env gymmake roboschoolantv1 true envstepenvactionspacesample envrender also check installation running pretrained agent agent zoo instancebash python agentzooroboschoolhumanoidflagrunv02017maypy troubleshooting lot issue installation source due missing incorrect pkgconfigpath variable command pkgconfig cflags qt5opengl assimp bullet show error try manually finding missing pc file instance pkgconfig complains assimp run find name assimppc bit bruteforce work adding folder file pkgconfigpath sometime distros linux may complain generated code platformindependent ask recompile something fpic option wa seen older version centos case try removing marchnative compilation option makefile system nvidia driver present roboschool sometimes able find hardwareaccelerated library see error like buildreleaserenderssaoo function simplerendercontextviewportdepthlinearpaintint homepeterdevroboschoolroboschoolcpphouseholdrenderssaocpp75 undefined reference glbindmultitextureext homepeterdevroboschoolroboschoolcpphouseholdrenderssaocpp78 undefined reference glbindmultitextureext collect2 error ld returnedexit status makefile130 recipe target robottesttool failed try disabling hardware rendering setting roboschooldisablehardwarerender env variable bash export roboschooldisablehardwarerender1 agent zoo provided number pretrained agent agentzoo directory see humanoid run towards random varying target bash python agentzooroboschoolhumanoidflagrunv02017maypy see three agent race bash python agentzoodemorace2py,"[('ubuntu', 'debian'), ('aptget', 'install')]"
amslabtech/dwa_planner,C++,dwaplanner ci issueopened issueclosed environment ubuntu 2004 noetic install build cd catkinworkspacesrc git clone cd dwaplanner catkin build node io optional topic scan default input localmap scan used set usescanasinput true footprint robot footprint footprint used set usefootprint true footprintpublisher node amslnavigationutils repository publishes rectangular footprint path path cost default evaluation doe use path cost path cost used set usepathcost true give part global path edge parameter hz main loop rate default 20hz targetvelocity max velocity robot target velocity default 055ms robotframe robot coordinate frame default baselink runtime requirement tf localmapframe robotframe required use local path planning roslaunch dwaplanner localplannerlaunch reference fox w burgard sthrun dynamic window approach collision avoidance ieee robotics automation magazine 1997,"[('used', 'set'), ('path', 'cost')]"
jason718/awesome-self-supervised-learning,Other,awesome selfsupervised learningawesome curated list awesome selfsupervised learning resource inspired awesomedeepvision awesomeadversarialmachinelearning awesomedeeplearningpapers awesomearchitecturesearch selfsupervised selfsupervised learning ha become exciting direction ai community jitendra malik supervision opium ai researcher alyosha efros ai revolution supervised yann lecun selfsupervised learning cake supervised learning icing cake reinforcement learning cherry cake contributing please help contribute list contacting add pull request markdown format markdown paper name pdflink codelink authorauthorand authorconference year table content theory computer vision cv survey image representation learning video representation learning 3d feature learning geometry audio others machine learning reinforcement learning recommendation system robotics natural language processing nlp automatic speech recognition asr timeseries graph talk thesis blog theory theoretical analysis contrastive unsupervised representation learning pdf sanjeev arora hrishikesh khandeparkar mikhail khodak orestis plevrakis nikunj saunshi icml 2019 towards generalization contrastive selfsupervised learning pdf weiran huang mingyang yi xuyang zhao understanding behaviour contrastive loss pdf feng wang huaping liu cvpr 2021 predicting already know help provable selfsupervised learning pdf jason lee qi lei nikunj saunshi jiacheng zhuo contrastive learning multiview redundancy linear model pdf christopher tosh akshay krishnamurthy daniel hsu understanding selfsupervised learning dual deep network pdf yuandong tian lantao yu xinlei chen surya ganguli selfsupervised learning rationality implies generalization provably pdf yamini bansal gal kaplun boaz barak pretextbased selfsupervised learning boosted downstream data theoretical analysis pdf jiaye teng weiran huang haowei aistats 2022 computer vision survey contrastive representation learning framework review pdf phuc h lekhac graham healy alan f smeaton ieee access 2020 survey contrastive selfsupervised learning pdf ashish jaiswal ashwin r babu mohammad z zadeh debapriya banerjee fillia makedon selfsupervised visual feature learning deep neural network survey pdf longlong jing yingli tian tpami 2020 selfsupervised learning generative contrastive pdf xiao liu fanjin zhang zhenyu hou li mian zhaoyu wang jing zhang jie tang tkde 2021 image representation learning benchmark code fair selfsupervision benchmark pdf repo various benchmark legacy task evaluating quality visual representation learned various selfsupervision approach well selfsupervised model transfer pdf repo benchmark evaluating selfsupervision consisting manyshotfewshot recognition object detection surface normal estimation semantic segmentation 2015 unsupervised visual representation learning context prediction pdf code doersch carl gupta abhinav efros alexei iccv 2015 unsupervised learning visual representation using video pdf code wang xiaolong gupta abhinav iccv 2015 learning see moving pdf code agrawal pulkit carreira joao malik jitendra iccv 2015 learning image representation tied egomotion pdf code jayaraman dinesh grauman kristen iccv 2015 2016 joint unsupervised learning deep representation image cluster pdf codetorch codecaffe jianwei yang devi parikh dhruv batra cvpr 2016 unsupervised deep embedding clustering analysis pdf code junyuan xie ross girshick ali farhadi icml 2016 slow steady feature analysis higher order temporal coherence video pdf jayaraman dinesh grauman kristen cvpr 2016 context encoders feature learning inpainting pdf code pathak deepak krahenbuhl philipp donahue jeff darrell trevor efros alexei cvpr 2016 colorful image colorization pdf code zhang richard isola phillip efros alexei eccv 2016 unsupervised learning visual representation solving jigsaw puzzle pdf code noroozi mehdi favaro paolo eccv 2016 ambient sound provides supervision visual learning pdf code owen andrew wu jiajun mcdermott josh freeman william torralba antonio eccv 2016 learning representation automatic colorization pdf code larsson gustav maire michael shakhnarovich gregory eccv 2016 unsupervised visual representation learning graphbased consistent constraint pdf code li dong hung weichih huang jiabin wang shengjin ahuja narendra yang minghsuan eccv 2016 2017 adversarial feature learning pdf code donahue jeff krahenbuhl philipp darrell trevor iclr 2017 selfsupervised learning visual feature embedding image text topic space pdf code l gomez patel rusinol karatzas cv jawahar cvpr 2017 splitbrain autoencoders unsupervised learning crosschannel prediction pdf code zhang richard isola phillip efros alexei cvpr 2017 learning feature watching object move pdf code pathak deepak girshick ross dollar piotr darrell trevor hariharan bharath cvpr 2017 colorization proxy task visual understanding pdf code larsson gustav maire michael shakhnarovich gregory cvpr 2017 deeppermnet visual permutation learning pdf code cruz rodrigo santa fernando basura cherian anoop gould stephen cvpr 2017 unsupervised learning predicting noise pdf code bojanowski piotr joulin armand icml 2017 multitask selfsupervised visual learning pdf doersch carl zisserman andrew iccv 2017 representation learning learning count pdf noroozi mehdi pirsiavash hamed favaro paolo iccv 2017 transitive invariance selfsupervised visual representation learning pdf wang xiaolong kaiming gupta abhinav iccv 2017 look listen learn pdf relja arandjelovic zisserman andrew iccv 2017 unsupervised representation learning sorting sequence pdf code hsinying lee jiabin huang maneesh kumar singh minghsuan yang iccv 2017 2018 unsupervised feature learning via nonparameteric instance discrimination pdf code zhirong wu yuanjun xiong x yu stella dahua lin cvpr 2018 learning image representation completing damaged jigsaw puzzle pdf code kim dahun cho donghyeon yoo donggeun kweon wacv 2018 unsupervised representation learning predicting image rotation pdf code spyros gidaris praveer singh nikos komodakis iclr 2018 learning latent representation neural network clustering pseudo supervision graphbased activity regularization pdf code ozsel kilinc ismail uysal iclr 2018 improvement context based selfsupervised learning pdf terrell mundhenk daniel ho barry chen cvpr 2018 selfsupervised feature learning learning spot artifact pdf code simon jenni universitat bern paolo favaro cvpr 2018 boosting selfsupervised learning via knowledge transfer pdf mehdi noroozi ananth vinjimoor paolo favaro hamed pirsiavash cvpr 2018 crossdomain selfsupervised multitask feature learning using synthetic imagery pdf code zhongzheng ren yong jae lee cvpr 2018 shapecodes selfsupervised feature learning lifting view viewgrids pdf dinesh jayaraman uc berkeley ruohan gao university texas austin kristen grauman eccv 2018 deep clustering unsupervised learning visual feature pdf code mathilde caron piotr bojanowski armand joulin matthijs douze eccv 2018 cross pixel opticalflow similarity selfsupervised learning pdf aravindh mahendran james thewlis andrea vedaldi accv 2018 2019 representation learning contrastive predictive coding pdf aaron van den oord yazhe li oriol vinyals selfsupervised learning via conditional motion propagation pdf code xiaohang zhan xingang pan ziwei liu dahua lin chen change loy cvpr 2019 selfsupervised representation learning rotation feature decoupling pdf code zeyu feng chang xu dacheng tao cvpr 2019 revisiting selfsupervised visual representation learning pdf code alexander kolesnikov xiaohua zhai lucas beye cvpr 2019 selfsupervised gans via auxiliary rotation loss pdf code ting chen xiaohua zhai marvin ritter mario lucic neil houlsby cvpr 2019 aet v aed unsupervised representation learning autoencoding transformation rather data pdf code liheng zhang guojun qi liqiang wang jiebo luo cvpr 2019 unsupervised deep learning neighbourhood discovery pdf code jiabo huang qi dong shaogang gong xiatian zhu icml 2019 contrastive multiview coding pdf code yonglong tian dilip krishnan phillip isola large scale adversarial representation learning pdf jeff donahue karen simonyan learning representation maximizing mutual information across view pdf code philip bachman r devon hjelm william buchwalter selfie selfsupervised pretraining image embedding pdf trieu h trinh minhthang luong quoc v le dataefficient image recognition contrastive predictive coding pdf olivier j naff ali razavi carl doersch ali eslami aaron van den oord using selfsupervised learning improve model robustness uncertainty pdf code dan hendrycks manta mazeika saurav kadavath dawn song neurips 2019 boosting fewshot visual learning selfsupervision pdf pyros gidaris andrei bursuc nikos komodakis patrick perez matthieu cord iccv 2019 selfsupervised generalisation meta auxiliary learning pdf code shikun liu andrew j davison edward john neurips 2019 wasserstein dependency measure representation learning pdf code sherjil ozair corey lynch yoshua bengio aaron van den oord sergey levine pierre sermanet neurips 2019 scaling benchmarking selfsupervised visual representation learning pdf code priya goyal dhruv mahajan abhinav gupta ishan misra iccv 2019 unsupervised pretraining image feature noncurated data pdf code mathilde caron piotr bojanowski julien mairal armand joulin iccv 2019 oral s4l selfsupervised semisupervised learning pdf code xiaohua zhai avital oliver alexander kolesnikov lucas beyer iccv 2019 selfsupervised model adaptation multimodal semantic segmentation pdf code abhinav valada rohit mohan wolfram burgard ijcv 2019 2020 critical analysis selfsupervision learn single image pdf code yuki asano christian rupprecht andrea vedaldi iclr 2020 mutual information maximization representation learning pdf code michael tschannen josip djolonga paul k rubenstein sylvain gelly mario lucic iclr 2020 understanding limitation variational mutual information estimator pdf code jiaming song stefano ermon iclr 2020 selflabelling via simultaneous clustering representation learning pdf blogpost code yuki markus asano christian rupprecht andrea vedaldi iclr 2020 spotlight selfsupervised label augmentation via input transformation pdf code hankook lee sung ju hwang jinwoo shin icml 2020 automatic shortcut removal selfsupervised representation learning pdf matthias minderer olivier bachem neil houlsby michael tschannen simple framework contrastive learning visual representation pdf code ting chen simon kornblith mohammad norouzi geoffrey hinton icml 2020 useful selfsupervised pretraining visual task pdf code alejandro newell jia deng cvpr 2020 momentum contrast unsupervised visual representation learning pdf code kaiming haoqi fan yuxin wu saining xie ross girshick cvpr 2020 clusterfit improving generalization visual representation pdf xueting yan ishan misra abhinav gupta deepti ghadiyaram dhruv mahajan cvpr 2020 selfsupervised learning pretextinvariant representation pdf ishan misra laurens van der maaten cvpr 2020 bootstrap latent new approach selfsupervised learning pdf unofficialcode jeanbastien grill florian strub florent altche corentin tallec pierre h richemond elena buchatskaya carl doersch bernardo avila pires zhaohan daniel guo mohammad gheshlaghi azar bilal piot koray kavukcuoglu remi munos michal valko neurips 2020 oral contrastive learning global local feature medical image segmentation limited annotation pdf code krishna chaitanya ertunc erdil neerav karani ender konukoglu neurips 2020 oral unsupervised representation learning invariancepropagation pdf code feng wang huaping liu di guo fuchun sun neurips 2020 spotlight big selfsupervised model strong semisupervised learner pdf code ting chen simon kornblith kevin swersky mohammad norouzi geoffrey hinton neurips 2020 selfsupervised prototypical transfer learning fewshot classification pdf code carlos medina arnout devos matthias grossglauser scan learning classify image without label pdf code wouter van gansbeke simon vandenhende stamatios georgoulis marc proesmans luc van gool eccv 2020 unsupervised learning visual feature contrasting cluster assignment pdf code mathilde caron ishan misra julien mairal priya goyal piotr bojanowski armand joulin neurips 2020 selfsupervised relational reasoning representation learning pdf code massimiliano patacchiola amos storkey neurips 2020 spotlight exploring simple siamese representation learning pdf unofficialcode xinlei chen kaiming online bagofvisualwords generation unsupervised representation learning pdf code spyros gidaris andrei bursuc gilles puy nikos komodakis matthieu cord patrick perez rethinking value label improving classimbalanced learning pdf code yuzhe yang zhi xu neurips 2020 demystifying contrastive selfsupervised learning invariance augmentation dataset bias pdf senthil purushwalkam abhinav gupta neurips 2020 mitigating embedding class assignment mismatch unsupervised image classification pdf code sungwon han sungwon park sungkyu park sundong kim meeyoung cha eccv 2020 2021 selfsupervised learning across domain pdf silvia bucci antonio innocente yujun liao fabio maria carlucci barbara caputo tatiana tommasi tpami 2021 barlow twin selfsupervised learning via redundancy reduction pdf code zbontar j jing l misra lecun deny contrastive semisupervised learning 2d medical image segmentation pdf prashant pandey ajey pai nisarg bhatt prasenjit da govind makharia prathosh ap mausam miccai 2021 propagate exploring pixellevel consistency unsupervised visual representation learning pdf code zhenda xie yutong lin zheng zhang yue cao stephen lin han hu cvpr 2021 well selfsupervised model transfer pdf code linus ericsson henry gouk timothy hospedales cvpr 2021 vectorization rasterization selfsupervised learning sketch handwriting code ayan kumar bhunia pinaki nath chowdhury yongxin yang timothy hospedales tao xiang yizhe song cvpr 2021 selfaugment automatic augmentation policy selfsupervised learning pdf code colorado reed sean metzger aravind srinivas trevor darrell kurt keutzer cvpr 2021 jigsaw clustering unsupervised visual representation learning pdf code pengguang chen shu liu jiaya jia cvpr 2021 improving unsupervised image clustering robust learning pdf code sungwon park sungwon han sundong kim danu kim sungkyu park seunghoon hong meeyoung cha cvpr 2021 improving contrastive learning visualizing feature transformation pdf code rui zhu bingchen zhao jingen liu zhenglong sun chang wen chen iccv 2021 oral 2022 tailoring selfsupervision supervised learning pdf code wonjun moon jihwan kim jaepil heo eccv 2022 fedx unsupervised federated learning cross knowledge distillation pdf code sungwon han sungwon park fangzhao wu sundong kim chuhan wu xing xie meeyoung cha eccv 2022 masked siamese network labelefficient learning pdf code mahmoud assran mathilde caron ishan misra piotr bojanowski florian bordes pascal vincent armand joulin michael rabbat nicolas ballas tribyol triplet byol selfsupervised representation learning pdf guang li ren togo takahiro ogawa miki haseyama icassp 2022 selfknowledge distillation based selfsupervised learning covid19 detection chest xray image pdf guang li ren togo takahiro ogawa miki haseyama icassp 2022 adaptive soft contrastive learning pdf code chen feng ioannis patras icpr 2022 selfsupervised visual representation learning semantic grouping pdf code xin wen bingchen zhao anlin zheng xiangyu zhang xiaojuan qi neurips 2022 vicreg varianceinvariancecovariance regularization selfsupervised learning pdf adrien bardes jean ponce yann lecun iclr 2022 video representation learning unsupervised learning video representation using lstms pdf code srivastava nitish mansimov elman salakhudinov ruslan icml 2015 shuffle learn unsupervised learning using temporal order verification pdf code ishan misra c lawrence zitnick martial hebert eccv 2016 lstm selfsupervision detailed behavior analysis pdf biagio brattoli uta buchler annasophia wahl martin e schwab bjorn ommer cvpr 2017 selfsupervised video representation learning oddoneout network pdf basura fernando hakan bilen efstratios gavves stephen gould cvpr 2017 unsupervised learning longterm motion dynamic video pdf luo zelun peng boya huang dean alahi alexandre feifei li cvpr 2017 geometry guided convolutional neural network selfsupervised video representation learning pdf chuang gan boqing gong kun liu hao su leonidas j guibas cvpr 2018 improving spatiotemporal selfsupervision deep reinforcement learning pdf biagio brattoli uta buchler bjorn ommer eccv 2018 selfsupervised learning facial attribute embedding video pdf wile koepke zisserman bmvc 2018 selfsupervised video representation learning spacetime cubic puzzle pdf kim dahun cho donghyeon yoo donggeun kweon aaai 2019 selfsupervised spatiotemporal representation learning video predicting motion appearance statistic pdf jiangliu wang jianbo jiao linchao bao shengfeng yunhui liu wei liu cvpr 2019 dynamonet dynamic action motion network pdf ali diba vivek sharma luc van gool rainer stiefelhagen iccv 2019 learning correspondence cycleconsistency time pdf code xiaolong wang allan jabri alexei efros cvpr 2019 jointtask selfsupervised learning temporal correspondence pdf code xueting li sifei liu shalini de mello xiaolong wang jan kautz minghsuan yang nip 2019 selfsupervised video representation learning using interintra contrstive framework pdf code li tao xueting wang toshihiko yamasaki acmmm 2020 video playback rate perception selfsupervised spatiotemporal representation learning pdf code yuan yao chang liu dezhao luo yu zhou qixiang ye cvpr 2020 selfsupervised video representation learning pace prediction pdf code jiangliu wang jianbo jiao yunhui liu eccv 2020 video representation learning recognizing temporal transformation pdf code simon jenni givi meishvili paolo favaro eccv 2020 selfsupervised cotraining video representation learning pdf code tengda han weidi xie andrew zisserman neurips 2020 cyclecontrast selfsupervised video representation learning pdf quan kong wenpeng wei ziwei deng tomoaki yoshinaga tomokazu murakami neurips 2020 video representation learning visual tempo consistency pdf code ceyuan yang yinghao xu bo dai bolei zhou selfsupervised video representation learning uncovering spatiotemporal statistic pdf jiangliu wang jianbo jiao linchao bao shengfeng wei liu yunhui liu spatiotemporal contrastive video representation learning pdf rui qian tianjian meng boqing gong minghsuan yang huisheng wang serge belongie yin cui selfsupervised video representation using pretextcontrastive learning pdf li tao xueting wang toshihiko yamasaki unsupervised video representation learning bidirectional feature prediction pdf nadine behrmann juergen gall mehdi noroozi rspnet relative speed perception unsupervised video representation learning pdf code peihao chen deng huang dongliang xiang long runhao zeng shilei wen mingkui tan chuang gan aaai 2021 hierarchically decoupled spatialtemporal contrast selfsupervised video representation learning pdf zehua zhang david crandall temporal information help contrastive selfsupervised learning pdf yutong bai haoqi fan ishan misra ganesh venkatesh yongyi lu yuyin zhou qihang yu vikas chandra alan yuille enhancing unsupervised video representation learning decoupling scene motion pdf code jinpeng wang yuting gao ke li jianguo hu xinyang jiang xiaowei guo rongrong ji xing sun aaai 2021 spacetime correspondence contrastive random walk pdf code project allan jabri andrew owen alexei efros neurips 2020 oral benchmark code video selfsupervised learning severe benchmarksensitivity video selfsupervised learning pdf code thoker fida mohammad doughty hazel bagad piyush snoek cees eccv 2022 3d feature learning selfsupervised deep learning point cloud reconstructing space pdf jonathan sauder bjarne sievers neurips 2019 selfsupervised learning point cloud via orientation estimation pdf code omid poursaeed tianxing jiang han qiao nayun xu vladimir g kim3dv 2020 selfsupervised learning 3d point cloud learning discrete generative model pdf benjamin eckart wentao yuan chao liu jan kautz cvpr 2021 pointcontrast unsupervised pretraining 3d point cloud pdf code saining xie jiatao gu demi guo charles r qi leonidas guibas litany eccv 2020 guided point contrastive learning semisupervised point cloud semantic segmentation pdf li jiang shaoshuai shi zhuotao tian xin lai shu liu chiwing fu jiaya jia iccv 2021 geometry unsupervised cnn single view depth estimation geometry rescue pdf code ravi garg vijay kumar bg gustavo carneiro ian reid eccv 2016 selfsupervised learning motion capture pdf code web tung hsiaoyu tung hsiaowei yumer ersin fragkiadaki katerina nip 2017 unsupervised learning object frame dense equivariant image labelling pdf james thewlis hakan bilen andrea vedaldi neurips 2017 unsupervised learning depth egomotion video pdf code web zhou tinghui brown matthew snavely noah lowe david g cvpr 2017 active stereo net endtoend selfsupervised learning active stereo system project yinda zhang sean fanello sameh khamis christoph rhemann julien valentin adarsh kowdle vladimir tankovich shahram izadi thomas funkhouser eccv 2018 selfsupervised relative depth learning urban scene understanding pdf project huaizu jiang erik learnedmiller gustav larsson michael maire greg shakhnarovich eccv 2018 geometryaware learning map camera localization pdf code samarth brahmbhatt jinwei gu kihwan kim james hay jan kautz cvpr 2018 selfsupervised learning geometrically stable feature probabilistic introspection pdf web david novotny samuel albanie diane larlus andrea vedaldi cvpr 2018 selfsupervised learning 3d human pose using multiview geometry pdf muhammed kocabas salih karagoz emre akbas cvpr 2019 selflow selfsupervised learning optical flow pdf jiangliu wang jianbo jiao linchao bao shengfeng yunhui liu wei liu cvpr 2019 unsupervised learning landmark descriptor vector exchange pdf code web james thewlis samuel albanie hakan bilen andrea vedaldi iccv 2019 audio audiovisual scene analysis selfsupervised multisensory feature pdf code andrew owen alexei efros eccv 2018 object sound pdf r arandjelovic zisserman eccv 2018 learning separate object sound watching unlabeled video pdf project ruohan gao rogerio feris kristen grauman eccv 2018 sound pixel pdf project zhao hang gan chuang rouditchenko andrew vondrick carl mcdermott josh torralba antonio eccv 2018 learnable pin crossmodal embeddings person identity pdf web arsha nagrani samuel albanie andrew zisserman eccv 2018 cooperative learning audio video model selfsupervised synchronization pdf bruno korbardartmouth college du tran lorenzo torresani nip 2018 selfsupervised generation spatial audio 360 video pdf pedro morgado nuno nvasconcelos timothy langlois oliver wang nip 2018 tricycle audio representation learning sensor network data using selfsupervision pdf mark cartwright jason cramer justin salamon juan pablo bello waspaa 2019 selfsupervised audiovisual cosegmentation pdf andrew rouditchenko hang zhao chuang gan josh mcdermott antonio torralba icassp 2019 doe visual selfsupervision improve learning speech representation pdf abhinav shukla stavros petridis maja pantic meet eye selfsupervised multiobject detection tracking sound distilling multimodal knowledge pdf code francisco rivera valverde juana valeria hurtado abhinav valada cvpr 2021 byol audio selfsupervised learning generalpurpose audio representation pdf code daisuke niizumi daiki takeuchi yasunori ohishi ijcnn 2021 learning stateaware visual representation audible interaction pdf code himangi mittal pedro morgado unnat jain abhinav gupta neurips 2022 others selfsupervised learning human activity recognition using 700000 persondays wearable data pdf code hang yuan shing chan andrew p creagh catherine tong david clifton aiden doherty selflearning scenespecific pedestrian detector using progressive latent model pdf qixiang ye tianliang zhang qiang qiu baochang zhang jie chen guillermo sapiro cvpr 2017 free supervision video game pdf projectcode philipp krahenbuhl cvpr 2018 fighting fake news image splice detection via learned selfconsistency pdf code minyoung huh andrew liu andrew owen alexei efros eccv 2018 selfsupervised tracking colorization tracking emerges colorizing video pdf carl vondrick abhinav shrivastava alireza fathi sergio guadarrama kevin murphy eccv 2018 highfidelity image generation fewer label pdf mario lucic michael tschannen marvin ritter xiaohua zhai olivier bachem sylvain gelly selfsupervised fitting articulated mesh point cloud chunliang li tomas simon jason saragih barnabas poczos yaser sheikh cvpr 2019 go flow selfsupervised scene flow estimation pdf code himangi mittal brian okorn david held cvpr 2020 scops selfsupervised copart segmentation weichih hung varun jampani sifei liu pavlo molchanov minghsuan yang jan kautz cvpr 2019 selfsupervised adaptation highfidelity face model monocular performance tracking jae shin yoon takaaki shiratori shooui yu hyun soo park cvpr 2019 multitask selfsupervised object detection via recycling bounding box annotation pdf code wonhee lee joonil na gunhee kim cvpr 2019 selfsupervised convolutional subspace clustering network junjian zhang chunguang li chong xianbiao qi honggang zhang jun guo zhouchen lin cvpr 2019 reinforced crossmodal matching selfsupervised imitation learning visionlanguage navigation xin wang qiuyuan huang asli celikyilmaz jianfeng gao dinghan shen yuanfang wang william yang wang lei zhang cvpr 2019 unsupervised 3d pose estimation geometric selfsupervision chinghang chen ambrish tyagi amit agrawal dylan drover rohith mv stefan stojanov james rehg cvpr 2019 learning generate grounded image caption without localization supervision pdf chihyao yannis kalantidis ghassan alregib peter vajda marcus rohrbach zsolt kira videobert joint model video language representation learning pdf chen sun austin myers carl vondrick kevin murphy cordelia schmid iccv 2019 countering noisy label learning auxiliary clean label pdf tsung wei tsai chongxuan li jun zhu selfsupervised point cloud completion via inpainting pdf himangi mittal brian okorn arpit jangid david held bmvc 2021 collossl collaborative selfsupervised learning human activity recognition pdf code yash jain ian tang chulhong min fahim kawsar akhil mathur ubicomp 2022 machine learning selftaught learning transfer learning unlabeled data pdf raina rajat battle alexis lee honglak packer benjamin ng andrew icml 2007 representation learning review new perspective pdf bengio yoshua courville aaron vincent pascal tpami 2013 reinforcement learning curiositydriven exploration selfsupervised prediction pdf code deepak pathak pulkit agrawal alexei efros trevor darrell icml 2017 largescale study curiositydriven learning pdf yuri burda harri edward deepak pathak amos storkey trevor darrell alexei efros playing hard exploration game watching youtube pdf yusuf aytar tobias pfaff david budden tom le paine ziyu wang nando de freitas nip 2018 unsupervised state representation learning atari pdf code ankesh anand evan racah sherjil ozair yoshua bengio marcalexandre cote r devon hjelm neurips 2019 visual reinforcement learning selfsupervised 3d representation pdf code yanjie ze nicklas hansen yinbo chen mohit jain xiaolong wang preprint 2022 recommendation system selfsupervised learning deep model recommendation pdf tiansheng yao xinyang yi derek zhiyuan cheng felix yu aditya menon lichan hong ed h chi steve tjoa jieqi jaykang evan ettinger preprint 2020 robotics 2006 improving robot navigation selfsupervised online learning pdf boris sofman ellie lin j andrew bagnell nicolas vandapel anthony stentz reverse optical flow selfsupervised adaptive autonomous robot navigation pdf lookingbill lieb j rogers j curry 2009 learning longrange vision autonomous offroad driving pdf raia hadsell pierre sermanet jan ben ayse erkan marco scoffier koray kavukcuoglu ur muller yann lecun 2012 selfsupervised terrain classification planetary surface exploration rover pdf christopher brook karl iagnemma 2014 terrain traversability analysis using multisensor data correlation mobile robot pdf mohammed abdessamad bekhti yuichi kobayashi kazuki matsumura 2015 online selfsupervised learning dynamic object segmentation pdf vitor guizilini fabio ramos international journal robotics research selfsupervised online learning basic object push affordances pdf barry ridge ale leonardis ale ude miha denisa danijel skocaj selfsupervised learning grasp dependent tool affordances icub humanoid robot pdf tanis mar vadim tikhanoff giorgio metta lorenzo natale 2016 persistent selfsupervised learning principle stereo monocular vision obstacle avoidance pdf kevin van hecke guido de croon laurens van der maaten daniel hennes dario izzo curious robot learning visual representation via physical interaction pdf lerrel pinto dhiraj gandhi yuanfeng han yonglae park abhinav gupta eccv 2016 learning poke poking experiential learning intuitive physic pdf agrawal pulkit nair ashvin v abbeel pieter malik jitendra levine sergey nip 2016 supersizing selfsupervision learning grasp 50k try 700 robot hour pdf pinto lerrel gupta abhinav icra 2016 2017 supervision via competition robot adversary learning task pdf pinto lerrel davidson james gupta abhinav icra 2017 multiview selfsupervised deep learning 6d pose estimation amazon picking challenge pdf project andy zeng kuanting yu shuran song daniel suo ed walker jr alberto rodriguez jianxiong xiao icra 2017 combining selfsupervised learning imitation visionbased rope manipulation pdf project ashvin nair dian chen pulkit agrawal phillip isola pieter abbeel jitendra malik sergey levine icra 2017 learning fly crashing pdf dhiraj gandhi lerrel pinto abhinav gupta iros 2017 selfsupervised learning enabling technology future space exploration robot experiment monocular distance learning pdf k van hecke g c de croon hennes p setterfield saenz otero izzo unsupervised perceptual reward imitation learning pdf project sermanet pierre xu kelvin levine sergey r 2017 selfsupervised visual planning temporal skip connection pdf frederik ebert chelsea finn alex x lee sergey levine corl2017 2018 cassl curriculum accelerated selfsupervised learning pdf adithyavairavan murali lerrel pinto dhiraj gandhi abhinav gupta icra 2018 timecontrastive network selfsupervised learning video pdf project pierre sermanet corey lynch yevgen chebotar jasmine hsu eric jang stefan schaal sergey levine icra 2018 selfsupervised deep reinforcement learning generalized computation graph robot navigation pdf gregory kahn adam villaflor bosen ding pieter abbeel sergey levine icra 2018 learning actionable representation visual observation pdf project dwibedi debidatta tompson jonathan lynch corey sermanet pierre iros 2018 learning synergy pushing grasping selfsupervised deep reinforcement learning pdf project andy zeng shuran song stefan welker johnny lee alberto rodriguez thomas funkhouser iros 2018 visual reinforcement learning imagined goal pdf project ashvin nair vitchyr pong murtaza dalal shikhar bahl steven lin sergey levineneurips 2018 grasp2vec learning object representation selfsupervised grasping pdf project eric jang coline devin vincent vanhoucke sergey levine corl 2018 robustness via retrying closedloop robotic manipulation selfsupervised learning pdf project frederik ebert sudeep dasari alex x lee sergey levine chelsea finn corl 2018 2019 learning longrange perception using selfsupervision shortrange sensor odometry pdf mirko nava jerome guzzi r omar chavezgarcia luca gambardella alessandro giusti robotics automation letter learning latent plan play pdf project corey lynch mohi khansari ted xiao vikash kumar jonathan tompson sergey levine pierre sermanet selfsupervised visual terrain classification unsupervised acoustic feature learning pdf jannik zuern wolfram burgard abhinav valada 2020 adversarial skill network unsupervised robot skill learning video pdf project oier mees markus merklinger gabriel kalweit wolfram burgard icra 2020 nlp bert pretraining deep bidirectional transformer language understanding pdf link jacob devlin mingwei chang kenton lee kristina toutanova naacl 2019 best long paper selfsupervised dialogue learning pdf jiawei wu xin wang william yang wang acl 2019 selfsupervised learning contextualized extractive summarization pdf hong wang xin wang wenhan xiong mo yu xiaoxiao guo shiyu chang william yang wang acl 2019 mutual information maximization perspective language representation learning pdf lingpeng kong cyprien de masson autume lei yu wang ling zihang dai dani yogatama iclr 2020 vlbert pretraining generic visuallinguistic representation pdf code weijie su xizhou zhu yue cao bin li lewei lu furu wei jifeng dai iclr 2020 simple effective selfsupervised contrastive learning framework aspect detection pdf code tian shi liuqing li ping wang chandan k reddy aaai 2021 selfguided contrastive learning bert sentence representation pdf code taeuk kim kang min yoo sanggoo lee acl 2021 asr wav2vec unsupervised pretraining speech recognition pdf code steffen schneider alexei baevski ronan collobert michael auli interspeech 2019 learning robust multilingual speech representation pdf kazuya kawakami luyu wang chris dyer phil blunsom aaron van den oord finding emnlp 2020 unsupervised pretraining transfer well across language pdf code morgane riviere armand joulin pierreemmanuel mazare emmanuel dupoux icassp 2020 vqwav2vec selfsupervised learning discrete speech representation pdf alexei baevski steffen schneider michael auli iclr 2020 effectiveness selfsupervised pretraining speech recognition pdf alexei baevski michael auli abdelrahman mohamed icassp 2020 towards unsupervised speech recognition synthesis quantized speech representation learning pdf alexander h liu tao tu hungyi lee linshan lee icassp 2020 selftraining endtoend speech recognition pdf jacob kahn ann lee awni hannun icassp 2020 generative pretraining speech autoregressive predictive coding pdf code yuan chung james glass icassp 2020 disentangled speech embeddings using crossmodal selfsupervision pdf arsha nagrani joon son chung samuel albanie andrew zisserman icassp 2020 multitask selfsupervised learning robust speech recognition pdf mirco ravanelli jianyuan zhong santiago pascual pawel swietojanski joao monteiro jan trmal yoshua bengio icassp 2020 visually guided self supervised learning speech representation pdf abhinav shukla konstantinos vougioukas pingchuan stavros petridis maja pantic icassp 2020 mockingjay unsupervised speech representation learning deep bidirectional transformer encoders pdf code andy liu shuwen yang pohan chi pochun hsu hungyi lee icassp 2020 vectorquantized autoregressive predictive coding pdf code yuan chung hao tang james glass interspeech 2020 wav2vec 20 framework selfsupervised learning speech representation pdf code alexei baevski yuhao zhou abdelrahman mohamed michael auli neurips 2020 robust wav2vec 20 analyzing domain shift selfsupervised pretraining pdf code weining hsu anuroop sriram alexei baevski tatiana likhomanenko qiantong xu vineel pratap jacob kahn ann lee ronan collobert gabriel synnaeve michael auli hubert selfsupervised speech representation learning masked prediction hidden unit pdf code weining hsu benjamin bolte yaohung hubert tsai kushal lakhotia ruslan salakhutdinov abdelrahman mohamed icassp 2021 unsupervised speech recognition pdf code alexei baevski weining hsu alexis conneau michael auli tera selfsupervised learning transformer encoder representation speech pdf code andy liu shangwen li hungyi lee ieeeacm taslp 2021 nonautoregressive predictive coding learning speech representation local dependency pdf code alexander h liu yuan chung james glass interspeech 2021 timeseries unsupervised scalable representation learning multivariate time series pdf code franceschi jeanyves aymeric dieuleveut martin jaggi neurips 2019 timeseries representation learning via temporal contextual contrasting pdf code emadeldeen eldele mohamed ragab zhenghua chen min wu chee keong kwoh xiaoli li cuntai guan ijcai 2021 unsupervised representation learning time series temporal neighborhood coding pdf code tonekaboni sana danny eytan anna goldenberg iclr 2021 transformerbased framework multivariate time series representation learning pdf code zerveas george srideepika jayaraman dhaval patel anuradha bhamidipaty carsten eickhoff kdd 2021 ts2vec towards universal representation time series pdf code zerveas george srideepika jayaraman dhaval patel anuradha bhamidipaty carsten eickhoff aaai 2022 graph deep graph infomax pdf code petar velickovic william fedus william l hamilton pietro lio yoshua bengio r devon hjelm iclr 2019 doe selfsupervision help graph convolutional network pdf yuning tianlong chen zhangyang wang yang shen icml 2020 multistage selfsupervised learning graph convolutional network graph label pdf ke sun zhouchen lin zhanxing zhu aaai 2020 gaining insight sarscov2 infection covid19 severity using selfsupervised edge feature graph neural network pdf arijit sehanobish neal g ravindra david van dijk icml 2020 workshop deep graph contrastive representation learning pdf code yanqiao zhu yichen xu feng yu qiang liu shu wu liang wang icml 2020 workshop contrastive multiview representation learning graph pdf kaveh hassani amir hosein khasahmadi icml 2020 gcc graph contrastive coding graph neural network pretraining pdf jiezhong qiu qibin chen yuxiao dong kdd 2020 gptgnn generative pretraining graph neural network pdf code ziniu hu yuxiao dong kuansan wang kaiwei chang yizhou sun kdd 2020 selfsupervised learning graph deep insight new direction pdf wei jin tyler derr haochen liu yiqi wang suhang wang zitao liu jiliang tang selfsupervised learning contextual embeddings link prediction heterogeneous network pdf code ping wang khushbu agarwal colby ham sutanay choudhury chandan k reddy www 2021 selfsupervised hyperboloid representation logical query knowledge graph pdf code nurendra choudhary nikhil rao sumeet katariya karthik subbian chandan k reddy www 2021 graphmae selfsupervised masked graph autoencoders pdf code zhenyu hou xiao liu yukuo ceng yuxiao dong hongxia yang chunjie wang jie tang kdd 2022 talk power selflearning system demis hassabis deepmind link supersizing selfsupervision learning perception action without human supervision abhinav gupta cmu link selfsupervision metasupervision curiosity making computer study harder alyosha efros ucb link unsupervised visual learning tutorial cvpr 2018 part partselfsupervised learning andrew zisserman oxford deepmind pdf graph embeddings content understanding selfsupervised learning yann lecun nyu fair pdf video selfsupervised learning could machine learn like human yann lecun epfl video weekb cs294158 deep unsupervised learningspring 2019 alyosha efros uc berkeley video thesis supervision beyond manual annotation learning visual representation carl doersch pdf image synthesis selfsupervised visual representation learning richard zhang pdf visual learning beyond direct supervision tinghui zhou pdf visual learning minimal human supervision ishan misra pdf blog selfsupervised representation learning lilian weng link self supervised representation learning nlp amit chaudhary link illustrated selfsupervised learning simclr pirl selflabelling fixmatch deepcluster amit chaudhary contrastive selfsupervised learning ankesh anand link license extent possible law zhongzheng ren ha waived copyright related neighboring right work,"[('pdf', 'code'), ('representation', 'learning')]"
fkromer/awesome-ros2,Other,awesome robot operating systemrosawesome curated list awesome robot operating system version 20 rosresources library robot operating systemrosis set software library tool help build robot application driver stateoftheart algorithm powerful developer tool roshas need next robotics project open source deprecation notice repository process beeing handed open robotics feel free checkout github ros2 organization find repo future content package fork operating system packaging documentation community book course presentation paper podcasts service company organization working group package data collection ros2datacollection collect validate send data reliably rosto create apis dashboard ros2datacollection demonstration adlinkddsbot 2010 based robot swarm architecture opensplice dd adlinkddsbot adlinkneuronbot ros2dds robot pkg human following swarm adlinkneuronbot turtlebot3 ros2 based turtlebot3 demo including bringup teleop cartographer turtlebot3 example turtlebot2demo turtlebotdemos using rosturtlebot2demo examplesrclcpp c example ros2examples examplesrclpy python example ros2examples rcljavaexamples package containing example use rcljava api ros2javaexamples ros2talkerandroid ros2listenerandroid example android apps ros2 java binding ros2androidexamples zedros2examples example tutorial use zed camera ros2 zedros2example realsenserosros2branch ros2 wrapper intel realsense device realsenseros benchmarking ros2benchmarking framework ros2 benchmarking ros2 communication characteristic evaluated several ax quickly automated way ros2benchmarking performancetest test performance latency various communication mean like rosfastrtps connext dd micro performancetest containerization dockerros2osplce dockerfile build ros2 opensplice ce container dockerros2osplce ros2javadocker dockerfiles building ros2java openjdk android ros2javadocker microrosdocker dockerrelated material setup configure develop microros hardware rostoolingcrosscompile cross compile rosworkspaces nonnative architecture generate corresponding docker image ros2docker connecting rosnodes running docker container internet osrfdockerimages dockerfiles official library docker hub osrf organization docker hub osrfros dockerros2desktopvnc dockerfiles provide html5 vnc interface access ubuntu lxde ros2 dockerros2desktopvnc ros2lxd install roshumble ubuntu 2004 1804 using lxd container networking husarnet vpn p2p secure network layer dedicated roshusarnet ecosystem link cloud logging rosand rosrosbag2 ros2 native rosbag rosbag2 rviz 3d robot visualizer rviz urdfdom urdf urobot description format library provides core data structure simple xml parser urdfdom urdfdomheaders header urdf parser urdfdomheaders ros2cli roscommand line tool ros2cli orocoskinematicsdynamics orocos kinematics dynamic c library orocoskinematicsdynamics pydds simple dd python api vortex lite opensplice pydds webots robot simulator roswebots lgsvl simulation software accelerate safe autonomous vehicle development unity robotics hub central repository tool tutorial resource documentation robotic simulation unity foxglove studio integrated visualization diagnosis tool robotics foxglove studio ros2 unity asset package enables highperformance communication unity3d simulation ros2 ecosystem ros2forunity interactivity jupyter ros2 jupyter widget helper ros2 penetration testing aztarna footprinting tool robot ros2fuzzer ros2 topic service fuzzer application layer apexautonomy apexautonomy provides autonomy algorithm individual building block compatible autowareauto autowareauto autowareauto provides opensource software stack based rosfor selfdriving technology ros2control ros2control proof concept new feature within roscan elaborated used context robot control ros2controllers ros2control ros2controllers description roscontrollers ros2controllers geometry2 set package keeping track coordinate transforms geometry2 ros2orbslam2 ros2 node wrapping orbslam2 library ros2orbslam2 basaltros2 ros2 wrapper basalt vio basaltros2 cartographer realtime simultaneous localization mapping slam 2d 3d across multiple platform sensor configuration cartographer slamgmapping slam gmapping ros2 slamgmapping slamtoolbox slam toolbox lifelong mapping localization potentially massive map slamtoolbox lidarslamros2 ros2 package 3d lidar slam using ndtgicp registration poseoptimization lidarslamros2 lislamros2 ros2 package tightlycoupled lidar inertial ndtgicp slam referenced liosam lislamros2 octomapserver2 ros2 stack mapping octomap port ros1 octomapmapping package octomapserver2 visionopencv package interfacing ros2 opencv visionopencv teleoptwistkeyboard generic keyboard teleop ros2 teleoptwistkeyboard teleoptwistjoy simple joystick teleop twist robot teleoptwistjoy navigation ros2 navigation stack navigation diagnostics forked version original ros1 diagnostics roscurrently diagnosticsupdater diagnostics robotstatepublisher forked version original robot state publisher modification compile within ros2 ecosystem robotstatepublisher commoninterfaces set package contain common interface file msg srv commoninterfaces ros2objectmap ros2objectanalytics object analytics oa ros2 wrapper realtime object detection localization tracking ros2objectanalytics ros2intelmovidiusncs ros2 wrapper movidius neural compute stick nc neuronal compute api ros2intelmovidiusncs ros2movingobject addressing moving object based message generated object analytics ros2objectanalytics ros2movingobject ros2openvinotoolkit ros2 wrapper cv api openvino human vision emulation ros2openvinotoolkit ros2grasplibrary ros2grasplibrary apriltagros ros2 node apriltag detection apriltagros rosbridgesuite bridging browser 20 rosbridgesuite ros2messagefilters ros2messagefilters blend various message based condition filter need met derives ros2 porting messagefilters ros2messagefilters ros2tensorflow ros2 node computer vision task tensorflow ros2tensorflow ros2pytorch ros2 node computer vision task pytorch ros2pytorch ros2pytorchcuda extension ros2pytorch cuda device containerization pid pid controller ros2 pid systemmodes system mode rosand microros darknetros ros2 wrapper deploying darknet yolo computer vision model easyperceptiondeployment package accelerates training deployment computer vision model industry easyperceptiondeployment easymanipulationdeployment package integrates perception element establish endtoend pick place task easymanipulationdeployment ros2pidlibrary ros2 humble fully configurable pid library ros2pidlibrary waypplantools waypoint planner tool roswith minimal dependency optional gazebo fortress simulation waypplantools middleware micro xrcedds agent micro xrcedds agent act server dd network micro xrcedds client micro xrcedds agent docker docker image containing micro xrcedds agent micro xrcedds client micro xrcedds implement clientserver protocol enable resourceconstrained device client take part dd communication microrosagent rospackage using micro xrcedds agent eclipse zenoh zenoh scalable extremely performant protocol used transparently used interact ros2 application well r2x communication eclipse zenohplugindds zenoh plugin allows transparently route ros2dds data zenoh commonly used r2x communication wireless network across internet system binding rclandroid android api ros2 rclandroid rclnodejs nodejs version ros20 client rclnodejs riotros2 project enables ros2 run microcontrollers using riot operating system riotros2 ros2integrationservice ros2 integration routing provides complete tool integrate technology ros2 easily enable ros2 waninternet sos system system synthesizer used integrate ros2 via ros2integrationservice communication system microrosarduino integration microros arduino software platform project microroszephyrmodule integration microros zeyphr based project driver layer autowareio autowareio provides heterogeneous hardware reference platform enables integration member company solution onto platform support autowareauto autowareai software stack ros2xmlrpcinterface ros2 interface package xmlrpc communicate sesto server using sesto api ros2xmlrpc cozmodriverros2 unofficial anki cozmo node ros2 cozmodriverros2 spheroros2 ros2 sphero driver spheroros2 flock2 ros2 driver dji tello drone flock2 ros2raspicamnode ros2 node raspberry pi camera ros2raspicamnode joystickdrivers ros2 driver joystick joystickdrivers joystickdriversfromscratch joystick driver package rosjoystickdriversfromscratch joystickros2 joystick driver ros2 support platform linux macos window joystickros2 ros2teleopkeyboard teleop twist keyboard ros2 ros2teleopkeyboard rosastracamera ros2 wrapper astra camera rosastracamera ros2usbcamera ros2 general usb camera driver rosastracamera ros2androiddrivers collection ros2 driver several android sensor ros2androiddrivers ros2intelrealsense ros2 wrapper intel realsense device ros2intelrealsense raspicam2node ros2 node camera module raspberry pi raspicam2node ros2trackimu ros2 node trackimu imu sensorros2trackimu hrim standard interface robot module firos2 ros2 integrable tool focused intercommunication ros2 fiware firos2 lino2upper linorobot ros2 lino2upper rysros2 ros2 software stack minirys robot rysros2 px4toros ros2ros package communicate px4 px4toros multiwiiros2 ros2 node multiwii cleanflight flight controller multiwiiros2 ydlidarros2 ros2 wrapper ydlidar ydlidarros2 zedros2wrapper roswrapper beta zed sdk ros2densoradar toyotalexus 20152017 denso radar driver ros2 sickscan2 ros2 driver sick tim series laser scanner tim551tim561tim571 ros2ousterdrivers ros2 driver ouster os1 lidar ros2ousterdrivers microroshardware information documentation hardware platform used supported microros project blickfeld cubecube range ros2 driver blickfeld cubecube range universal robot ros2 driver ur cb3 eseries odriveros2control odrive driver ros2control durogpsdriver rosros2 driver swiftnav duro inertial gps gnss receiver durogpsdriver client library rclada client library ada rclada rclcpp client library c rclcpp rclgo client library go rclgo rclpy client library python rclpy rcljava client library java rcljava rclnodejs client library nodejs rclnodejs rclobjc client library objective c io rclobjc rclc client library c rclc ros2rust rust binding ros2 ros2rust ros2dotnet net binding ros2 ros2dotnet ros2cs alternative ros2dotnet ros2 c interface supporting full range message modern ros2 ros2cs client library common rcl library support implementation language specific client library rcl systemtests test rclcpp rclpy systemtests rclinterfaces repository message service used client library rclinterfaces idl generator rosidlgeneratorjava generate interface java ros2java rosidlgeneratorobjc generate interface objective c ros2objc rosidlgeneratorcpp generate interface c rosidl rosidlgeneratorc generate interface c rosidl rosidl package provide idl msg definition code generation rosidl rosidldds generate dd interface interface rosidldds rmw middleware rmw contains middleware api rmw rmwconnextcpp implement middleware interface using rti connext static code generation c rmwconnextcpp rmwfastrtpscpp implement middleware interface using eprosima fastrtps static code generation c rmwfastrtpscpp rmwdps rmwopensplicecpp implement middleware interface using prismtech opensplice static code generation c rmwopensplicecpp rmwcoredx coredx dd integration layer ros2 tocincrmwcoredx rmwfreertps rmw implementation using freertps tocincrmwcoredx rmwzenoh rmw implementation using eclipse zenoh zero overhead pubsub storequery compute atolabrmwzenoh rcutils common c function data structure used rosrmw freertps free portable minimalist workinprogress rtps implementation rmw rmwcyclonedds ros2 rmw layer eclipse cyclone dd rmwcyclonedds rmwzenoh ros2 rmw layer zenoh rmwiceoryx enables usage interprocesscommunication middleware eclipse iceoryx dd communication mechanism implementation connext dd connectivity software developing integrating iiot system heavydollarsign fastrtps implementation rtps standard rtps wire interoperability protocol dd fastrtps opensplice implementation omg dd standard opensplice heavydollarsign coredx dd implementation twin oak computing inc heavydollarsign freertps free portable minimalist workinprogress rtps implementation freertps cdds cyclone dd developed completely open undergoing acceptance process become part eclipse iot cdds microxrcedds xrce dd implementation supported microros microxrcedds build system linux metaros2 roslayer openembedded linux metaros2 build system ros2 ci rosci infrastructure ci amentcmakeexportjars ability export java archive downstream package ament buildsystem cmake ros2java rmwimplementationcmake cmake function discover enumerate available implementation rmw rmwimplementation cmake infrastructure dependency rmw implementation rmw operating system nuttx nuttx fork official one use microros riot riot realtime multithreading operating system realtime capability small memory footprint api offer partial posix compliance emcos posixcompliant realtime manycore processor expected support autosar future pynq pythonbased rapid prototyping high performance ml application running xilinx fpgas reconros framework ros2 fpgabased hardware acceleration based reconos reconros ubuntu core build secure iot device ubuntu core ubuntu server vxworks secure safe reliable certifiable realtime critical infrastructure zephyr linux foundation project rtos aiming beeing secure safe packaging ros2snap create snap rosapplication fork apexos apexos fork rosthat ha made robust reliable used safetycritical application documentation index future single entry point ros2 documentation beta foxy package dashing package crystal package bouncy package ardent package rosdesign article inform guide 20 design effort rosdocs overview detail rosinternal design organisation rostutorials study ros2 concept library build development demoesexamples roswiki entry point find kind information rosrosdistribution rosdistro info distribution included package ros2 package status bouncy package status status bouncy package ardent package status status ros2 ardent package ros2 buildfarm build information jenkins build farm ros2 cli cheat sheet cheat sheet roscommand line interface ros2 quality assurance guideline collection guideline tutorial improving package quality following rep2004 quality standard integrating continuous integration community discourse answer news planet stack overflow book concise introduction robot programming ros2 course ros2 discover next generation udemy rosnew feature skillup latest feature robot operating systemudemy rosbasics indays c learn start working rosthe construct ros2 autoware course autoware course lecturedevelopment environment autoware course lectureros2 101 autoware course lecturerostooling develop like pro autoware course lectureplatform hw rtos dd autoware course lectureautonomous driving stack autoware course lectureautoware 101 autoware course lectureobject perception lidar autoware course lectureobject perception camera autoware course lectureobject perception radar autoware course lecture 10 state estimation localization autoware course lecture 11 lgsvl simulator autoware course lecture 12 motion control ros2industrial training material presentation roscon 2022 program announcement panel rosdeveloper experience video roscon 2021 program announcement roscon jp 2021 program announcement roscon 2020 program announcement roscon 2019 program announcement roscon fr 2019 program announcement rosi eu spring 2019 workshop current status roshandson feature overview slide 2019 robot modularity xilinx hros xilinx inc video roscon jp 2018 english slide presentation next slide 24 onwards slide video roscon 2018 program announcement handson rosa walkthrough roson autonomous driving vehicle rviz tale migration 20 launch rosgetting involved rosdevelopment planning plan plugins way leveraging dd security ros2 arm dd security library adding secure security ros2 ros2 supercharging jaguar4x4 performance test tool communication middleware performance measuring ros2 android io universal window platform demonstration ros2s portability crossplatform crosslanguage capability integrating ros2 mixedcritical robotic system based embedded heterogeneous platform towards rosmicrocontroller meta crosscompilation nodejs client web bridge ready 20 rclada ada client library ros2 embedded world conference 2018 adlink neuron industrial oriented ros2based platform slide video video 2018 ros2 robot operating system versiontng technology consulting gmbh slide video industrial conference 2017 micro robot operating system highly resourceconstrained device slide ros2 coming slide roscon 2017 rosvision advancing future robotics development slide video ros2 fine tuning slide video slam turtlebot2 using ros2 slide video using ros2 visionbased manipulation industrial robot slide video 2017 hypharos 20 introduction slide industrial conference 2016 20 opc ua status update slide roscon 2016 rosupdate slide video evaluating resilience ros2 communication layer slide video roscon 2015 roson small embedded system slide video state rosdemos technology behind slide video realtime performance rosslides video paper distributed synchronized setup towards realtime robotic control using ros2 linux time synchronization modular collaborative robot open problem robotic anomaly detection towards distributed realtime framework robot evaluation 20 communication realtime robotic application information model modular robot hardware robot information model hrim introducting robot security framework rsf standardized methodology perform security assessment robotics towards open standard assessing severity robot security vulnerability robot vulnerability scoring system rv realtime characteristic 20 multiagent robot system empirical study responsetime analysis rosprocessing chain reservationbased scheduling robot operating systemthe need holistic security approach robotic architecture ubuntu 1604 rosbeta 23 rti 53 dd dd security maruyama yuya et al exploring performance ros2 2016 international conference embedded software emsoft 2016 110 podcasts rosand dd iot device haochih lin 5th minute onwards everything roswith dirk thomas 16th minute onwards service cloud robotics robolaunch robotics capture flag rctf rctflist list robotics ctf rctf scenario company acutronic robotics existing anymore initiator hardware robot information model hrim hardware robot operating system hros creator world first modular industrial robot arm mara adlink leading edge computing alias robotics product service context robot cybersecurity amazon robotics team amazon amazon web service aws apexai safe certified software autonomous mobility autonomoustuff world leader autonomy system solution bosch robotics team bosch research canonical company behind ubuntu eprosima middleware expert ericsson research connect ros2 application 5g network m2m communication farobot swarm robot system 2dds based fleet management system fraunhofer institute manufacturing engineering automation ipa robot assistive system gestalt robotics service provider intelligent automation husarnet open source p2p lowlatency vpn dedicated robot irobot manufacturer vacuuming mopping robot klepsydra technology mathworks toolbox mission robotics hardware software new era marine intelligence roboception gmbh realtime perception robot roboox opensource software ecosystem consumer robot rover robotics rugged industrialgrade robot sony corporation synapticon compatible motion control drive product effort support ros2 wind river ros2 vxworks organization u department transportation working group edge ai working group discourse thread tagged wgedgeai embedded working group discourse thread tagged wgembedded hardware acceleration working group discourse thread tagged wgacceleration navigation working group discourse thread tagged wgnavigation safety working group safety working group landing page safety design pattern catalogue security working group discourse thread tagged wgsecurity rossecuritycommunity outline governance rossecurity working group technical steering committee discourse thread tagged tsc tooling working group discourse thread tagged wgtooling license license cc byncsa 40,"[('client', 'library'), ('autoware', 'course')]"
wh200720041/floam,C++,floam fast loam lidar odometry mapping work optimized version aloam loam computational cost reduced totimes code modified loam aloam modifier wang han nanyang technological university singaporedemo highlight watch demo video link evaluation 21 computational efficiency evaluation computational efficiency evaluation based kitti dataset platform intel core i78700 cpu 320ghz dataset aloam floam kitti 151ms 59ms localization error dataset aloam floam kitti sequence 00 055 051 kitti sequence 02 393 125 kitti sequence 05 128 093 22 localization result 23 mapping result prerequisite 31 ubuntu ubuntu 64bit 1804 melodic installation 32 cere solver follow cere installation 33 pcl follow pcl installation 34 trajectory visualization visualization purpose package us hector trajectory sever may install package sudo aptget install rosmelodichectortrajectoryserver alternatively may remove hector trajectory server node trajectory visualization neededbuild 41 clone repository cd catkinwssrc git clone cd catkinmake source catkinwsdevelsetupbash 42 download test rosbag download kitti sequence 05 kitti sequence 07 unzip compressed file 201109300018zip system doe unzip please install unzip sudo aptget install unzip may take minute unzip file cd downloads unzip downloads201109300018zip 43 launch roslaunch floam floamlaunch would like create map time run cpu cost roslaunch floam floammappinglaunch mapping process slow may wish change rosbag speed replacing clock r 05 clock r 02 launch file change map publish frequency manually default 10 hztest sequence generate rosbag file kitti dataset may use tool provided kittitorosbag kitti2bag test velodyne vlp16 hdl32 may wish test floam platform sensor vlp16 install velodyne sensor driver sudo aptget install rosmelodicvelodynepointcloud launch floam velodyne sensor roslaunch floam floamvelodynelaunch using hdl32 sensor please change scanline launch file 7acknowledgements thanks aloam loamj zhang singh loam lidar odometry mapping realtime loamnotedcitation use work research may want cite inproceedingswang2021 authorh wang c wang c chen l xie booktitle2021 ieeersj international conference intelligent robot system iros titlefloam fast lidar odometry mapping year2020 volume number,"[('kitti', 'sequence'), ('lidar', 'odometry')]"
undera/pylgbst,Python,python library interact move hub poweredup hub move hub central controller block lego boost robotics set fact move hub bluetooth hardware piece manipulation made command passed bluetooth low energy ble wireless protocol one way issue command write python program using library best way start look demopy file run assuming installed library vernie assembled might run script examplesvernie directory demonstrational video vernie programmed laser engraver color sorter face tracker color pin bot bb8 joystick dancing vernie feature autodetect connect move hub device autodetects peripheral device connected hub constant angled timed movement motor rotation sensor subscription vision sensor several mode measure distance color luminosity tilt sensor subscriptionaxisaxis bump detect mode rgb led color change headlight brightness change push button status subscription battery voltage current subscription available usage please note library requires one bluetooth backend library installed please read section detail install library like bash pip install u pylgbstbleak instantiate movehub object start invoking method following example print peripheral detected hub python pylgbsthub import movehub hub movehub device hubperipherals printdevice peripheral kind ha method action andor get sensor data see feature list individual doc page bluetooth backend prerequisite following option install bluetooth backend might require sudo linux pip install bleak bleak lib support linuxwindowsmacos recommended pip install pygatt pygatt lib work window linux pip install gatt gatt lib support linux doe work window pip install gattlib gattlib support linux doe work window requires sudo pip install bluepy bluepy lib support linux including raspbian allows connection hub raspberry pi note pip install u pylgbstbleak command indicates backend install install backendless backend window user may first turn bleak backend support internal external bluetooth adapter recognized window version pygatt backend work bluegiga bled112 bluetooth smart dongle please let author know discovered compatibilitypreprequisite detail update section help future user depending backend type might need linux sudo used running python bluetooth connection option optional parameter movehub class constructor accepting instance connection object default try use whatever getconnectionauto return several option manually control use getconnectionauto attempt backend autodetection use getconnectionbluegiga use bluegiga adapter pygatt library prerequisite use getconnectiongatt use gatt backend linux gatt library prerequisite use getconnectiongattool use gatttool backend linux pygatt library prerequisite use getconnectiongattlib use gattlib backend linux gattlib library prerequisite use getconnectionbluepy use bluepy backend linuxraspbian bluepy library prerequisite use getconnectionbleak use bleak backend bleak library prerequisite function optional argument specify adapter name hub name mac address please take look function source code detail want specify name bluetooth interface use local computer pas class function getting connection pas connection object movehub constructor like python pylgbsthub import movehub pylgbst import getconnectiongatt conn getconnectiongatthubmac aabbccddeeff hub movehubconn roadmap todo validate operation hub type train pup etc make connection detect hub uuid instead name document api method link true doc lego ble protocol initial source protocol knowledge javascript version library example another approach bluetooth libs lover async python alternative implementation library control poweredup hub good infor mode bricknil,"[('pip', 'install'), ('library', 'prerequisite')]"
PaoPaoRobot/ICRA2020-paper-list,Other,icra2020paperlist welcome icra 2020 2020 ieee international conference robotics automation icra largest robotics meeting world flagship conference ieee robotics automation society thus honor pleasure welcome edition although current exceptional circumstance allow u organize glimpse splendor wonderful robotics community deserves icra 2020 received 3512 submission new record 64 country 14665 author overall 3446 paper reviewed 10 popular keywords descending order deep learning robotics automation motion path planning localization learning adaptive system autonomous vehicle navigation multirobot system slam object detection segmentation categorization visualbased navigation list edited paopaorobot chinese academic nonprofit organization welcome follow github wechat public platform account paopaorobotslam course could contact yvon shong could use indexmd look index paper category award service robot medical robotics award ii robot mechanism design automation award iii humanrobot interaction hri multirobot system award iv unmanned aerial vehicle robot vision award v robot manipulation cognitive robotics award vi best student paper award best conference paper award slam deep learning robotics automation motion path planning aerial system mechanic control autonomous driving localization learning demonstration medical robot system legged robot multirobot system modeling control learning soft robot manipulation sensor fusion compliance impedance control visual learning soft sensor actuator wearable robot cognitive humanrobot interaction robotics agriculture forestry calibration identification industrial robot biomimetics robustadaptive control robotic system space robotics automation perception grasping manipulation humanoid robot force control semantic scene understanding social humanrobot interaction biologicallyinspired robot robotics agriculture construction mining kinematics robot safety swarm simulation animation reinforcement learning robotics manipulation planning contact modeling robotics hazardous field dynamic product design development prototyping cellular modular robot performance evaluation benchmarking aerial system application learning adaptive system surgical robotics laparascopy surgical robotics laparoscopy ii surgical robotics steerable cathetersneedles path planning multiple mobile robot agent optimization optimal control grasping omnidirectional vision force tactile sensing visualbased navigation soft robot application prosthetics exoskeleton humancentered robotics mechanism design marine robotics compliant jointmechanism search rescue robot human detection tracking omnidirectional vision audition hydraulicpneumatic actuator service robot robot perception distributed robot system range sensing transfer learning flexible robot field space robot recognition aerial system multirobots biological cell manipulation cooperating robot rgbd perception task planning brainmachine interface tendonwire mechanism agricultural automation underactuated robot application robust sensorbased control object detection segmentation categorization aerial system perception autonomy autonomous vehicle navigation mapping computer vision robotic application humanoid bipedal locomotion motion control dexterous manipulation computer vision automation manufacturing visual servoing soft robot material design rehabilitation robotics physical humanrobot interaction telerobotics teleoperation collision avoidance micronano robot aibased method climbing robot failure detection recovery learning predict learning motion planning motion control manipulator computer vision medical robot grippers endeffectors formal method robotics automation parallel robot mechanism verification model learning control mobile manipulation computer vision transportation haptics haptic interface visual tracking planning scheduling coordination reactive sensorbased planning award service robot medical robotics online trajectory planning combined trajectory optimization function approximation application exoskeleton atalante humancentric active perception autonomous observation active reward learning corobotic vision based exploration bandwidth limited environment fault tolerant control shapechanging internal robot swingassist enhancing stair ambulation primarilypassive knee prosthesis multilayermultimodal fusion architecture pattern recognition natural manipulation percutaneous coronary intervention award ii robot mechanism design automation design rollerbased dexterous hand object grasping withinhand manipulation swingassist enhancing stair ambulation primarilypassive knee prosthesis asynchronous decoupled control position stiffness spatial rcm tensegrity mechanism needle manipulation form2fit learning shape prior generalizable assembly disassembly deep visual heuristic learning feasibility mixedinteger program manipulation planning securing industrial operator collaborative robot simulation experimental validation carpentry task award iii humanrobot interaction hri multirobot system preferencebased learning exoskeleton gait optimization perceptionaction coupling usage telepresence camera human interface teleoperated object manipulation soft growing robot efficient largescale multidrone delivery using transit network efficient multiagent trajectory planning feasibility guarantee using relative bernstein polynomial scalable targettracking autonomous vehicle fleet award iv unmanned aerial vehicle robot vision design autonomous stabilization ballistically launched multirotor morphable aerialaquatic quadrotor coupled symmetric thrust vectoring nonlinear vectorprojection control agile fixedwing unmanned aerial vehicle omnislam omnidirectional localization dense mapping widebaseline multicamera system metricallyscaled monocular slam using learned scale factor graduated nonconvexity robust spatial perception nonminimal solver global outlier rejection award v robot manipulation cognitive robotics 6dof grasping targetdriven object manipulation clutter tactile dexterity manipulation primitive tactile feedback design rollerbased dexterous hand object grasping withinhand manipulation semantic linking map active visual object search adversarial skill network unsupervised robot skill learning video transient behavior predictability manipulating complex object award vi best student paper award best conference paper award design rollerbased dexterous hand object grasping withinhand manipulation ertbased robotic skin sparsely distributed electrode structure fabrication dnnbased signal processing 6dof grasping targetdriven object manipulation clutter preferencebased learning exoskeleton gait optimization design rollerbased dexterous hand object grasping withinhand manipulation prediction human fullbody movement motion optimization recurrent neural network slam realtime graphbased slam occupancy normal distribution transforms spatiotemporal nonrigid registration 3d point cloud plant uncertaintybased adaptive sensor fusion visualinertial odometry various motion characteristic loamlivox fast robust highprecision lidar odometry mapping package lidar small fov active slam using 3d submap saliency underwater volumetric exploration ready service robot openlorisscene datasets lifelong slam intensity scan context coding intensity geometry relation loop closure detection textslam visual slam planar text feature flownorm learningbased method increasing convergence range direct alignment redesigning slam arbitrary multicamera system dynamic slam need speed gradslam dense slam meet automatic differentiation longterm place recognition worstcase graph matching integrate landmark appearance spatial relationship linear rgbd slam atlanta world stereo visual inertial odometry online baseline calibration lidarmonocular visual odometry using point line feature probabilistic data association via mixture model robust semantic slam closedloop benchmarking stereo visualinertial slam system understanding impact drift latency tracking accuracy metricallyscaled monocular slam using learned scale factor inertialonly optimization visualinertial initialization hierarchical quadtree feature optical flow tracking based sparse posegraph visualinertial slam keypoint description descriptor fusion using autoencoders towards noise resilient slam lamp largescale autonomous mapping positioning exploration perceptuallydegraded subterranean environment modeling semistatic scene persistence filtering visual slam broadcast weakness cooperative active posegraph slam multiple robot flowfusion dynamic dense rgbd slam based optical flow efficient algorithm maximum consensus robust fitting mulran multimodal range dataset urban place recognition gpo global plane optimization fast accurate monocular slam initialization largescale volumetric scene reconstruction using lidar topological mapping manhattanlike repetitive environment structureaware copslam robust rgbd camera tracking using optimal keyframe selection voxgraph globally consistent volumetric mapping using signed distance function submaps deepfactors realtime probabilistic dense monocular slam doorslam distributed online outlier resilient slam robotic team windowed bundle adjustment framework unsupervised learning monocular depth estimation unet extension clip loss structvio visualinertial odometry structural regularity manmade environment flowmotion depth network monocular stereo beyond online lidarslam legged robot robust registration deeplearned loop closure hybrid camera pose estimation online partitioning slam analysis minimum geodesic chordal cost minimal 2d posegraph slam problem voxel map visual slam deep learning robotics automation learning 3daware egocentric spatialtemporal interaction via graph convolutional network c3po cyclicthreephase optimization humanrobot motion retargeting based reinforcement learning apmtl attention pruned multitask learning model realtime instrument detection segmentation robotassisted surgery automatic gesture recognition robotassisted surgery reinforcement learning tree search towards privacypreserving egomotion estimation using extremely lowresolution camera acnn full resolution dcnn medical image segmentation ronin robust neural inertial navigation wild benchmark evaluation new method segmenting 2kvideos 365 fps 243 gflops accurate lightweight realtime semantic segmentation network temporally consistent horizon line fullscale continuous synthetic sonar data generation markov conditional generative adversarial network realtime soft body 3d proprioception via deep visionbased sensing general framework uncertainty estimation deep learning learning local behavioral sequence better infer nonlocal property real multirobot system unsupervised geometryaware deep lidar odometry sanet robust stateaction recognition learning observation generative approach socially compliant navigation scalable multitask imitation learning autonomous improvement motion2vec semisupervised representation learning surgical video pointatrousgraph deep hierarchical encoderdecoder point atrous convolution unorganized 3d point learning error model graph slam smart training shallow memoryaware transformer robotic explainability 3ddeeplearningbased augmented reality calibration method robotic environment using depth sensor data adversarial feature training generalizable robotic visuomotor control efficient bimanual manipulation using learned task schema bayesod bayesian approach uncertainty estimation deep object detector learning object placement relational instruction hallucinating scene representation fadnet fast accurate network disparity estimation training adversarial agent exploit weakness deep control policy trass time reversal selfsupervision federated imitation learning novel framework cloud robotic system heterogeneous sensor data uncertainty quantification statistical guarantee endtoend autonomous driving control autonomously navigating surgical tool inside eye learning demonstration learntorecover retrofitting uavs reinforcement learningassisted flight control cyberphysical attack modelbased reinforcement learning physical system without velocity acceleration measurement towards probabilistic fusion learned prior standard pipeline 3d reconstruction learning natural locomotion behavior humanoid robot using human bias aggressive online control quadrotor via deep network representation optimality principle visual object search learning spatial context salient view selection visual recognition industrial component low high dimensional modality reconstruction using aggregated field view learning fast adaptation meta strategy optimization deep neural network approach robot tool dynamic identification bilateral teleoperation learning matchable image transformation longterm metric visual localization orinet robust 3d orientation estimation single particular imu learning density feature space reliable segmentation indoor scene multimodal targetsource classifier attention branch understand ambiguous instruction fetching daily object onboard deeplearningbased unmanned aerial vehicle fault cause detection identification learning oneshot imitation human without human adversarial skill network unsupervised robot skill learning video eventbased angular velocity regression spiking network visual odometry revisited learnt 3d scene geometryaware constraint camera localization deep learning acder augmented curiositydriven experience replay truerma learning fast smooth robot trajectory recursive midpoint adaptation cartesian space motion path planning hyperproperties robotics planning via hyperltl abstraction computing robotic sensor suffice solve planning problem heuristic search based path planning algorithm temporal logic specification globallocal motion planning based dynamic trajectory reconfiguration dynamical system autonomous surgical robot deep imitative reinforcement learning temporal logic robot motion planning noisy semantic observation minimal 3d dubins path bounded curvature pitch angle adaptively informed tree ait fast asymptotically optimal path planning adaptive heuristic informing multimodal planning synergistic discrete lead hierarchical coverage path planning complex 3d environment perceptionaware time optimal path parameterization quadrotors generating visibilityaware trajectory cooperative proactive motion planning obstacleinteraction planning method navigation actuated vine robot new path planning architecture consider motion uncertainty natural environment revisiting asymptotic optimality rrt sample complexity probabilistic roadmaps via epsilon net reinforcement learning based manipulation skill transferring robotassisted minimally invasive surgery safe mission planning dynamical uncertainty iterative quadratic method generalsum differential game feedback linearizable dynamic realtime uav path planning autonomous urban scene reconstruction fast marching gradient sampling strategy motion planning using informed certificate set privacyaware uav flight selfconfiguring motion planning improved cspace exploration path planning robotic manipulator using distance information tuningfree contactimplicit trajectory optimization ppcpp predatorpreybased approach adaptive coverage path planning advanced bit abit samplingbased planning advanced graphsearch technique voxelbased general voronoi diagram complex data application motion planning dynamic movement primitive moving goal temporal scaling adaptation navigating discrete difference equation governed wmr virtual linear leader guided hmpc dispertio optimal sampling safe deterministic samplingbased motion planning aggregation localization simple robot curved environment interpretable runtime monitoring replanning safe autonomous system operation efficient samplingbased method online informative path planning unknown environment koopman operator method chanceconstrained motion primitive planning robust humanoid contact planning learned zero onestep capturability prediction differential flatness based path planning direct collocation hybrid mode quadrotor cablesuspended payload realtime approach chanceconstrained motion planning dynamic obstacle learning trust dynamic model planning reduced state space mist singlequery path planning approach using memory informationsharing tree fast planning roadmaps via selective densification refined analysis asymptoticallyoptimal kinodynamic planning statecost space polygonbased random tree search planning variable geometry truss robot iterative dynamic programming approach multipoint markovdubins problem gomp graspoptimized motion planning bin picking motion planning task allocation jumping rover team active 3d modeling via online multiview stereo reoriented shortcut rsc adjustment method locally optimal path shortcutting high dof configuration space learning resilient behavior navigation uncertainty environment motion planning explorer visualizing local minimum using localminima tree fog robotics algorithm distributed motion planning using lambda serverless computing exploration 3d terrain using potential field elevationbased local distortion r3t rapidlyexploring random reachable set tree optimal kinodynamic planning nonlinear hybrid system deepsemantichppc hypothesisbased planning uncertain semantic point cloud balancing actuation computing energy motion planning posterior sampling anytime motion planning graph expensivetoevaluate edge aerial system mechanic control model reference adaptive control multirotor mission dynamic change payload flight adaptive air density estimation precise tracking control accurate external wrench observation flying robot tiercel novel autonomous micro aerial vehicle map environment flying obstacle fullpose manipulation control cablesuspended load multiple uavs uncertainty learning pugachev cobra maneuver tailsitter uavs using acceleration model adaptive control variablepitch propeller pursuing minimumeffort operation design control variable aerial cable towed system novel modelbased control mixing strategy coaxial pushpull multirotor robust quadcopter control artificial vector field global identification propeller gain dynamic parameter quadrotors flight data gemini compact yet efficient bicopter uav indoor application direct force feedback control online multitask optimization aerial manipulator nonlinear vectorprojection control agile fixedwing unmanned aerial vehicle adaptive nonlinear control fixedwing vtol airflow vector sensing reconfigurable aerial robotic chain modeling control direct acceleration feedback control quadrotor aerial vehicle trajectory tracking nonlinear model predictive control overactuated mav optimal oscillation damping control cablesuspended aerial manipulator single imu sensor upset recovery control quadrotors subjected complete rotor failure large initial disturbance identification evaluation force model multirotor uavs preliminary study aerial manipulator elastic suspension towards lowlatency highbandwidth control quadrotors using event camera perceptionconstrained motorlevel nonlinear mpc underactuated tiltedpropeller uavs coordinatefree dynamic differential flatness class 6dof aerial manipulator autonomous driving goal directed occupancy prediction lane following actor intentaware pedestrian prediction adaptive crowd navigation brno urban dataset new data selfdriving agent mapping task efficient uncertaintyaware decisionmaking automated driving using guided branching imitative reinforcement learning fusing vision pure pursuit selfdriving adversarial appearance learning augmented cityscape pedestrian recognition autonomous driving a3d dataset towards autonomous driving challenging environment segvoxelnet exploring semantic context depthaware feature 3d vehicle detection point cloud finegrained driving behavior prediction via contextaware multitask inverse reinforcement learning keep hd map automated driving date binary dadnet binarized driveable area detection network autonomous driving learning robust control policy endtoend autonomous driving datadriven simulation fggmmbased interactive behavior estimation autonomous driving vehicle ramp merging control cooperative perception localization cooperative driving learning drive road smooth terrain unstructured environment using onboard camera sparse aerial image roadtrack realtime tracking road agent dense heterogeneous environment cooperative control heterogeneous connected vehicle platoon adaptive leaderfollowing approach semantic segmentation unsupervised domain adaptation varying weather condition autonomous vehicle deep merging vehicle merging controller based deep reinforcement learning embedding network radar teacher weakly supervised vehicle detection using radar label robust lane detection binary integer optimization synchronization approach achieving cooperative adaptive cruise control based nonstop intersection passing selfsupervised linear motion deblurring urban driving conditional imitation learning simulationbased reinforcement learning realworld autonomous driving driving style encoder situational reward adaptation generalpurpose planning automated driving analysis prediction pedestrian crosswalk behavior automated vehicle interaction oxford radar robotcar dataset radar extension oxford robotcar dataset multimodal expert network autonomous driving spatiotemporal relationship reasoning pedestrian intent prediction tunercar superoptimization toolchain autonomous racing risk assessment planning bidirectional reachability autonomous driving maplite autonomous intersection navigation without detailed prior map game theoretic decision making based real sensor data autonomous vehicle maneuver high traffic driving dense traffic modelfree reinforcement learning enhancing gametheoretic autonomous car racing using control barrier function cmts conditional multiple trajectory synthesizer generating safetycritical driving scenario lidar inertial odometry aided robust lidar localization system changing city scene dynamic interactionaware scene understanding reinforcement learning autonomous driving interacting vehicle trajectory prediction convolutional recurrent neural network navigation command matching visionbased autonomous driving graphrqi classifying driver behavior using graph spectrum localization roicloud key region extraction method lidar odometry localization learn learn visual localization essential matrix hierarchical multiprocess fusion visual place recognition camera tracking lighting adaptable map indoor environment fast compact highly scalable visual place recognition sequencebased matching overloaded representation visionbased multimav localization anonymous relative measurement using coupled probabilistic data association filter urbanloco full sensor suite dataset mapping localization urban scene map hidden sensor fast odometrybased global localization joint human pose estimation stereo 3d localization selfsupervised deep pose correction robust visual odometry ultrahighaccuracy visual marker indoor precise positioning accurate position tracking single uwb anchor associationfree multilateration based time arrival adversarial feature disentanglement place recognition across changing appearance fast accurate solution pose estimation 3d correspondence ground texture based localization using compact binary descriptor reliable data association featurebased vehicle localization using geometric hashing method vehicle localization based visual lane marking topological map matching rise novel indoor visual place recogniser beyond photometric consistency gradientbased dissimilarity improving visual odometry stereo matching ic incremental constrained smoothing state estimation droneaided localization lora iot network fast practical method indoor localization resourceconstrained device limited sensing gnnet gaussnewton loss multiweather relocalization datadriven motion prior continuoustime trajectory estimation se3 estimation fast feature selection robot visual navigation tightly coupled vlcinertial localization system ekf localization inspection device along belt conveyor multiple branch using deep neural network localising pmds cnn based perception urban street complexstep derivative approximation matrix lie group hybrid localization using model learningbased method fusion monte carlo e2e localization via importance sampling measurement scheduling cooperative localization resourceconstrained condition quantifying robot localization safety new integrity monitoring method fixedlag smoothing visual localization google earth image robust global pose estimation uavs relax recover guaranteed rangeonly continuous localization sprint subgraph place recognition intelligent transportation oneshot global localization instant lidarvisual pose estimation relocalization submaps multisession mapping planetary rover equipped stereo camera deeptio deep thermalinertial odometry visual hallucination rslnet localising satellite image radar ground kidnapped radar topological radar localisation using rotationallyinvariant metric learning global visual localization lidarmaps shared 2d3d embedding space unsupervised learning method visual place recognition discretely continuously changing environment lol lidaronly odometry localization 3d point cloud map localising faster efficient precise lidarbased robot localisation largescale environment setmembership state estimation solving data association learning demonstration benchmark skill learning demonstration impact user experience task complexity start configuration performance mpcnet first principle guided policy search robot programming without coding learning robust task priority gain control redundant robot planning uncertain specification pun predictive modeling periodic behavior humanrobot symbiotic walking adaptive curriculum generation demonstration simtoreal visuomotor control accept synthetic object real endtoend training attentive deep visuomotor policy manipulation clutter probabilistic framework imitating human race driver behavior learning exception strategy assembly task framework learning demonstration minimal human effort learning constraint locallyoptimal demonstration cost function uncertainty gershgorin loss stabilizes recurrent neural network compartment endtoend robot learning scheme minibatched online incremental learning supervisory teleoperation kinesthetic coupling recurrent neural network control hybrid dynamical transfemoral prosthesis edgedrnn accelerator crosscontext visual imitation learning demonstration improving generalisation learning assistance demonstration smart wheelchair analyzing suitability cost function explaining imitating human driving behavior based inverse reinforcement learning linearly constrained nonparametric framework imitation learning energybased approach ensure stability learned dynamical system iris implicit reinforcement without interaction scale learning control offline robot manipulation data geometryaware dynamic movement primitive learning pile loading controller demonstration learning navigation cost demonstration partially observable environment medical robot system design percutaneous mriguided needle robot soft fluiddriven actuator scade simultaneous sensor calibration deformation estimation fbgequipped unmodeled continuum manipulator novel optimizationbased design surgical evaluation treaded robotic capsule colonoscope generative localisation uncertainty estimation videoct data bronchoscopic biopsy internet thing iotbased collaborative control redundant manipulator teleoperated minimally invasive surgery design prototyping bioinspired kinematic sensing suit shoulder joint precursor multidof shoulder exosuit laryngotors novel cabledriven parallel robotic system transoral laser phonosurgery online disturbance estimation improving kinematic accuracy continuum manipulator permanent magnetbased localization growing robot medical application ergonomic shared workspace analysis framework optimal placement compact master control console virtual fixture assistance suturing robotaided pediatric endoscopic surgery design modeling control compact smaactuated mrconditional steerable neurosurgical robot constrainedspace optimization reinforcement learning complex task automatic design compliant surgical forceps adaptive grasping function parametric grasping methodology multimanual interaction realtime dynamic simulation pcabased visual servoing using optical coherence tomography teleoperated microsurgical forcepsdriver variable stiffness haptic feedback master device hysteresis compensator learningbased hybrid joint angle estimation flexible surgery robot towards fbgbased shape sensing microscale mesoscale continuum robot large deflection agile 3dnavigation helical magnetic swimmer two shankmounted imusbased gait analysis classification neurological disease patient opensource framework rapid development interactive softbody simulation realtime training towards 5dof control untethered magnetic millirobot via mri gradient coil armm system autonomous steering magneticallyactuated catheter towards endovascular application automatic normal positioning robotic ultrasound probe based confidence map optimization force measurement semiautonomous stereotactic brain biopsy robot enhanced safety magnetically steered robotic insertion cochlearimplant electrode array system integration firstincadaver result magnetic sensor based topographic localization automatic dislocation ingested button battery fully actuated bodymounted robotic assistant mriguided low back pain injection fault tolerant control shapechanging internal robot evaluation increasing camera baseline depth perception surgical robotics toward autonomous robotic microsuturing using optical coherence tomography calibration path planning improved multiple object tracking based autonomous simultaneous magnetic actuation localization wce towards bimanual vein cannulation preliminary study bimanual robotic system dual force constraint controller evaluation combined grip pinch power grip manipulating master manipulator contact stability analysis magneticallyactuated robotic catheter surface motion fast accurate intracorporeal targeting anatomical orifice exhibiting unknown behavior robotic swarm control precise ondemand embolization bilateral teleoperation control redundant manipulator rcm kinematic constraint legged robot open torquecontrolled modular robot architecture legged locomotion research passive quadrupedal gait synchronization extra robotic leg using dynamically coupled double rimless wheel model optimal fast entrainment waveform indirectly controlled limit cycle walker external disturbance gaitmesh controlleraware navigation mesh longrange legged locomotion planning multilayered environment mechanical shock propagation reduction robot leg guided constrained policy optimization dynamic quadrupedal robot locomotion mpcbased controller terrain insight dynamic legged locomotion adaptive supervisory control approach dynamic locomotion parametric uncertainty joint space positiontorque hybrid control quadruped robot locomotion push reaction improved performance movingmass hopping robot parallel elasticity vision aided dynamic exploration unstructured terrain smallscale quadruped robot reactive support polygon adaptation hybrid leggedwheeled centauro robot reliable trajectory dynamic quadruped using analytical cost learned initialization hardware feasibility nonlinear trajectory optimization legged locomotion based simplified dynamic agile leggedwheeled reconfigurable navigation planner applied centauro robot bounded haptic teleoperation quadruped robot foot posture sensing manipulation pinbot walking robot locking pin array passive adaptability rough terrain planning unexpected explicitly optimizing motion ground uncertainty running efficient control seriesparallel compliant articulated robot preintegrated velocity bias estimation overcome contact nonlinearities legged robot odometry optimized foothold planning posture searching energyefficient quadruped locomotion challenging terrain extracting legged locomotion heuristic regularized predictive control learning generalizable locomotion skill hierarchical reinforcement learning sorx soft pneumatic hexapedal robot traverse rough steep unstable terrain probebeforestep walking strategy multilegged robot terrain risk collapse augmented kinematic model cartesian control hybrid wheeledlegged quadrupedal robot centauro precision robotic leaping landing using stancephase balance stance locomotion adaptation soft terrain rolling deep hybrid locomotion wheeledlegged robot using online trajectory optimization optimal landing strategy twomass hopping leg natural dynamic bipedal walking quadrupedal locomotion fullbody dynamic decomposition rapid gait generation posture control lowcost commerciallyavailable hexapod robot deepgait planning control quadrupedal gait using deep reinforcement learning softlanding problem minimizing energy loss legged robot impacting yielding terrain computational framework designing skilled leggedwheeled robot multirobot system optimal perimeter guarding heterogeneous robot team complexity analysis effective algorithm spatial scheduling informative meeting multiagent persistent coverage simultaneous policy discrete communication learning multiagent cooperation cooperative team strategy multiplayer perimeterdefense game multirobot symmetric formation gradient hessian estimation application source seeking multirobot path deconfliction prioritization path prospect cooperative aerialground multirobot system automated construction task connectivityprediction algorithm application active cooperative localization multirobot system multiagent formation control based distributed estimation prescribed performance optimizationbased distributed flocking control multiple rigid body behavior mixing minimum global subgroup connectivity maintenance largescale multirobot system capricorn communication aware place recognition using interpretable constellation object robot network online planning quadrotor team 3d workspace via reachability analysis invariant geometric tree decentralized visualinertialuwb fusion relative state estimation aerial swarm synthesis timevarying communication network robot team information propagation guarantee dccapt concurrent assignment planning trajectory dubins car adversarial approach private flocking mobile robot team subspace projector stateconstrained multirobot consensus multiagent task allocation using crossentropy temporal logic optimization adaptive task allocation heterogeneous multirobot team evolving unknown robot capability mobile wireless network infrastructure demand monitoring long term intermittent deployment sensing strategy multirobot team multirobot coordination estimation coverage unknown spatial field dense rrobust formation lattice optimizing topology probabilistically secure multirobot system efficient communication large multirobot network cyphyhouse programming simulation deployment toolchain heterogeneous distributed coordination chance constrained simultaneous path planning task assignment multiple robot stochastic path cost optimal topology selection stable coordination asymmetrically interacting multirobot system representing multirobot structure multimodal graph embedding selection robot team mamsa multiagent multiscale connectivity maintenance global optimized approach control barrier function controller synthesis infinitesimally shapesimilar formation distributed source term estimation algorithm multirobot system weighted buffered voronoi cell distributed semicooperative behavior collaborative multirobot localization natural terrain multirobot control using coverage timevarying nonconvex domain efficient largescale multidrone delivery using transit network resilience multirobot target tracking reconfiguration teleoperation multirobot system relax topological constraint eciton robotica design algorithm adaptive selfassembling soft robot collective modeling control learning soft robot learning robotic assembly task lower dimensional system leveraging softness environmental constraint titan parallel asynchronous library multiagent softbody robotics using nvidia cuda motion planning competencyaware transition model underactuated adaptive hand learning walk tripod mobile robot using nonlinear soft vibration actuator entropy adaptive reinforcement learning time generalization trajectory learned articulated soft robot probabilistic modelbased online learning optimal control algorithm soft pneumatic actuator rigidsoft interactive learning robust grasping model data based approach control tensegrity robot stiffness imaging continuum appendage realtime shape tip force estimation base load reading simtoreal transfer learning approach tracking multidof ankle motion using soft strain sensor modelbased pose control inflatable eversion robot variable stiffness learning control reconfigurable staged soft arm openloop position control collaborative modular variablestiffnesslink vsl robot control silicone soft tripod robot via uncertainty compensation control oriented modeling soft robot polynomial curvature case modeling analysis sma actuator embedded stretchable coolant vascular pursuing artificial muscle distributed proprioception 3d configuration soft sensorized robot via deep learning stable tooluse flexible musculoskeletal hand learning predictive model sensor state transition learning transfer dynamic model underactuated soft robotic hand periodic movement learning softrobotic arm input observerbased stiffness estimation approach flexible robot joint fast modelbased contact patch pose estimation highly deformable densegeometry tactile sensor mechanism model soft robot head stabilization cancer radiation therapy manipulation grasping unknown object coupling deep reinforcement learning generative adversarial network visual servoing incorporating motion planning feasibility consideration taskagent assignment perform complex task using mobilemanipulators learning scaffold development robotic manipulation skill online replanning belief space partially observable task motion problem automated dynamicbalancinginspection scheme wheel machining faster confined space manufacturing teleoperation dynamic autonomy task dynamic imitation learning learning precise 3d manipulation multiple uncalibrated camera surfing uncertain edge precision cutting soft tissue using torquebased medium classification dynamic cloth manipulation deep reinforcement learning learning combine primitive skill step towards versatile robotic manipulation learning assemble estimating 6d pose robotic objectobject manipulation learning affordance space physical world visionbased robotic object manipulation sensor fusion listereo generate dense depth map lidar stereo imagery monocular visualinertial odometry lowtextured environment smooth gradient fully dense direct filtering approach gated recurrent fusion learn driving behaviour temporal multimodal data cooperative visualinertial odometry analysis singularity degeneracy minimal case lightweight accurate localization algorithm using multiple inertial measurement unit accelerating estimation metabolic cost using signal derivative implication optimization evaluation wearable robot deep depth fusion black transparent reective textureless object lidarenhanced structurefrommotion low latency lowlevel sensor fusion automotive usecases spatiotemporal cameralidar calibration targetless structureless approach robotassisted wearable sensormediated autonomous gait analysis gaussian process preintegration inertialaided state estimation code unscented kalman filtering manifold ukfm efficient precise sensor fusion nonlinear system outofsequence measurement example mobile robotics uno uncertaintyaware noisyor multimodal fusion unanticipated input degradation intermittent gpsaided vio online initialization calibration mathematical framework imu error propagation application preintegration radarinertial egovelocity estimation visually degradedenvironments observability analysis flight state estimation uavs experimental validation openvins research platform visualinertial estimation decentralized collaborative state estimation aided inertial navigation analytic combined imu integration aci2 visual inertial navigation secondorder kinematics floatingbase robot using redundant acceleration feedback artificial sensory skin clockbased time synchronization eventbased camera dataset acquisition platform compliance impedance control hierarchical impedancebased tracking control kinematically redundant robot positionbased impedance control 2dof compliant manipulator facade cleaning operation robust locally guided peginhole impedancecontrolled robot modelfree friction observer flexible joint robot torque measurement necessary sufficient condition passivity impedance rendering velocitysourced series elastic actuation design spatial admittance forceguided assembly polyhedral part single point frictional contact model predictive impedance control kinematic modeling compliance modulation redundant manipulator bracing constraint successive stiffness increment time domain passivity approach stable high bandwidth control series elastic actuator armhand motionforce coordination physical interaction nonflat surface using dynamical system toward compliant robotic massage control scheme novel dmprobot coupling achieving compliance tracking accuracy unknown task dynamic model uncertainty biosignal enhanced adaptive impedance controller lower limb exoskeleton visual learning vid2param modelling dynamic parameter video safe robot navigation via multimodal anomaly detection mavric morphologyagnostic visual robotic control mfusenet robust depth estimation learned multiscopic fusion deceiving imagetoimage translation network autonomous driving adversarial perturbation selfsupervised learning state estimation manipulating deformable linear object selfsupervised correspondence visuomotor policy learning differentiable mapping network learning structured map representation sparse visual localization attentive tasknet self supervised taskattention network imitation learning using video demonstration openlorisobject robotic vision dataset benchmark lifelong deep learning unsupervised depth completion visual inertial odometry geometric pretraining monocular depth estimation soft sensor actuator active acoustic contact sensing soft pneumatic actuator pneuactii hybrid manufactured electromagnetically stealth pneumatic stepper actuator bidirectional 3dprinted soft pneumatic actuator graphitebased flex sensor versatile grasping proprioceptive bellow pb actuator position feedback force estimation automatic design soft dielectric elastomer actuator optimal spatial electric field stochastic control orientation transportation microscopic object using multiple optically driven robotic fingertip soft fingertip adaptive sensing active deformation robust grasping delicate object sensorization continuum body gripper high force delicate object grasping eyeinhand visual servoing enhanced sparse strain measurement soft continuum robot soft gripper retractable nail advanced grasping manipulation sensorized hybrid gripper evaluate grasping quality based largest minimum wrench soft pressure sensor skin hand wrist orthoses characterisation selflocking highcontraction electroribbon actuator helically wrapped supercoiled polymer hwscp artificial muscle design characterization modeling variable stiffness soft continuum robot based precharged air particle jamming origami pneumaticcabledriven hybrid linear actuator combined structure origami chamber deployable mechanism simple lowhysteresis foldable fabric pneumatic artificial muscle flat inflatable artificial muscle large stroke adjustable forcelength relation joint rotation angle sensing flexible endoscopic surgical robot soft round high resolution tactile fingertip sensor dexterous robotic manipulation creating soft tactile skin employing fluorescence based optical sensing foottile rugged foot sensor force center pressure sensing soft terrain visionbased soft somatosensory approach distributed pressure temperature sensing stretchable capacitive sensory skin exploring cluttered environment wearable robot swarmrail novel overhead robot system indoor transport mobile manipulation fast local planning mapping unknown offroad terrain multifunctional 3dof wearable supernumerary robotic arm based magnetorheological clutch leveraging human operator design control supernumerary robotic limb revisiting scaling law robotic mobility granular medium learning control policy fall prevention assistive walking device assistive force belttype hip assist suit lifting swing leg walking soft pneumatic system interface pressure regulation automated handsfree donning robotic prosthesis automated detection soleus concentric contraction variable gait condition improved exosuit control soft sensing shirt shoulder kinematics estimation characterizing torso stiffness female adolescent without scoliosis cognitive humanrobot interaction scaled autonomy enabling human operator control robot fleet actorcritic approach legible robot motion planner may draw attention initial lesson largescale generative mark maker intuitive 3d control quadrotor user proximity pointing gesture joint inference state robot knowledge human falsebeliefs visualaudio cognitive architecture autonomous learning face localisation humanoid robot motion reasoning goalbased imitation learning flexible online adaptation learning strategy using eegbased reinforcement signal realworld robotic application objectoriented semantic graph based natural question generation towards safe humanrobot collaboration using deep reinforcement learning deep compositional robotic planner follow natural language command learning user preference correction state lattice robotics agriculture forestry visual servoingbased navigation monitoring rowcrop field optimal routing schedule robot operating aislestructures time optimal motion planning zmp stability constraint timber manipulation plucking motion tea harvesting robot using probabilistic movement primitive sloam semantic lidar odometry mapping forest inventory push drag active obstacle separation method fruit harvesting robot calibration identification unified intrinsic extrinsic camera lidar calibration uncertainty acdcc accurate calibration dynamic camera cluster visual slam analytic plane covariance construction precise planaritybased extrinsic calibration camera lidar stable adaptive observer hardiron softiron bias calibration compensation twoaxis magnetometer theory experimental evaluation extrinsic calibration eyeinhand 2d lidar sensor unstructured environment using icp geometric robot dynamic identification convex programming approach novel calibration method camera 3d lidar infrared image online cameralidar calibration sensor semantic information precise 3d calibration wafer handling robot visual detection tracking ellipticshape wafer globally optimal relative pose estimation camera selfie stick online calibration exterior orientation vehiclemounted surroundview camera system learning camera miscalibration detection industrial robot endeffector wrist module kinematically redundant manipulation armtype robot robust path following tractortrailers system gpsdenied environment online trajectory planning industrial tractor towing multiple full trailer towards efficient human robot collaboration robust plan recognition trajectory prediction collaborative humanrobot framework delicate sanding complex shape surface external force estimation industrial robot flexible joint robotic general part feeder binpicking regrasping kitting planning learning reasoning framework robot truck unloading evaluation perception latency humanrobot collaborative environment assembly randomly placed part realized using one robot arm general paralleljaw gripper drivebased vibration damping control robot machining toward fast optimal robotic pickandplace moving conveyor biomimetics bioinspired transportation network scalable swarm foraging stance control inspired cerebellum stabilizes reflexbased locomotion hyq robot error estimation correction spiking neural network map formation neuromorphic hardware hybrid compact neural architecture visual place recognition musculoskeletal autoencoder unified online acquisition method intersensory network state estimation control simulation musculoskeletal humanoid snakeinspired kirigami skin lateral undulation soft snake robot bioinspired distance estimation using selfinduced acoustic signature motorpropeller system bioinspired 3dof lightweight manipulator tensegrity xjoints lobsterinspired antagonistic actuation mechanism towards bending module emulating duration curvature coral snake antipredator thrashing behavior using softrobotic platform directional mechanical impedance human ankle standing active muscle insectcomputer hybrid robot achieves walking gait rarely seen nature replacing anisotropic natural leg spine isotropic artificial leg spine robustadaptive control robotic system adaptive visual shock absorber visualbased maxwell model using magnetic gear slipbased nonlinear recursive backstepping path following controller autonomous ground vehicle fast safe pathfollowing control using statedependent directional metric backlashcompensated active disturbance rejection control nonlinear multiinput series elastic actuator generalized homogenization linear quadrotor controller coordinated optical tweezing manipulation multiple microscopic object stochastic perturbation contact surface estimation via hapic perception local policy optimization trajectorycentric reinforcement learning automatic snake gait generation using model predictive control safe fast tracking robot manipulator robust mpc neural network control 3d pathfollowing using mrac millimeterscale spiraltype magnetic robot adaptive modelbased myoelectric control soft wearable arm exosuit space robotics automation planetary rover exploration combining remote situ measurement active spectroscopic mapping magnetic docking mechanism freeflying space robot spherical surface barefoot rover sensorembedded rover wheel demonstrating insitu engineering science extraction using machine learning deep learning spacecraft pose estimation photorealistic rendering concurrent parameter identification control freefloating robotic system onorbit servicing dual quaternionbased discrete variational approach accurate online inertial parameter estimation freeflying robot perception grasping manipulation transferable task execution pixel deep planning domain learning depth poking learning estimate depth selfsupervised grasping online learning object representation appearance space feature alignment visual prediction prior articulated object interaction mtdssd deconvolutional single shot detector using multi task learning object detection segmentation grasping detection using synthetic data deep network recognize primitive shape object grasping realtime highly accurate robotic grasp detection using fully convolutional neural network rotation ensemble module form2fit learning shape prior generalizable assembly disassembly learning rope manipulation policy using dense object descriptor trained synthetic depth data efficient two step optimization large embedded deformation graph based slam cameratorobot pose estimation single image digit novel design lowcost compact highresolution tactile sensor application inhand manipulation lyrn lyapunov reaching network realtime closed loop approach monocular vision object finding cluttered scene using interactive perception multimodal perception transfer learning grasping transparent specular object ccan constraint coattention network instance grasping rlbench robot learning benchmark learning environment learning taskoriented grasping human activity datasets inferring material property granular medium robotic task keto learning keypoint representation tool manipulation learning see learning act visual pretraining manipulation learning continuous 3d reconstruction geometrically aware grasping contactbased inhand pose estimation using particle filtering single multitask deep neural network postprocessing object detection reasoning robotic grasp detection inhand object pose tracking via contact feedback gpuaccelerated robotic simulation robust occlusionaware pose estimation object grasped adaptive hand robust 6d object pose estimation learning rgbd feature split deep qlearning robust object singulation 6dof grasping targetdriven object manipulation clutter single shot 6d object pose estimation humanoid robot hrp4 walk soft foot study sparse hierarchical inverse kinematics algorithm humanoid robot inferring geometric nullspace robot skill human demonstration dynamical system approach adaptive grasping navigation comanipulation humanoid robot humanoid robot aircraft manufacturing multimode teleoperation framework humanoid locomanipulation balance humanoid robot mix fixed sliding multicontact scenario fast wholebody motion control humanoid robot inertia constraint sl1m sparse l1norm minimization contact planning uneven terrain finding locomanipulation plan quickly locomotion constrained manifold forcebased control bipedal balancing dynamic terrain tallahassee cassie robotic platform simultaneous control framework humanoid tracking human movement interacting wearable assistive device force control dynamic control rigid pneumatic gripper control framework definition overcome positioninteraction dynamic uncertainty forcecontrolled task identification compliant contact parameter admittance force modulation nonstationary compliant surface convex controller synthesis robot contact force adaptation contact task dynamical system sensitivity ellipsoid force control magnetic robot localization uncertainty semantic scene understanding highly parallelizable plane extraction organized point cloud using spherical convex hull boosting realtime driving scene parsing shared semantics cnnbased lidar point cloud denoising adverse weather viewinvariant loop closure oriented semantic landmark semantic foreground inpainting weak supervision fast panoptic segmentation network weakly supervised silhouettebased semantic scene change detection 3dcfs fast robust joint 3d semanticinstance segmentation via coupled feature selection who2com collaborative perception via learnable handshake communication comparing viewbased mapbased semantic labelling realtime slam generative modeling environment scene grammar variational inference shopvrb visual reasoning benchmark object perception social humanrobot interaction simultaneous learning human pose object cue realtime activity recognition demonstration hospital receptionist robot extended hybrid code network trust user study robot mediation support group group split merge prediction 3d convolutional network thr humanrobot navigation data collection accurate motion trajectory dataset socially assistive infantrobot interaction using robot encourage infant legmotion realtime continuous hand motion myoelectric decoding automated data labeling towards proactive navigation pedestrianvehicle cooperation based behavioral model studying navigation form interaction design approach social robot navigation method robot plan model generation execution natural language interface maple navigation among dynamic socialsafetyawareness reinforcement learning approach 2d laser scan people adaptive sidebyside model evolved accompany group people social robot biologicallyinspired robot coronal plane spine twisting composes shape adjust energy landscape grounded reorientation significance compliance joint dynamic slip resistance bioinspired hoof motion design snake robot negotiating complicated pipe structure constant diameter neuroinspired computational model visually guided robotic lamprey using frame event based camera untethered flight atscale dualmotor hummingbird robot bioinspired decoupled wing modelbased feedback control live zebrafish behavior via interaction robotic replica steering control magnetic helical swimmer swirling flow due confinement sim2real gap nonmonotonic robot complexity morphologyintheloop flapping wing design linearized model ornithopter gliding flight experiment simulation towards biomimicry batstyle perching maneuver structure manipulation inertial dynamic bioinspired object motion filter basis obstacle negotiation micro aerial system design architecture arcsnake archimedes screwpropelled serpentine robot robotics agriculture construction mining gprbased subsurface object detection reconstruction using random motion depthnet datadriven approach prediction optimal bucketfilling control autonomous excavator realtime stereo visual servoing rose pruning robotic arm canopybased monte carlo localization orchard using topview imagery infield grape cluster size assessment vine yield estimation using mobile robot consumer level rgbd camera autonomous excavation rock using gaussian process model unscented kalman filter kinematics sliplimiting controller redundant linesuspended robot application lineranger interval search genetic algorithm based trajectory solve inverse kinematics redundant manipulator application analytical expression serial manipulator jacobians highorder derivative based lie theory inverse kinematics serial kinematic chain via sum square optimization multitask closedloop inverse kinematics stability semidefinite programming stablebydesign kinematic control based optimization robot safety securing industrial operator collaborative robot simulation experimental validation carpentry task learning shapebased representation visual localization extremely changing condition trajectory planning safety guaranty multirotor based forward backward reachability analysis hamiltonjacobi reachabilitybased framework predicting analyzing human motion safe planning enhancing privacy robotics via judicious sensor selection robust model predictive shielding safe reinforcement learning stochastic dynamic swarm segregation heterogeneous swarm robot curve fast accurate scalable probabilistic samplebased approach counting swarm size bayes bot collective bayesian decisionmaking decentralized robot swarm supervisory control robot swarm using public event planetary exploration robot team statisticsbased automated control swarm paramagnetic nanoparticles 2d space simulation animation automatic tool gazebo world construction grayscale image 3d solid model gazebo plugin simulate arva sensor chair imagining affordances using simulation articulated human body toward simtoreal directional semantic grasping learning collaborate simulation robotassisted dressing realtime simulation thinshell deformable material using cnnbased mesh embedding reinforcement learning robotics dynamic actoradvisor programming scalable safe reinforcement learning discrete deep reinforcement learning maple navigation learning multirobot decentralized macroactionbased policy via centralized qnet robust modelfree reinforcement learning multiobjective bayesian optimization motor synergy development highperforming deep reinforcement learning algorithm barriercertified adaptive reinforcement learning application brushbot navigation simple reactive neural network behaviourbased reinforcement learning predicting optimal value function interpolating reward function scalarized multiobjective reinforcement learning integrated momentbased lgmd deep reinforcement learning uav obstacle avoidance interactive reinforcement learning inaccurate feedback guided uncertaintyaware policy optimization combining modelfree modelbased strategy sampleefficient learning highspeed autonomous drifting deep reinforcement learning manipulation planning nonprehensile manipulation clutter humanintheloop puzzleflex kinematic motion chain loose joint accurate visionbased manipulation contact reasoning probabilistic framework constrained manipulation task motion planning uncertainty planning selective physicsbased simulation manipulation among movable object hybrid differential dynamic programming planar manipulation primitive humanlike planning reaching cluttered environment relocate object rearrangement inside cluttered confined environment robotic manipulation autonomous modification unstructured environment found material tethered tool manipulation planning cable maneuvering optimizationbased posture generation wholebody contact motion contact point search body surface realtime conflict resolution taskconstrained manipulator motion unforeseen dynamic environment contact modeling interaction stability analysis inputoutput viewpoint improving contact instant detection sensing antenna using supertwisting algorithm 6dfc efficiently planning soft nonplanar area contact grasp using 6d friction cone longhorizon prediction uncertainty propagation residual point contact learner versatile trajectory optimization using lcp wheel model dynamic vehicle maneuver transitionaware method simulation compliant contact regularized friction robotics hazardous field single actuator peristaltic robot subsurface exploration device emplacement improving visual feature extraction glacial environment unmanned aerial vehicle based hazardous material response informationtheoretic hazardous source search reconstruction planning maximummanipulability cutting path robot riskawareness formal risk reasoning planning experimental evaluation characterization radioactive source effect robot visual localization mapping dynamic dynamic modeling robotic manipulator accuracy evaluation realrobot dataset assessing transferability learned dynamic model magnet discovering multiagent interaction dynamic using neural network modulation robot orientation state via legobstacle contact position beyond basin attraction quantifying robustness natural dynamic stable parking control robot astronaut space station based human dynamic product design development prototyping development robotic system automated decaking 3dprinted part novel solar tracker driven wave idea implementation design implementation hydrauliccable driven manipulator disaster response operation design expressive mechatronic chordophone multi directional piezoelectric plate energy harvester designed topology optimization algorithm omburo novel unicycle robot active omnidirectional wheel cellular modular robot selfreconfiguration response fault modular aerial system recognition reconfiguration latticebased cellular structure simple robot fast configuration space algorithm variable topology truss modular robot modquaddof novel yaw actuation modular quadrotors actuation fault tolerance approach reconfiguration planning modular selffolding robot parallel permutation linear fullresolution reconfiguration heterogeneous slidingonly cubic modular robot performance evaluation benchmarking determining improving localization accuracy apriltag detection change optimal value precalculated metric flexible method performance evaluation robot localization quantifying good seamanship autonomous surface vessel performance evaluation actionconditioned benchmarking robotic video prediction model comparative study performance indicator wheeled robot traversing obstacle aerial system application morphable aerialaquatic quadrotor coupled symmetric thrust vectoring autonomous intercept drone imagebased visual servo realtime optimal trajectory generation control multirotor suspended load obstacle avoidance wildfire fighting unmanned aerial system exploiting timevarying mass human control multiple quadcopters cablesuspended payload system dronument system reliable deployment micro aerial vehicle dark area large historical monument robust realtime uav replanning using guided gradientbased optimization topological path learningbased path planning autonomous exploration subterranean environment visualinertial telepresence aerial manipulation distributed rotorbased vibration suppression flexible object transport manipulation aerial manipulation using model predictive control opening hinged door integrated motion planner realtime aerial videography drone dense environment stable control climbing descending flight upper wall using ceiling effect model based aerodynamics motion primitivesbased path planning fast agile exploration using aerial robot unsupervised anomaly detection selfflying delivery drone keyfilteraware realtime uav object tracking aerial regrasping pivoting transformable multilink aerial robot grounding language landmark arbitrary outdoor environment learning adaptive system manga method agnostic neuralpolicy generalization adaptation fast adaptation deep reinforcement learningbased navigation skill human preference modelbased generalization parameter uncertainty using path integral control memory motion warmstarting trajectory optimization safety augmented value estimation demonstration saved safe deep modelbased rl sparse cost robotic task variational inference mixture model approximation application robotics preferencebased learning exoskeleton gait optimization adaptive neural trajectory tracking control flexiblejoint robot online learning bicf learning bidirectional incongruityaware correlation filter efficient uav object tracking adaptive unknown object rearrangement using lowcost tabletop robot unsupervised learning exploration reachable outcome space contextaware cost shaping reduce impact model error safe receding horizon control contextaware task execution using apprenticeship learning hierarchical interestdriven associative goal babbling efficient bootstrapping sensorimotor skill robotsupervised learning object segmentation gradient logbased active learning semantic segmentation crop weed agricultural robot learning walk warmstarting optimal control solver memory motion feedback linearization unknown system via reinforcement learning longterm robot navigation indoor environment estimating pattern traversability change sampleandcomputationefficient probabilistic model predictive control random feature sampleefficient robot motion learning using gaussian process latent variable model iterative learning based feedforward control transition biplanequadrotor tailsitter uas reinforcement learning adaptive illumination xrays efficient update data association mixture gaussian process surgical robotics laparascopy handeye calibration surgical instrument robotic surgery using interactive manipulation realtime data driven precision estimator ravenii surgical robot end effector position visionbased dynamic virtual fixture tool collision avoidance robotic surgery experimental comparison towards autonomous camera navigation optimize training robot assisted surgery temporal segmentation surgical subtasks deep learning multiple data source controlling assistive robot learned latent action surgical robotics laparoscopy ii super surgical perception framework endoscopic tissue manipulation surgical robotics multitask recurrent neural network surgical gesture recognition progress prediction neural network based inverse dynamic identification external force estimation da vinci research kit visual servo 6dof robotic stereo flexible endoscope based da vinci research kit dvrk system reflectivear display interaction methodology virtualtoreal alignment medical robotics surgical robotics steerable cathetersneedles aortic 3d deformation reconstruction using 2d xray fluoroscopy 3d preoperative data endovascular intervention design kinematic modeling novel steerable needle imageguided insertion robotic needle insertion moving soft tissue using constraintbased inverse finite element simulation collaborative robotassisted endovascular catheterization withgenerative adversarial imitation learning novel sensing method detect tissue boundary robotic needle insertion based laser doppler flowmetry ga3c reinforcement learning surgical steerable catheter path planning path planning multiple mobile robot agent online trajectory generation distributed model predictive control multirobot motion planning oneshot multipath planning robotic application using fully convolutional network walk stop count swap decentralized multiagent path finding theoretical guarantee efficient iterative linearquadratic approximation nonlinear multiplayer generalsum differential game online motion planning deforming maneuvering manipulation multilinked aerial robot based differential kinematics ddm fast nearoptimal multirobot path planning using diversifiedpath optimal subproblem solution database heuristic ubat jointly optimizing uav trajectory placement battery swap station efficient multiagent trajectory planning feasibility guarantee using relative bernstein polynomial optimal sequential task assignment path finding multiagent robotic assembly planning cooperative multirobot navigation dynamic environment deep reinforcement learning adaptive directional path planner realtime energyefficient robust navigation mobile robot distributed state estimation using intermittently connected robot network optimization optimal control wholebody motion tracking quadrupedonwheel robot via compactform controller improved prioritized optimization optimal control energyrecycling actuator mobile robotics application realtime nonlinear model predictive control robot using graphic processing unit nmpc approach using convex inner approximation online motion planning guaranteed collision avoidance multicontact heavy object pushing centaurtype humanoid robot planning control real demonstrator hierarchical stochastic optimization application parameter tuning electronically controlled transmission targeted drug delivery algorithmic method collecting swarm particle uniform external force virtual point control strategy power optimization trajectory planning autonomous mobile robot enhancing bilevel optimization uav timeoptimal trajectoryusing duality gap approach constrained samplingbased trajectory optimization using stochasticapproximation learning control policy optimal trajectory crocoddyl efficient versatile framework multicontact optimal control pathfollowing model predictive control ballbots underactuated waypoint trajectory optimization light painting photography wholebody walking generation using contact parametrization nonlinear trajectory optimization approach controlling fast height variation actively articulated wheeled humanoid robot using center mass trajectory contactaware controller design complementarity system trajectory optimization robot regenerative drive system numerical experimental result exploiting sparsity robot trajectory optimization direct collocation geometric algorithm biconvex approximation nonholonomic trajectory optimization fast versatile openloop stable running behavior proprioceptiveonly sensing using modelbased optimization wasserstein distributionally robust motion planning control safety constraint using conditional valueatrisk one robot many task versatile codesign stochastic programming inverse optimal control multiphase cost function grasping action image representation learning deep grasping policy zero real world data high accuracy efficiency grasp pose detection scheme dense prediction transferable active grasping real embodied dataset pointnet grasping learning endtoend spatial grasp generation algorithm sparse point cloud unigrasp learning unified model grasp multifingered robotic hand grasp stacking via deep reinforcement learning cage contextaware grasping engine time optimal motion planning admittance control cooperative grasping jammingfree immobilizing grasp using dualfriction robotic fingertip forceguided highprecision grasping control fragile deformable object using semgbased force prediction grasp like pro grasp unknown object robotic hand based skilled human expertise learning generate 6dof grasp pose reachability awareness enhancing grasp pose computation gripper workspace sphere minimal work grasp quality metric deformable hollow object hierarchical 6dof grasping approaching direction selection geometric characterization twofinger basket grasp 2d object contact space formulation multilevel optimization framework simultaneous grasping motion planning grasping fragile object using stressminimization metric grasp control enhancing dexterity parallel grippers theoretical derivation realization adaptive grasping based rotational incipient slip detection grasp state assessment deformable object using visualtactile fusion perception beyond topgrasps scene completion dexnet ar distributed deep grasp planning using commodity cellphone augmented reality app omnidirectional vision omnislam omnidirectional localization dense mapping widebaseline multicamera system room object recognition indoor panoramic image fisheyedistancenet selfsupervised scaleaware distance estimation using monocular fisheye camera autonomous driving 360sdnet 360 stereo depth estimation learnable cost volume omnidirectional depth extension network 3d orientation estimation vanishing point extraction single panorama using convolutional neural network force tactile sensing lowcost gelsight uv marking feature extraction object using alexnet optical flow without 3d image reconstruction evaluation noncollocated force feedback driven signalindependent noise vibrationbased multiaxis force sensing design characterization modeling tactile sensing based fingertip suction flow submerged dexterous manipulation discrete bimanual manipulation wrench balancing shear torsion pressure tactile sensor via plastic optofiber guided imaging dynamically reconfigurable tactile sensor robotic manipulation neurotac neuromorphic optical tactile sensor applied texture recognition reducing uncertainty pose estimation complex contact via force forecast comparison constrained unconstrained human grasp force using fingernail imaging visual servoing ertbased robotic skin sparsely distributed electrode structure fabrication dnnbased signal processing fbgbased triaxial force sensor integrated eccentrically configured imaging probe endoluminal optical biopsy calibrating soft ertbased tactile sensor multiphysics model simtoreal transfer learning simtoreal transfer optical tactile sensing semiempirical simulation learned force response model heterogeneous elastic object lowcost fiducialbased 6axis forcetorque sensor curvature sensing spherical tactile sensor based colorinterference marker array centerofmassbased robust grasp planning unknown object using tactilevisual sensor omnitact multidirectional highresolution touch sensor highly sensitive bioinspired sensor fine surface exploration characterization implementing tactile proximity sensing crack detection novel proximity sensor realizing tactile sense suction cup visualbased navigation exploring performance bound visual place recognition using extended precision deep reinforcement learning instruction following visual navigation 3d mazelike environment aggressive perceptionaware navigation using deep optical flow dynamic pixelmpc visualinertial mapping nonlinear factor recovery interactive gibson benchmark benchmark interactive navigation cluttered environment highly robust visual place recognition spatial matching cnn feature robust efficient estimation absolute camera pose monocular visual odometry robust visionbased obstacle avoidance micro aerial vehicle dynamic environment proximity estimation using vision feature computed sensor efficient globallyoptimal correspondenceless visual odometry planar ground vehicle egoteb egocentric perception space navigation using timedelasticbands graduated nonconvexity robust spatial perception nonminimal solver global outlier rejection reliable frametoframe motion estimation vehiclemounted surroundview camera system enabling topological planning monocular vision deepmel compiling visual multiexperience localization deep neural network snapnav learning maple visual navigationwith sparse directional guidance visual reference kimera opensource library realtime metricsemantic localization mapping citylearn diverse realworld environment sampleefficient navigation policy learning constrained filteringbased fusion image event inertial measurement pose estimation schmidtekfbased visualinertial moving object tracking learning view target invariant visual servoing navigation tightlycoupled singleanchor ultrawidebandaided monocular visual odometry system scaling local control largescale topological navigation zeroshot imitation learning demonstration legged robot visual navigation soft robot application high resolution soft tactile interface physical humanrobot interaction learningbased fingertip force estimation soft wearable hand robot tendonsheath mechanism autonomous reversible adhesion using elastomeric suction cup invivo medical treatment design inflatable wrinkle actuator fast inflationdeflation response wearable suit design validation soft anklefoot orthosis exosuit inversion eversion support vine robot design teleoperation deployment navigation exploration pressuredriven manipulator variable stiffness structure 3d electromagnetic reconfiguration enabled soft continuum robot valens design novel variable length nested soft arm programmably compliant origami mechanism dynamically dexterous robot human interface teleoperated object manipulation soft growing robot prosthetics exoskeleton closedloop ergonomic control prosthetic wrist rotation comparison online algorithm tracking multiple magnetic target myokinetic control interface simpa softgrasp infant myoelectric prosthetic arm backdrivable fullyportable pneumatic back support exoskeleton lifting assistance clinical readiness myoelectric postural control algorithm person transradial amputation force control seabased exoskeleton multimode humanrobot interaction velocity field based activeassistive control upper limb rehabilitation exoskeleton robot design development control tendonactuated exoskeleton wrist rehabilitation training impedance control transfemoral prosthesis using continuously varying ankle impedance multiple equilibrium towards variable assistance lower body exoskeleton offline assistance optimization soft exosuit augmenting ankle power stroke survivor walking gait pattern generation based basis function interpolation twin lowerlimb exoskeleton modulating hip stiffness robotic exoskeleton immediately change gait swingassist enhancing stair ambulation primarilypassive knee prosthesis proofofconcept pneumatic ankle foot orthosis powered custom compressor drop foot correction knowledgeguided reinforcement learning control robotic lower limb prosthesis development twisted string actuatorbased exoskeleton hip joint assistance lifting task novel portable lower limb exoskeleton gravity compensation walking humancentered robotics humancentric active perception autonomous observation prediction human fullbody movement motion optimization recurrent neural network predicting optimizing ergonomics physical humanrobot cooperation task active reward learning corobotic vision based exploration bandwidth limited environment characterizing user response failure aerial autonomous system varipath database modelling variance human pathway manual hrc process heavyduty robot congestionaware evacuation routing using augmented reality device humanrobot interaction robotic manipulator programming mixed reality heart rate sensing robot mounted mmwave radar vibero vibrotactile stiffness perception interface virtual reality detachable body impact binocular disparity vibrotactile feedback copresence task prediction gait cycle percentage using instrumented shoe artificial neural network perceptionaction coupling usage telepresence camera technical framework humanlike motion generation autonomous anthropomorphic redundant manipulator realtime adaptive assembly scheduling humanmultirobot collaboration according human capability microscopeguided autonomous clear corneal incision haptic interface teleoperation extensible continuum manipulator crowd simulation robot navigation crowd yet comparing remote learning technology university classroom bilateral haptic collaboration humanrobot cooperative task surgeonrobot shared control ergonomic pedicle screw fixation improving robotic cooking using batch bayesian optimization adaptive motion planning collaborative robot based prediction uncertainty enhance human safety work efficiency mechanism design quadrupedal locomotion uneven terrain sensorized foot exploiting singular configuration controllable lowpower friction enhancement unmanned ground vehicle flow compensation hydraulic directdrive system singlerod cylinder applied biped humanoid robot development visible manipulator multigear array mechanism laparoscopic surgery mechanically programmed miniature origami grippers design novel multipledof extendable arm rigid component inspired deployable origami structure compact lowcost robotic manipulator driven supercoiled polymer actuator wallmounted robot arm equipped 4dof yawpitchyawpitch counterbalance mechanism internallybalanced magnetic mechanism using magnetic spring producing large amplified clamping force continuum manipulator closedform inverse kinematics independently tunable stiffness shapemorphing wheel mechanism step climbing high speed locomotion design compensation control flexible instrument endoscopic surgery steerable burrowing robot design modeling experiment high force density gripping uv activation sacrificial adhesion stiffness optimization cable driven parallel robot additive manufacturing cami analysis design realization forcecompliant variable cam system using manipulation enable adaptive ground mobility sniaesse deformation mechanism enabled scalable multicopter design modeling flight performance validation marine robotics distance steering heuristic streamlinebased flow field planning enhancing coral reef monitoring utilizing deep semisupervised learning approach dobnet actively rejecting unknown excessive timevarying disturbance demonstration autonomous nested search local maximum using unmanned underwater vehicle towards distortion based underwater domed viewport camera calibration flapped paddlefin improving underwater propulsive efficiency oscillatory actuation bioinspired tensegrity fish robot hybrid underwater manipulator system intuitive musclelevel semg mapping control singlehydrophone lowcost underwater vehicle swarming 2d estimation velocity relative water tidal current based differential pressure autonomous underwater vehicle multisensor mapping low contrast quasidynamic large object gaussiandirichlet random field inference high dimensional categorical observation cooperative autonomy data fusion underwater surveillance networked auvs bidirectional resonant propulsion localization auvs hierarchical planning timedependent flow field marine robot navigation presence obstacle agile autonomous underwater vehicle underwater image superresolution using deep residual multiplier nonlinear synchronization control shortrange mobile sensor drifting geophysical flow compliant jointmechanism energybased safety series elastic actuation safe high impedance control serieselastic actuator disturbance observer variable stiffness spring energy storage application parallelmotion thick origami structure robotic design gyroscopic tensegrity robot search rescue robot realtime simulation nondeformable continuous track explicit consideration friction grouser geometry test slam subttunnel dataset metric mapping uncertainty measured markov decision process dynamic environment minimally actuated reconfigurable continuous track robot cooperative mapping target search unknown occupancy graph using mutual information flexible disaster response tomorrow final presentation evaluation centauro system human detection tracking natural scene facial expression recognitionwith dimension reduction network hand pose estimation handobject interaction case using augmented autoencoder accurate detection 3d localization human using novel yolobased rgbd fusion approach synthetic training data pedestrian planar lidar pose pplp network oriented pedestrian detection based planar lidar monocular image widerange load sensor using vacuum sealed quartz crystal resonator simultaneous biosignals measurement bed joint pedestrian detection risklevel prediction motionrepresentationbydetection omnidirectional vision audition robust sound source localization considering similarity backpropagation signal batvision learning see 3d spatial layout two ear selfsupervised learning alignment object sound variational fisheye stereo omniscape dataset corner layout endtoend layout recovery 360 image hydraulicpneumatic actuator far pneumatic artificial muscle biological muscle optically sensorized elastomer air chamber proprioceptive sensing soft pneumatic actuator compact mckibben muscle based bending actuator closetobody application assistive wearable robot proposal prototyping selfexcited pneumatic actuator using automaticflowpathswitchingmechanism development backdrivable servovalve feedback spring enhanced electrohydraulic torque actuator passivitybased robust compliance control electrohydraulic robot manipulator joint angle limit service robot shared control template assistive robotics enabling robot understand incomplete natural language instruction using commonsense reasoning holistic approach designing tabletop robot expressivity dirtnet visual dirt detection autonomous cleaning robot semantic linking map active visual object search alterego mobile robot functionally anthropomorphic upper body designed physical interaction robot perception active depth estimation stability analysis application valid comprehensive virtual aerial image dataset multiple sound source position estimation drone audition based data association sound source localization identification augmented lidar simulator autonomous driving purely imagebased pose stabilization nonholonomic mobile robot truly uncalibrated overhead camera distributed robot system distributed attackrobust submodular maximization multirobot planning multirobot patrolling adaptive opponent limited information distributed optimization nonlinear nongaussian communicationaware information using particle method experimental comparison decentralized task allocation algorithm imperfect communication parallel selfassembly smoresep modular robot scalable cooperative transport cablesuspended load uavs using distributed trajectory optimization range sensing superpixel sampler datadriven approach depth sampling reconstruction physicsbased simulation continuouswave lidar localization calibration tracking spatialtemporal multiplexing method dense 3d surface reconstruction moving object modeling architectural component largescale indoor space point cloud measurement pharao direct radar odometry using phase correlation deeptemporalseg temporally consistent semantic segmentation 3d lidar scan transfer learning selfsupervised simtoreal adaptation visual robotic manipulation meta reinforcement learning simtoreal domain adaptation variational autoregularized alignment simtoreal control experience selection using dynamic similarity efficient multisource transfer learning robot deepracer autonomous racing platform experimentation sim2real reinforcement learning crossdomain motion transfer via safetyaware shared latent space modeling flexible robot investigation multistable tensegrity robot applied tilting locomotion system novel articulated soft robot capable variable stiffness bistable structure modeling experiment swallowing disgorging characteristic underwater continuum manipulator salamanderbot softrigid composite continuum mobile robotto traverse complex environment flexure hingebased biomimetic thumb rollingsurface metacarpal joint stretchable kirigami component composite mesoscale robot field space robot ibex reconfigurable ground vehicle adaptive terrain navigation capability day night collaborative dynamic mapping unstructured environment based multimodal sensor generating locomotion effective wheel radius manipulation map iterative mar helicopterrover path planning longrange autonomous exploration gnc architecture planetary rover autonomous navigation mine tunnel exploration using multiple quadrupedal robot recognition learning face recognition unsupervisedly disentanglement selfaugmentation parc plan activity recognition component assistive robot imagebased place recognition bucolic environment across season semantic edge description multilayermultimodal fusion architecture pattern recognition natural manipulation percutaneous coronary intervention action description 2d human posture care facility cohog lightweight computeefficient trainingfree visual place recognition technique changing environment aerial system multirobots distributed consensus control multiple uavs constrained environment neuralswarm decentralized closeproximity multirotor control using learned interaction line coverage multiple robot visual coverage maintenance quadcopters using nonsmooth barrier function autonomous reflectance transformation imaging team unmanned aerial vehicle localization ionizing radiation source cooperating micro aerial vehicle pixel detector realtime biological cell manipulation design control piezo drill robotic piezodriven cell penetration modelbased robotic cell aspiration tackling nonlinear dynamic varying cell size automated highproductivity microinjection system adherent cell high fidelity force feedback facilitates manual injection biological sample dynamic response swimming paramecium induced local stimulation using threadlikemicrotool injection fluorescent microsensor specific cell laser manipulation heating multiple wavelength light cooperating robot correspondence identification collaborative robot perception maximin hypergraph matching scalable targettracking autonomous vehicle fleet dynamic weighted area assignment based particle filter active cooperative perception flying battery inflight battery switching increase multirotor flight time sensor assignment algorithm improve observability tracking target coordinated bayesianbased bioinspired plume source term estimation source seeking mobile robot rgbd perception cleargrasp 3d shape estimation transparent object manipulation 6d object pose regression via supervised learning point cloud ycbm multicamera rgbd dataset object recognition 6dof pose estimation depth based semantic scene completion position importance aware loss selfsupervised 6d object pose estimation robot manipulation panoptic 3d mapping object pose estimation using adaptively weighted semantic information task planning online trajectory planning combined trajectory optimization function approximation application exoskeleton atalante act perceive plan belief space robot localization decentralized task allocation multiagent system using decentralized genetic algorithm fast resilient manipulation planning target retrieval clutter multirobot task motion planning subtask dependency untethered soft millirobot magnetic actuation brainmachine interface accelerated robot learning via human brain signal muscle brain activation cylindrical rotary controller manipulation index finger thumb realtime robot reachtograsp movement control via eog emg signal decoding simultaneous estimation joint angle torque interaction environment using emg highdensity electromyography based control robotic device execution dexterous manipulation task role control framework continuous teleoperation brainmachine interfacedriven mobile robot tendonwire mechanism asynchronous decoupled control position stiffness spatial rcm tensegrity mechanism needle manipulation redundancy resolution integrated model predictive control cdprs concept implementation experiment mechanic tendon actuated multisection continuum arm trajectory optimization sixdof cablesuspended parallel robot dynamic motion beyond static workspace design tensegritybased manipulator comparison two approach respect remote center motion constraint accurate dynamic modeling twisted string actuator accounting string compliance friction agricultural automation intelligent spraying system deep learningbased semantic segmentation fruit tree orchard efficient planning control framework pruning fruit tree context dependant iterative parameter optimisation robust robot navigation combining domain adaptation spatial consistency unseen fruit counting quasiunsupervised approach navigation architecture ackermann vehicle precision farming minneapple benchmark dataset apple detection segmentation underactuated robot extending riemmanian motion policy class underactuated wheeledinvertedpendulum robot augmenting selfstability height control bernoulli ball via bangbang control singularityfree inverse dynamic underactuated system rotating mass coordinated particle relocation using finite static friction boundary wall robust capture unknown object highly underactuated gripper twister hand underactuated robotic gripper inspired origami twisted tower application robust autonomous navigation unmanned aerial vehicle uavs warehouse inventory application summit simulator urban driving massive mixed traffic modelbased reinforcement learning correction framework process control robotic wire arc additive manufacturing toward optimal fdm toolpath planning monte carlo tree search optimizing performance automation modular robot towards practical multiobject manipulation using relational reinforcement learning swarmmesh distributed data structure cooperative multirobot application robust sensorbased control avalanche victim search via robust observer reactive control metrictopological planning exploration information theoretic active exploration signed distance field adaptive integral inverse kinematics control lightweight compliant manipulator bayesian learningbased adaptive control safety critical system novel adaptive controller robot manipulator based active inference object detection segmentation categorization stillleben realistic scene synthesis deep learning robotics plane corner multipurpose primitive detection unorganized 3d point cloud addressing sim2real gap robotic 3d object classification generative approach towards improved robotic detection marine litter learning optimally segment point cloud cnn based road user detection using 3d radar cube pst900 rgbthermal calibration dataset segmentation network instance segmentation lidar point cloud generation object candidate simply looking around dilated point convolution receptive field size point convolution 3d point cloud waterobstacle separation refinement network unmanned surface vehicle dynamic anchor selection improving object localization 3d object detection tracking based streaming data objectcentric stereo matching 3d object detection relative confusion matrix tool ass classifiablility large scale picking application poseguided autoencoder featurebased refinement 6dof object pose regression primitect fast continuous hough voting primitive detection farseenet realtime semantic segmentation efficient multiscale context aggregation feature space superresolution aerial system perception autonomy poseestimatebased target tracking humanguided remote sensor mounting uav aerial singleview depth completion imageguided uncertainty estimation evdodgenet deep dynamic obstacle dodging event camera direct visualinertial egomotion estimation via iterated extended kalman filter robust uav system operation constrained environment training datasets machine learningbased visual relative localization microscale uavs fast frontierbased informationdriven autonomous exploration mav dynamic landing autonomous quadrotor moving platform turbulent wind condition crossdrone binocular coordination ground moving target tracking occlusionrich scenario direct nmpc poststall motion planning fixedwing uavs imubased inertia estimation quadrotor using newtoneuler dynamic flight envelope determination protection system fixedwing uavs auair multimodal unmanned aerial vehicle dataset low altitude traffic surveillance design autonomous stabilization ballistically launched multirotor asynchronous eventbased clustering tracking intrusion monitoring uas shift selective heading image translation onboard monocular optical flow estimator fast constantly rotating uavs flydar magnetometerbased high angular rate estimation gyro saturation slam nonlinear mpc motor failure identification recovery safe aggressive multicopter flight autonomous vehicle navigation autonomous navigation inclement weather based localizing ground penetrating radar robot navigation crowd graph convolutional network attention learned human gaze wall deadlock evasion control based rotation radius adjustment sociallyaware reactive obstacle avoidance strategy based limit cycle multihead attention multimodal joint vehicle motion forecasting temporal information integration video semantic segmentation mappredictive motion planning unknown environment using multiple short hop multicopter navigation inertial sensor efficient continuous approach informationtheoretic exploration featurebased underwater path planning approach using multiple perspective prior map automatic lidarcamera calibration extrinsic parameter using spherical target mapping unified framework piecewise semantic reconstruction dynamic scene via exploiting superpixel relation keyframebased dense mapping graph viewdependent local map informative path planning active mapping localization uncertainty ensemble sparse gaussian process expert implicit surface mapping streaming data robust method removing dynamic object point cloud skeletonbased conditionally independent gaussian process implicit surface fusion sparse dense 3d reconstruction motion estimation occupancy grid map stationary setting using recurrent neural network divide conquer method 3d registration inhomogeneous partially overlapping scan fourier mellin soft fm estimating motion uncertainty bayesian icp actively mapping industrial structure information gainbased planning quadruped robot efficient covisibilitybased image matching largescale sfm probabilistic tsdf fusion using bayesian deep learning dense 3d reconstruction single rgb camera volumetric albedo framework 3d imaging sonar reconstruction map management approach slam largescale indoor outdoor area hierarchical framework collaborative probabilistic semantic mapping autonomous navigation unknown environment using sparse kernelbased occupancy mapping hybrid topological 3d dense mapping autonomous exploration large indoor environment resolving marker pose ambiguity robust rotation averaging clique constraint computer vision robotic application realtime semantic stereo matching multitask learning single image depth estimation segmentation based unsupervised network learning transformable plannable se3 feature scene imitation mobile service robot multimodal multispectral imaging system small uavs unseen salient object discovery monocular robot vision corsnet 3d point cloud registration deep neural network anticipating start user interaction service robot wild spin detection robotic table tennis look listen act towards audiovisual embodied navigation autonomous tool construction gated graph neural network trainingset distillation realtime uav object tracking cnnbased simultaneous dehazing depth estimation ifnet illuminationinvariant feature network deeplearning assisted highresolution binocular stereo depth reconstruction leastsquares optimal relative planar motion vehiclemounted camera relative planar motion vehiclemounted camera single affine correspondence moving object detection visual odometry dynamic environment based occlusion accumulation lowrank matrix approximation approach multiway matching application multisensory data association humanoid bipedal locomotion lqrassisted wholebody control wheeled bipedal robot kinematic loop leveraging template anchor framework safe online robotic gait design unified push recovery fundamental inspiration human study nonholonomic virtual constraint design variableincline bipedal robotic walking mpc humanoid gait generation stability feasibility robust walking controller based online optimization ankle hip stepping strategy passive dynamic balancing walking actuated environment biped stabilization linear feedback variableheight inverted pendulum model stability criterion balanced steppable unbalanced state fullbody system implication robotic human gait material handling humanoid robot pushing cart using walking pattern based capture point interconnection damping assignment passivitybased control gait generation underactuated compasslike robot safetycritical control cassie bipedal robot riding hovershoes visionbased obstacle avoidance methodology incorporation arbitrarilyshaped foot passive bipedal walking dynamic experimental analysis structural vibration problem biped walking robot dynamic coupling indicator gait robustness underactuated biped robot zmp constraint restriction robust gait generation humanoid hybrid zero dynamic inspired feedback control policy design 3d bipedal locomotion using reinforcement learning optimal reducedorder modeling bipedal locomotion motion control antijackknife control tractortrailer vehicle via intrinsically stable mpc sensingaware model predictive pathfollowing control reversing general 2trailer carlike tractor offline practising runtime training framework autonomous motion control snake robot control differentially driven nonholonomic robot subject restricted wheel rotation inferring taskspace central pattern generator parameter closedloop control underactuated robot magnetically actuated simple millirobots complex navigation modular assembly dexterous manipulation magichand contextaware dexterous grasping using anthropomorphic robotic hand strategy roller chain assembly parallel jaw gripper distal hyperextension handy high range motion cluttered environment learning pregrasp manipulation object ungraspable pose objectlevel impedance control dexterous inhand manipulation picking thin object tiltandpivot manipulation application bin picking inhand manipulation object unknown shape learning hierarchical control robust inhand manipulation tactile dexterity manipulation primitive tactile feedback design rollerbased dexterous hand object grasping withinhand manipulation highresolution optical fiber shape sensing continuum robot comparative study local trajectory stabilization dexterous manipulation via piecewise affine approximation computer vision automation manufacturing monocular direct sparse localization prior 3d surfel map lin lidarinertial state estimator robust efficient navigation automated eyeinhand robot3d scanner calibration low stitching error monocular visual odometry using learned repeatability description interaction graph object importance estimation onroad driving video robotics inspection system detecting defect semispecular painted automotive surface visual servoing active deformation visual servoing soft object visual geometric skill inference watching human demonstration direct visual servoing frequency domain dfvs deep flow guided scene agnostic image based visual servoing photometric path planning visionbased navigation memory motion visual predictive control task soft robot material design designing ferromagnetic soft robot ferrosoro levelsetbased multiphysics topology optimization exoskeletoncovered soft finger visionbased proprioception tactile sensing tuning energy landscape soft robot fast strong motion rebound untethered origami jumping robot controllable jump height concentric precurved bellow new bending actuator soft robot design deployable soft robot plastic deformation kirigami structure selfexcited vibration valve induces traveling wave pneumatic soft mobile robot 1mmthick miniatured mobile soft robot mechanosensation multimodal locomotion anisotropic soft robot based 3d printed mesostructured material design modeling homogenization simulation 3dprinted electroactive hydraulic valve use soft robotic application design workspace characterisation malleable robot tristable soft robotic finger capable pinch wrap grasp dexterous tipextending robot variablelength shapelocking compliant electromagnetic actuator architecture soft robotics dynamically reconfigurable discrete distributed stiffness inflated beam robot retraction soft growing robot without buckling rehabilitation robotics motion intensity extraction scheme simultaneous recognition wristhand motion simultaneous online motion discrimination evaluation wholebody exercise synergy probe home rehabilitation iart learning demonstration assisted robotic therapy using lstm validation forward kinematics based controller mobile tethered pelvic assist device augment pelvic force walking temporal muscle synergy feature estimate effect shortterm rehabilitation sittostand poststroke patient model learning control paralyzed human arm functional electrical stimulation patientspecific voicecontrolled robotic flexotendon gloveii system spinal cord injury integration selfsealing suction cup flexotendon gloveii robotic exoskeleton system novel endeffector robot system enabling monitor upperextremity posture robotaided reaching movement optimal design novel 3dof orientational parallel mechanism pelvic assistance wheelchair approach based kinematic geometry screw theory using human rating feedback control supervised learning approach application rehabilitation robotics compliant humanoid moving toward rehabilitation application transparent integration realtime control wholebody motion generation virtual reality datadriven reinforcement learning walking assistance control lower limb exoskeleton hemiplegic patient effect visual anticipation floor compliance change human gait towards modelbased robotassisted rehabilitation visual positioning system indoor blind navigation outsoleembedded optoelectronic sensor measure shear ground reaction force locomotion bumpem opensource bumpemulation system studying human balance gait hybrid soft exoskeleton glove equipped telescopic extra thumb abduction capability physical humanrobot interaction transient behavior predictability manipulating complex object variablefractional order admittance controller phri assistive gym physic simulation framework assistive robotics learning wholebody humanrobot haptic interaction social context human preference using damping manage singularity physical humanrobot collaboration mocaman mobile reconfigurable collaborative robot assistant conjoined humanrobot action variable damping control robotic arm improve tradeoff agility stability reduce user effort robustness human manipulation dynamically complex object control contraction metric cooperative humanrobot grasping extended contact patch insight crutch analyzing role arm support robotassisted leg movement cognitive motor compliance intentional humanrobot interaction controlling upperlimb exoskeleton emg signal carrying unknown load learning grasping point garment manipulation robotassisted dressing tactoselector enhanced hierarchical fusion pbvs reactive skin control physical humanrobot interaction towards intelligent collaborative robotic system mixed case palletizing treadmill based three tether parallel robot evaluating auditory warning running evaluation humanrobot object comanipulation robot impedance control telerobotics teleoperation adaptive tactile telerobots dull dirty dangerous inaccessible task teleoperation framework mobile robot based shared control novel orientability index kinematic design remotarm haptic master large dexterous workspace enhancing transparency onomatopoeia passivitybased timedelayed teleoperation raven design simulation robot teleoperated microgravity rodent dissection time delay closing force loop enhance transparency timedelayed teleoperation evaluation exoskeletonbased bimanual teleoperation architecture independently passivated slave device handworn haptic interface drone teleoperation toward humanlike teleoperated robot motion performance perception choreographyinspired method static dynamic task rapid pose selection articulated robot helping robot learn humanrobot masterapprentice model using demonstration via virtual reality teleoperation framework interactive virtual fixture generation shared teleoperation unstructured environment wholebody bilateral teleoperation redundant aerial manipulator shared autonomous interface reducing physical effort robot teleoperation via human motion mapping dexpilot visionbased teleoperation dexterous robotic handarm system distributed winnertakeall teleoperation multirobot system enhanced teleoperation using autocomplete collision avoidance collisionfree navigation humancentered robot via markov game densecavoid realtime navigation dense crowd using anticipatory behavior deepcrashtest turning dashcam video virtual crash test automated driving system observerextended direct method collision monitoring robot manipulator using proprioception imu sensing dcad decentralized collision avoidance dynamic constraint agile quadrotor swarm forward kinematics kernel improved proxy collision checking local obstacleskirting path planning fast bisteerable rover using bziers curve collision avoidance proximity servoing redundant serial robot manipulator predicting obstacle footprint 2d occupancy map learning physical interaction path planning dynamic environment using generative rnns monte carlo tree search safetycritical rapid aerial exploration unknown environment reactive navigation nonparametric uncertainty hilbert space embedding probabilistic velocity obstacle contactbased bounding volume hierarchy assembly task construction bounding volume hierarchy triangle mesh mixed face size strategy automated dense parking navigate narrow lane multimodal trajectory prediction urban environment using geometric relationship vehicle lane online optimal motion generation guaranteed safety shared workspace episodic koopman learning nonlinear robot dynamic application fast multirotor landing micronano robot reconfigurable magnetic microswarm thrombolysis ultrasound imaging improving optical micromanipulation forcefeedback bilateral coupling maneuver micro scale steering actuation frequency control micro bristle robot scaling insectsize microrobot hamrvi hamrjr model predictive control obstacle avoidance inertia actuated afm probe inside scanning electron microscope doublemodal locomotion application soft cruciform thinfilm microrobot robotic control magnetic swarm ondemand intracellular measurement acoustofluidic tweezer 3d manipulation microparticles task space motion control afmbased nanorobot using optimal ultralimit archimedean spiral local scan kinematic model magneticmicrorobot swarm rotating magnetic dipole field magnetic millirobot swarm platform safety barrier certificate enabled lowcost test bed device rapid automated trimming insectsized flying robot eyeinhand 3d visual servoing helical swimmer using parallel mobile coil mobile paramagnetic nanoparticle swarm automatic shape deformation control magnetic miniature swimmer multiple flagellum design control largerange nilstiffness electromagnetic active force sensor modeling electromagnetic navigation system medical application using random forest artificial neural network automated tracking system head tail recognition timelapse observation freemoving c elegans aibased method towards adaptive benthic habitat mapping multispectral domain invariant image retrievalbased place recognition probabilistic effect prediction semantic augmentation physical simulation anytime integrated task motion policy stochastic environment contextaware human activity recognition interactive natural languagebased person search climbing robot ccrobotiii splittype wiredriven cable climbing robot cablestayed bridge inspection omnidirectional tractable three module robot practical climbing robot steel bridge inspection development wheeled wallclimbing robot shapeadaptive magnetic adhesion mechanism towards possibility motion planning control hybrid locomotion wheeledlegged robot navigation legged mobility dynamic climbing failure detection recovery algebraic fault detection identification rigid robot fault tolerance analysis hexarotor reconfigurable tilted rotor detecting execution anomaly oracle autonomy software robustness robot break active learning plant failure integrated dynamic fall protection recovery system twowheeled humanoid reliability validation learning enabled vehicle tracking learning predict spatiotemporal representation learning gan trained lstmlstm network belief regulated dual propagation net learning action effect group articulated object deep kinematic model kinematically feasible vehicle trajectory prediction human driver behavior prediction based urbanflow environment prediction sparse sample robotic information gathering predicting pushing action effect spatial object relation learning internal prediction model radar learning predict robust keypoints odometry estimation metric localisation radar spagnn spatiallyaware graph neural network relational behavior forecasting sensor data motion detector learning classagnostic scene dynamic sequence lidar point cloud real time trajectory prediction using deep conditional generative model ambiguity sequential data predicting uncertain future recurrent model eventbased spatiotemporal trajectory prediction icub pointofview learning motion planning learning key pose evaluation efficient multicontact motion planner differentiable gaussian process motion planning learn link learning critical region efficient planning constant velocity model teach u pedestrian motion prediction path planning local motion estimation scene compliant trajectory forecast agentcentric spatiotemporal grid datadriven planning framework robotic texture painting 3d surface learned critical probabilistic roadmaps robotic motion planning learning heuristic efficient graph search using neural network 3dcnn based heuristic guided taskspace planner faster motion planning learned sampling distribution efficient planning hybrid geometric objectlevel representation deep visual heuristic learning feasibility mixedinteger program manipulation planning motion control manipulator segmentation averaging semg muscle activation prior synergy extraction energyoptimal cooperative manipulation via provable internalforce regulation robot telekinesis application unimanual bimanual object manipulation technique robot control settheoretic approach multitask execution prioritization task space control articulated robot near kinematic singularity forward dynamic approach variable impedance control cartesian latent space avoiding obstacle null space computer vision medical robot attentionguided lightweight network realtime segmentation robotic surgical instrument automated robotic breast ultrasound acquisition using ultrasound feedback robust accurate 3d curve surface registration tangent normal vector single shot pose estimation surgical robot instrument shaft monocular endoscopic image endtoend realtime catheter segmentation optical flowguided warping endovascular intervention pathological airway segmentation cascaded neural network bronchoscopic navigation grippers endeffectors novel underactuated endeffector planar sequential grasping multiple object design analysis synergyinspired threefingered hand multiplexed manipulation versatile multimodal grasping via hybrid soft gripper modeling optimization experimentation paragripper inhand manipulation without parasitic rotation underactuated gecko adhesive gripper simple versatile grasp examining frictional behavior primitive contact geometry use robotic finger pad design 3dprinted assembly mechanism based special wooden joinery technique application robotic hand parallel gripper displacementmagnification mechanism extendable finger mechanism sheetbased gripper featuring passive pullin functionality bin picking picking thin flexible object origamiinspired variable friction surface increasing dexterity robotic grippers shape memory polymer adhesive gripper pickandplace application highpayload proprioceptive hybrid robotic gripper soft origamic actuator formal method robotics automation reality simulation reality robot illusion fundamental limit physical demonstration finding missing skill highlevel behavior nearoptimal reactive synthesis incorporating runtimeinformation control synthesis linear temporal logic specification using modelfree reinforcement learning framework formal verification behavior tree linear temporal logic safety assessment collaborative robotics automated formal verification parallel robot rmin fast collaborative underactuated parallel robot pickandplace operation highflexibility locomotion wholetorso control wheellegged robot challenging terrain prince tear large cabledriven parallel robot artistic exhibition singularity analysis reconfiguration mode 3crs parallel manipulator trajectory optimization class robot belonging constrained collaborative mobile agent ccma family multiaxis reaction system mar vibration control planar cabledriven parallel robot mechanism verification reconfiguration solution variable topology truss design experiment development body rotational wheeled robot verification effectiveness error bound pdcontrolled mechanical system bounded disturbance using interval arithmetic hardwareintheloop iterative optimal feedback control without modelbased future prediction analysis synthesis underactuated compliant mechanism based transmission property motion force radar sensor collaborative robotics fast simulation experimental validation model learning control sparse online locally adaptive regression using gaussian process bayesian robot model learning control disco double likelihoodfree inference stochastic control discovering interpretable dynamic sparsity promotion energy lagrangian online simultaneous semiparametric dynamic model learning sufficiently accurate model learning active learning dynamic datadriven control using koopman operator mobile manipulation towards plan transformation realworld mobile fetch place planning efficient robust base sequence mobile manipulator performing multiple pickandplace task towards mobile multitask manipulation confined integrated environment irregular object linear timevarying mpc nonprehensile object manipulation nonholonomic mobile robot mobile manipulation system oneshot teaching complex task home computer vision transportation 2d 3d linebased registration unknown association via mixedinteger programming efficient solution relative pose estimation common direction taskaware novelty detection visualbased deep learning autonomous system directshape direct photometric alignment shape prior visual vehicle pose shape estimation roadtext1k text detection recognition dataset driving video endtoend learning intervehicle distance relative velocity estimation ada monocular camera haptics haptic interface learning actionconditional model haptic texture generation noticeable difference joint torque feedback static pose design parallel haptic device gravity compensation using system weight enhanced haptic sensation using novel electrostatic vibration actuator frequency beating phenomenon electromagnetic haptic feedback system use graphical display using flat coil sensor array instrumented master tool manipulator mtm force feedback da vinci surgical robot visual tracking multiperson pose tracking using sequential monte carlo probabilistic neural pose predictor 4d generic video object proposal simultaneous tracking elasticity parameter estimation deformable object avot audiovisual object tracking multiple object robotics efficient pig counting crowd keypoints tracking spatialaware temporal response filtering 6pack categorylevel 6d pose tracker anchorbased keypoints multimodal tracking framework visual odometry challenging illumination condition realtime multidiver tracking reidentification underwater humanrobot collaboration autonomous tissue scanning freeform motion intraoperative tissue characterisation high speed three dimensional tracking swimming cell synchronous modulation tece camera tag lens track reconstruct reconstruct track pointtracknet endtoend network 3d object detection tracking point cloud planning scheduling coordination online scheduling algorithm humanrobot collaborative kitting modelfree approach metalevel control anytime algorithm simultaneous task allocation motion scheduling complex task executed multiple robot efficient planning highspeed mav flight unknown environment using online sparse topological graph evaluating adaptation performance hierarchical deep reinforcement learning approximation algorithm task allocation sequencing scheduling problem involving humanrobot team reactive sensorbased planning iteratorbased temporal logic task planning reactive temporal logic planning multiple robot unknown environment higher order function network view planning multiview reconstruction residual reactive navigation combining classical learned navigation strategy deployment unknown environment online grasp plan refinement reducing defect robotic layup composite prepreg sheet objectcentric task motion planning dynamic environment,"[('reinforcement', 'learning'), ('motion', 'planning')]"
PRBonn/bonnet,Python,bonnet opensource training deployment framework semantic segmentation robotics build status andres milioto university bonn new pytorch version go image cityscape cityscape urban scene understanding standalone video predictor 512x256px standalone video predictor 768x384px inception model standalone video predictor 1024x512px image person person segmentation uptown funk inception model image cwc crop v weed semantic segmentation node prediction video description code provides framework easily add architecture datasets order train deploy cnns robot contains full training pipeline python using tensorflow opencv also c apps deploy frozen protobuf standalone c library made way allows add backends tensorrt mvncs tensorflow tensorrt implemented keep way mostly interested deployment jetson drive platform specific need accept pull request network included based many architecture see exactly copy seen video run fast gpu cpu designed performance mind cost slight accuracy loss feel free use model implement architecture script tested following configuration x86 ubuntu 1604 nvidia geforce 940mx gpu nvidia384 cuda9 cudnn7 tf 17 tensorrt3 x86 ubuntu 1604 nvidia gtx1080ti gpu nvidia375 cuda9 cudnn7 tf 17 tensorrt3 x86 ubuntu 1604 1404 gpu tf 17 running cpu nhwc mode tensorrt support jetson tx2 full jetpack 32 also provide dockerfile make easy run without worrying dependency based official nvidiacuda image containing cuda9 cudnn7 order build run image support x11 display result run repo root directory nvidiadocker sh docker pull tano297bonnetcuda9cudnn7tf17trt304 nvidiadocker build bonnet nvidiadocker run ti rm e display v tmpx11unixtmpx11unix v homexauthorityhomedeveloperxauthority v homeuserdatashared nethost pidhost ipchost bonnet binbash v homeuserdatashare replaced point wherever store data trained model order include data inside container inferencetraining deployment deploycpp contains c code deployment robot full pipeline take image input produce pixelwise prediction output color mask depend problem includes standalone operation meant example usage build node take topic image outputstopics labeled mask colored labeled mask readme training trainpy contains python code easily build cnn graph tensorflow train generate trained model used deployment way interface tensorflow use complete python api easily work file augment datasets also contains apps using model includes ability save use frozen protobuf use network using tensorrt reduces time inference using nvidia gpus readme pretrained model model trained sample datasets use trainer deployer want take time write parser another dataset yaml file class color python script put data standard dataset format feel free create pull request gpus task interesting robot exploit gladly train whenever free gpu time server cityscape 512x256 link 768x384 link inceptionlike model 768x384 link mobilenetslike model 1024x512 link synthia 512x384 link 960x720 link person coco people 512x512 link cropweed cwc 512x384 link license software bonnet free software redistribute andor modify term gnu general public license published free software foundation either versionof license option later version bonnet distributed hope useful without warranty without even implied warranty merchantability fitness particular purpose see gnu general public license detail pretrained model pretrained model specific dataset keep copyright dataset cityscape link synthia link person link coco link cropweed cwc link citation use framework academic work please cite paper inproceedingsmilioto2019icra author milioto c stachniss title bonnet opensource training deployment framework semantic segmentation robotics using cnns booktitle proc ieee intl conf robotics automation icra year 2019 codeurl videourl network strongly based following architecture use academic work please give look paper cite think proper segnet link enet link erfnet link pspnet link useful github openai checkpointed gradient useful implementation checkpointed gradient able fit big model gpu memory without sacrificing runtime queueing tool nice queueing tool share gpu cpu memory resource multigpu environment tensorflowcc useful repo compile tensorflow either shared static library using cmake order able compile c apps contributor milioto andres university bonn linkedin researchgate google scholar special thanks philipp lotte work shared last year olga vysotka susanne wenzel acknowledgement work ha partly supported german research foundation germany excellence strategy exc2070 390732324 phenorob also thank nvidia corporation providing quadro p6000 gpu partially used develop framework todos merge cropweed cnn background knowledge repo make multicamera node exploit batching make inference faster sequentially movidius neural stick c backends plus others become available inference node show class selectively eg qt visual gui,"[('semantic', 'segmentation'), ('standalone', 'video')]"
Kinovarobotics/kinova-ros,C++,table content important supported version kinovaros installation file system use stack launch driver joint position control cartesian position control finger position control velocity control joint space cartesian space service command cartesian admittance mode recalibrate torque sensor support fordof spherical wrist robot torque control ethernet connection parameter rqt gui robot status gazebo moveit new release note limitation report bug important repository contains source code configuration file support jaco jaco2 mico arm repository support gen3 arm look roskortex repository gen3 support supported version master branch ha tested noetic older version checkout corresponding branch melodicdevel melodic ubuntu 1804 support kineticdevel kinetic ubuntu 1604 support branch longer maintained melodicdevel branch might work configuration indigodevel indigo ubuntu 1404 support branch longer maintained kinovaros kinovaros stack provides interface kinova robotics jaco jaco2 mico robotic manipulator arm besides wide support kinova product many bug fix improvement new feature well stack developed kinova c api function communicate dsp inside robot base installation make kinovaros part workspace follow step assuming workspace setup following standard convention cd catkinwssrc git clone b branchname gitgithubcomkinovaroboticskinovarosgit kinovaros cd catkinws catkinmake another way build workspace would use newer catkin build part catkintools package using aptget sudo aptget install pythoncatkintools using pip sudo pip install u catkintools add kinovaros workspace build cd catkinwssrc git clone b gitgithubcomkinovaroboticskinovarosgit kinovaros cd catkinws catkin build thecatkintools package official documentation note access arm via usb copy udev rule file 10kinovaarmrules catkinwssrckinovaroskinovadriverudev etcudevrulesd sudo cp kinovadriverudev10kinovaarmrules etcudevrulesd file system kinovabringup launch file start kinovadriver apply configuration kinovacontrol file used gazebo kinovademo python script actionlibs joint space cartesian space kinovadescription robot urdf model mesh stored kinovadocs kinovacomm reference html file generated doxygen comment based reference kinova c api additional information provided document kinova c api automatically installed installing kinova sdk kinova website kinovadriver essential file run kinovaros stack include folder kinova c api header defined indludekinova package header file kinovadriver folder kinovaapi source file wrap kinova c api kinovacomm build fundamental function advanced access regarding forcetorque control provided kinovaapi parameter topic created kinovaarm general architecture low level could dsp communicate kinova c api wrapped kinovaapi kinovacomm kinovaarm kinovafingersaction kinovajointanglesaction kinovaarmdriver recommended modify kinovacomm level kinovagazebo package launch gazebo simulation kinovamoveit everything related moveit stored kinovamsgs message server actionlib format defined use stack launch driver kinovarobotlaunch kinovabringup folder launch essential driver configuration kinova robot kinovarobotlaunch ha multiple argument kinovarobottype specifies robot type used better supporting wider range robot configuration robot type defined char8 format jmrc12sn467sa2300 robot category jmrc refers jaco mico roco customized version 12 wrist type sn spherical nonspherical degree freedom possible 467 robot mode sa service assistive robot hand 23 may equipped withfingers orfingers gripper last two position undefined reserved feature eg j2n6s300 default value refers jaco v2 6dof servicefingers please aware option valided different robot type avoid redundancy urdf assistive model ha deleted please use service option instead micoanduse tag m1 jacoanduse tag j2 kinovarobotname kinovarobotserial added allow multiple robot master application like moveit set kinovarobotname prefix robot urdf example launch two jaco robot using following roslaunch kinovabringup kinovarobotlaunch kinovarobottypej2n6s300 kinovarobotnameleft kinovarobotserialpj00000001030703130 roslaunch kinovabringup kinovarobotlaunch kinovarobottypej2n6s300 kinovarobotnameright kinovarobotserialpj00000001030703133 parameter optional dropped one robot connected useurdf specifies whether kinematic solution provided urdf model recommended default option useurdftrue default value kinematic solution automatically solved urdf model robot virtually presented rviz frame rviz located joint visulize robot rviz run rosrun rviz rviz select root world frame robot model synchronize motion real robot useurdffalse kinematic solution dsp code inside robot node kinovatfupdater activated publish frame frame defined according classic dh conventionframe may located joint even able visualize robot properly rviz would able observe dh frame rviz eg roslaunch kinovabringup kinovarobotlaunch kinovarobottypej2n6s300 useurdftrue robot able move boot please try home arm either pressing home button joystick calling rosservice service command rosservice call kinovarobottype driverinhomearm joint position control joint position control realized calling kinovacommsetjointangles customized node may simply call node jointsactionclientpy kinovademo package function take three parameter kinovarobottype eg j2n6s300 unit degree radian value angle joint function take option r tell robot angle value relative absolute also ha option v verbose output h help following code drive 6th joint 6dof jaco2 robot rotate 10 degree 10 degree print additional information joint position eg rosrun kinovademo jointsactionclientpy v r j2n6s300 degree0010 joint position observed echoing two topic kinovarobottypedriver outjointangles degree kinovarobottypedriver outjointstate radian including finger information eg rostopic echo c j2n6s300driveroutjointstate print joint name rad position velocity rad effort nm information another way control joint position use interactive marker rviz please follow step active interactive control launch driver roslaunch kinovabringup kinovarobotlaunch kinovarobottypej2n6s300 start node interactive conrol rosrun kinovadriver kinovainteractivecontrol j2n6s300 open rviz rosrun rviz rviz rviz display section change global option fixed frame world add robot model add robotmodel rviz folder add interactive marker add interactivemarkers rviz folder change interactivemarkers updated topic j2n6s300interactivecontrolcartupdate ring appear around joint move robot movings ring cartesian position control cartesian position control realized calling kinovacommsetcartesianposition customized node alternatively may simply call node poseactionclientpy kinovademo package function take three parameter kinovarobottype eg j2n6s300 unit mq mdeg mrad refers meterquaternion meterdegree meterradian posevalue last argument posevalue position coordonates xyz followed orientation eitherorvalues based unit unit position always meter unit orientation different degree radian relation euler angle xyz order please aware length parameter different using quaternion euler angle function take option r tell robot angle value relative absolute also ha option v verbose output h help following code drive jaco2 robot move along x axis 1cm rotate hand 10 degree along hand axis eg rosrun kinovademo poseactionclientpy v r j2n6s300 mdeg 00100 10 cartesian coordinate robot root frame defined following rule origin intersection point bottom plane base cylinder center line x axis directing left facing base panel power switch cable socket locate axis towards user facing base panel z axis upwards robot standing flat surface kinovatoolposeaction action server called poseactionclientpy send cartesian position command robot inverse kinematics handled within robot important inverse kinematics algorithm implemented within kinova robot programmed automatically avoid singularity selfcollisions perform avoidance algorithm restrict access part robot workspace may happen cartesian pose goal send cannot reached robot although belongs robot workspace detail happen avoid situation please see q issue 149 rule thumb able reach pose commanding poseactionclientpy moving kinova robot kinova joystick robot able reach pose action server either want use robot ik solver always use moveit instead current cartesian position published via topic kinovarobottypedriver outtoolpose addition wrench endeffector published via topic kinovarobottypedriver outtoolwrench also use interactive marker rviz cartesian position launch driver roslaunch kinovabringup kinovarobotlaunch kinovarobottypej2n6s300 start node interactive conrol rosrun kinovadriver kinovainteractivecontrol j2n6s300 open rviz rosrun rviz rviz rviz display section change global option fixed frame world add robot model add robotmodel rviz folder add interactive marker add interactivemarkers rviz folder change interactivemarkers updated topic j2n6s300interactivecontrolcartupdate cubic withaxis translation andringsrotation appear endeffector move robot dragging axis ring new release 120 executing multiple cartesian waypoints without stopping action client executes one goal time case user want give multiple waypoints robot without stopping every waypoint service addposetocartesiantrajectories used service add commanded pose buffer maintained robot robot executes pose buffer order added without stopping pose service cleartrajectories used clear trajectory buffer base finger position control cartesian position control realized calling kinovacommsetfingerpositions customized node alternatively may simply call node fingersactionclientpy kinovademo package function take three parameter kinovarobottype eg j2n6s300 unit turn mm percent fingervalue finger essentially controlled turn rest unit propotional turn convenience valueindicates fully open fingermaxturn represents fully closed value fingermaxturn may vary due many factor proper reference value finger turn befullyopen 6800 fullyclose necessary please modify variable code function also take option r tell robot angle value relative absolute also ha option v verbose output h help following code fully close finger eg rosrun kinovademo fingersactionclientpy j2n6s300 percent 100 100 100 finger position published via topic kinovarobottypedriver outfingerposition velocity control joint space cartesian space user ha access joint velocity cartesian velocity angular velocity linear velocity joint velocity control realized publishing topic kinovarobottypedriver injointvelocity following command move 6th joint jaco robot rate approximate 10 degreesecond please aware publishing rate doe affect speed motion eg rostopic pub r 100 j2n6s300driverinjointvelocity kinovamsgsjointvelocity joint1 00 joint2 00 joint3 00 joint4 00 joint5 00 joint6 100 cartesian linear velocity unit metersecond definition angular velocity omega based skewsymmetric matrix rr1 r rotation matrix angular velocity vector omega s32 s13 s21 unit radiansecond example given eg rostopic pub r 100 j2n6s300driverincartesianvelocity kinovamsgsposevelocity twistlinearx 00 twistlineary 00 twistlinearz 00 twistangularx 00 twistangulary 00 twistangularz 100 motion stop publish topic finished please cautious using velocity control continuous motion unless stop note publish frequency joint velocity set publish frequency 100hz due dsp inside robot loop 10ms higher frequency influence speed however fill buffer size 2000 robot may continue move bit even stop receiving velocity topic frequency lower 100hz robot able achieve requested velocity therefore publishing rate 100hz optional argument requirement service command user home robot command take argument brings robot predefined home position command support customized home position user define using sdk jacosoft well rosservice call kinovarobottypedriver inhomearm user also enable disable motion command rosservices rosservice call kinovarobottypedriver instart kinovarobottypedriver instop stop called robot command drive robot start called however joystick still ha control phase cartesian admittance mode let user control robot manually hand admittance force control actived deactivated command rosservice call kinovarobottypedriver instartforcecontrol rosservice call kinovarobottypedriver instopforcecontrol user move robot applying forcetorque endeffectorjoints cartesianjoint position command result motion combination force position command recalibrate torque sensor new release 120 time possible torque sensor develop offset reporting absolute torque need recalibrated calibration process simple move robot candle like pose joint 180 deg robot link point straight configuration ensures zero torque jointscall service rosservice call kinovarobottypedriver insetzerotorques support fordof spherical wrist robot new release 120 support thedof robot ha added new release previous control method used adof kinova robot inverse kinematics fordof robot inverse kinematics thedof robot result infinite possible solution give pose command choice best solution redundancy resolution done base robot considering criterion joint limit closeness singularity move robot null space see full set solution new fuction introduced kinovaapi startredundantjointnullspacemotion mode kinova joystick used move robot null space keeping endeffector maintaining pose mode activated calling service setnullspacemodestate kinovarobottypedriver insetnullspacemodestate passto service enable andto disable torque control new release 120 torque control ha made accessible publish torqueforce command like jointcartesian velocity need optional set torque parameter usually default parameter work application need change torque parameter set parameter listed end page call service settorquecontrolparameters kinovarobottypedriverinsettorquecontrolparameters switch torque control position control using service settorquecontrolmode kinovarobottypedriver insettorquecontrolmode publish torque command rostopic pub r 100 j2n6s300driverinjointtorque kinovamsgsjointtorque joint1 00 joint2 00 joint3 00 joint4 00 joint5 00 joint6 10 gravity compensation gravity compensation done default robot base mean robot commanded zero torque robot doe fall gravity case zero commanded torque refered gravity compensated mode robot moved around freely manually pushing joint try mode using command j2n6s300 rosrun kinovademo gravitycompensatedmodepy j2n6s300 command move robot candlelike pose set torque zero start torque control mode publishes torque command 000000 robot moved pushing individual joint posible publish torque without gravity compensation setting parameter publishtorquewithgravitycompensation false torque inactivity torque command sent given time 250ms default controller take actionthe robot return position modethe torque command set zero default optionis set kinova classic robot jaco2 mico optionis set generic mode ethernet connection new release 120 note although release support ethernet connection feature limited kinova notify user ethernet support released customer support ethernet connection ha added functionality available usb available ethernet use ethernet follow stepssetup static ip address ethernet network say 192168100100with robot connected pc via usb open kinova develepment centeropen tab generalethernet set robot ip address something like 192168100xxx make sure mac address zero contact supportkinovacapress update restart robotin terminal ping robot ip robot setup ethernet connect robot via ethernet set parameter robotparametersyaml connectiontype ethernet localmachineip pc network ip subnetmask network subnet mask parameter new release 120 general parameter serialnumber pj00000001030703130 leave commented want control first robot found connected jointspeedlimitparameter1 10 joint speed limit joints2in degs jointspeedlimitparameter2 20 joint speed limit joints5in degs payload00 payload com comx comy comz kg connectiontype usb ethernet usb ethernet connection parameter ethernet localmachineip 192168100100 subnetmask 2552552550 localcmdport 25000 localbroadcastport 25025 torque control parameter comment use default value torqueparameters publishtorquewithgravitycompensation false torquemin000torquemax 50000 one torque minmax value sepecified minmax value need specified safetyfactor decides velocity threshold robot switch torque position control betweenand comparameters 0000000 0000000 0000000 0000000 com parameter order m1m2m7x1x2x7y1y2y7z1z2z7 rqt gui robot status provides flexible gui tool interact nodesrobots rqt use tool see topic published node robot position velocity torque etc also launch service like addposetocartesiantrajectory monitoring topic launch rqt typing command rqt plugin tab select topicstopics monitor select message see published positiontorque etc value plugins rqt similarly used quick interation robot gazebo information gazebo available moveit information moveit available new release new release 121 bug fix specific todof robot pid controller parameter thedof robot spherical wrist gazebo model wa unstable launched addition is7dof argument kinovagazebolaunchrobotlaunchlaunch kinovacontrollaunchkinovacontrollaunch load joint7positioncontroller addition positioncontrollers launching gazebo model usetrajectorycontroller set false adof robot argument ha set true adof robot correction kinovacontrollaunchj2s7s300perspective rqt tool wa publishing wrong topic specific mico robot correction kinovacontrollaunchm1n6s200perspective rqt tool wa publishing wrong topic robot fix homearm service wa working robot wa connected ethernet commented com parameter set zero kinovabringuplaunchconfigrobotparametersyaml else robot doe compensate gravity accurately switched admittance torque mode com parameter commented user want change default com parameter default take granted user want use parameter already implemented robot change order condition checked kinovajointanglesactioncpp kinovatoolposeactioncpp kinovafingersactioncpp ensure robot doe accept new goal stopped emergency stop see issue 92 detail new release 120 gazebo support moveit support restructured urdf file support fordof robot support ethernet torque control publishersubscriber force control publishersubscriber torque control parameter speed limit actionlib cartesianjoint control parameterized baseframe tfgenerator finger model updated rviz ring model added urdf new demo file gravitycompensatedmodepy testdemo file testsrvpy new service settorquecontrolparameters setzerotorque setnullspacemodestate addposetocartesiantrajectory cleartrajectories settorquecontrolmode note limitation forcetorque control advanced user please use caution using forcetorque control api function jointstate topic currently report joint name positionvelocity effort depending firmware version velocity value wrong updating firmware arm eg using development center serial number set set cause multiple arm unusable solution make sure serial number reset updating arm firmware virtualization software product known work well package others issue appears related proper handover access usb port api parallel vmware able properly virtualbox cause api fail 1015 error previously file kinovaroskinovadriverlibi386linuxgnu bug required user 32bit system manually copy devel install work package ha tested 32bit system workaround may still required 64bit version seem unaffected report bug bug issue suggestion may sent supportkinovaca,"[('position', 'control'), ('new', 'release')]"
ethz-asl/ethzasl_icp_mapping,C++,note current branch recent change reintegratemasterintoindigodevel slowly reducing public support stack mainly u try quick demo example libpointmatcher code stack provides realtime 2d 3d icpbased slam system fit large variety robot application scenario without code change recompilation information stack including installation compilation available wiki,"[('note', 'current'), ('current', 'branch')]"
HKUST-Aerial-Robotics/FIESTA,C++,fiesta incremental esdf map motion planning euclidean signed distance field esdf useful online motion planning aerial robot since easily query distance gradient information obstacle fast incrementally built esdf map bottleneck conducting realtime motion planning paper investigate problem propose mapping system called fiesta build global esdf map incrementally introducing two independent updating queue inserting deleting obstacle separately using indexing data structure doubly linked list map maintenance algorithm update possible node using bfs framework esdf map ha high computational performance produce nearoptimal result show method outperforms uptodate method term performance accuracy theory experiment integrate fiesta completed quadrotor system validate simulation onboard experiment release method opensource software community paper method submitted 2019 ieeersj international conference intelligent robot system iros 2019 draft shown arxiv installation required library eigen3 pcl 17 opencv note c 17 required run fiesta please install configure c 17 bash sudo addaptrepository ppaubuntutoolchainrtest sudo aptget update sudo aptget install gcc7 g7 use following command check gcc compiler l lh usrbing ubuntu 1404 sudo updatealternatives install usrbingcc gcc usrbingcc48 60 slave usrbing g usrbing48 ubuntu 1604 sudo updatealternatives install usrbingcc gcc usrbingcc5 60 slave usrbing g usrbing5 sudo updatealternatives install usrbingcc gcc usrbingcc7 70 slave usrbing g usrbing7 use folling command change default compiler chooseas default sudo updatealternatives config gcc check current gcc compiler gcc version download compile sh cd catkinwssrc git clone cd catkinmake source catkinwsdevelsetupbash usage example sh roslaunch fiesta cowandladylaunch rosbag play databag cow lady data set downloaded rviz opened visualization occupancy grid map slice esdf map example usage faq please refer wikiwiki release history prediction 100 first elegant version 060 change refactor code according google c code style 053 change improve performance depth conversion process 052 add support local map add support raw depth image input depth filter consistency 051 change improve performance raycasting lot 050 add give local global update visualization option add show performance visualization directly rviz change deprecate older visualization deleted next release 041 change give better visualization based slice esdf pointcloud obstacle 040 add support lidar input add support deterministic occupancy grid map 032 add implement multithread raycasting array implementation 031 add implement hash table block 030 add implement hash table 020 add support raycasting point cloud add support probabilistic occupancy grid map fusion change patch code limited observation 010 first proper release support esdf fully dynamic case implemented array 001 support esdf insertonly case meta hlx1996 hlx1996examplecom distributed mit license see license information contributing fork create feature branch git checkout b featurefoobar commit change git commit add foobar push branch git push origin featurefoobar create new pull request wiki,"[('add', 'support'), ('esdf', 'map')]"
iosre/WeChatRobotForExample,Other,whatever want repo legal context make world better place project outdated leastmonths expect run without modification thank p please replace libsmbclienta one kxsmb make samba work project,"[('whatever', 'want'), ('want', 'repo')]"
unitreerobotics/unitree_legged_sdk,C++,v386 unitreeleggedsdk mainly used communication pc controller board also used pc udp notice support robot go1 support robot laikago b1 aliengo a1 check release v331 dependency unitree bash leggedsport v1360 firmware h017 v0135 h019 v0135 boost version 154 higher cmake version 283 higher g version 830 higher build bash mkdir build cd build cmake make want build python wrapper replace cmake line bash cmake dpythonbuildtrue find pybind11 header add bash includedirectoriescmakecurrentsourcedirthirdpartypybind11include line 14 pythonwrappercmakeliststxt find msgpackhpp bash sudo apt install libmsgpack run cpp run example sudo memory locking python arm change syspathappend libpythonamd64 syspathappend libpythonarm64,"[('support', 'robot'), ('v386', 'unitreeleggedsdk')]"
ros-controls/ros2_controllers,C++,ros2controllers commonly used generalized controller ros2control framework ready use many robot moveit2 navigation2 build status ros2 distro branch build status documentation released package rolling rolling rolling binary build rolling semibinary build ros2controllers humble humble humble binary build humble semibinary build ros2controllers explanation different build type note three build stage checking current future compatibility package binary build released package main testing distribution show direct local build possible us repos file srcnamenamenotreleasedrosdistrorepos semibinary build released core package main testing immediate dependency pulled source show local build dependency possible fails expect next package sync able build us repos file srcnamenamerepos acknowledgement href supported rosin rosindustrial qualityassured robot software component information href project ha received funding european union horizon 2020 research innovation programme grant agreement 732287,"[('binary', 'build'), ('semibinary', 'build')]"
facebookresearch/votenet,Python,deep hough voting 3d object detection point cloud created charles r qi litany kaiming leonidas guibas facebook ai research stanford university teaser introduction repository code release iccv 2019 paper arxiv report current 3d object detection method heavily influenced 2d detector order leverage architecture 2d detector often convert 3d point cloud regular grid ie voxel grid bird eye view image rely detection 2d image propose 3d box work attempted directly detect object point cloud work return first principle construct 3d detection pipeline point cloud data generic possible however due sparse nature data sample 2d manifold 3d space face major challenge directly predicting bounding box parameter scene point 3d object centroid far surface point thus hard regress accurately one step address challenge propose votenet endtoend 3d object detection network based synergy deep point set network hough voting model achieves stateoftheart 3d detection two large datasets real 3d scan scannet sun rgbd simple design compact model size high efficiency remarkably votenet outperforms previous method using purely geometric information without relying color image repository provide votenet model implementation pytorch well data preparation training evaluation script sun rgbd scannet citation find work useful research please consider citing inproceedingsqi2019deep author qi charles r litany kaiming guibas leonidas j title deep hough voting 3d object detection point cloud booktitle proceeding ieee international conference computer vision year 2019 installation install pytorch tensorflow tensorboard required access gpus matlab required prepare data sun rgbd code tested ubuntu 1804 pytorch v11 tensorflow v114 cuda 100 cudnn v74 note code update 262020 code also compatible pytorch v12 compile cuda layer pointnet used backbone network cd pointnet2 python setuppy install see compilation successful try run python modelsvotenetpy see forward pas work install following python dependency pip install matplotlib opencvpython plyfile trimesh2353923540 networkx2223 run demo download pretrained model sample point cloud unzip file project root path pathtoprojectdemofiles run python demopy demo us pretrained model sun rgbd detect object point cloud indoor room table chair sun rgbd val set use 3d visualization software meshlab open dumped file demofilessunrgbdresults see 3d detection output specifically open pcply predconfidentnmsbboxply see input point cloud predicted 3d bounding box also run following command use another pretrained model scannet python demopy dataset scannet numpoint 40000 detection result dumped demofilesscannetresults training evaluating data preparation sun rgbd follow readme sunrgbd folder scannet follow readme scannet folder train test sun rgbd train new votenet model sun rgbd data depth image cudavisibledevices0 python trainpy dataset sunrgbd logdir logsunrgbd use cudavisibledevices012 specify gpus use without specifying cuda device training use available gpus train data parallel note due io load training speedup linear nubmer gpus used run python trainpy h see training option eg also set model boxnet train baseline boxnet model training check logsunrgbdlogtraintxt file progress use tensorboard see loss curve test trained model checkpoint python evalpy dataset sunrgbd checkpointpath logsunrgbdcheckpointtar dumpdir evalsunrgbd clustersampling seedfps use3dnms useclsnms perclassproposal example result dumped evalsunrgbd folder folder specify run python evalpy h see full option evaluation evaluation use meshlab visualize predicted vote 3d bounding box select wireframe mode view box final evaluation result printed screen also written logevaltxt file dump directory default evaluate ap025 ap05 3d iou oriented box properly trained votenet around 57 map025 32 map05 train test scannet train votenet model scannet data fused scan cudavisibledevices0 python trainpy dataset scannet logdir logscannet numpoint 40000 test trained model checkpoint python evalpy dataset scannet checkpointpath logscannetcheckpointtar dumpdir evalscannet numpoint 40000 clustersampling seedfps use3dnms useclsnms perclassproposal example result dumped evalscannet folder folder specify default evaluate ap025 ap05 3d iou axis aligned box properly trained votenet around 58 map025 35 map05 train data pro user dataset point cloud annotated 3d bounding box create new dataset class train votenet data ease proces tip provided doc acknowledgement want thank erik wijmans pointnet implementation pytorch original codebase license votenet relased mit license see license file detail change log 10202019 fixed bug 3d interpolation customized ops corrected gradient computation retraining model fix slightly improves map le thanpoint,"[('point', 'cloud'), ('sun', 'rgbd')]"
jizhang-cmu/ground_based_autonomy_basic,C++,repository contains code autonomous navigation collision avoidance use ground robot autonomous navigation system repository often midlevel state estimation module highlevel planning module connecting different module navigation system help user start easily repository includes vehicle simulator doe need run onboard real robot code implementation targeted executing robot computer limited processing power except vehicle simulator code repository optimized lightweight code operates two mode autonomy mode take waypoints input navigates towards waypoints avoiding obstacle along way smart joystick mode take command operator joystick controller avoids obstacle robot encounter smart joystick mode often useful debugging navigation system highly recommended video showing functionality code available prerequisite use smart joystick mode system requires ps34 xbox controller autonomy mode run without controller ps34 xbox controller usb bluetooth interface would work box using xbox wireless usb adapter please install xow one ha tested easysmx 24g wireless controller controller different mode make sure controller right mode usually factory default mode powered using controller image two led top center button lit holding center button second change mode code run ubuntu 2004 computer installed noetic install dependency sudo apt update sudo apt install libusbdev clone repository checkout noetic branch terminal go folder compile source workspace catkinmake source develsetupsh verify controller working launch joystick driver roslaunch ps3joy ps3launch another terminal rostopic echo joy press button controller joystick message display terminal quick start launch code smart joystick mode make sure controller connected roslaunch vehiclesimulator systemlaunch wait gazebo initialize second following scene show rviz scan main window image side coordinate frame indicates robot yellow dot collisionfree path use right joystick controller navigate robot pushing right joystick front back drive robot around pushing right joystick left right make rotation holding obstaclecheck button cancel obstacle checking alternatively one launch code autonomy mode controller available uncomment include file find waypointexamplelaunchwaypointexamplelaunch srcvehiclesimulatorlaunchsystemlaunch launch waypointexample example sending waypoints speed navigation boundary roslaunch vehiclesimulator systemlaunch hold modeswitch button controller time push right joystick robot follow waypoints one circle right joystick give speed modeswitch button held system start taking speed waypointexample second robot start moving controller unavailable set autonomymode true srclocalplannerlaunchlocalplannerlaunch launch waypointexample together system system start autonomy mode note set autonomymode true even controller connected pressing button controller bring system smart joystick mode holding modeswitch button bring system back autonomy mode advanced changing simulation environment vehicle simulator support custom environment change environment replace exampleworld meshworld srcvehiclesimulatorlaunchvehiclesimulatorlaunch modify srcvehiclesimulatorworldmeshworld update directory mesh file pathtofoldermeshfiledae two place offset pose frame000 bottom example mesh file downloaded check mesh file loaded correctly set gui true srcvehiclesimulatorlaunchvehiclesimulatorlaunch additionally environment contains 3d terrain set adjustz true adjustincl true adjust robot elevation inclination according terrain set terrainz terrain elevation start position note terrain analysis need run feature functional see instruction turn terrain analysis running real robot system setup use vehicle simulator quick start vehicle simulator publishes navmsgsodometry typed state estimation message topic stateestimation tf message sensormsgspointcloud2 typed registered scan message topic registeredscan scan simulated based velodyne vlp16 lidar registered map frame use code real robot replace vehicle simulator state estimation module robot forward geometrymsgstwiststamped typed command velocity message topic cmdvel motion controller adjust minrelz maxrelz srclocalplannerlaunchlocalplannerlaunch crop ground ceiling registered scan default sensor height set 075m ground vehicle simulator registered scan cropped height 05m 025m wrt sensor integrating loam original implementation lidar odometry mapping loam algorithm us camera coordinate convention xleft yup zfront repository us standard ground robot convention xfront yleft zup using original version loam state estimation comment include filefind vehiclesimulatorlaunchvehiclesimulatorlaunch uncomment include filefind loaminterfacelaunchloaminterfacelaunch srcvehiclesimulatorlaunchsystemlaunch stop launching vehicle simulator launch loaminterface bridge connect topic flip coordinate frame using modified version loam adjust stateestimationtopic registeredscantopic flipstateestimation flipregisteredscan srcloaminterfacelaunchloaminterfacelaunch configure topic coordinate frame playing bagfiles lidar optionally imu data instead running real robot make sure set usesimtime true terminal roscore another terminal rosparam set usesimtime true launch loam system side side play bagfiles clock flag change filename command line rosbag play clock filenamebag integrating highlevel planner use code highlevel planner eg route planner follow example code srcwaypointexamplesrcwaypointexamplecpp send waypoints speed navigation boundary navigation boundary message considered connected height disconnected different height adding additional sensor system take data additional sensor collision avoidance data sent sensormsgspointcloud2 typed message topic addedobstacles point message map frame obstacle checking onoff obstacle checking turned stdmsgsbool typed message topic checkobstacle number message indicates obstacle checking alternatively one hold obstaclecheck button controller turn obstacle checking turning terrain analysis system us registered scan collision avoidance default driving 3d terrain terrain analysis becomes necessary launch terrain analysis uncomment include file find terrainanalysislaunchterrainanalysislaunch set useterrainanalysis true adjust obstacleheightthre srclocalplannerlaunchlocalplannerlaunch terrain analysis publishes sensormsgspointcloud2 typed terrain map message topic terrainmap pclpointxyzi typed point message x z field point indicate coordinate intensity field store cost check terrain map rviz terrain analysis running click panelsdisplays uncheck regscan check terrainmap clicking clearterrainmap button controller reinitializes terrain map alternatively one send stdmsgsfloat32 typed message topic mapclearing number message indicates radius area cleared note terrain analysis doe require scan well registered state estimation robot imprecise scan misregistered terrain analysis likely sacrifice handling negative obstacle best way handle negative obstacle mounting sensor high robot looking downward negative obstacle quick solution turning terrain analysis setting nodataobstacle true srcterrainanalysislaunchterrainanalysislaunch negative obstacle usually cause area data system consider area nontraversable tuning path following change driving speed adjust maxspeed autonomyspeed maxaccel srclocalplannerlaunchlocalplannerlaunch path following parameter maxyawrate yawrategain lookaheaddis file setting twowaydrive false robot drive forward changing robot size system us motion primitive generated matlab script change robot size adjust searchradius srclocalplannerpathspathgeneratorm run matlab script generate set path file folder robot motion model system us differential motion model adapting motion model eg carlike motion model need work reference j zhang c hu r gupta chadha singh falco fast likelihoodbased collision avoidance extension humanguided navigation journal field robotics vol 37 nopp 13001313 2020 pdf author ji zhang robotics institute carnegie mellon university credit velodynesimulator joystickdrivers package opensource release,"[('terrain', 'analysis'), ('vehicle', 'simulator')]"
paperswithcode/ai-deadlines,Other,ai deadline build status countdown timer keep track bunch cvnlpmlro conference deadline contributing contribution welcome keep thing minimal looking list toptier conference ai per conferencerankscom6 judgement call please feel free maintain separate fork see subfield conference interest listed add update deadline fork repository update dataconferencesyml make sure ha title year id link deadline timezone date place sub attribute see available timezone string optionally add note abstractdeadline case conference ha separate mandatory abstract deadline optionally add hindex refers h5index example yaml title bestconf year 2022 id bestconf22 title lower case last two digit year fullname best conference anything full conference name link linktowebsitecom deadline yyyymmdd hhs abstractdeadline yyyymmdd hhs timezone asiaseoul place incheon south korea date september 1822 2022 start yyyymmdd end yyyymmdd paperslink linktofullpaperlistcom pwclink linktopaperswithcodecom hindex 1000 sub sp note important send pull request fork useful listing geodeadlines lukasmosser neurodeadlines4 tbryn aichallengedeadlines dieg0as cvoriented aideadlines emphasis medical image duducheng esdeadlines embedded system computer architecture cyberphysical systems9 alexvonb k0nze 20192020 international conference ai cv dm nlp robotics jackietseng ccfdeadlines11 ccfddl networkingdeadlines computer networking measurement andrewcchu addeadlinescom13 danielbogdoll secdeadlinesgithubio security privacy clementfung pythondeadlines15 jesperdramsch deadlinesopenlifescienceai healthcare domain conference workshop monk1337 hcideadlinesgithubio humancomputer interaction conferences17 makinteract dsdeadlinesgithubio distributed system eventbased system performance software engineering conferences18 dsdeadlines license project licensed mit us icomoon icon gpl cc by40 18,"[('conference', 'ai'), ('optionally', 'add')]"
abr/abr_control,Python,image abr control abr control library python package control path planning robotic arm real simulated environment abr control provides api mujoco coppeliasim formerly known vrep pygame simulation environment arm configuration file one two threejoint model well ur5 kinova jacoarms user also easily extend package run custom arm configuration abr control autogenerates efficient c code generating control signal us mujoco internal function carry calculation example script showing use abr control package docsexamples folder abr also provides interface config available controlling real jacoat abrjaco2 repository installation abr control library depends numpy sympy scipy cloudpickle cython setuptools nengo matplotlib recommend using anaconda note installing clean environment require compiling dependent library take minute install abr control clone repository run sudo aptget install g sudo aptget install pythondev sudo aptget install libfreetype6dev conda activate yourenvironment pip install e abr control tested work python 36 pythonis supported optional installation mujoco run mujoco simulation need mujoco mujocopythonviewer package installed either pip install run repo install pip install e optional additionally ubuntu 2004 may need sudo apt install libomesa6dev sudo apt install libglewdev sudo apt install patchelf pygame would like use pygame api anaconda environment run pip install pygame coppeliasim support coppeliasim 42 need download vrep follow installation instruction abr jaco2 addition simulation kinova jaco2 coppeliasim mujoco api controlling real arm installation instruction see abrjaco2 repository usage abr control repo comprised four partsarmscontrollerspath planner andinterfaces 1a arm config file coppeliasim pygame real arm required information arm model kept arm config file use abr control library new arm user must provide new config coppeliasim pygame real arm config must contain transformation matrix written using sympy expression robot origin reference frame link centreofmass com joint specified sequentially eg origin link0 com link0 com joint0 joint0 link1 com etc arm config file simulation code kept folder named arm abrcontrolarms directory 1b arm config file mujoco using mujoco process bit different mujoco handle calculation kinematics dynamic function requires xml config made describing kinematic chain mujoco api page describes detail detailed model created importing 3d modeling stl file using mesh object type geom tag example abrcontrolarmsjaco2jaco2xml user building model may specify location xml folder parameter detail please refer mujoco documentation linked use xml file repository example detailed walkthrough ur5 mujoco model wa built see tutorial 1c arm instantiation transforms abr control configuration base class us sympy transform matrix provide function calculate transforms jacobian jacobian derivative inertia matrix gravity force centripetal coriolis effect joint com also base config class written mujoco ha wrapper function accessed way way code work various simulator minimal change required different config file instantiated pygame coppeliasim abrcontrolarms import jaco2 arm ur5 onelink twolink threelink also available import robotconfig armconfig mujoco abrcontrolarms import mujococonfig arm ur5 onelink twolink threelink also available armmodel armmodel jaco2 robotconfig armmujococonfigarmmodel abr jaco2 real arm import abrjaco2 robotconfig abrjaco2config transforms accessed instantiated robot config calculate following given arm state jointangles robotconfigtx joint3 qjointangles x z position joint3 robotconfigmqjointangles calculate inertia matrix joint space robotconfigj ee qjointangles jacobian endeffector 1d arm cython realtime control default usecython parameter set true allow realtime control generating optimized cython code robot configuration function take little bit time generate function saved cacheabrcontrolarmnamesavedfunctions loaded future run note hash saved config change made function regenerated next use cython optimization turned instantiation abrcontrolarms import ur5 robotconfig ur5configusecythonfalse result running operational space controller different controller usecythontrue false image docsexamplestimingpngcontrollers controller make use robot configuration file generate control signal accomplish given task controller reaching target abr control library provides implementation several primary controller including operational space generalized coordinate joint space sliding floating control using operational space controller osc possible also pas secondary controller operate null space operational space controller secondary controller set achieve secondary goal avoiding joint limit obstacle damping movement maintaining configuration near specified resting state additionally osc set control combination thecontrollable degree freedom endeffector endeffectors x z position b g orientation also implementation nonlinear adaptive control controllerssignals folder well example mujoco pygame coppeliasim showing class used overcome unexpected force acting arm see docsexamples folder various use case example controller 3a path planner generating path controllerspathplanners folder generalized path planner used conjunction controller provide filtered via point target state greatly improve stability arm motion path planner generate 12 dimensional path follows velocity acceleration limitation path planner determines limit shape path take position velocity profile passed init path planner ha generatepath function take start target position maximum velocity travel optionally start target velocity defaultandand orientation passed path planner generate trajectory desired start target position optionally orientation also discretize path time moving set start velocity beginning path reach target position orientation moving target velocity moment path planner use velocity profile accelerate startvelocity maxvelocity back targetvelocity path travel short reach maximum velocity path planner reach maximum velocity need begin decelerating converge target state maintaining desired path shape longer path path planner output constant velcoity maxvelocity speed reached time decelerate orientation path planned using spherical linear interpolation slerp generate set orientation start target orientation time profile match path planner ie linear velocity profile linear step orientation time constant change orientation whereas gaussian velocity profile bell shaped profile largest step occurring middle movement acceleration deceleration start end respectively 3b path planner position profile position profile thought general shape path follow contain stept function output 3d position domain of10and1are restricted start end path correspond timesandrespectively straightline path would straight line from0to1the path planner rotate position profile align direction targetpositionstartposition translate transform start end start target position image docsexampleslinearpositionprofilepng complex shape available ellipse sin curve readily available custom one added relative ease example ellipse profile followed additional parameter adjust stretching along horizontal axis image docsexamplesellipsepositionprofilepng 3c path planner velocity profile velocity profile decoupled position profile arbitrary low frequency shape defined planned path follow shape maintaining physically limited velocity acceleration profile velocity profile generate function output list velocity set start target velocity various velocityprofiles vary acceleration curve example velocityprofileslinear class ha constant acceleration start target image docsexampleslinearpathlinearvelocitypng comparison velocityprofilesgaussian class ha smoothly changing velocity follows gaussian curve image docsexampleslinearpathgaussvelocitypnginterfaces communication system control interface api used function available class vary depending specific system must provide connect disconnect sendforces getfeedback method putting everything together control loop using four file look like import numpy np abrcontrolarms import ur5 arm abrcontrolcontrollers import osc damping abrcontrolcontrollerspathplanners import pathplanner abrcontrolcontrollerspathplannerspositionprofiles import linear abrcontrolcontrollerspathplannersvelocityprofiles import gaussian abrcontrolinterfaces import coppeliasim abrcontrolutils import transformation sim step size dt 0005 initialize robot config robotconfig armconfig damp movement arm damping dampingrobotconfig kv10 create opreational space controller controlling alldof ctrlr osc robotconfig kp100 position gain ko250 orientation gain nullcontrollersdamping vmaxnone rad control dof x z alpha beta gamma ctrlrdoftrue true true true true true create interface interface coppeliasimrobotconfig dtdt interfaceconnect create path planner linear shape gaussian velocity curve pathplanner pathplanner posprofilelinear velprofilegaussiandtdt acceleration2 get starting state feedback interfacegetfeedback handxyz robotconfigtxee feedbackq startingorientation robotconfigquaternionee feedbackq generate target targetorientation nprandomrandom3 targetorientation nplinalgnormtargetorientation convert orientation quaternion targetorientation listtargetorientation targetposition 04 03 06 startingorientation transformationseulerfromquaternion startingorientation ax rxyz targetorientation transformationseulerfromquaternion targetorientation ax rxyz generate 12d path pathplannergeneratepath startpositionhandxyz targetpositiontargetposition startorientationstartingorientation targetorientationtargetorientation startvelocity0 targetvelocity0 maxvelocity2 count step planned path osc trying bring endeffector filtered target state count pathplannerntimesteps get arm feedback feedback interfacegetfeedback handxyz robotconfigtxee feedbackq nexttarget pathplannernext po nexttarget3 vel nexttarget36 orient nexttarget69 u ctrlrgenerate qfeedbackq dqfeedbackdq targetnphstackpos orient targetvelocitynphstackvel npzeros3 apply control signal step sim forward interfacesendforcesu count interfacedisconnect note using mujoco interface necessary instantiate connect interface instantiating controller parameter get parsed xml arm config linked mujoco interface happens upon connection see sectionabove difference arm instantiation mujoco sim example abr control repo come several example demonstrate use different interface controller find example docsexamples folder default pygame example run threelink maplesim arm also run example using twolink python arm changing import statement top example script run coppeliasim example recent coppeliasim version open default coppeliasim example run ur5 jaco2 arm model change change arm folder imported top example script first time run example promted download arm model simply select yes download file simulation start download completes run mujoco example promted download mesh texture file used xml config similarly coppeliasim arm model download completes simulation start using forked mujocopy repository see optional installation section exit simulation esc key pause spacebar,"[('path', 'planner'), ('abr', 'control')]"
ros-planning/navigation_experimental,C++,navigationexperimental collection navigation plugins tool various recovery behavior local global planner plugins movebase teleop filter obstacle avoidance simple controlbased movebase replacement useful package repo sbpllatticeplanner global planner plugin movebase wrap sbpl library produce kinematically feasible path package repo ha readme file assistedteleop goalpasser posebasecontroller posefollower sbpllatticeplanner sbplrecovery twistrecovery wiki page,"[('global', 'planner'), ('package', 'repo')]"
ros2-rust/ros2_rust,Other,rosfor rust target status ubuntu 2004 build status introduction set project rclrs client library code generator example enables developer write rosapplications rust feature limitation current set feature include message generation support publisher subscription loaned message zerocopy tunable qos setting client service lot thing still missing however see issue list overview welcome contribute since client library still rapidly evolving stability guarantee moment sound great try step building ros2rust example vanilla ubuntu focal installation see indepth guide building ros2rust package detail option including dockerbased setup shell install rust eg described install rosa described assuming installed minimal version rosyou need additional package sudo apt install git libclangdev python3pip python3vcstool libclangdev required bindgen install plugins cargo colcon cargo install debug cargoamentbuild debug faster install pip install git pip install git mkdir p workspacesrc cd workspace git clone srcros2rust vcs import src srcros2rustros2rusthumblerepos optroshumblesetupsh colcon build run minimal pubsub example shell new terminal tmux window installsetupsh ros2 run examplesrclrsminimalpubsub minimalpublisher new terminal tmux window installsetupsh ros2 run examplesrclrsminimalpubsub minimalsubscriber shell new terminal tmux window installsetupsh ros2 launch examplesrclrsminimalpubsub minimalpubsublaunchxml documentation article tutorial writing first node rclrs contributor guide,"[('install', 'git'), ('new', 'terminal')]"
dojo-sim/Dojo.jl,Other,ci codecov dojo differentiable physic engine robotics arxiv preprint python interface site video presentation update april 2023 longer actively developing dojo pull request always welcome updated removed example account change since initial version dojo additional development differentiable simulation differentiable collision detection kevin tracy capsule convex primitive singlelevel contact dynamic collision detection simon le cleac h silico example simulation learning control system identification interfacing package reinforcementlearningjl dqn controlsystemsjl lqr installation dojo added via julia package manager type julia pkg add dojo convenience mechanism environment add dojoenvironments additionally julia pkg add dojoenvironments citing articlehowelllecleach2022 titledojo differentiable simulator robotics authorhowell taylor le cleac h simon bruedigam jan kolter zico schwager mac manchester zachary journalarxiv preprint arxiv220300806 url year2022 contribute please submit pull request open issue see doc contribution idea,"[('pull', 'request'), ('collision', 'detection')]"
GeorgeDu/vision-based-robotic-grasping,Python,visionbased robotic grasping paper code essential information grasp target object 6d gripper pose camera coordinate contains 3d gripper position 3d gripper orientation execute grasp within method visionbased robotic grasping estimation 6d gripper pose varies aiming different grasp manner categorized 2d planar grasp 6dof grasp 2d planar grasp mean target object lie plane workspace grasp constrained one direction essential information simplified 6d 3d 2d inplane position 1d rotation angle exist method evaluating grasp contact point method evaluating grasp oriented rectangle 6dof grasp mean gripper grasp object various angle 3d domain essential 6d gripper pose could simplified based whether grasp conducted complete shape singleview point cloud method categorized method based partial point cloud method based complete shape method based partial point cloud contains method estimating candidate grasp method transferring grasp existing grasp database method based complete shape contains method estimating 6d object pose method shape completion current 6dof grasp method aim known object grasp could precomputed manually simulation problem thus transformed 6d object pose estimation problem besides robotic grasping approach require target object location input data first involves three different stage object localization without classification object detection object instance segmentation object localization without classification output potential region target object without knowing category object detection provides bounding box target object category object instance segmentation provides pixel pointlevel region target object category summarize kind method repository hope present big picture friend work visionbased robotic grasping table content listed follows thank hatim wen modifying link pdf file writing convenient program download paper use run python downloadpy start download process note use better read change code specifically change value name downloadpyline 18 md file split eg 6dof graspmd visionbased robotic grasping paper codesreview papersobject localization 11 object localization without classification 111 2dbased method fitting 2d shape primitive b saliency detection 112 3dbased method fitting 3d shape primitive b saliency detection 12 object detection 121 2d object detection twostage method b singlestage method 122 3d object detection rgbbased method b point cloudbased method c fusion method 13 object instance segmentation 131 2d instance segmentation survey paper b twostage method c onestage method panoptic segmentation 132 3d instance segmentation twostage method b onestage method c 3d deep learning network object pose estimation 21 rgbd imagebased method 211 correspondencebased method match 2d feature point b regress 2d projection 212 templatebased method 213 votingbased method 22 point cloudbased method 221 correspondencebased method 222 templatebased method 223 votingbased method 23 categorylevel method 231 categorylevel 6d pose estimation 232 3d shape reconstruction image 233 3d shape rendering 2d planar grasp 31 estimating grasp contact point 32 estimating oriented rectangles6dof grasp 41 method based singleview point cloud 411 method estimating candidate grasp 412 method transferring grasp grasp transfer b nonrigid registration c shape correspondence 42 method based complete shape 421 method estimating 6d object pose 422 method shape completion shape completionbased grasp b shape completion generation c depth completion estimation point cloud denoising samping taskoriented method 51 taskoriented manipulation 52 grasp affordance 53 3d part segmentationdexterous grippersdata generation 71 simulation reality 72 selfsupervised methodsmultisourcemotion planning 91 visual servoing 92 path planning 10 imitation learning 11 reinforcement learning 12 expert review paper foundation trend robotics 2020semantics robotic mapping perception interaction survey paper aire 2020visionbased robotic grasp detection object localization object pose estimation grasp estimation review paper arxiv 2020affordances robotic task survey paper arxiv 2019a review robot learning manipulation challenge representation algorithm paper arxiv 2018the limit potential deep learning robotics paper mti 2018review deep learning method robotic grasp detection paper tor 2016datadriven grasp synthesis survey paper ra 2012an overview 3d object grasp synthesis algorithm survey paper object localization 11 object localization without classification 111 2dbased method afitting 2d shape primitive bmvc buyer guide conic fitting paper code ijgig algorithm reduction number point required represent digitized line caricature paper code b saliency detection survey paper arxiv 2020rgbd salient object detection survey paper project arxiv 2019salient object detection deep learning era indepth survey paper cvm 2014salient object detection survey paper 2020 eccv progressively guided alternate refinement network rgbd salient object detection paper eccv hierarchical dynamic filtering network rgbd salient object detection paper eccv crossmodal weighting network rgbd salient object detection paper arxiv bilateral attention network rgbd salient object detection paper arxiv salient object detection combining selfattention module feature pyramid network paper arxiv jldcf joint learning denselycooperative fusion framework rgbd salient object detection paper arxiv ucnet uncertainty inspired rgbd saliency detection via conditional variational autoencoders paper arxiv crosslayer feature pyramid network salient object detection paper arxiv depth potentialityaware gated attention network rgbd salient object detection paper arxiv weaklysupervised salient object detection via scribble annotation paper arxiv highly efficient salient object detection 100k parameter paper arxiv global contextaware progressive aggregation network salient object detection paper arxiv adaptive graph convolutional network attention graph clustering cosaliency detection paper 2019 iccv employing deep partobject relationship salient object detection paper icme multiscale capsule attentionbased salient object detection multicrossed layer connection paper 2018 cvpr picanet learning pixelwise contextual attention saliency detection paper spm advanced deeplearning technique salient categoryspecific object detection survey paper 2017 cvpr deeply supervised salient object detection short connection paper toc video saliency detection using object proposal paper 2016 cvpr unconstrained salient object detection via proposal subset optimization paper cvpr deep hierarchical saliency network salient object detection paper tpami salient object detection via structured matrix decomposition paper tip correspondence driven saliency transfer paper 2015 cvpr saliency detection multicontext deep learning paper tpami hierarchical image saliency detection extended cssd paper 2014 cvpr saliency optimization robust background detection paper tpami global contrast based salient region detection paper 2013 cvpr salient object detection discriminative regional feature integration approach paper cvpr saliency detection via graphbased manifold ranking paper 2012 eccv geodesic saliency using background prior paper 112 3dbased method afitting 3d shape primitive survey paper cgf 2019a survey simple geometric primitive detection method captured 3d data paper 2021 cvpr cuboid revisited learning robust 3d shape fitting single rgb image paper 2020 eccv caddeform deformable fitting cad model 3d scan paper code arxiv polylidar3d fast polygon extraction 3d data paper icra primitect fast continuous hough voting primitive detection paper code arxiv parsenet parametric surface fitting network 3d point cloud paper 2015 cvpr separating object clutter indoor scene paper 2013 cvpr linear approach matching cuboid rgbd image paper 2012 gcr robustly segmenting cylindrical boxlike object cluttered scene using depth camera paper 2009 iros closerange scene segmentation reconstruction 3d point cloud map mobile manipulation domestic environment paper 2005 isprs efficient hough transform automatic detection cylinder point cloud paper b saliency detection 2020 eccv single stream network robust realtime rgbd salient object detection paper eccv rgbd salient object detection crossmodality modulation selection paper 2019 pr multimodal fusion network multiscale multipath crossmodal interaction rgbd salient object detection paper iccv depthinduced multiscale recurrent attention network saliency detection paper iccv pointcloud saliency map paper arxiv cnnbased rgbd salient object detection learn select fuse paper 2018 cvpr progressively complementarityaware fusion network rgbd salient object detection paper 2017 tip rgbd salient object detection via deep fusion paper 2015 cvprw exploiting global prior rgbd saliency detection paper 2014 eccv rgbd salient object detection benchmark algorithm paper 2013 jsip segmenting salient object 3d point cloud indoor scene using geodesic distance paper 12 object detection detailed paper list refer hoya012 amusi 121 2d object detection survey paper 2021 tpami weakly supervised object localization detection survey paper 2020 arxiv iterative bounding box annotation object detection paper arxiv deep domain adaptive object detection survey paper ijcv deep learning generic object detection survey paper 2019 arxiv object detection 20 year survey paper arxiv object detection deep learning review paper arxiv review object detection model based convolutional neural network paper arxiv review method textureless object recognition paper twostage method 2020 eccv mimicdet bridging gap onestage twostage object detection paper eccv corner proposal network anchorfree twostage object detection paper arxiv enhancing geometric factor model learning inference object detection instance segmentation paper arxiv instanceaware contextfocused memoryefficient weakly supervised object detection paper arxiv scalable active learning object detection paper arxiv anyshot object detection paper arxiv frustratingly simple fewshot object detection paper arxiv rethinking route towards weakly supervised object localization paper arxiv universalrcnn universal object detector via transferable graph rcnn paper arxiv unsupervised imagegeneration enhanced adaptation object detection thermal image paper arxiv pcsgan perceptual cyclicsynthesized generative adversarial network thermal nir visible image transformation paper arxiv spotnet selfattention multitask network object detection paper arxiv realtime object detection recognition lowcompute humanoid robot using deep learning paper arxiv fedvision online visual object detection platform powered federated learning paper 2019 arxiv combining deep learning verification precise object instance detection paper arxiv cmsalgan rgbd salient object detection crossview generative adversarial network paper arxiv openlorisobject dataset benchmark towards lifelong object recognition paper project iros look recognize better learning shared topic categoryspecific dictionary openended 3d object recognition paper iros recurrent convolutional fusion rgbd object recognition paper code iccvw annotation saved annotation earned using fully synthetic training object detection paper 2017 cvpr fpn feature pyramid network object detection paper arxiv lighthead rcnn defense twostage object detector paper code 2016 neurips rfcn object detection via regionbased fully convolutional network paper code tpami faster rcnn towards realtime object detection region proposal network paper code eccv visual relationship detection language prior paper 2015 iccv fast rcnn paper code 2014 eccv sppnet spatial pyramid pooling deep convolutional network visual recognition paper code cvpr rcnn rich feature hierarchy accurate object detection semantic segmentation paper code cvpr scalable object detection using deep neural network paper arxiv scalable highquality object detection paper iclr overfeat integrated recognition localization detection using convolutional network paper code b singlestage method 2020 arxiv onenet towards endtoend onestage object detection paper arxiv scaledyolov4 scaling cross stage partial network paper tpami aploss accurate onestage object detection paper arxiv pointset anchor object detection instance segmentation pose estimation paper arxiv autoassign differentiable label assignment dense object detection paper arxiv localization uncertainty estimation anchorfree object detection paper arxiv detector detecting object recursive feature pyramid switchable atrous convolution paper code arxiv yolov4 optimal speed accuracy object detection paper arxiv saccadenet fast accurate object detector paper arxiv centripetalnet pursuing highquality keypoint pair object detection paper arxiv real time detection small object paper arxiv os2d onestage oneshot object detection matching anchor feature paper 2019 arxiv centernet object point paper arxiv centernet keypoint triplet object detection paper eccv cornernet detecting object paired keypoints paper arxiv fcos fully convolutional onestage object detection paper arxiv bottomup object detection grouping extreme center point paper 2018 arxiv yolov3 incremental improvement paper code 2017 cvpr yolo9000 better faster stronger paper code iccv retinanet focal loss dense object detection paper 2016 cvpr yolo look unified realtime object detection paper code eccv ssd single shot multibox detector paper code 122 3d object detection kind method divided three kind rgbbased method point cloudbased method fusion method consume image point cloud rgbbased method 2021 tpami monogrnet general framework monocular 3d object detection paper arxiv exploring 2d data augmentation 3d monocular object detection paper arxiv fcos3d fully convolutional onestage monocular 3d object detection paper arxiv geometryaware data augmentation monocular 3d object detection paper arxiv ocm3d objectcentric monocular 3d object detection paper arxiv gated3d monocular 3d object detection temporal illumination cue paper arxiv plume efficient 3d object detection stereo image paper arxiv ellipse regression predicted uncertainty accurate multiview 3d object estimation paper 2020 arxiv demystifying pseudolidar monocular 3d object detection paper arxiv 3d object recognition corresponding quantizing neural 3d scene representation paper eccv monocular differentiable rendering selfsupervised 3d object detection paper eccv reinforced axial refinement network monocular 3d object detection paper arxiv monocular 3d detection geometric constraint embedding semisupervised training paper arxiv 1point ransacbased method ground object pose estimation paper iros objectaware centroid voting monocular 3d object detection paper eccv kinematic 3d object detection monocular video paper arxiv monet3d towards accurate monocular 3d object localization real time paper arxiv expandable yolo 3d object detection rgbd image paper arxiv instant 3d object tracking application augmented reality paper arxiv singleshot 3d detection vehicle monocular rgb image via geometry constrained keypoints realtime paper arxiv cubifae3d monocular camera space cubification autonomous vehicle autoencoder based 3d object detection paper arxiv center3d centerbased monocular 3d object detection joint depth understanding paper icits exploring capability limit 3d monocular object detection study simulation real world data paper arxiv disp rcnn stereo 3d object detection via shape prior guided instance disparity estimation paper arxiv endtoend pseudolidar imagebased 3d object detection paper arxiv confidence guided stereo 3d object detection split depth estimation paper arxiv monocular 3d object detection cylindrical image fisheye camera paper arxiv zoomnet partaware adaptive zooming neural network 3d object detection paper arxiv monopair monocular 3d object detection using pairwise spatial relationship paper arxiv total3dunderstanding joint layout object pose mesh reconstruction indoor scene single image paper arxiv smoke singlestage monocular 3d object detection via keypoint estimation paper arxiv sianms nonmaximum suppression siamese network multicamera 3d object detection paper aaai monocular 3d object detection decoupled structured polygon estimation heightguided depth estimation paper arxiv sdod realtime segmenting detecting 3d object depth paper arxiv dsgn deep stereo geometry network 3d object detection paper arxiv rtm3d realtime monocular 3d detection object keypoints autonomous driving paper 2019 neurips perspectivenet 3d object detection single rgb image via perspective point paper arxiv singlestage monocular 3d object detection virtual camera paper arxiv environment reconstruction depth image using generative adversarial network paper code arxiv learning depthguided convolution monocular 3d object detection paper arxiv refinedmpl refined monocular pseudolidar 3d object detection autonomous driving paper iros look recognize better learning shared topic categoryspecific dictionary openended 3d object recognition paper arxiv taskaware monocular depth estimation 3d object detection paper cvpr pseudolidar visual depth estimation bridging gap 3d object detection autonomous driving paper code aaai monogrnet geometric reasoning network 3d object localization paper code iccv accurate monocular 3d object detection via colorembedded 3d reconstruction autonomous driving paper iccv m3drpn monocular 3d region proposal network object detection paper iccvw monocular 3d object detection pseudolidar point cloud paper arxiv monocular 3d object detection box fitting trained endtoend using intersectionoverunion loss paper arxiv monocular 3d object detection via geometric reasoning keypoints paper b point cloudbased method survey paper arxiv deep learning 3d point cloud understanding survey paper tpami 2020deep learning 3d point cloud survey paper 2021 cvpr 3d spatial recognition without spatially labeled 3d paper cvpr sessd selfensembling singlestage object detector point cloud paper arxiv boundaryaware 3d object detection point cloud paper cvpr backtracing representative point votingbased 3d object detection point cloud paper cvpr hvpr hybrid voxelpoint representation singlestage 3d object detection paper code arxiv groupfree 3d object detection via transformer paper code arxiv sparsepoint fully endtoend sparse 3d object detector paper arxiv offboard 3d object detection point cloud sequence paper cvpr st3d selftraining unsupervised domain adaptation 3d object detection paper code cad labelcloud lightweight domainindependent labeling tool 3d object detection point cloud paper code arxiv dpointnet densityoriented pointnet 3d object detection point cloud paper arxiv pvrcnn pointvoxel feature set abstraction local vector representation 3d object detection paper arxiv auto4d learning label 4d object sequential point cloud paper aaai voxel rcnn towards high performance voxelbased 3d object detection paper aaai pcrgnn point cloud completion graph neural network 3d object detection paper aaai ciassd confident iouaware singlestage object detector point cloud paper 2020 arxiv 3d object detection pointformer paper arxiv around rangeguided cylindrical network 3d object detection paper arxiv 3dioumatch leveraging iou prediction semisupervised 3d object detection paper 3dv panonet3d combining semantic geometric understanding lidarpoint cloud detection paper 3dv sfuda3d sourcefree unsupervised domain adaptation lidarbased 3d object detection paper eccvw multiframe singleframe knowledge distillation 3d object detection paper icra 3d object detection tracking based streaming data paper arxiv densityaware pointrcnn 3d objection detection point cloud paper arxiv dynamic edge weight graph neural network 3d object detection paper arxiv rangercnn towards fast accurate 3d object detection range image representation paper wacv crossmodality 3d object detection paper eccvw ab3dmot baseline 3d multiobject tracking new evaluation metric paper project iros mlod awareness extrinsic perturbation multilidar 3d object detection autonomous driving paper iros uncertaintyaware selfsupervised 3d data association paper eccvw deformable pvrcnn improving 3d object detection learned deformation paper arxiv lstm approach temporal 3d object detection lidar point cloud paper arxiv partaware data augmentation 3d object detection point cloud paper mm weakly supervised 3d object detection point cloud paper eccv weakly supervised 3d object detection lidar point cloud paper code eccv pillarbased object detection autonomous driving paper arxiv infofocus 3d object detection autonomous driving dynamic information modeling paper arxiv centernet3d anchor free object detector autonomous driving paper arxiv local grid rendering network 3d object detection point cloud paper arxivst place solution waymo open dataset challenge 3d detection domain adaptation paper arxiv optimisation pointpillars network 3d object detection point cloud paper arxiv afdet anchor free one stage 3d object detection paper arxiv generative sparse detection network 3d singleshot object detection paper arxiv centerbased 3d object detection tracking paper arxiv h3dnet 3d object detection using hybrid geometric primitive paper arxiv associate3ddet perceptualtoconceptual association 3d point cloud object detection paper arxiv svganet sparse voxelgraph attention network 3d object detection point cloud paper arxiv learning detect 3d object point cloud real time paper arxiv p2b pointtobox network 3d object tracking point cloud paper arxiv range conditioned dilated convolution scale invariant 3d object detection paper arxiv drosophilainspired 3d moving object detection based point cloud paper arxiv streaming object detection 3d point cloud paper arxiv ss3d single shot 3d object detector paper arxiv mlcvnet multilevel context votenet 3d object detection paper arxiv 3d iounet iou guided 3d object detector point cloud paper arxiv finding 3d center 3d object detection using learned loss paper arxiv lidarbased online 3d video object detection graphbased message passing spatiotemporal transformer attention paper arxiv quantifying data augmentation lidar based 3d object detection paper arxiv dops learning detect 3d object predict 3d shape paper arxiv improving 3d object detection progressive population based augmentation paper arxiv boundaryaware dense feature indicator singlestage 3d object detection point cloud paper arxiv physically realizable adversarial example lidar object detection paper arxiv realtime 3d object proposal generation classification limited processing resource paper arxiv 3d object detection lidar data using distance dependent feature extraction paper arxiv hvnet hybrid voxel network lidar based 3d object detection paper arxiv pointgnn graph neural network 3d object detection point cloud paper arxiv pointtracknet endtoend network 3d object detection tracking point cloud paper arxiv 3dssd pointbased 3d single stage object detector paper ariv segvoxelnet exploring semantic context depthaware feature 3d vehicle detection point cloud paper arxiv investigating importance shape feature color constancy color space similarity measure openended 3d object recognition paper arxiv probabilistic 3d multiobject tracking autonomous driving paper aaai tanet robust 3d object detection point cloud triple attention paper 2019 arxiv classbalanced grouping sampling point cloud 3d object detection paper code arxiv sess selfensembling semisupervised 3d object detection paper arxiv deep scnnbased realtime object detection selfdriving vehicle using lidar temporal data paper arxiv pillar pillar multiscale dynamic feature extraction 3d object detection point cloud paper arxiv see get exploiting visibility 3d object detection paper neuripsw patch refinement localized 3d object detection paper corl endtoend multiview fusion 3d object detection lidar point cloud paper iccv deep hough voting 3d object detection point cloud paper code arxiv parta2 net 3d partaware aggregation neural network object detection point cloud paper iccv std sparsetodense 3d object detector point cloud paper cvpr pointpillars fast encoders object detection point cloud paper arxiv starnet targeted computation object detection point cloud paper 2018 cvpr pointrcnn 3d object proposal generation detection point cloud paper code cvpr pixor realtime 3d object detection point cloud paper code cvpr voxelnet endtoend learning point cloud based 3d object detection paper code eccvw complexyolo realtime 3d object detection point cloud paper code eccvw yolo3d endtoend realtime 3d oriented object bounding box detection lidar point cloud paper 2015 iros voxnet 3d convolutional neural network realtime object recognition paper code project c fusion method kind method utilize rgb image depth imagespoint cloud exist early fusion method late fusion method dense fusion method 2021 arxiv vr3dense voxel representation learning 3d object detection monocular dense depth reconstruction paper arxiv selfattention based contextaware 3d object detection paper 2020 arxiv multiview adaptive fusion network 3d object detection paper arxiv clocs cameralidar object candidate fusion 3d object detection paper eccv epnet enhancing point feature image semantics 3d object detection paper arxiv stereo rgb deeper lidar based network 3d object detection paper arxiv pnpnet endtoend perception prediction tracking loop paper arxiv 3d object detection method based yolo kmeans image point cloud paper arxiv 3dcvf generating joint camera lidar feature using crossview spatial feature fusion 3d object detection paper arxiv imvotenet boosting 3d object detection point cloud image vote paper arxiv jrmot realtime 3d multiobject tracker new largescale dataset paper aaai pircnn efficient multisensor 3d object detector pointbased attentive contconv fusion module paper 2019 arxiv pvrcnn pointvoxel feature set abstraction 3d object detection paper arxiv object hotspot anchorfree 3d object detection approach via firing hotspot paper arxiv scanrefer 3d object localization rgbd scan using natural language paper arxiv relation graph network 3d object detection point cloud paper arxiv pointpainting sequential fusion 3d object detection paper iccv transferable semisupervised 3d object detection rgbd data paper arxiv adaptive azimuthaware fusion network multimodal local feature 3d object detection paper arxiv frustum voxnet 3d object detection rgbd depth image paper iros frustum convnet sliding frustum aggregate local pointwise feature amodal 3d object detection paper cvpr multitask multisensor fusion 3d object detection paper 2018 cvpr frustum pointnets 3d object detection rgbd data paper code eccv deep continuous fusion multisensor 3d object detection paper iros joint 3d proposal generation object detection view aggregation paper code cvpr pointfusion deep sensor fusion 3d bounding box estimation paper icra general pipeline 3d detection vehicle paper 2017 cvpr multiview 3d object detection network autonomous driving paper code cvpr amodal detection 3d object inferring 3d bounding box 2d one rgbdepth image paper code iccv 2ddriven 3d object detection rgbd image paper 2016 cvpr deep sliding shape amodal 3d object detection rgbd image paper 2014 eccv learning rich feature rgbd image object detection segmentation paper 13 object instance segmentation 131 2d instance segmentation survey paper 2020 arxiv survey instance segmentation state art paper arxiv evolution image segmentation using deep convolutional neural network survey paper arxiv image segmentation using deep learning survey paper b twostage method 2021 cvpr look closer segment better boundary patch refinement instance segmentation paper 2020 arxiv visual identification articulated object part paper arxiv dctmask discrete cosine transform mask representation instance segmentation paper mm forest rcnn largevocabulary longtailed object detection instance segmentation paper arxiv mask point rcnn paper eccv commonalityparsing network across shape appearance partially supervised instance segmentation paper arxiv learning rgbd feature embeddings unseen object instance segmentation paper eccv levelset rcnn deep variational method instance segmentation paper eccv boundarypreserving mask rcnn paper code arxiv novel region interest extraction layer instance segmentation paper arxiv 1st place solution openimage2019 object detection instance segmentation paper arxiv fully convolutional network automatically generating image mask train mask rcnn paper arxiv fgn fully guided network fewshot instance segmentation paper arxiv pointrend image segmentation rendering paper 2019 cvpr htc hybrid task cascade instance segmentation paper 2018 cvpr panet path aggregation network instance segmentation paper cvpr masklab instance segmentation refining object detection semantic direction feature paper 2017 iccv mask rcnn paper code 2016 cvpr instanceaware semantic segmentation via multitask network cascade paper 2014 eccv simultaneous detection segmentation paper c onestage method 2021 arxiv instayolo realtime instance segmentation paper 2020 arxiv yolactedge realtime instance segmentation edge paper eccv sipmask spatial information preservation fast image video instance segmentation paper code arxiv polyyolo higher speed precise detection instance segmentation yolov3 paper cvpr centermask single shot instance segmentation point representation paper arxiv blendmask topdown meet bottomup instance segmentation paper arxiv solov2 dynamic faster stronger paper code arxiv mask encoding single shot instance segmentation paper arxiv deep affinity net instance segmentation via affinity paper arxiv pointins pointbased instance segmentation paper arxiv conditional convolution instance segmentation paper arxiv realtime semantic background subtraction paper arxiv fouriernet compact mask representation instance segmentation using differentiable shape decoder paper 2019 arxiv centermaskrealtime anchorfree instance segmentation paper code arxiv sais singlestage anchorfree instance segmentation paper arxiv yolact better realtime instance segmentation paper code iccv yolact realtime instance segmentation paper code iccv tensormask foundation dense object segmentation paper code case deep workpiece region segmentation bin picking paper 2018 cvpr panet path aggregation network instance segmentation paper code cvpr masklab instance segmentation refining object detection semantic direction feature paper 2017 cvpr fully convolutional instanceaware semantic segmentation paper 2016 eccv sharpmask learning refine object segment paper code bmvc multipathnet multipath network object detection paper code cvpr mnc instanceaware semantic segmentation via multitask network cascade paper 2015 neurips deepmask learning segment object candidate paper code cvpr hypercolumns object segmentation finegrained localization paper 2014 eccv sd simultaneous detection segmentation paper application robotics 2021 arxiv hand deep hand segmentation visual selfrecognition humanoid robot paper 2020 arxiv selfsupervised objectingripper segmentation robotic motion paper arxiv segmenting unseen industrial component heavy clutter using rgbd fusion synthetic data paper arxiv instance segmentation visible occluded region finding picking target pile object paper arxiv joint learning instance semantic segmentation robotic pickandplace heavy occlusion clutter paper panoptic segmentation 2020 arxiv banet bidirectional aggregation network occlusion handling panoptic segmentation paper arxiv axialdeeplab standalone axialattention panoptic segmentation paper arxiv towards boundingbox free panoptic segmentation paper 2019 cvpr endtoend network panoptic segmentation paper cvpr panoptic segmentation paper cvpr panoptic feature pyramid network paper cvpr upsnet unified panoptic segmentation network paper iv single network panoptic segmentation street scene understanding paper code itsc multitask network panoptic segmentation automated driving paper 132 3d instance segmentation twostage method 2021 arxiv deep learning based 3d segmentation survey paper arxiv efficientlps efficient lidar panoptic segmentation paper 2020 arxiv fpccnet fast point cloud clustering instance segmentation paper arxiv exploring dataefficient 3d scene understanding contrastive scene context paper arxiv dyco3d robust instance segmentation 3d point cloud dynamic convolution paper arxiv selfsupervised learning part mobility point cloud sequence paper arxiv learning gaussian instance segmentation point cloud paper arxiv spatial semantic embedding network fast 3d instance segmentation deep metric learning paper arxiv pointgroup dualset point grouping 3d instance segmentation paper arxiv 3dmpa multi proposal aggregation 3d semantic instance segmentation paper arxiv occuseg occupancyaware 3d instance segmentation paper arxiv learning segment 3d point cloud 2d image space paper arxiv bidirectional attention joint instance semantic segmentation point cloud paper arxiv 3dcfs fast robust joint 3d semanticinstance segmentation via coupled feature selection paper ral plane corner multipurpose primitive detection unorganized 3d point cloud paper arxiv learning memorizing representative prototype 3d point cloud semantic instance segmentation paper wacv fuseseg lidar point cloud segmentation fusing multimodal data paper 2019 arxiv point2node correlation learning dynamicnode point cloud feature modeling paper arxiv latticenet fast point cloud segmentation using permutohedral lattice paper arxiv learning optimally segment point cloud paper arxiv point cloud instance segmentation using probabilistic embeddings paper neurips exploiting local global structure point cloud semantic segmentation contextual point representation paper arxiv addressing sim2real gap robotic 3d object classification paper iros ldl 3d object segmentation label diffusion 2d image paper corl best mode separately leveraging rgb depth unseen object instance segmentation paper code arxiv gspn generative shape proposal network 3d instance segmentation point cloud paper b onestage method 2020 arxiv seggroup seglevel supervision 3d instance semantic segmentation paper eccv selfprediction joint instance semantic segmentation point cloud paper iet saso joint 3d semanticinstance segmentation via multiscale semantic association salient point clustering optimization paper aaai jsnet joint instance semantic segmentation 3d point cloud paper code icra lidarseg instance segmentation lidar point cloud paper 2019 neurips 3dbonet learning object bounding box 3d instance segmentation point cloud paper code arxiv masc multiscale affinity sparse convolution 3d instance segmentation paper cvpr asis associatively segmenting instance semantics point cloud paper cvpr sgpn similarity group proposal network 3d point cloud instance segmentation paper cvpr jsis3d joint semanticinstance segmentation 3d point cloud multitask pointwise network multivalue conditional random field paper c 3d deep learning network 2021 cvpr pointguard provably robust 3d point cloud classification paper arxiv attention model point cloud deep learning survey paper arxiv regularization strategy point cloud via rigidly mixed sample paper arxiv devil point cloud studying robustness point cloud convolution paper arxiv selfsupervised pretraining 3d feature pointcloud paper 2020 arxiv p4contrast contrastive learning pair pointpixel pair rgbd scene understanding paper arxiv hausdorff point convolution geometric prior paper arxiv pct point cloud transformer paper arxiv point transformer paper arxiv one point need directional attention point feature learning paper arxiv deep positional relational feature learning rotationinvariant point cloud analysis paper arxiv marnet multiabstraction refinement network 3d point cloud analysis paper arxiv point transformer paper neurips rotationinvariant localtoglobal representation learning 3d point cloud paper 3dv ranp resource aware neuron pruning initialization 3d cnns paper arxiv spatial transformer point convolution paper bmvc neighbourhoodinsensitive point cloud normal estimation network paper code arxiv lcnas latency constrained neural architecture search point cloud network paper arxiv global context aware convolution 3d point cloud understanding paper arxiv selfsupervised learning point cloud via orientation estimation paper arxiv searching efficient 3d architecture sparse pointvoxel convolution paper arxiv unsupervised 3d learning shape analysis via multiresolution instance discrimination paper arxiv rethinking pointnet embedding faster compact model paper arxiv pointmask towards interpretable biasresilient point cloud processing paper arxiv closer look local aggregation operator point cloud analysis paper arxiv paiconv permutable anisotropic convolutional network learning point cloud paper arxiv shapeoriented convolution neural network point cloud analysis paper arxiv lightconvpoint convolution point paper arxiv review deep learning 3d point cloud paper arxiv improving semantic analysis point cloud via auxiliary supervision local geometric prior paper 2019 arxiv quaternion equivariant capsule network 3d point cloud paper arxiv geometry sharing network 3d point cloud classification segmentation paper arxiv geometric capsule autoencoders 3d point cloud paper arxiv utility analysis network architecture 3d point cloud processing paper arxiv kaolin pytorch library accelerating 3d deep learning research paper code iccv densepoint learning densely contextual representation efficient point cloud processing paper code tog dynamic graph cnn learning point cloud paper code iccv deepgcns gcns go deep cnns paper code iccv kpconv flexible deformable convolution point cloud paper code mm srinet learning strictly rotationinvariant representation point cloud classification segmentation paper cvpr pointconv deep convolutional network 3d point cloud paper code cvpr pointweb enhancing local neighborhood feature point cloud processing paper code cvpr modeling local geometric structure 3d point cloud using geocnn paper code cvpr acnn annularly convolutional neural network point cloud paper code arxiv sawnet spatially aware deep neural network 3d point cloud processing paper arxiv pyramnet point cloud pyramid attention network graph embedding module classification segmentation paper iccv interpolated convolutional network 3d point cloud understanding paper arxiv survey deep learning advance different 3d data representation paper 2018 tog mccnn monte carlo convolution learning nonuniformly sampled point cloud paper code neurips pointcnn convolution xtransformed point paper code cvpr mining point cloud local structure kernel correlation graph pooling paper code cvpr sonet selforganizing network point cloud analysis paper code cvpr splatnet sparse lattice network point cloud processing paper code cvpr local spectral graph convolution point set feature learning paper code arxiv point convolutional neural network extension operator paper 2017 iccv escape cell deep kdnetworks recognition 3d point cloud model paper code cvpr pointnet deep learning point set 3d classification segmentation paper code neurips pointnet deep hierarchical feature learning point set metric space paper code cvpr syncspeccnn synchronized spectral cnn 3d shape segmentation paper object pose estimation part mainly discus 6d object pose estimation method categorized rgbd imagebased method point cloudbased method rgbd imagebased method mainly utilized 2d rgb image 25d depth image point cloudbased method utilize registrationbased method 21 rgbd imagebased method survey paper 2020 egw shrec 2020 track 6d object pose estimation paper eccvw bop challenge 2020 6d object localization paper arxiv survey deep learning localization mapping towards age spatial machine intelligence paper arxiv recent advance 3d object hand pose estimation paper arxiv review object pose recovery 3d bounding box detector full 6d pose estimator paper 2016 eccvw summary 4th international workshop recovering 6d object pose paper 211 correspondencebased method match 2d feature point 2021 arxiv p2net joint description detection local feature pixel point matching paper 2020 arxiv method generate high precision mesh model rgbd datasetfor 6d pose estimation task paper mm lodonet deep neural network 2d keypoint matchingfor 3d lidar odometry estimation paper eccv solving blind perspectivenpoint problem endtoend robust differentiable geometric optimization paper arxiv delta descriptor changebased place representation robust visual localization paper arxiv unconstrained matching 2d 3d descriptor 6dof pose estimation paper arxiv s2dnet learning accurate correspondence sparsetodense feature matching paper arxiv sknet deep learning point cloud via endtoend discovery spatial keypoints paper arxiv lrcnet learning discriminative feature point cloud encoding local region context paper arxiv tabletop scene analysis using knowledgesupervised mcmc paper arxiv apriltags 3d dynamic fiducial marker robust pose estimation highly reflective environment indirect communication swarm robotics paper aaai lcd learned crossdomain descriptor 2d3d matching paper project 2019 iccv glampoints greedily learned accurate match point paper 2018 tpami reweighting 1point ransacbased pnp solution handle outlier paper code 2016 eccv lift learned invariant feature transform paper 2012 3dimpvt 3d object detection localization using multimodal point pair feature paper b regress 2d projection 2021 cvpr dscposenet learning 6dof object pose estimation via dualscale consistency paper 2020 arxiv objectron large scale dataset objectcentric video wild pose annotation paper project arxiv pyrapose feature pyramid fast accurate object pose estimation domain shift paper arxiv rede endtoend object 6d pose robust estimation using differentiable outlier elimination paper arxiv 3d object detection pose estimation unseen object color image local surface embeddings paper arxiv robust rgbbased 6dof pose estimation without real pose annotation paper arxiv prima6d rotational primitive reconstruction enhanced robust 6d pose estimation paper arxiv epos estimating 6d pose object symmetry paper arxiv tackling two challenge 6d object pose estimation lack real annotated rgb image scalability number object paper arxiv squeezed deep 6dof object detection using knowledge distillation paper arxiv learning 2d3d correspondence solve blind perspectivenpoint problem paper arxiv pnpnet hybrid perspectivenpoint network paper arxiv object 6d pose estimation nonlocal attention paper arxiv 6dof object pose estimation via differentiable proxy voting loss paper 2019 arxiv dpod 6d pose object detector refiner paper cvpr segmentationdriven 6d object pose estimation paper code arxiv singlestage 6d object pose estimation paper arxiv wposenet dense correspondence regularized pixel pair pose regression paper arxiv keypose multiview 3d labeling keypoint estimation transparent object paper 2018 cvpr realtime seamless single shot 6d object pose prediction paper code arxiv estimating 6d pose localizing designated surface keypoints paper 2017 iccv bb8 scalable accurate robust partial occlusion method predicting 3d pose challenging object without using depth paper iccv ssd6d making rgbbased 3d detection 6d pose estimation great paper code icra 6dof object pose semantic keypoints paper 212 templatebased method kind method regarded regressionbased method 2021 icra investigation output parameterizations neural network single shot 6d object pose estimation paper arxiv repose realtime iterative rendering refinement 6d object pose estimation paper icra cloudaae learning 6d object pose regression online data synthesis point cloud paper arxiv gdrnet geometryguided direct regression network monocular 6d object pose estimation paper arxiv stablepose learning 6d object pose geometrically stable patch paper arxiv spatial attention improves iterative 6d object pose estimation paper 2020 cvpr pfrl posefree reinforcement learning 6d pose estimation paper arxiv inerf inverting neural radiance field pose estimation paper neuripsw endtoend differentiable 6dof object pose estimation local global constraint paper arxiv bridging performance gap pose estimation network trained real synthetic data using domain randomization paper arxiv efficientpose efficient accurate scalable endtoend 6d multi object pose estimation approach paper arxiv pose estimation specular symmetrical object paper arxiv like move 6d pose estimation action decision process paper iros indirect objecttorobot pose estimation external monocular rgb camera paper eccv cosypose consistent multiview multiobject 6d pose estimation paper arxiv pam pointwise attention module 6d object pose estimation paper iros perch 20 fast accurate gpubased perception via search object pose estimation paper code iros robust ego object 6dof motion estimation tracking paper iros se3tracknet datadriven 6d pose tracking calibrating image residual synthetic domain paper arxiv learning orientation distribution object pose estimation paper arxiv survey deep supervised hashing method image retrieval paper arxiv neural object learning 6d pose estimation using cluttered image paper arxiv track dragon multiattentional framework realtime rgbd 6dof object pose tracking paper arxiv self6d selfsupervised monocular 6d object pose estimation paper arxiv novel pose proposal network refinement pipeline better object pose estimation paper arxiv g2lnet global local network realtime 6d pose estimation embedding vector feature paper code arxiv neural mesh refiner 6dof pose estimation paper arxiv mobilepose realtime pose estimation unseen object weak shape supervision paper arxiv robust 6d object pose estimation learning rgbd feature paper arxiv hybridpose 6d object pose estimation hybrid representation paper code 2019 arxiv p2gnet poseguided point cloud generating network 6dof object pose estimation paper arxiv convposecnn dense convolutional 6d object pose estimation paper arxiv pointposenet accurate object detection anddof pose estimation point cloud paper r poserbpf raoblackwellized particle filter 6d object pose tracking paper arxiv multiview matching network 6d pose estimation paper arxiv fast 3d pose refinement rgb image paper arxiv maskedfusion maskbased 6d object pose detection paper corl scenelevel pose estimation multiple instance densely packed object paper iros learning estimate pose shape handheld object rgb image paper irosw motionnets 6d tracking unknown object unseen environment using rgb paper iccv dpod 6d pose object detector refiner paper iccv cdpn coordinatesbased disentangled pose network realtime rgbbased 6dof object pose estimation paper code iccv pix2pose pixelwise coordinate regression object 6d pose estimation paper code iccv explaining ambiguity object detection 6d pose visual data paper arxiv active 6d multiobject pose estimation cluttered scenario deep reinforcement learning paper arxiv accurate 6d object pose estimation pose conditioned mesh reconstruction paper arxiv learning object localization 6d pose estimation simulation weakly labeled real image paper ichr refining 6d object pose prediction using abstract renderandcompare paper arxiv deep6dpose recovering 6d object pose single rgb image paper arxiv realtime backgroundaware 3d textureless object pose estimation paper iros silhonet rgb method 6d object pose estimation paper 2018 eccv aae implicit 3d orientation learning 6d object detection rgb image paper code eccv deepimdeep iterative matching 6d pose estimation paper code r posecnn convolutional neural network 6d object pose estimation cluttered scene paper code iros robust 6d object pose estimation cluttered scene using semantic segmentation pose regression network paper 2012 accv model based training detection pose estimation textureless 3d object heavily cluttered scene paper 213 votingbased method 2021 arxiv vote centerdof pose estimation rgbd image radial keypoint voting paper 2020 arxiv hybrid approach 6dof pose estimation paper 2019 cvpr pvnet pixelwise voting network 6dof pose estimation paper code 2017 tpami robust 3d object tracking monocular image using stable part paper access fast object pose estimation using adaptive threshold binpicking paper 2014 eccv learning 6d object pose estimation using 3d object coordinate paper eccv latentclass hough forest 3d object detection pose estimation paper datasets linemod model based training detection pose estimation textureless 3d object heavily cluttered scene accv 2012 paper database ycb datasets ycb object model set towards common benchmark manipulation research ieee international conference advanced robotics icar 2015 paper tless datasets tless rgbd dataset 6d pose estimation textureless object ieee winter conference application computer vision wacv 2017 paper homebreweddb rgbd dataset 6d pose estimation 3d object iccvw 2019 paper ycbm multicamera rgbd dataset object recognition 6dof pose estimation arxiv 2020 paper database 22 point cloudbased method partialview point cloud aligned complete shape order obtain 6d pose generally coarse registration conduct firstly provide intial alignment dense registration method like icp iterative closest point conducted obtain final 6d pose 221 correspondencebased method 2021 arxiv pairwise point cloud registration using graph matching rotationinvariant feature paper icra 3d3l deep learned 3d keypoint detection description lidar paper arxiv prinsprin extracting pointwise rotation invariant feature paper 2020 arxiv geometric robust descriptor 3d point cloud paper arxiv spinnet learning general surface descriptor 3d point cloud registration paper arxiv ukpgan unsupervised keypoint ganeration paper icip distinctive 3d local deep descriptor paper arxiv 3d correspondence grouping compatibility feature paper eccv dh3d deep hierarchical 3d descriptor robust largescale 6dof relocalization paper arxiv radial intersection count image clutter resistant 3d shape descriptor paper prl fuzzy logic histogram normal orientationbased 3d keypoint detection point cloud paper arxiv latent fingerprint registration via matching densely sampled point paper arxiv rpmnet robust point matching using learned feature paper arxiv endtoend learning local multiview descriptor 3d point cloud paper arxiv d3feat joint learning dense detection description 3d local feature paper arxiv selfsupervised point set local descriptor point cloud registration paper arxiv stickypillars robust feature matching point cloud using graph neural network paper 2019 arxiv 3dregnet deep neural network 3d point registration paper code cvpr perfect match 3d point cloud matching smoothed density paper arxiv lcd learned crossdomain descriptor 2d3d matching paper 2018 eccv 3dfeatnet weakly supervised local 3d feature point cloud registration paper code 2017 cvpr 3dmatch learning local geometric descriptor rgbd reconstruction paper code 2016 arxiv lesson amazon picking challenge paper arxiv team delft robot winner amazon picking challenge 2016 paper ijcv comprehensive performance evaluation 3d local feature descriptor paper 2014 cviu shot unique signature histogram surface texture description paper 2011 iccvw cadmodel recognition 6dof pose estimation using 3d cue paper 2009 icra fast point feature histogram fpfh 3d registration paper 222 templatebased method survey paper 2021arxiv comprehensive survey point cloud registration paper 2020arxiv deep learning meet data alignment review deep registration network drns paper 2020arxiv least square optimization theory practice paper 2021 arxiv deep weighted consensus dwc dense correspondence confidence map 3d shape registration paper arxiv icos efficient highly robust point cloud registration correspondence paper arxiv improved discriminative optimization 3d rigid point cloud registration paper arxiv ransic fast highly robust estimation rotation search point cloud registration using invariant compatibility paper cvpr rpsrnet endtoend trainable rigid point set registration network using barneshut 2dtree representation paper arxiv lsgcpd coherent point drift local surface geometry point cloud registration paper arxiv 3d point cloud registration multiscale architecture selfsupervised finetuning paper code cvpr reagent point cloud registration using imitation reinforcement learning paper code arxiv 3dmndt 3d multiview registration method based normal distribution transform paper arxiv generating annotated training data 6d object pose estimation operational environment minimal user interaction paper arxiv rpointhop green accurate unsupervised point cloud registration method paper code cvpr robust point cloud registration framework based deep graph matching paper code cvpr pointdsc robust point cloud registration using deep spatial consistency paper code arxiv iron invariantbased highly robust point cloud registration paper arxiv dynamical pose estimation paper arxiv omnet learning overlapping mask partialtopartial point cloud registration paper arxiv unsupervisedrr unsupervised point cloud registration via differentiable rendering paper arxiv parameterised quantum circuit approach point set matching paper arxiv hybrid trilinear bilinear programming aligning partially overlapping point set paper arxiv provably approximated icp paper 2020 iros endtoend 3d point cloud learning registration task using virtual correspondence paper arxiv predator registration 3d point cloud low overlap paper arxiv recurrent multiview alignment network unsupervised surface registration paper arxiv 3d registration selfoccluded object context paper arxiv multifeatures guidance network partialtopartial point cloud registrationm paper arxiv point cloud registration based consistency evaluation rigid transformation parameter space paper arxiv efficient robust metric ransac hypothesis 3d rigid registration paper irosw improving iterative closest point algorithm using lie algebra paper arxiv graphite graphinduced feature extraction point cloud registration paper 3dv registration loss learning deep probabilistic point set registration paper 3dv masknet fullyconvolutional network estimate inlier point paper arxiv 3d metaregistration learning learn registration 3d point cloud paper arxiv termination criterion probabilistic pointclouds registration paper accv mapping sparse 3d data using alternating projection paper accv best buddy registration point cloud paper arxiv deep3daligner unsupervised 3d point set registration network optimizable latent vector paper arxiv fast gravitational approach rigid point set registration ordinary differential equation paper arxiv unsupervised partial point set registration via joint shape completion registration paper vcip unsupervised point cloud registration via salient point analysis spa paper arxiv deterministic pointnetlk generalized registration paper eccv deepgmr learning latent gaussian mixture model registration paper itsc deepclr correspondenceless architecture deep endtoend point cloud registration paper arxiv fast robust iterative closet point paper arxiv phong surface efficient 3d model fitting using lifted optimization paper arxiv aligning partially overlapping point set inner approximation algorithm paper arxiv analysis svd deep rotation estimation paper arxiv applying lie group approach rigid registration point cloud paper arxiv unsupervised learning 3d point set registration paper arxiv minimum potential energy point cloud robust global registration paper arxiv learning 3d3d correspondence oneshot partialtopartial registration paper arxiv dynamical perspective point cloud registration paper arxiv featuremetric registration fast semisupervised approach robust point cloud registration without correspondence paper cvpr deep global registration paper arxiv dpdist comparing point cloud using deep point cloud distance paper arxiv single shot 6d object pose estimation paper arxiv benchmark point cloud registration algorithm paper code arxiv pointgmm neural gmm network point cloud paper arxiv scenecad predicting object alignment layout rgbd scan paper arxiv teaser fast certifiable point cloud registration paper code arxiv plane pair matching efficient 3d view registration paper arxiv learning multiview 3d point cloud registration paper icra robust occlusionaware pose estimation object grasped adaptive hand paper code arxiv noniterative onestep solution point set registration problem pose estimation without correspondence paper arxiv 6d object pose regression via supervised learning point cloud paper 2019 iros continuous closerange 3d object pose estimation paper arxiv one framework register pointnet encoding point cloud alignment paper arxiv deepicp endtoend deep neural network 3d point cloud registration paper neurips prnet selfsupervised learning partialtopartial registration paper cvpr pointnetlk robust efficient point cloud registration using pointnet paper code iccv endtoend cad model retrieval 9dof alignment 3d scan paper arxiv iterative matching point paper arxiv deep closest point learning representation point cloud registration paper code arxiv pcrnet point cloud registration network using pointnet encoding paper code 2016 tpami goicp globally optimal solution 3d icp pointset registration paper code 2014 sgp super 4pcs fast global pointcloud registration via smart indexing paper code 223 votingbased method 2021 cvpr ffb6d full flow bidirectional fusion network 6d pose estimation paper 2020 arxiv 3d pointtokeypoint voting network 6d pose estimation paper arxiv 3dpvnet patchlevel 3d hough voting network 6d pose estimation paper arxiv morefusion multiobject reasoning 6d pose estimation volumetric fusion paper code arxiv yoloff learn offset robust 6dof object pose estimation paper arxiv lrfnet learning local reference frame 3d local shape description matching paper 2019 arxiv pvn3d deep pointwise 3d keypoints voting network 6dof pose estimation paper code cvpr densefusion 6d object pose estimation iterative dense fusion paper code 23 categorylevel method 231 categorylevel 6d pose estimation 2021 arxiv towards realworld categorylevel articulation pose estimation paper arxiv captra categorylevel pose tracking rigid articulated object point cloud paper cvpr fsnet fast shapebased network categorylevel 6d object pose estimation decoupled rotation mechanism paper arxiv dualposenet categorylevel 6d object pose size estimation using dual pose network refined learning pose consistency paper 2020 iros fully convolutional geometric feature categorylevel object alignment paper arxiv category level object pose estimation via neural analysisbysynthesis paper eccv geometric correspondence field learned differentiable rendering 3d pose refinement wild paper eccv shape prior deformation categorical 6d object pose size estimation paper arxiv cps classlevel 6d pose shape estimation monocular image paper arxiv learning canonical shape space categorylevel 6d object pose size estimation paper 2019 arxiv categorylevel articulated object pose estimation paper arxiv latentfusion endtoend differentiable reconstruction rendering unseen object pose estimation paper arxiv 6pack categorylevel 6d pose tracker anchorbased keypoints paper code arxiv selfsupervised 3d keypoint learning egomotion estimation paper cvpr normalized object coordinate space categorylevel 6d object pose size estimation paper code arxiv instance categorylevel 6d object pose estimation paper arxiv kpam keypoint affordances categorylevel robotic manipulation paper 232 3d shape reconstruction image 2021 arxiv optimal pose shape estimation categorylevel 3d object perception paper arxiv fignerf figureground neural radiance field 3d object category modelling paper cvpr shape material capture home paper cvpr monte carlo scene search 3d scene understanding paper arxiv holistic 3d scene understanding single image implicit representation paper arxiv adjoint rigid transform network selfsupervised alignment 3d shape paper arxiv joint learning 3d shape retrieval deformation paper 2020 arxiv point multiobject 3d reconstruction paper arxiv vid2cad cad model alignment using multiview constraint video paper arxiv holistic 3d human scene mesh estimation single view image paper eccv pix2surf learning parametric 3d surface model object image paper arxiv skeletonnet topologypreserving solution learning mesh reconstruction object surface rgb image paper arxiv openrooms endtoend open framework photorealistic indoor scene datasets paper eccv mask2cad 3d shape prediction learning segment retrieve paper cvpr oasis largescale dataset single image 3d wild paper eccv ladybird quasimonte carlo sampling deep implicit field based 3d reconstruction symmetry paper eccv associative3d volumetric reconstruction sparse view paper eccv shape viewpoint without keypoints paper arxiv 3d shape reconstruction vision touch paper arxiv joint handobject 3d reconstruction single image crossbranch feature fusion paper arxiv pix2vox multiscale contextaware 3d object reconstruction single multiple image paper arxiv 3d shape reconstruction freehand sketch paper arxiv learning detect 3d reflection symmetry singleview reconstruction paper arxiv convolutional generation textured 3d mesh paper arxiv 3d reconstruction novel object shape single image paper arxiv novel object viewpoint estimation reconstruction alignment paper arxiv uclidnet single view reconstruction object space paper arxiv surfacenet endtoend 3d neural network sparse multiview stereopsis paper arxiv frodo detection 3d object paper arxiv corenet coherent 3d scene reconstruction single rgb image paper arxiv reconstruct rasterize backprop dense shape pose estimation single image paper arxiv looking glass neural 3d reconstruction transparent shape paper arxiv fewshot singleview 3d object reconstruction compositional prior paper arxiv neural object descriptor multiview shape reconstruction paper arxiv leveraging 2d data learn textured 3d mesh generation paper arxiv deep 3d capture geometry reflectance sparse multiview image paper arxiv selfsupervised 2d image 3d shape translation disentangled representation paper arxiv atlas endtoend 3d scene reconstruction posed image paper arxiv instant recovery shape spectrum via latent space connection paper arxiv selfsupervised singleview 3d reconstruction via semantic consistency paper arxiv meta3d singleview 3d object reconstruction shape prior memory paper arxiv stdnet structurepreserving topologyadaptive deformation network 3d reconstruction single image paper arxiv inverse graphic gan learning generate 3d shape unstructured 2d data paper arxiv deep nrsfm towards 3d reconstruction wild paper arxiv learning correct 3d reconstruction multiple view paper 2019 arxiv boundary cue 3d object shape recovery paper arxiv learning generate dense point cloud texture multiple category paper arxiv front2back single view 3d shape reconstruction via front back prediction paper arxiv differentiable volumetric rendering learning implicit 3d representation without 3d supervision paper arxiv sdfdiff differentiable rendering signed distance field 3d shape optimization paper arxiv 3dgmnet learning estimate 3d shape single image gaussian mixture paper arxiv deeplearning assisted highresolution binocular stereo depth reconstruction paper 233 3d shape rendering 2020 neurips unsupervised continuous object representation network novel view synthesis paper eccv auto3d novel view synthesis unsupervisely learned variational viewpoint global 3d representation paper icml drwr differentiable renderer without rendering unsupervised 3d structure learning silhouette image paper arxiv intrinsic autoencoders joint neural rendering intrinsic image decomposition paper arxiv spsg selfsupervised photometric scene generation rgbd scan paper arxiv differentiable rendering survey paper arxiv equivariant neural rendering paper 2019 arxiv synsin endtoend view synthesis single image paper project arxiv neural point cloud rendering via multiplane projection paper arxiv neural voxel renderer learning accurate controllable rendering tool paper 2d planar grasp 31 estimating grasp contact point 2021 arxiv lightweight convolutional neural network gaussianbased grasping representation robotic grasping detection paper 2020 arxiv s3k selfsupervised semantic keypoints robotic manipulation via multiview consistency paper arxiv dexterous robotic grasping objectcentric visual affordances paper iros cloth region segmentation robust grasp selection paper 2019 arxiv multimodal transfer learning grasping transparent specular object paper iros gqstn optimizing oneshot grasp detection based robustness classifier paper icra mechanical search multistep retrieval target object occluded clutter paper icra metagrasp data efficient grasping affordance interpreter network paper iros glassloc plenoptic grasp pose detection transparent clutter paper icra multiview picking nextbestview reaching improved grasping clutter paper code 2018 r closing loop robotic grasping realtime generative grasp synthesis approach paper bmvc ensemblenet improving grasp detection using ensemble convolutional neural network paper icra robotic pickandplace novel object clutter multiaffordance grasping crossdomain image matching paper code 2017 r dexnet 20 deep learning plan robust grasp synthetic point cloud analytic grasp metric paper code 2014 icra fast graspability evaluation single depth map bin picking general grippers paper dataset dexnet synthetic dataset 67 million point cloud grasp robust analytic grasp metric generated thousand 3d model 32 estimating oriented rectangle 2020 arxiv effective deployment cnns 3dof pose estimation grasping industrial setting paper arxiv robotic grasp detection using novel twostage approach paper iros grasping detection network uncertainty estimation confidencedriven semisupervised domain adaptation paper arxiv orientation attentive robot grasp synthesis paper arxiv stereo vision based singleshot 6d object pose estimation binpicking robot manipulator paper arxiv sgdn segmentationbased grasp detection network unsymmetrical threefinger gripper paper arxiv eventbased robotic grasping detection neuromorphic vision sensor eventstream dataset paper arxiv online selfsupervised learning object picking detecting optimum grasping position using metric learning approach paper arxiv multitask learning framework graspingposition detection fewshot classification paper arxiv rigidsoft interactive learning robust grasping paper arxiv optimizing correlated graspability score grasp regression better grasp prediction paper arxiv semisupervised grasp detection representation learning vector quantized latent space paper 2019 arxiv antipodal robotic grasping using generative residual convolutional neural network paper iros domain independent unsupervised learning grasp novel object paper sensor vision robust robot manipulation paper arxiv form2fit learning shape prior generalizable assembly disassembly paper code iros grip generative robust inference perception semantic robot manipulation adversarial environment paper arxiv efficient fully convolution neural network generating pixel wise robotic grasp high resolution image paper arxiv single multitask deep neural network postprocessing object detection reasoning robotic grasp detection paper iros roibased robotic grasp detection object overlapping scene paper roman realtime grasp pose estimation novel object densely cluttered environment paper 2018 iros fully convolutional grasp detection network oriented anchor box paper arxiv realworld multiobject multigrasp detection paper arxiv classification based grasp detection using spatial transformer network paper arxiv multitask convolutional neural network autonomous robotic grasping object stacking scene paper 2017 iros robotic grasp detection using deep convolutional neural network paper icmite robust robot grasp detection multimodal fusion paper icra hybrid deep architecture robotic grasp detection paper 2016 icra supersizing selfsupervision learning grasp 50k try 700 robot hour paper icra object discovery grasp detection shared convolutional neural network paper 2015 icra realtime grasp detection using convolutional neural network paper code ijrr deep learning detecting robotic grasp paper 2011 icra efficient grasping rgbd image learning using new rectangle representation paper datasets cornell dataset dataset consists 1035 image 280 different object jacquard dataset jacquard large scale dataset robotic grasp detection ieee international conference intelligent robot system 2018 paper 6dof grasp grasp representation grasp represented 6dof pose 3d domain gripper grasp object various angle input task 3d point cloud rgbd sensor task contains two stage first stage target object extracted scene second stage exists existing 3d model 6d pose object could computed exists 3d model 6dof grasp pose computed method 41 method based singleview point cloud situation exist 3d model 6dof grasp estimated available partial data implemented directly estimating partial view point cloud indirectly estimating shape completion 411 method estimating candidate grasp 2021 icra contactgraspnet efficient 6dof grasp generation cluttered scene paper code icra rgb matter learning 7dof grasp pose monocular rgbd image paper 2020 arxiv reactive humantorobot handover arbitrary object paper arxiv acronym largescale grasp dataset based simulation paper corl object different grasp data semantic knowledge taskoriented grasping paper corl coarsetofine c2f representation endtoend 6dof grasp detection paper arxiv goalauxiliary actorcritic 6d robotic grasping point cloud paper neurips grasp proposal network endtoend solution visual learning robotic grasp paper arxiv 6dof grasp planning using fast 3d reconstruction grasp quality cnn paper arxiv transferable active grasping real embodied dataset paper code arxiv go fetch mobile manipulation unstructured environment paper arxiv realtime fruit recognition grasp estimation autonomous apple harvesting paper arxiv pointnet grasping learning endtoend spatial grasp generation algorithm sparse point cloud paper arxiv egad evolved grasping analysis dataset diversity reproducibility robotic manipulation paper arixiv regnet regionbased grasp network singleshot grasp detection point cloud paper ral graspa 10 graspa robot arm grasping performance benchmark paper code arxiv graspnet largescale clustered densely annotated dataset object grasping paper 2019 isrr billion way grasp evaluation grasp sampling scheme dense physicsbased grasp data set paper project arxiv 6dof grasping targetdriven object manipulation clutter paper iros grasping unknown object based gripper workspace sphere paper arxiv learning generate 6dof grasp pose reachability awareness paper corl s4g amodal singleview singleshot se3 grasp detection cluttered scene paper iccv 6dof graspnet variational grasp generation object manipulation paper code icra pointnetgpd detecting grasp configuration point set paper code ijars fast geometrybased computation grasping point threedimensional point cloud paper 2017 ijrr grasp pose detection point cloud paper code icinco using geometry detect grasping point 3d unknown point cloud paper 2015 arxiv using geometry detect grasp 3d point cloud paper 2010 ra learning grasping point shape context paper 412 method transferring grasp grasp transfer 2021 arxiv supervised training dense object net using optimal descriptor industrial robotic application paper 2020 arxiv dgcmnet dense geometrical correspondence matching network incremental experiencebased robotic grasping paper 2019 arxiv using synthetic data deep network recognize primitive shape object grasping paper icra transferring grasp configuration using active learning local replanning paper 2018 arxiv dense object net learning dense visual object descriptor robotic manipulation paper 2017 aip fast grasping unknown object using principal component analysis paper 2016 humanoid partbased grasp planning familiar object paper 2015 ra categorybased task specific grasping paper 2003 icra automatic grasp planning using shape primitive paper b nonrigid registration 2020 arxiv categorylevel 3d nonrigid registration singleview rgb image paper arxiv neural nonrigid tracking paper arxiv quasinewton solver robust nonrigid registration paper arxiv mina convex mixedinteger programming nonrigid shape alignment paper 2019 arxiv nonrigid point set registration network paper code 2018 ral transferring categorybased functional grasping skill latent space nonrigid registration paper ra learning postural synergy categorical grasping shape space registration paper ra autonomous dualarm manipulation familiar object paper c shape correspondence 2020 arxiv corrnet3d unsupervised endtoend learning dense correspondence 3d point cloud paper arxiv 3d meta point signature learning learn 3d point signature 3d dense shape correspondence paper neurips learning implicit function topologyvarying dense 3d shape correspondence paper code neurips weakly supervised deep functional map shape matching paper arxiv dual iterative refinement method nonrigid shape matching paper eccv mapping cycle sinkhorn regularized unsupervised learning point cloud shape paper arxiv rpmnet recurrent prediction motion part point cloud paper arxiv meta deformation network meta functionals shape correspondence paper jmse geometric deep learning shape correspondence mass customization threedimensional printing paper arxiv semantic correspondence via 2d3d2d cycle paper arxiv selfsupervised feature learning crossmodality crossview correspondence paper arxiv deep geometric functional map robust feature learning shape correspondence paper code arxiv efficient robust shape correspondence via sparsityenforced quadratic assignment paper cvm learning local shape descriptor computing nonrigid dense correspondence paper jcde embedded spectral descriptor learning pointwise correspondence metric via siamese neural network paper arxiv sapien simulated partbased interactive environment paper tvcg voting distortion point geometric processing paper arxiv sketchdesc learning local sketch descriptor multiview correspondence paper 2019 arxiv finegrained object semantic understanding correspondence paper iros multistep pickandplace task using objectcentric dense correspondence paper code arxiv unsupervised cycleconsistent deformation shape matching paper arxiv zoomout spectral upsampling efficient shape correspondence paper cg partial correspondence 3d shape using property nearestneighbor field paper 42 method based complete shape 421 method estimating 6d object pose 2020 iros transferring experience simulation real world precise pickandplace task highly cluttered scene paper arxiv objectdriven active mapping accurate object pose estimation robotic grasping paper arxiv fast robust binpicking system densely piled industrial object paper 2017 iros segicp integrated deep semantic segmentation pose estimation paper icra multiview selfsupervised deep learning 6d pose estimation amazon picking challenge paper code 2010 simpar opengrasp toolkit robot grasping simulation paper 2009 icar automatic grasp planning system service robot paper 2004 ram graspit versatile simulator robotic grasping paper code 422 method shape completion shape completionbased grasp 2020 arxiv pickplace uncertain object instance segmentation shape completion paper arxiv amodal 3d reconstruction robotic manipulation via stability connectivity paper icra learning continuous 3d reconstruction geometrically aware grasping paper code arxiv robotic grasping combined imagebased grasp proposal 3d reconstruction paper 2019 arxiv cleargrasp 3d shape estimation transparent object manipulation paper arxiv kpamsc generalizable manipulation planning using keypoint affordance shape completion paper code arxiv dataefficient learning simtoreal robotic grasping using deep point cloud prediction network paper iros robust grasp planning uncertain shape completion paper arxiv multimodal geometric learning grasping manipulation paper 2018 icra learning 6dof grasping interaction via deep geometryaware 3d representation paper iros 3d shape perception monocular vision touch shape prior paper 2017 iros shape completion enabled robotic grasping paper b shape completion generation 2021 arxiv asfmnet asymmetrical siamese feature matching network point completion paper cvpr variational relational point completion network paper cvpr viewguided point cloud completion paper arxiv 3d semantic scene completion survey paper cvpr cycle4completion unpaired point cloud completion using cycle transformation missing region coding paper cvpr stylebased point generator adversarial rendering point cloud completion paper cvpr diffusion probabilistic model 3d point cloud generation paper arxiv deepmetahandles learning deformation metahandles 3d mesh biharmonic coordinate paper arxiv generation adaption ganbased approach 3d domain adaption point cloud paper arxiv hyperpocket generative point cloud completion paper 2020 arxiv seeing behind object 3d multiobject tracking rgbd sequence paper arxiv pmpnet point cloud completion learning multistep point moving path paper arxiv towards partbased understanding rgbd scan paper arxiv learning geometryimage representation 3d point cloud generation paper arxiv diverse plausible shape completion ambiguous depth image paper arxiv selfsupervised cascaded refinement network point cloud completion paper arxiv refinement predicted missing part enhance point cloud completion paper 3dv progressive conditional generative adversarial network generating dense colored 3d point cloud paper neurips skeletonbridged point completion global inference local adjustment paper arxiv pretraining completing point cloud paper eccvw implicit feature network texture completion partial 3d data paper arxiv lmscnet lightweight multiscale 3d semantic completion paper arxiv selfsampling neural point cloud consolidation paper eccv pointmixup augmentation point cloud paper eccv learning gradient field shape generation paper eccv softpoolnet shape descriptor point cloud completion classification paper eccv weaklysupervised 3d shape completion wild paper arxiv vpcnet completion 3d vehicle ml point cloud paper arxiv lpmnet latent part modification generation 3d point cloud paper arxiv dsmnet disentangled structured mesh net controllable generation fine geometry paper arxiv kaplan 3d point descriptor shape completion paper arxiv point cloud completion learning shape prior paper tog symmetrynet learning predict reflectional rotational symmetry 3d shape singleview rgbd image paper arxiv mrgan multirooted 3d shape generation unsupervised part disentanglement paper arxiv neural mesh flow 3d manifold mesh generation via diffeomorphic flow paper project eccv discrete point flow network efficient point cloud generation paper arxiv progressive point cloud deconvolution generation network paper arxiv point set voting partial point cloud analysis paper arxiv 3d topology transformation generative adversarial network paper arxiv detail preserved point cloud completion via separated feature aggregation paper arxiv deep octreebased cnns outputguided skip connection 3d shape scene completion paper arxiv grnet gridding residual network dense point cloud completion paper ral gfpnet deep network learning shape completion generic fitted primitive paper arxiv point cloud completion skipattention network hierarchical folding paper arxiv pointtrinet learned triangulation 3d point set paper arxiv deepsdf x sim3 extending deepsdf automatic 3d shape retrieval similarity transform estimation paper arxiv anisotropic convolutional network 3d semantic scene completion paper arxiv cascaded refinement network point cloud completio paper arxiv generative pointnet energybased learning unordered point set 3d generation reconstruction classification paper arxiv intrinsic point cloud interpolation via dual latent space navigation paper arxiv modeling 3d shape reinforcement learning paper arxiv pfnet point fractal network 3d point cloud completion paper arxiv hypernetwork approach generating point cloud paper arxiv implicit function feature space 3d shape reconstruction completion paper arxiv polygen autoregressive generative model 3d mesh paper arxiv blockgan learning 3d objectaware scene representation unlabelled image paper arxiv implicit geometric regularization learning shape paper arxiv whole greater sum nonrigid part paper arxiv pt2pc learning generate 3d point cloud shape part tree condition paper arxiv multimodal shape completion via conditional generative adversarial network paper arxiv symmetry detection occluded point cloud using deep learning paper 2019 arxiv inferring occluded geometry improves performance retrieving object dense clutter paper 2018 3dorw completion cultural heritage object rotational symmetry paper c depth completion estimation 2021 arxiv single image depth estimation overview paper cvpr depth completion using planeresidual representation paper arxiv lead lidar extender autonomous driving paper 2020 arxiv deep learning based monocular depth prediction datasets method application paper iros depth completion via inductive fusion planar lidar monocular camera paper bmvc desc domain adaptation depth estimation via semantic consistency paper code arxiv adaptive contextaware multimodal network depth completion paper arxiv depth completion rgb prior paper iros balanced depth completion dense depth inference sparse range measurement via kissgp paper arxiv improving monocular depth estimation leveraging structural awareness complementary datasets paper eccv featuremetric loss selfsupervised learning depth egomotion paper eccv nonlocal spatial propagation network depth completion paper code iros unrectdepthnet selfsupervised monocular depth estimation using generic framework handling common camera distortion model paper iros 360 depth estimation multiple fisheye image origami crown representation icosahedron paper eccv selfsupervised monocular depth estimation solving dynamic object problem semantic guidance paper eccv p2net patchmatch planeregularization unsupervised indoor depth estimation paper arxiv p2d selfsupervised method depth estimation polarimetry paper arxiv mininet extremely lightweight convolutional neural network realtime unsupervised monocular depth estimation paper ral discontinuous smooth depth completion binary anisotropic diffusion tensor paper arxiv increasedrange unsupervised monocular depth estimation paper arxiv targeted adversarial perturbation monocular depth prediction paper arxiv aced accurate edgeconsistent monocular depth estimation paper arxiv selfsupervised joint learning framework depth estimation via implicit cue paper arxiv depth poking learning estimate depth selfsupervised grasping paper arxiv uncertaintyaware cnns depth completion uncertainty beginning end paper arxiv survey deep learning technique stereobased depth estimation paper arxiv realtime single image depth perception wild handheld device paper arxiv sharingan combining synthetic real data unsupervised geometry estimation paper arxiv plgin pluggable geometric consistency loss wasserstein distance monocular depth estimation paper cvpr bi3d stereo depth estimation via binary classification paper cvpr focus defocus bridging synthetic real domain gap depth estimation paper arxiv decoder modulation indoor depth completion paper cvpr uncertainty selfsupervised monocular depth estimation paper code arxiv consistent video depth estimation paper arxiv selfsupervised attention learning depth egomotion estimation paper arxiv pseudo rgbd selfimproving monocular slam depth prediction paper arxiv depthnet nano highly compact selfnormalizing neural network monocular depth estimation paper arxiv realmonodepth selfsupervised monocular depth estimation general scene paper arxiv monocular depth estimation selfsupervised instance adaptation paper arxiv guiding monocular depth estimation using depthattention volume paper arxiv 3d photography using contextaware layered depth inpainting paper arxiv occlusionaware depth estimation adaptive normal constraint paper arxiv edge depth explicit constraint segmentation depth paper arxiv selfsupervised monocular trained depth estimation using selfattention discrete disparity volume paper arxiv defeatnet general monocular depth via simultaneous unsupervised representation learning paper arxiv adversarial attack monocular depth estimation paper arxiv monocular depth prediction continuous 3d loss paper arxiv 3ddepthnet point cloud guided depth completion network sparse depth single color image paper arxiv depth estimation learning triangulation densification sparse point multiview stereo paper arxiv monocular depth estimation based deep learning overview paper arxiv scene completenesssaware lidar depth completion driving scenario paper arxiv fast depth estimation view synthesis paper arxiv active depth estimation stability analysis application paper arxiv uncertainty depth estimation gated image 3d reconstruction paper arxiv unsupervised learning depth optical flow pose occlusion 3d geometry paper arxiv atvsnet aggregated twoview stereo network multiview stereo depth estimation paper arxiv predicting sharp accurate occlusion boundary monocular depth estimation using displacement field paper iclr semanticallyguided representation learning selfsupervised monocular depth paper arxiv 3d gated recurrent fusion semantic scene completion paper arxiv applying depthsensing automated surgical manipulation da vinci robot paper arxiv fast generation high fidelity rgbd image deeplearning adaptive convolution paper arxiv diversedepth affineinvariant depth prediction using diverse data paper arxiv depth map estimation dynamic scene using prior depth information paper arxiv fisnets fullimage supervised network monocular depth estimation paper icra depth based semantic scene completion position importance aware loss paper arxiv resdepth learned residual stereo reconstruction paper arxiv single image depth estimation trained via depth defocus cue paper arxiv routedfusion learning realtime depth map fusion paper arxiv forget past recurrent depth estimation monocular video paper aaai morphing sampling network dense point cloud completion paper code aaai cspn learning context resource aware convolutional spatial propagation network depth completion paper 2019 arxiv normal assisted stereo depth estimation paper arxiv geometryaware generation adversarial cooperative point cloud paper arxiv deepsfm structure motion via deep bundle adjustment paper cviu benefit adversarial training monocular depth estimation paper iccv learning joint 2d3d representation depth completion paper iccv deep optic monocular depth estimation 3d object detection paper arxiv deep classification network monocular depth estimation paper iccv depth completion sparse lidar data depthnormal constraint paper arxiv imagebased 3d object reconstruction stateoftheart trend deep learning era paper arxiv realtime visionbased depth reconstruction nvidia jetson paper iros selfsupervised 3d shape viewpoint estimation single image robotics paper arxiv mesh rcnn paper arxiv monocular depth estimation survey paper 2018 3dv pcn point completion network paper code neurips learning reconstruct shape unseen class paper code eccv learning shape prior singleview 3d completion reconstruction paper code cvpr deep depth completion single rgbd image paper code point cloud denoising samping 2020 arxiv spunet selfsupervised point cloud upsampling coarsetofine reconstruction selfprojection optimization paper arxiv deep magnificationarbitrary upsampling 3d point cloud paper arxiv cadpu curvatureadaptive deep learning solution point set upsampling paper mm differentiable manifold reconstruction point cloud denoising paper arxiv quick review recent trend 3d point cloud data compression technique challenge direct processing 3d compressed domain paper arxiv learning graphconvolutional representation point cloud denoising paper arxiv mopsnet matrix optimizationdriven network taskoriented 3d point cloud downsampling paper arxiv deep featurepreserving normal estimation point cloud filtering paper arxiv selfsupervised learning domain adaptation pointclouds paper arxiv nonlocal partaware point cloud denoising paper arxiv pugeonet geometrycentric network 3d point cloud upsampling paper 2019 arxiv cnnbased lidar point cloud denoising adverse weather paper arxiv pugcn point cloud upsampling using graph convolutional network paper code iccv pugan point cloud upsampling adversarial network paper code cvpr patchbased progressive 3d point set upsampling paper code arxiv samplenet differentiable point cloud sampling paper code 2018 cvpr punet point cloud upsampling network paper code taskoriented method 51 taskoriented manipulation 2020 iros learning sequencing objectcentric manipulation skill industrial task paper rssw selfsupervised goalconditioned pick place paper arxiv selfadapting recurrent model object pushing learning simulation paper arxiv complex robotic manipulation via graphbased hindsight goal generation paper tor learning transferable push manipulation skill novel context paper ral taskdriven perception manipulation constrained placement unknown object paper arxiv visionbased control knuckle boom crane online cable length estimation paper arxiv point cloudbased method automatic groove detection trajectory generation robotic arc welding task paper arxiv neuromorphic eventbased slip detection suppression robotic grasping manipulation paper arxiv combinatorial 3d shape generation via sequential assembly paper arxiv learning visual policy building 3d shape category paper arxiv relocate object rearrangement inside cluttered confined environment robotic manipulation paper arxiv correspondence network adaptive neighbourhood consensus paper arxiv development robotic system automated decaking 3dprinted part paper arxiv team o2as world robot summit 2018 approach robotic kitting assembly task using general purpose grippers tool paper arxiv towards mobile multitask manipulation confined integrated environment irregular object paper arxiv autonomous industrial assembly using force torque rgbd sensing paper ral deep learning approach grasping invisible paper code 2019 arxiv keto learning keypoint representation tool manipulation paper arxiv learning taskoriented grasping human activity datasets paper 52 grasp affordance 2021 arxiv catgrasp learning categorylevel taskrelevant grasping clutter simulation paper code cvpr 3d affordancenet benchmark visual object affordance understanding paper 2020 arxiv learning grasp 3d object using deep residual unets paper 2019 iros detecting robotic affordances novel object regional attention attribute paper iros learning grasp affordance reasoning semantic relation paper arxiv automatic pregrasps generation unknown 3d object paper iecon novel object slicing based grasp planner 3d object grasping using underactuated robot gripper paper 2018 icra affordancenet endtoend deep learning approach object affordance detection paper arxiv workspace aware online grasp planning paper 53 3d part segmentation 2021 arxiv learning finegrained segmentation 3d shape without part label paper 2020 arxiv learning unsupervised hierarchical part decomposition 3d object single rgb image paper arxiv learning 3d part assembly single image paper iclr learning group bottomup framework 3d part discovery unseen category paper 2019 arxiv skeleton extraction 3d point cloud decomposing object part paper arxiv neural shape parser constructive solid geometry paper arxiv pqnet generative part seq2seq network 3d shape paper cvpr partnet recursive part decomposition network finegrained hierarchical shape segmentation paper code cg autoencoderbased part clustering partinwhole retrieval cad model paper 2016 siggraphasia scalable active framework region annotation 3d shape collection paper dexterous grippers 2021 cvpr contactopt optimizing contact improve grasp paper 2020 arxiv multifingan generative coarsetofine sampling multifinger grasp paper corl fit2form 3d generative model robot gripper form design paper eccv grab dataset wholebody human grasping object paper eccv drg dual relation graph humanobject interaction detection paper project code eccv interhand26m dataset baseline 3d interacting hand pose estimation single rgb image paper arxiv trifinger opensource robot learning dexterity paper arxiv grasping field learning implicit representation human grasp paper eccv contactpose dataset grasp object contact hand pose paper project icra generalized grasping mechanical grippers unknown object partial point cloud representation paper arxiv multifingered active grasp learning paper arxiv learning compliance adaptation contactrich manipulation paper arxiv leveraging photometric consistency time sparsely supervised handobject reconstruction paper arxiv handvoxnet deep voxelbased network 3d hand shape pose estimation single depth map paper arxiv functionally divided manipulation synergy controlling multifingered hand paper arxiv state service robot current bottleneck object perception manipulation paper arxiv selecting designing grippers assembly task structured approach paper arxiv mobile robot handarm teleoperation system vision imu paper arxiv robust hightransparency haptic exploration dexterous telemanipulation paper arxiv tactile dexterity manipulation primitive tactile feedback paper arxiv deep differentiable grasp planner highdof grippers paper arxiv multifingered grasp planning via inference deep neural network paper ral benchmarking inhand manipulation paper 2019 arxiv graphposegan 3d hand pose estimation monocular rgb image via adversarial learning graph paper arxiv hmtnet3d hand pose estimation single depth image based hand morphological topology paper arxiv unigrasp learning unified model grasp nfingered robotic hand paper sciencerobotics choice grasp type location handing object paper arxiv solving rubik cube robot hand paper ijars fast geometrybased computation grasping point threedimensional point cloud paper code arxiv learning better generative model dexterous singleview grasping novel object paper arxiv dexpilot vision based teleoperation dexterous robotic handarm system paper iros optimization model planning precision grasp multifingered hand paper iros generating grasp pose highdof gripper using neural network paper arxiv deep dynamic model learning dexterous manipulation paper cvpr learning joint reconstruction hand manipulated object paper cvpr ho unified egocentric recognition 3d handobject pose interaction paper iros efficient grasp planning execution multifingered hand surface fitting paper arxiv efficient bimanual manipulation using learned task schema paper icra highfidelity grasping virtual reality using glovebased system paper code data generation 71 simulation reality 2020 arxiv igibson simulation environment interactive task large realistic scene paper r perspective sim2real transfer robotics summary r 2020 workshop paper eccv autosimulate quickly learning synthetic data generation paper eccv metasim2 unsupervised learning scene structure synthetic data generation paper arxiv importance limitation sim2real robotic manipulation precision agriculture paper arxiv benchbot evaluating robotics research photorealistic 3d simulation real robot paper arxiv close simreal gap transfer segmentation paper arxiv study challenge using robotics simulator testing paper arxiv joint supervised selfsupervised learning 3d realworld challenge paper arxiv robothor open simulationtoreal embodied ai platform paper arxiv effectiveness virtual realitybased training robotic setup paper arxiv lidarnet boundaryaware domain adaptation model lidar point cloud semantic segmentation paper arxiv multisource domain adaptation deep learning era systematic survey paper arxiv learning machine simulation real world paper arxiv sim2real2sim bridging gap simulation realworld flexible object manipulation paper 2019 iros learning augment synthetic image sim2real policy transfer paper arxiv accept synthetic object realendtoend training attentive deep visuomotor policy manipulation clutter paper rssw generative grasp synthesis demonstration using parametric mixture paper 2018 r learning taskoriented grasping tool manipulation simulated selfsupervision paper corl deep object pose estimation semantic robotic grasping household object paper code arxiv multitask domain adaptation deep learning instance grasping simulation paper 2017 arxiv using simulation domain adaptation improve efficiency deep robotic grasping paper 72 selfsupervised method 2019 arxiv selfsupervised 6d object pose estimation robot manipulation paper 2018 r learning taskoriented grasping tool manipulation simulated selfsupervision paper multisource 2020 arxiv teaching camera feel estimating tactile physical property surface image paper arxiv multimodal material classification robot using spectroscopy high resolution texture imaging paper arxiv understanding context inside robot human manipulation task visionlanguage model ontology system video stream paper tor transfer learning approach crossmodal object recognition visual observation robotic haptic exploration paper arxiv accurate visionbased manipulation contact reasoning paper 2019 arxiv robosherlock cognitionenabled robot perception everyday manipulation task paper icra making sense vision touch selfsupervised learning multimodal representation contactrich task paper cvpr contactdb analyzing predicting grasp contact via thermal imaging paper code 2018 arxiv learning grasp without seeing paper motion planning 91 visual servoing 2020 arxiv nothing geometric constraint modelfree method articulated object pose estimation paper arxiv robust keypoint detection pose estimation robot manipulator selfocclusions via simtoreal transfer paper iros kovis keypointbased visual servoing zeroshot simtoreal transfer robotics manipulation paper arxiv detailed 2d3d joint representation humanobject interaction paper arxiv neuromorphic eyeinhand visual servoing paper arxiv predicting target feature configuration nonstationary object grasping imagebased visual servoing paper aaai judging intent pointing action robotic arm paper 2019 arxiv cameratorobot pose estimation single image paper icra learning driven coarsetofine articulated robot tracking paper cvpr craves controlling robotic arm visionbased economic system paper code 2018 arxiv pointtopose voting based hand pose estimation using residual permutation equivariant layer paper 2016 icra robot arm pose estimation pixelwise regression joint angle paper 2014 icra robot arm pose estimation pixelwise part classification paper 92 path planning 2021 arxiv dynamic movement primitive robotics tutorial survey paper 2020 arxiv humanguided planner nonprehensile manipulation paper arxiv latent space roadmap visual action planning deformable rigid object manipulation paper arxiv gomp graspoptimized motion planning bin picking paper arxiv describing physic physical reasoning forcebased sequential manipulation planning paper arxiv reaching grasping regrasping learning fine coordinated motor skill paper 2019 arxiv manipulation trajectory optimization online grasp synthesis selection paper arxiv parareal learned coarse model robotic manipulation paper 10 imitation learning 2020 arxiv learningfromobservation framework oneshot robot teaching graspmanipulationrelease household operation paper arxiv selfsupervised learning precise pickandplace without object model paper arxiv hopenet graphbased model handobject pose estimation paper arxiv squirl robust efficient learning video demonstration longhorizon robotic manipulation task paper arxiv geometric perspective visual imitation learning paper arxiv visionbased robot manipulation learning via human demonstration paper arxiv gaussianprocessbased robot learning demonstration paper 2019 arxiv grasping wild learning 6dof closedloop grasping lowcost demonstration paper project arxiv motion reasoning goalbased imitation learning paper iros robot learning shifting object grasping cluttered environment paper code arxiv learning deep parameterized skill demonstration retargetable visuomotor control paper arxiv adversarial skill network unsupervised robot skill learning video paper iros learning action human demonstration video robotic manipulation paper rssw generative grasp synthesis demonstration using parametric mixture paper 2018 arxiv deep imitation learning complex manipulation task virtual reality teleoperation paper 11 reinforcement learning 2020 arxiv framework efficient robotic manipulation paper iros physicsbased dexterous manipulation estimated hand pose residual reinforcement learning paper arxiv follow object curriculum learning manipulation task imagined goal paper arxiv towards generalization data efficient learning deep robotic grasping paper iclr ingredient real world robotic reinforcement learning paper arxiv efficient adaptation endtoend visionbased robotic manipulation paper arxiv spatial action map mobile manipulation paper arxiv learning precise 3d manipulation multiple uncalibrated camera paper arxiv surprising effectiveness linear model visual foresight object pile manipulation paper arxiv learning pregrasp manipulation object ungraspable pose paper arxiv deep reinforcement learning autonomous driving survey paper arxiv lyceum efficient scalable ecosystem robot learning paper arxiv planning efficient robust base sequence mobile manipulator performing multiple pickandplace task paper arxiv reward engineering object pick place training paper 2019 arxiv towards practical multiobject manipulation using relational reinforcement learning paper project code robio efficient robotic task generalization using deep model fusion reinforcement learning paper arxiv contextual reinforcement learning visuotactile multifingered grasping policy paper iros scaling robot supervision hundred hour roboturk robotic manipulation dataset human reasoning dexterity paper arxiv iris implicit reinforcement without interaction scale learning control offline robot manipulation data paper arxiv dynamic cloth manipulation deep reinforcement learning paper corl relay policy learning solving longhorizon task via imitation reinforcement learning paper project corl asynchronous method modelbased reinforcement learning paper corl entity abstraction visual modelbased reinforcement learning paper corl dynamic learning cascaded variational inference multistep manipulation paper project arxiv contextual imagined goal selfsupervised robotic learning paper arxiv learning manipulate deformable object without demonstration paper project arxiv deep learning approach grasping invisible paper arxiv knowledge induced deep qnetwork slidetowall object grasping paper arxiv quantile qtopt riskaware visionbased robotic grasping paper arxiv adaptive curriculum generation demonstration simtoreal visuomotor control paper arxiv reinforcement learning robotic manipulation using simulated locomotion demonstration paper arxiv selfsupervised simtoreal adaptation visual robotic manipulation paper arxiv object perception grasping openended domain paper corl robel robotics benchmark learning lowcost robot paper code r endtoend robotic reinforcement learning without reward engineering paper arxiv learning combine primitive skill step towards versatile robotic manipulation paper corl survey reproducibility evaluating deep reinforcement learning algorithm realworld robot paper code iccas deep reinforcement learning based robot arm manipulation efficient training data simulation paper cvpr craves controlling robotic arm visionbased economic system paper code report unified framework manipulating object via reinforcement learning paper 2018 iros learning synergy pushing grasping selfsupervised deep reinforcement learning paper code corl qtopt scalable deep reinforcement learning visionbased robotic manipulation paper arxiv deep reinforcement learning visionbased robotic grasping simulated comparative evaluation offpolicy method paper arxiv pick place without geometric object model paper 2017 arxiv deep reinforcement learning robotic manipulationthe state art paper 2016 ijrr learning handeye coordination robotic grasping deep learning paper 2013 ijrr reinforcement learning robotics survey paper 12 expert abhinav gupta robotics machine learning andreas ten pa robotic grasping deep learning simulationbased planning andy zeng 3d deep learning robotic grasping animesh garg robotics reinforcement learning bugra tekin pose estimation cewu lu machine vision charles ruizhongtai qi 3d deep learning danfei xu robotics computer vision deter fox robotics artificial intelligence state estimation feifei li computer vision guofeng zhang 3d vision slam hao su 3d deep learning jeannette bohg perception robotic manipulation grasping jianping shi computer vision juxi leitner robotic grasping lerrel pinto robotics lorenzo jamone cognitive robotics lorenzo natale humanoid robotic sensing perception kaiming deep learning kai xu graphic geometry ken goldberg robotics marc pollefeys computer vision markus vincze robotic vision matthias niener 3d reconstruction semantic 3d scene understanding oliver brock robotic manipulation pascal fua computer vision peter k allen robotic grasping 3d vision modeling medical robotics peter corke robotic vision pieter abbeel artificial intelligence advanced robotics raquel urtasun ai selfdriving car computer vision robotics robert platt robotic manipulation ruigang yang computer vision robotics sergey levine reinforcement learning shuran song 3d deep learning robotics silvio savarese computer vision songchun zhu computer vision tamim asfour humanoid robotics thomas funkhouser geometry graphic shape valerio ortenzi robotic vision vicient lepetit machine learning 3d vision xiaogang wang deep learning computer vision xiaozhi chen deep learning yan xinchen deep representation learning generative modeling yasutaka furukawa 3d reconstruction yu xiang robotics computer vision yue wang 3d deep learning,"[('paper', 'arxiv'), ('point', 'cloud')]"
botgram/shell-bot,Other,shellbot fully functional shellrunner telegram bot tell command executes post live output send input command replying output message fairly complex example actually appears command terminal interprets escape sequence update message line get touched mean interactive program wget work naturally see status bar update bot also allows file uploaded downloaded also ha simple text editor available convenience example bot running git clone repository basic task example bot running alsamixer alsamixer keypad bot demonstrates great part botgram api note due tight integration running bot window currently supported install first install nodepty dependency example ubuntudebian sudo apt install make python buildessential using fedora instead sudo dnf install python sudo dnf group install c development tool library using obtained auth token bot know personal user numeric id know mean check blog post full stepbystep guide git clone cd shellbot npm install start bot node server first time run ask question create configuration file automatically configjson also write manually see configexamplejson started print bot ready message running convenience might want talk botfather set command list content commandstxt authorization first started bot accept message coming user security reason want arbitrary people issue command computer want allow another user use bot use token give user resulting link want use bot group token give message forward group proxy server shellbot obeys orallproxy environment variable use proxy support proxy example bash export node server export node server warning sock proxy need use ip address dns hostname blog post,"[('node', 'server'), ('example', 'bot')]"
haosulab/ManiSkill2,Python,maniskill2 pypi version open colab doc status discord maniskill2 unified benchmark learning generalizable robotic manipulation skill powered sapien feature 20 outofbox task family 2000 diverse object model 4m demonstration frame moreover empowers fast visual input learning algorithm cnnbased policy collect sample 2000 fps withgpu 16 process workstation benchmark used study wide range algorithm 2d 3d visionbased reinforcement learning imitation learning senseplanact etc please refer documentation learn information also handson tutorial eg quickstart colab tutorial table content installation getting started reinforcement learning example maniskill2learn demonstration leaderboard license citation installation pip bash pip install maniskill2 github bash pip install upgrade git source bash git clone cd maniskill2 pip install e gpu vulkan driver installed required enable rendering maniskill2 rigidbody environment powered sapien ready use installation test installation bash run episode 200 step pickcubev0 rigidbody environment random action specify environment e envid python maniskill2examplesdemorandomaction environment require downloading asset download asset python maniskill2utilsdownloadasset download taskspecific asset python maniskill2utilsdownloadasset envid asset downloaded data default also use environment variable ms2assetdir specify destination please refer documentation detail supported environment documentation also indicates environment require downloading asset softbody environment based sapien customized nvidia warp requires cuda toolkit 113 gcc compile please refer documentation detail installing maniskill2 warp provide docker image haosulabmaniskill2 docker hub corresponding dockerfile encounter issue installation please see troubleshooting section common fix submit issue getting started basic example make gymgymnasium environment run random policy python import gymnasium gym import maniskill2envs env gymmakepickcubev0 obsmodergbd controlmodepdjointdeltapos rendermodehuman printobservation space envobservationspace printaction space envactionspace ob resetinfo envresetseed0 reset seed randomness terminated truncated false false terminated truncated action envactionspacesample ob reward terminated truncated info envstepaction envrender display required render envclose maniskill2 environment support different observation mode control mode determine observation space action space specified gymmakeenvid obsmode controlmode basic observation mode supported pointcloud rgbd statedict state please refer documentation information observation control mode available detail moreover follow example interactively play environment provide handson tutorial maniskill2 tutorial found getting started jupyter notebook colab reinforcement learning jupyter notebook colab imitation learning jupyter notebook colab environment customization jupyter notebook colab advanced rendering ray tracing stereo depth sensor jupyter notebook see tutorial sapien backend maniskill2 reinforcement learning example maniskill2learn provide maniskill2learn improved framework based maniskilllearn training rl agent demonstration solve manipulation task framework conveniently support point cloudbased rgbdbased policy learning custom processing visual observation also support many common algorithm bc ppo dapg sac gail moreover framework optimized point cloudbased policy learning includes helpful empirical advice get started demonstration please see documentation detail license rigid body environment maniskill licensed fully permissive license eg apache20 however soft body environment follow warp license currently licensed nvidia source code license warp asset licensed cc bync 40 citation use maniskill2 asset model consider citing following publication inproceedingsgu2023maniskill2 titlemaniskill2 unified benchmark generalizable manipulation skill authorgu jiayuan xiang fanbo li xuanlin ling zhan liu xiqiaing mu tongzhou tang yihe tao stone wei xinyue yao yunchao yuan xiaodi xie pengwei huang zhiao chen rui su hao booktitleinternational conference learning representation year2023,"[('jupyter', 'notebook'), ('reinforcement', 'learning')]"
Nate711/StanfordDoggoProject,Other,hero stanford doggo project overview stanford doggo stanford doggo highly agile robot designed accessible platform legged robot research robot currently hold record among robot highest vertical jumping agility1 jump twice high existing quadruped robot weighing little le 5kg stanford doggo easy safe develop time expect stanford doggo carry heavy load climb super aggressive terrain use portion project want technical detail please cite paper presented icra 2019 freely available arxiv project generously supported stanford student robotics 1vertical jumping agility maximum vertical jump height time onset actuation apogee jump building doggo hope build stanford doggo hardware folder repository linked fusion 360 cad model includes part need source many custom piece either 3d printed waterjet instead manually milled instance mean postprocessing work example primary link waterjet leg assembly require drill tap hole set screw need help please reference cad submit issue github repo email owner nathan kau stanford dot edu find workinprogress bill material please hesitate ask help doggo software brain stanford doggo split odrive motor controller central teensy microcontroller run doggo need flash custom odrive firmware onto four motor controller robot configure using doggosetuppy script included repository quick note different mechanical design doggo make sure update gearratio parameter code via odrivetool uploading firmware configuring next want upload doggo arduino code central microcontroller code responsible switching different state sending right position command robot power robot four leg first calibration routine motor encoders become synced robot enter idle mode idle send serial command wireless xbee network command doggo trot jump etc please reference doggo software repo information help encourage submit issue github email owner nathan kau stanford dot edu blog post doggo hi thought share stanford doggo project might seen oskar new year update group undergrad grad student stanford student robotics working legged robot last year half latest robot stanford doggo shoeboxsized quadruped robot walk trot pronk jump around think video give best overview doggo favorite video doggo backflip ive seeing ton amazing project forum odrive discord channel wanted make blog post explaining doggo work hope people might able learn something post perhaps even build doggo improve upon whole project opensource link cad code firmware available github robot code run teensy 35 use odrives motor control imagine lot people could jump right also tried make robot inexpensive build lab school home absolutely welcome people contribute project relevant link github project repository full downloadable fusion 360 cad teensy code odrive fork mechanical design coaxial mechanism coaxial mechanism drive leg definitely complex mechanical component robot ha also troublesome way work two tmotor mn5212 motor mounted carbon fiber side panel also 3d printed bearing block ha two bearing hold outer coaxial tube refer cutaway cad view two motor transfer power coaxial shaft via 6mm wide 3mm pitch gt2 belt 16t pulley 48t pulley didnt room mass budget regular offtheshelf pulley printed using xometry sl service side note learned always specify service pulley must printed part printed angle geometry pulley teeth get distorted offangle layer pulley waterjet aluminum bracket maintain belt tension thereby prevent skipping hightorque situation said wa real pain find best centertocenter distance bracket slop connection motor small pulley slop connection larger pulley shaft meant centertocenter distance top bracket 05mm larger nominal centertocenter distance prescribed belt supplier sdpsi biggest problem assembly wa higher belt tension friction assembly higher friction mean worse tracking performance motor also worse sensitivity touchdown event like next robot hoping smoother precisely machined pulley le slop coaxial assembly cad diagram hero irl diagram operation leg doggo ha four 2dof leg scara flavor scara flavor mean leg five bar linkage two upper link driven coaxially actual leg link waterjet cut big blue saw great online service although make sure upload part one dxf save money waterjet part actually precise enough need ream hole bearing joint joint two deep groove ball bearing stacked next link shoulder bolt go thread opposing link foot robot foot silicone piece made using 3d printed 2part mold frame frame robot thankfully simple two waterjet 4mm carbon fiber panel side connected two 132 5052 aluminum sheet metal part sheet metal part cut using waterjet folded hand long story two carbon fiber panel canted inwards tab aluminum part couldnt folded brake electronics doggo ha four v35 48v odrives two leg mounted carbon fiber side panel sitting 2mm carbon fiber plate middle teensy 35 sparkfun bno080 imu 5mw xbee teensy talk odrives four separate uart line operating 500000 baud underneath plate power distribution board janky quadcopter pdb found amazon fancy gigavac p105 minitactor relay kill robot power using offboard estop switch also put two 1000mah 6 tattu lipo battery last least motor ha as5047p encoder track motor angle actually using incremental interface time built robot wa absolute encoder support odrive couldnt make index pin functionality work either electronics schematic layout odrives 394x526 top side middle electronics plate belly robot relay translucent piece middle pdb golden board front relay battery close far software overview doggo software relatively simple far thing go gist state machine flip different behavior like trot jump etc behavior send different position command gain four odrives also helper thread running like one take imu measurement another record telemetry odrives another take command xbee etc leg trajectory robot walk trot bound pronks commanding different sinusoidal openloop trajectory four odrives leg trajectory composed two half sinusoidal curve flight stance phase shown orange purple picture geometric parameter sinusoid virtual leg compliance duration time leg spends traversing sinusoidal segment varied create different gait 265x299 given time teensy computes desired foot location cartesian coordinate convert leg angle leg separation two number describe virtual leg originates hip joint leg terminates foot virtual leg parameter theta gamma corresponding virtual stiffness damping coefficient sent teensy four odrives 100hz refresh rate odrives run custom pd controller generate torque thetagamma space odrives use jacobian leg transform torque thetagamma space torque motor0motor1 space odrive control implemented custom binary uart protocol send receive data binary protocol significantly faster ascii protocol think wa protocol implemented arduino built robot like specific visit think wrap everything let know question ill also try update post people interested detail faq subfolders empty run populate folder shell git submodule update init recursive remote configure odrive parameter doggo use script leg numbered leg0 front left leg1 back left leg2 back right leg3 front right calibrate leg sore spot robot right power robot driven linkage ie top link need horizontal possible everything set correctly motor begin calibration routine involves rotating 120 degree one side back robot ready turn yes turn slowly command turning speed set desired step difference step difference around 01 01 way imu point little marking bno080 board indicate way x positive align direction forward direction robot forward direction towards motor connected odrivesand odrives connected teensy use serial connection teensy odrives odrive need connect teensy rx odrive tx teensy tx odrive rx since four odrives connect four set serial connection code definition may help wiring cpp hardwareserial odrv0serial serial1 hardwareserial odrv1serial serial2 hardwareserial odrv2serial serial3 hardwareserial odrv3serial serial4 also little chart made helloplanet teensy35 logical function component p0 rx1 odrive1 odrv0 p1 tx1 odrive1 odrv0 p7 rx3 odrive3 odrv2 p8 tx3 odrive3 odrv2 p9 rx2 odrive2 odrv1 p10 tx2 odrive2 odrv1 p31 rx4 odrive4 odrv3 p32 tx4 odrive4 odrv3 xbee wired connect via serial serial5 also definition configh called usexbee determines whether code use actual usb port teensy xbee communication imu wired connect via spi following defines cpp pin bno080 imu define spicspin 15 define spiwakpin 14 define spiintpin 17 define spirstpin 16 doe relay get wired use solidstate relay output terminal series main power input terminal connected external battery switch switch wired serial pressing switch turn onoff relay thus robot main power cad download correctly unfortunately problem end fusion fusion customer service ha past able fix corrupted uploads server,"[('stanford', 'doggo'), ('carbon', 'fiber')]"
cbfinn/gps,Python,gps code reimplementation guided policy search algorithm lqgbased trajectory optimization meant help others understand reuse build upon existing work full documentation see rllberkeleyedugps code base work progress see faq information planned future addition code,"[('gps', 'code'), ('code', 'reimplementation')]"
mkorpela/pabot,Python,pabot version downloads parallel executor robot framework test pabot split one execution multiple save test execution time installation pypi pip install u robotframeworkpabot clone repository run setuppy install basic use split execution suite file pabot path test split execution test level pabot testlevelsplit path test run test two different configuration pabot argumentfile1 firstargs argumentfile2 secondargs path test complex case please read onward contact join pabot slack channel robot framework slack get invite robot framework slack contributing project several way help improving tool report issue improvement idea issue tracker contribute programming making pull request easiest way work issue issue tracker commandline option pabot verbosetestlevelsplitcommand endcommand process numpabotlibpabotlibhost hostpabotlibport port processtimeout num shard artifact extensionsartifactsinsubfolders resourcefile fileargumentfilenum filesuitesfrom file robot option path support robot framework command line option also following option must rf option verbose output parallel execution testlevelsplit split execution test level instead default suite level pabotsuitenames contains test suite affect new suite split leaving flag suite test pabotsuitenames file also affect new suite add suite file command actual command start robot executor endcommand rf script situation robot used directly process number process many parallel executor use default max ofand cpu count special option use many process executable suite test pabotlib start pabotlib remote server enables locking resource distribution parallel test execution pabotlibhost hostname host name pabotlib remote server default 127001 used pabotlib option change host listen address created remote server see used without pabotlib option connect already running instance pabotlib remote server given host remote server also started executed separately pabot instance python pabotpabotlib pathtoresourcefile host port python pabotpabotlib resourcetxt 1921681123 8271 enables sharing resource multiple robot framework instance pabotlibport port port number pabotlib remote server default 8270 see pabotlibhost information processtimeout timeout maximum time second wait process killing set timeout resourcefile filepath indicator file contain shared variable distributing resource need used together pabotlib option resource file syntax window ini file section shared set variable artifact file extension list file extension comma separated defines file screenshots video etc separate reporting directory would copied included final report possible link copied file rf log would updated relative path supported default value png example artifact pngmp4txt artifactsinsubfolders copy artifact located directly rf output dir also subfolders argumentfileinteger filepath run suite multiple argumentfile option example argumentfile1 arg1txt argumentfile2 arg2txt suitesfrom filepath outputxml optionally read suite outputxml file failed suite run first longer running one executed shorter one shard indextotal optionally split execution smaller piece used distributing testing multiple machine chunk optionally chunk test process number robot run save time suite share setup teardowns example usage pabot testdirectory pabot exclude foo directorytotests pabot command java jar robotframeworkjar endcommand include smoke test pabot process 10 test pabot pabotlibhost 1921681123 pabotlibport 8271 process 10 test pabot pabotlib pabotlibhost 1921681111 pabotlibport 8272 process 10 test pabot artifact pngmp4txt artifactsinsubfolders directorytotests pabotlib pabotpabotlib provides keywords help communication data sharing executor process helpful must ensure one process us piece data operates part system test time pabotlib doc located pabotlib example testrobot setting library pabotpabotlib test case testing pabotlib acquire lock mylock log part critical section release lock mylock valuesetname acquire value set adminserver host get value set host username get value set username password get value set password log something value example access host username password release value set log value set release others obtain variable value valuesetdat server1 tagsadminserver host123123123123 usernameuser1 passwordpassword1 server2 tagsserver host121121121121 usernameuser2 passwordpassword2 server3 tagsadminserver host222222222222 usernameuser3 passwordpassword4 pabot call using resource valuesetdat pabot pabotlib resourcefile valuesetdat testrobot controlling execution order level parallelism pabotsuitenames file contains list suite executed file created pabot execution already file cache pabot us reexecuting test speed processing file partially manually edited easier option use ordering filename firstrows contain information edited pabot edit something change come suite name ordering filename list control order also syntax pabotsuitenames file syntax doe containhash row present pabotsuitenames different possibility influence execution order suite changed directory directory structure executed sequentially add directory suite name row suite option base suite name changing robot option name n also give partial suite name without base suite add line text wait force executor wait previous suite executed group suite test together executor process adding line group introduce dependency using word depends test declaration please take care case circular dependency exception thrown example could test robottest1 scalartest environment variable depends robottest1 scalartest builtin variable robot framework test robottest1 scalartest builtin variable robot framework test robottest2 liststest keywords list wait test robottest2 liststest keyword accepts multiple argument test robottest2 liststest collection keywords test robottest2 liststest access list entry test robottest3 dictionarytest access dictionary test robottest3 dictionarydictionaries named argument depends robottest3 dictionarytest access dictionary test robottest1 scalartest case variable depends robottest3 dictionarytest access dictionary test robottest1 scalartest number depends robottest1 scalartest argument return value test robottest1 scalartest case return value depends robottest1 scalartest number test robottest1 scalartest argument return value test robottest3 dictionarytest dictionary argument test robottest3 dictionarytest loop dictionary depends robottest1 scalartest case return value programmatic use library offer endpoint mainprogram call sysexit help developing python program around pabot python import sys pabotpabot import mainprogram def amazingnewprogram printbefore calling pabot exitcode mainprogram test printfafter calling pabot return code exitcode sysexitexitcode global variable pabot insert following global variable robot framework namespace enable pabotlib functionality custom listener etc get information overall execution pabot pabotqueueindex contains unique index number execution index start pabotliburi contains uri running pabotlib server pabotexecutionpoolid contains pool id integer current robot framework executor helpful example visualizing execution flow listener pabotnumberofprocesses max number concurrent process pabot may use execution callerid universally unique identifier execution,"[('robottest1', 'scalartest'), ('robot', 'framework')]"
gramaziokohler/roslibpy,Python,roslibpy bridge library startbadges image target alt documentation status image target alt documentation chinese translation image target alt github action ci build status image target alt license image target alt pypi package latest release image target image target alt supported implementation endbadges python bridge library allows use python ironpython interact opensource robotic middleware us websockets connect torosbridge 20 provides publishing subscribing service call actionlib tf essential functionality unlike rospy library doe require local environment allowing usage platform linux api roslibpy modeled closely match roslibjs main feature topic publishing subscribing service call client service advertisement server parameter management getsetdelete api service getting metainformation actionlib support interfacing preemptable task tf client via tf2webrepublisher roslibpy run python 3x ironpython 27 installation install roslibpy simply use pip pip install roslibpy ironpython pip command slightly different ipy xframes pip install user roslibpy remember need working setup including rosbridge server tf2 web republisher accessible within network documentation full documentation including example api reference available readthedocs contributing make sure setup local development environment correctly clone roslibpy repository create virtual environment install development dependency pip install r requirementsdevtxt ready start coding development use pyinvoke task command prompt ease recurring operation invoke clean clean generated artifact invoke check run various code documentation style check invoke doc generate documentation invoke test run test check one swift command invoke show available task detail check contributor guide available part documentation default branch wa recently renamed main already cloned repository need update local repository structure following line git branch master main git fetch origin git branch u originmain main releasing project ready release new version roslibpy use semver ie bump version follows patch bugfixes minor backwardscompatible feature added major backwardsincompatible change update changelogrst novelty ready release everything one command invoke release patchminormajor profit credit library based roslibjs large extent linebyline port python changing idiomatic form make sense huge part credit go roslibjs author roslibjs,"[('image', 'target'), ('target', 'alt')]"
roboticslibrary/rl,C++,robotics library robotics library rl selfcontained c library rigid body kinematics dynamic motion planning control cover spatial vector algebra multibody system hardware abstraction path planning collision detection visualization used research project education available bsd license free use commercial application rl run many different system including linux macos window us cmake build system compiled clang gcc visual studio getting started offer precompiled ubuntu package launchpad well window binary github latest release version homebrew used macos build corresponding package tutorial website provide information develop application using rl tutorial include instruction install latest release ubuntu window macos create first program using rl linux window look short api overview documentation create robot model kinematics geometry definition plan collisionfree path path planning scenario build rl source ubuntu window macos next step rl includes number demo application selection kinematics geometry path planning example demonstrate use advanced application due size larger set example found separate repository among several others demo application include tool converting rotation matrix angle axis quaternion euler angle visualization collision detection query highlight intersection minimum distance penetration depth kinematics simulator us tcp port joint position update dynamic simulator listens joint torque update calculation collisionfree path using probabilistic roadmap rapidlyexploring random tree visualization path planning query based scenario definition xml file robot forward inverse dynamic using recursive newtoneuler articulatedbody algorithm method calculation dynamic property mass matrix centrifugal coriolis force gravity compensation calculation sending trajectory robot controller based cubic quintic polynomial publication detailed information design robotics library please look iros paper reference markus rickert andre gaschler robotics library objectoriented approach robot application proceeding ieeersj international conference intelligent robot system iros page 733740 vancouver bc canada september 2017 inproceedingsrickert2017a author markus rickert andre gaschler title robotics library objectoriented approach robot application booktitle proceeding ieeersj international conference intelligent robot system year 2017 page 733740 address vancouver bc canada month sep doi 101109iros20178202232 license source code file rl licensed permissive bsd 2clause license license thirdparty dependency please refer respective project,"[('robotics', 'library'), ('path', 'planning')]"
facebookresearch/habitat-sim,C++,circleci codecov github license conda version badge conda platform support badge documentation precommit python 39 support bullet twitter follow habitatsim highperformance physicsenabled 3d simulator support 3d scan indooroutdoor space builtin support hm3d matterport3d gibson replica cad model space piecewiserigid object eg replicacad ycb google scanned object configurable sensor rgbd camera egomotion sensing robot described via urdf mobile manipulator like fetch fixedbase arm like franka quadruped like aliengo rigidbody mechanic via bullet design philosophy habitat prioritize simulation speed breadth simulation capability rendering scene matterport3d dataset habitatsim achieves several thousand frame per second fps running singlethreaded reach 10000 fps multiprocess single gpu habitatsim simulates fetch robot interacting replicacad scene 8000 step per second sps step involves renderingrgbd observation 128128 pixel rigidbody dynamic 130sec habitatsim typically used habitatlab modular highlevel library endtoend experiment embodied ai defining embodied ai task eg navigation instruction following question answering training agent via imitation reinforcement learning learning classical senseplanact pipeline benchmarking performance defined task using standard metric question comment join ai habitat community discussion forum open colab habitat demo table content citing habitat installation testing documentation datasets external contribution license citing habitat use habitat platform research please cite habitat 10 habitat 20 paper inproceedingsszot2021habitat title habitat 20 training home assistant rearrange habitat author andrew szot alex clegg eric undersander erik wijmans yili zhao john turner noah maestre mustafa mukadam devendra chaplot oleksandr maksymets aaron gokaslan vladimir vondrus sameer dharur franziska meier wojciech galuba angel chang zsolt kira vladlen koltun jitendra malik manolis savva dhruv batra booktitle advance neural information processing system neurips year 2021 inproceedingshabitat19iccv title habitat platform embodied ai research author manolis savva abhishek kadian oleksandr maksymets yili zhao erik wijmans bhavana jain julian straub jia liu vladlen koltun jitendra malik devi parikh dhruv batra booktitle proceeding ieeecvf international conference computer vision iccv year 2019 habitatsim also build work contributed others use contributed methodsmodels please cite work see external contribution section list wa externally contributed corresponding workcitation installation habitatsim installed inwaysvia conda recommended method user stable release nightly buildsexperimental via pip pip install compile latest headless build bullet read build instruction common build issuesvia docker updated approximately per year habitat challenge read habitatdockersetupvia source active development read build instruction common build issue recommended conda package habitat active development advise user restrict stable release starting v014 provide conda package release preparing conda env assuming conda installed let prepare conda env bash require python39 cmake310 conda create n habitat python39 cmake3140 conda activate habitat conda install habitatsim pick one option depending systemneeds install machine attached display bash conda install habitatsim c condaforge c aihabitat install headless machine ie without attached display eg cluster machine multiple gpus parameter relies egl thus doe work macos conda install habitatsim headless c condaforge c aihabitat common scenario install habitatsim bullet physic conda install habitatsim withbullet c condaforge c aihabitat note build parameter chained together instance install habitatsim physic headless machine conda install habitatsim withbullet headless c condaforge c aihabitat conda package older version installed explicitly specifying version eg conda install habitatsim016 c condaforge c aihabitat also provide nightly conda build main branch however used need specific feature yet latest release version get nightly build latest main simply swap c aihabitat c aihabitatnightly testing let download 3d asset using python data download utility download testing 3d scene bash python habitatsimutilsdatasetsdownload uids habitattestscenes datapath pathtodata note testing scene provide semantic annotation would like test semantic sensor via examplepy please use data matterport3d dataset see datasets download example object bash python habitatsimutilsdatasetsdownload uids habitatexampleobjects datapath pathtodata interactive testing use interactive viewer included habitatsim either c python bash c buildviewer compiling locally habitatviewer pathtodatascenedatasetshabitattestscenesskoklostercastleglb python note depending choice installation may need add pathtohabitatsim pythonpath eg habitatsim directory run export pythonpathpwd python examplesviewerpy scene pathtodatascenedatasetshabitattestscenesskoklostercastleglb able control agent test scene use wasd key move forwardleftbackwardright arrow key mouse left click control gaze direction look updownleftright try find picture woman surrounded wreath fun physical interaction habitatsim provides rigid articulated dynamic simulation via integration bullet physic try interactive viewer functionality c python first download fully interactive replicacad apartment dataset 140 mb bash note default data downloaded habitatsimdata optionally modify data path addingdatapath pathtodata conda install python habitatsimutilsdatasetsdownload uids replicacaddataset source inside habitatsim python srcpythonhabitatsimutilsdatasetsdownloadpy uids replicacaddataset alternatively 105 scene variation prebaked lighting available viauids replicacadbakedlighting 480 mb load replicacad scene viewer application physic enabled modified data path also modify viewer call bash c buildviewer compiling locally habitatviewer enablephysics dataset datareplicacadreplicacadscenedatasetconfigjson apt1 python note habitatsim directory must pythonpath python examplesviewerpy dataset datareplicacadreplicacadscenedatasetconfigjson scene apt1 using scene prebaked lighting instead usedataset datareplicacadbakedlightingreplicacadbakedscenedatasetconfigjson scene bakedsc1staging00 viewer application output full list keyboard mouse interface option console runtime quickstart example wasd move left click drag mouse look around press space toggle simulation offon default press switch grab mouse mode left right click drag move object open doorsdrawers release drop object object gripped scroll mouse wheel default move closer farther away alt rotate object fixed constraint frame yaw ctrl rotate object fixed constraint frame pitch altctrl rotate object fixed constraint frame roll noninteractive testing eg headless system run example script bash python pathtohabitatsimexamplesexamplepy scene pathtodatascenedatasetshabitattestscenesskoklostercastleglb agent traverse particular path see performance stats end something like 640 x 480 total time 3208 sec fps 3117 reproduce benchmark table habitat iccv 19 run examplesbenchmarkpy scene pathtomp3dexample17drp5sb8fy17drp5sb8fyglb additional argument examplepy provided change sensor configuration print statistic semantic annotation scene compute actionspace shortest path trajectory set useful functionality refer examplepy demorunnerpy source file overview load specific mp3d gibson house examplesexamplepy scene pathtomp3dhouseidglb also provided example demo reference run physic example python building physic simulation via bullet bash python examplesexamplepy scene pathtodatascenedatasetshabitattestscenesskoklostercastleglb enablephysics note mode agent frozen oriented toward spawned physical object additionally savepng used output agent visual observation frame physical scene current directory common testing issue running remote machine experience display error initializing simulator eg bash x11 display environment variable missing could initialize glfw ensure display defined environment run unset display undefine variable see libgl error like bash x11 display environment variable missing could initialize glfw chance libgl located nonstandard location see eg issue documentation browse online habitatsim documentation check eccv tutorial series handson quickstart experience find answer question try asking developer community discussion forum datasets howto use common supported datasets habitatsim external contribution use noise model pyrobot please cite technical report specifically noise model used noisy control function named pyrobot defined srcpythonhabitatsimagentcontrolspyrobotnoisycontrolspy use redwood depth noise model please cite paper specifically noise model defined srcpythonhabitatsimsensorsnoisemodelsredwooddepthnoisemodelpy srcespsensorredwoodnoisemodel license habitatsim mit licensed see license detail webgl demo demo script use king hall skokloster castle skoklosters slott licensed creative common attribution van gogh room ruslans3d licensed creative common attribution,"[('conda', 'install'), ('install', 'habitatsim')]"
andrewliao11/Deep-Reinforcement-Learning-Survey,Other,deep reinforcement learning survey paper list bit different others put opinion summary however understand whole paper still read surely pull request discussion welcomed jump deep reinforcement learning newbie deep reinforcement learning suggest read blog post open course first outline reinforcement learning paper humanlevel control deep reinforcement learning mastering game go deep neural network tree search deep successor reinforcement learning actionconditional video prediction using deep network atari game policy distillation learning tetri using noisy crossentropy method code continuous deep qlearning modelbased acceleration value iteration network learning modular neural network policy multitask multirobot transfer stochastic neural network hierarchical reinforcement learning noisy network exploration improving stochastic policy gradient continuous control deep reinforcement learning using beta distribution highdimensional continuous control using generalized advantage estimation generalizing skill semisupervised reinforcement learning unsupervised perceptual reward imitation learning towards deep symbolic reinforcement learning others open source python user lua user course textbook misc useful learn reinforcement learning pointright dennybritzreinforcementlearning,"[('reinforcement', 'learning'), ('deep', 'reinforcement')]"
wechaty/wechaty,Other,wechaty npm version npm docker wechaty downloads github star docker pull e module typescript javascript python go java net php rust scala wechat whatsapp wechaty discord community gitter gitter room telegram wechaty channel connecting chatbots wechaty rpa robotic process automation sdk chatbot maker help create bot inlines javascript python go java crossplatform support including linux window macos docker spiderweb octocat beetle book whale breaking news wechatyweb gengchen528 apr 13 2021 voice developer wechaty great solution believe would much user recognize link gcaufy tencent engineer author wepy xinbenlv google engineer founder haoshiyouorg link bigbrother666sh creator npc dm link jarvis baidu engineer wechaty link lijiarui founder ceo juzibot know j try wechaty easy use urinx uri lee author weixinbotpython wechaty good project hope continue therefore became contributor open collective simple see wikivoice developer join u discord wechaty discord community wechaty used many chatbot project thousand developer want talk developer scan qr code join wechaty developer community wechaty discord community qr code scan wechaty developer want talk resource wechaty ha already held lot talk got lot blog past year wechaty resource videocamera youtube playlist watch talk video related wechaty pagewithcurl full doc bulb blog see developer use wechaty build fantastic project beginner wechatygettingstartedwechaty starter project template work outofthebox tada wechaty contributor list thanks contribution gift juzibot support wechaty know everything wechaty rocket world shortest chatbot codelines javascript javascript import wechatybuilder wechaty const wechaty wechatybuilderbuild get wechaty instance wechaty scan qrcode status consolelogscan qr code login statusn login user consoleloguser user logged message message consolelogmessage message wechatystart notice wechaty requires nodejs version 16 bot log message console login scan find wechaty official example examplesdingdongbotts example directory checkeredflag requirement nodejs version 16 npm versiontypescript version 44 getting started node wechaty starter repository wechaty starter repository beginner simplest setting work outofthebox clone npm install npm start new wechaty want try first time like strong recommend starting repository using starter template project otherwise please saved world shortest chatbot codelines javascript example file named botjs use either npm docker run itnpm npm version npm tag downloads install size shell npm init npm install wechaty create first botjs file copypaste world shortest chatbot codelines javascript node botjs docker docker pull docker layer wechaty starter repository docker wechaty docker support javascript typescript use typescript write typescript save extension name need compile use tsnode run 21 run javascript shell javascript docker run ti rm volumepwdbot wechatywechaty botjs 22 run typescript shell typescript docker run ti rm volumepwdbot wechatywechaty botts learn wechaty docker wikidocker switch protocolpuppet wechaty powerful run different protocol specify protocol set environment variable wechatypuppet different puppet provider cannot use web protocol apply protocal following instruction provide free token support developer build valuable wechat chatbot currently support following puppet provider protocol puppet provider environment variable web puppetpuppeteer export wechatypuppetwechatypuppetpuppeteer window puppetwxwork export wechatypuppetwechatypuppetservice mock puppetmock export wechatypuppetwechatypuppetmock web puppetwechat4u export wechatypuppetwechatypuppetwechat4u ipad puppetrock export wechatypuppetwechatypuppetservice ipad puppetpadlocal export wechatypuppetwechatypuppetservice window puppetdonut export wechatypuppetwechatypuppetservice ipad puppetpadpro deprecated export wechatypuppetwechatypuppetpadpro ipad puppetpadchat deprecated export wechatypuppetwechatypuppetpadchat ipad puppetpadplus deprecated export wechatypuppetwechatypuppetpadplus mac puppetmacpro deprecated export wechatypuppetwechatypuppetmacpro learn wechaty puppet puppet wiki puppet directory puppet compatibility guitar api read full documentation wechaty official api referenceclass wechaty main bot class bot wechaty instance control specific wechatypuppet new wechatyoptions wechatyoptions optionsname string name botoptional optionspuppet string select puppet provider want use must one wechatypuppetwechat angular hook web wechat wechatypuppetwechat4u http api web wechat wechatypuppetpadpro ipad app protocol wechatypuppetioscat iphone app hook wechatypuppetmock mock testing optionspuppetoptions puppetoptions option puppet provider wechaty api description event loginclass contact wechat contactsfriendsnonfriends encapsulated contact contact api description static findquery string promisenull contact find contact name alias result one return first one static findallquery string promisecontact find contact name alias static loadquery string contact get contact id property id readonly string get contact id method sync promisevoid force reload data contact sync data lowlevel api method saytext string promisevoid message send text contact file contact return message bot sent puppetpadplus supported method self boolean check contact self method name string get name contact method alias promisestring get alias contact method aliasnewalias string promisevoid set delete alias contact method friend boolean 21 class contactself class contactself extended contact contactself api description method avatarfile filebox promisevoid set avatar bot method qrcode promisestring get qrcode bot method signaturetext string promisevoid set signature bot 22 class friendship send receive friend request friend confirmation event friendship api description static addcontact contact hello string promisevoid send friend invitation contact method accept promisevoid accept friend request method hello string get hello string friendship invitation method contact contact get contact friendship method type friendshiptype return friendship typeunknown confirm receive verify class message wechat message encapsulated message message api description static findquery string promisenull message find message cache return first one static findallquery string promisemessage find message cache return message list method contact get sender message method contact get destination message method room null room get room messageif message room return null method text string get text content message method saytext string promisevoid message reply text medium file contact message sender return message bot sent puppetpadplus supported method type messagetype get type message method self boolean check message sent self method mention contact get message mentioned contactlist method mentionself boolean check message mention self method forwardto contact promisevoid forward received message method age number number second since ha created method date date time wa created method tofilebox promisefilebox extract medium file message put filebox method tocontact promisecontact get share card message class room wechat roomsgroups encapsulated room room api description static createcontactlist contact topic string promiseroom create new room static findquery string promisenull room try find room filter get many return first one static findallquery string promiseroom find contact room static loadquery string room load room room id property id readonly string event join emit anyone join room event topic emit someone change room topic event leave emit anyone leave room event invite emit receive room invitation method sync promisevoid force reload data room sync data lowlevel api method saytext string promisevoid message send textmedia file contact card text mention mention contact inside room return message bot sent puppetpadplus supported method addcontact contact promisevoid add contact room method delcontact contact promisevoid delete contact room method quit promisevoid 41 class roominvitation accept room invitation roominvitation api description method accept promisevoid accept room invitation method inviter contact get inviter room invitation method roomtopic promisestring get room topic room invitation method date promisedate time wa created method age promisenumber number second since ha created test npm docker coverage status known vulnerability wechaty fully automatically tested unit integration test continious integration continious delivercicd support powered ci like travis shippable appveyor test wechaty run shell npm test get know test wikitests creating wechaty plugin creating publishing wechaty plugin simple simply expose module function takesparameter wechaty plugin imported wechaty pas argument free add configuration wechaty support import wechatyplugin wechaty export default const myplugin wechatyplugin wechaty wechaty config exist user pas customizations plugin documenting wechaty plugin would lay supported config user see wechaty plugin support kickout example 1939 wechaty plugins contrib pencil release note latest release release changelog saxophone view since feb 15 2019 hitcount sparklingheart powered wechaty powered wechaty sparkle wechaty badge markdown powered wechaty get embed htmlmarkdown code wikibadge star2 project using wechaty cnnwechaty relay telegram wechat chat bot managing haoshiyou wechat group run volunteer haoshiyouorg interactive chat bot manage todo list forward wechat message telegram koawechaty wechaty pay pull request welcome add learn project using wechaty wikiprojects using wechaty innocent find good server best practice running wechaty dockernpm using vpsvirtual private server outside china save hour time npm install docker pull run smoothly without problem following vps provider used wechaty team worked perfectly production use following link get one minute also support wechaty referred u location price ram payment provider singapore512mb paypal digitalocean japan1gb paypal linode korea 10 1gb alipay paypal netdedi singapore 35 512mb alipay wechat vultr note see also relatedproject poop story 2017 huan daily lifework depends much chat wechat almost 14000 wechat friend may 2014 wechat restricts total number friend 5000 almost 400 wechat room 400 member imagine wa dying tireless bot working 24x7 wechat monitoringfiltering important message badly needed example highlight discussion contains keywords want follow upespecially noisy room last built huan personal study purpose automatically testing stargazer time stargazer time twohearts contributor github issue github pull request open collective backer open collective sponsor contributor contributor contributor contributor contributor contributor contributor contributor project exists thanks people contribute contribute contribute sunglass backer backer open collective thank backer become backer open collective wechaty smirk sponsor sponsor open collective support project becoming sponsor logo show link website become sponsor wechaty sponsor multilanguage wechaty python wechaty go wechaty javakotlin wechaty scala wechaty php wechaty netc wechatyin wechaty rpa sdk chatot maker typescript python wechaty rpa sdk chatbot maker written python go wechaty rpa sdk chatbot maker written go java wechaty rpa sdk chatbot maker written javakotlin scala wechaty rpa sdk chatbot maker written scala php wechaty rpa sdk chatbot maker written php netc wechaty rpa sdk chatbot maker written netc history main v111 nov 22 2021 working reduxify wechaty ecosystem applying cqrs pattern v110 nov 21 2021 second beta release wechaty ecosystem npm module version v110 wechatypuppet wechatypuppetservice etc v10 sep 2021 release v10 wechaty first beta release wechaty v069 v069 support e module cjs dual support 2232 v068 aug 27 2021 tl support 2231 latest commonjs version creator huan tencent tvp chatbot rui microsoft ai mvp founder ceo juzibot yc w19 alumnus profile huan li stackoverflow cite wechaty cite project publication bibtex miscwechaty author huan li jiarui li title wechaty conversational sdk chatbot maker year 2016 publisher github journal github repository howpublished url copyright license code doc 2016now huan rui wechaty community contributor code released apache20 license doc released creative common,"[('wechaty', 'rpa'), ('sdk', 'chatbot')]"
apollographql/apollo-kotlin,Other,apollo kotlin github license join community slack discord ci maven central gradle plugin os snapshot revved gradle enterprise apollo kotlin formerly known apollo android graphql client generates kotlin java model graphql query apollo kotlin executes query mutation graphql server return result queryspecific kotlin type mean deal parsing json passing around map making client cast value right type manually also write model type generated graphql definition ui us generated type queryspecific access data actually specify part query ask particular field query access corresponding property returned data structure library designed primarily android mind use javakotlin app including multiplatform feature java kotlin multiplatform code generation query mutation subscription reflectionfree parsing normalized cache custom scalar type http cache auto persisted query query batching file uploads espresso idlingresource fake model test appsync graphqlws websockets graphql ast parser multiplatform apollo kotlin kotlin multiplatform project current matrix supported feature per platform jvm apple1 j linuxx64 apolloapi model apolloruntime network query batching apq apollonormalizedcache apolloadapters apollonormalizedcachesqlite apollo apple currently includes macosx64 macosarm64 iosarm64 iosx64 iossimulatorarm64 watchosarm32 watchosarm64 watchossimulatorarm64 tvosarm64 tvosx64 tvossimulatorarm64 maintainer martinbonnin bod bignimbus documentation check project website depth documentation getting started new graphql check tutorial guide building android app using apollo kotlin coroutines like add apollo kotlin existing project follow step add plugin buildgradlekts kotlin plugins idcomapollographqlapollo3 version 400beta1 add runtime dependency kotlin dependency implementationcomapollographqlapollo3apolloruntime400beta1 set package name use generated model kotlin apollo serviceservice packagenamesetcomexample apollo kotlin support three type file graphqls schema file describes type backend using graphql syntax json schema file describes type backend using json syntax graphql executable file describes query operation graphql syntax default apollo kotlin requires schema module srcmaingraphql directory download schema using introspection gradlew downloadapolloschema task sometimes introspection disabled ask backend team provide schema copy schema module cp schema modulesrcmaingraphql write query modulesrcmaingraphqlgetrepositorygraphql file graphql query heroqueryid string heroid id id name appearsin build project generate heroquery class use instance apolloclient kotlin create client val apolloclient apolloclientbuilder serverurl build execute query suspend response received val response apolloclientqueryheroqueryid 1execute printlnheronameresponsedataheroname learn apollo kotlin apis execute first mutation handle custom scalar type factor common pattern using fragment requirement platform specific runtime requirement jvmandroid api level 21 apollo andapolloadapters require enabling core library desugaring io 13 build time requires gradle 68 kotlin 18 jvm project kotlin 19 native project proguard r8 configuration code generated apollo kotlin use reflection safely optimized obfuscated proguard r8 particular exclusion need configured android studio intellij plugin experimental plugin android studio intellij available help work apollo kotlin providing automatic code generation integration graphql intellij plugin navigation graphql definition migration helper installation instruction information found release latest version maven central check changelog release history release hosted maven central plugin additionally hosted gradle plugin portal kotlin plugins idcomapollographqlapollo3 version 400beta1 repository mavencentral dependency implementationcomapollographqlapollo3apolloruntime400beta1 optional want use normalized cache implementationcomapollographqlapollo3apollonormalizedcachesqlite400beta1 optional want generated model parser write http codecache code remove apolloruntime use apolloapi instead implementationcomapollographqlapollo3apolloapi400beta1 snapshot latest development change available sonatype snapshot repository kotlin buildgradlekts repository maven url uri mavencentral repository settingsgradlekts pluginmanagement repository maven url uri gradlepluginportal mavencentral repository use 400beta2snapshot version plugin library android studio intellij plugin snapshot android studio intellij plugin also available deprecation policy project observes semantic versioning breaking change introduced minor patch release contributing like contribute please see contributingmd community integration using maven build tool apolloclientmavenplugin maven plugin call apollo kotlin compiler generate javakotlin source using absinthe phoenix subscription kotlinphoenix ha phoenixnetworktransport use together apolloclient doc additional resource confetti kotlin multiplatform conference app using apollo kotlin swiftui jetpack compose mortycomposekmm kotlin multiplatform github template using apollo kotlin swiftui jetpack compose journey kotlin multiplatform project wa moved kotlin multiplatform talk given kotliners june 2020 125 fragmented podcast apollo kotlin entire journey graphqlorg introduction reference graphql apollographqlcom learn apollo opensource commercial tool apollo blog longform article graphql feature announcement apollo guest article community apollo twitter account inthemoment news apollo apollo build opensource software graph platform unify graphql across apps service help ship faster apollo studio free endtoend platform managing graphql lifecycle track graphql schema hosted registry create source truth everything graph studio provides ide apollo explorer explore data collaborate query observe usage safely make schema change apollo federation industrystandard open architecture building distributed graph use apollo gateway compose unified graph multiple subgraphs determine query plan route request across service apollo client popular graphql client web apollo also build maintains apollo io apollo kotlin apollo server productionready javascript graphql server connects microservice api database compatible popular javascript framework deployable serverless environment learn build apollo check odyssey learning platform perfect place start graphql journey video interactive code challenge join apollo community interact get technical help graphql community,"[('apollo', 'kotlin'), ('kotlin', 'multiplatform')]"
yujinrobot/yujin_ocs,C++,yujin open control system yocs yujin robot opensource control system including library exectuables,"[('control', 'system'), ('yujin', 'open')]"
gradslam/gradslam,Python,mitlicense circleci doc pypi version overview installation tutorial online documentation contributing gradslam overview gradslam fully differentiable dense slam framework provides repository differentiable building block dense slam system differentiable nonlinear least square solver differentiable icp iterative closest point technique differentiable raycasting module differentiable mappingfusion block one use block construct slam system allow gradient flow way output system map trajectory input raw colordepth image parameter calibration etc python rgbdimages rgbdimagescolors depth intrinsics slam pointfusion pointclouds recoveredposes slamrgbdimages pointcloudsplotly0show installation requirement pytorch160 pytorch version see using pip experimental pip install gradslam install github pip install git install local clone recommended git clone cd chamferdist pip install cd git clone cd gradslam pip install e dev verifying installation verify gradslam ha successfully built fire python interpreter import py import gradslam g printgsversion see version number displayed citing gradslam find gradslam useful work writing reportpaper u appreciate cited u please use following bibtex entry inproceedingsgradslam titlegradslam dense slam meet automatic differentiation authorkrishna murthy jatavallabhula saryazdi soroush iyer ganesh paull liam booktitlearxiv year2020 contributor soroush saryazdi krishna murthy jatavallabhula ganesh iyer,"[('pip', 'install'), ('dense', 'slam')]"
CoretechR/ZeroBug,C++,zerobug diy hexapod robot zerobug 3dprinted microservo hexapod robot powered raspberry pi zero stm32f103 pi zero charge input method front end making robot controllable via mouse keyboard multitouch simply bluetooth gamepad get robot walking stm32 handle leg locomotion inverse kinematics control 18 servo update 20112021 added support video streaming via camera connector update indexhtml file copy startstreamsh directory desktop install mjpgstreamer eg using guide add following line etcrclocal file exitbash homepidesktophexapodstartstreamsh,"[('hexapod', 'robot'), ('pi', 'zero')]"
telegram-sms/telegram-sms,Other,telegram sm min android version license github release fossa status together fight covid19 stay home save life news question contribution follow telegram channel telegram sm change log latest news english please visit submit discus issue regarding project primary language used commit message simplified chinese however welcome use english commit message making contribution want generate configuration qr code fast way please visit qrcodetelegramsmscom get right version warning version compatible signed key uninstall one first install another delete data latest release download prerelease verison download warranty expressed implied use risk telegram sm compat android 50 lower click github release download latest greatest feature forward sm text message telegram bot notification regarding missed call notification regarding device battery power change remote control via chat command sm permission app requires following permission work properly sm read send text message phone check whether dual simcard phone sim status identification digit call phone execute ussd code call log read incoming number camera scan qr code quickly enter bot token notification access listen notification message set app default sm app stop popping sm notification set received sm read phone user manual english license telegramsms licensed bsd 3clause license fossa status codeauxlib licensed bsd 3clause license artwork use free font licensed whole society refrigerator deluxe copyright artwork belongs walliant licensed cc byncsa 40 cover author yjbeetle download resource file artwork meganz character set name fay type gynoid birthday 1st october 2018 place birth fujian china zodiac sign libra habit eat sweet maid dress listen heavy metal music acknowledgement app us following open source library ok gson codeauxlib paper awesomeqrcode codescanner creation app would possible without help following people sumimakito donate zsxsoft walliant weibo would also like thank following people hard work localise project english tangbao jixunmoe donate japanese lollycc aisakamk2 qiaogun spanish david alonso chinesetraditional lm902 cantonese simptrad remember translation available locale setfallbacked ous50 app us following public dns service 1111 finally smms hosting image used page buy cup coffee help maintain project via github via paypal via bitcoin 17wmcczy7hssennrbfubmusi7kdhyeprae via unionpay donation make work better project,"[('telegram', 'sm'), ('github', 'release')]"
erwincoumans/tiny-differentiable-simulator,C++,tiny differentiable simulator tiny differentiable simulator headeronly c cuda physic library zero dependency note main repository transfered googleresearch erwin coumans currently implement various rigidbody dynamic algorithm including forward inverse dynamic well contact model based impulselevel lcp forcebased nonlinear springdampers actuator model motor servo serieselastic actuator sea dynamic implemented entire codebase templatized use forward reversemode automatic differentiation scalar type cppad stan math fvar ceresjet library also used regular float double precision value another option use included fixpoint integer math provide crossplatform deterministic computation tds run thousand simulation parallel single rtx 2080 cuda gpu 50 frame per second multiple visualizer available see bibtex please use following reference cite research inproceedingsheiden2021neuralsim author heiden eric millard david coumans erwin sheng yizhou sukhatme gaurav year 2021 title neuralsim augmenting differentiable simulator neural network booktitle proceeding ieee international conference robotics automation icra url related paper inferring articulated rigid body dynamic rgbd video iros 2022 submission eric heiden ziang liu vibhav vineet erwin coumans gaurav sukhatme project page neuralsim augmenting differentiable simulator neural network icra 2021 eric heiden david millard erwin coumans yizhou sheng gaurav sukhatme pdf arxiv augmenting differentiable simulator neural network close sim2real gap r 2020 simtoreal workshop eric heiden david millard erwin coumans gaurav sukhatme pdf arxiv video interactive differentiable simulation 2020 eric heiden david millard hejia zhang gaurav sukhatme pdf arxiv related research using tds others efficient differentiable simulation articulated body icml 2021 yiling qiao junbang liang vladlen koltun ming c lin pdf arxiv getting started opensource version build using cmake requires compiler c17 support mkdir build cd build cmake make j example visualization two option supported openglvisualization tinyopengl3app opengl3 visualizer visualizer native part library srcvisualizeropengl meshcat visualization meshcat webbased visualizer us webgl c zmq interface provided running example install python pip meshcat run meshcatserver open web browser chrome recommended good threejs experience pip install meshcat meshcatserver open open chrome compile run tinyurdfparsermeshcatexample optimizedrelease build urdf file loaded using provided parser based tinyxml2 dependency meshcat visualization included thirdparty disclaimer official google product,"[('differentiable', 'simulator'), ('erwin', 'coumans')]"
taichi-dev/difftaichi,Other,python3 diffmpmpy img width400px src div difftaichi differentiable programming physical simulation iclr 2020 yuanming hu luke anderson tzumao li qi sun nathan carr jonathan ragankelley fredo durand paper video instruction reproduce every demo differentiable programming taichi allows optimize neural network controller efficiently bruteforce gradient descent instead using reinforcement learning difftaichi differentiable programming framework officially part taichi repo contains example difftaichi significantly boost performance productivity differentiable physical simulator example differentiable elastic object simulator chainqueen difftaichi 188x faster implementation tensorflow difftaichi version also run fast cuda implementation code 42x shorter 10 differentiable simulator implemented within 23 hour question regarding simulatorsautodiff compiler go yuanming hu yuanming mitedu issue note update october 27 2021 example compatible taichi v083 please update taichi using old version run stepinstall taichi pip example need gpu run bash python3 pip install taichi steprun example script example folder please wait gifs load differentiable elastic object simulator python3 diffmpmpy gradient descent iterationand gradient descent iteration 80 img width400px src img width400px src differentiable 3d elastic object simulator python3 diffmpm3dpy gradient descent iteration 40 img width800px src differentiable 3d fluid simulator python3 liquidpy gradient descent iteration 450 img width800px src differentiable height field water simulator python3 wavepy gradient descent iteration 180 img width400px src differentiable adversarial water renderer python3 waterrendererpy differentiable water simulation differentiable water rendering differentiable cnn optimization goal find initial water height field simulation shading vgg16 think squirrel image goldfish input image vgg16fox squirrel 4221 img width800px src left center activation right activation fool vgg vgg16goldfish 9991 img width400px src width400px src differentiable rigid body simulator python3 rigidbodypy 12 train 2048 time step gardient descent iteration 20 img width400px src img width400px src differentiable massspring simulator python3 massspringpy 123 train 682 time step gardient descent iteration 20 img width266px src img width266px src img width266px src differentiable billiard simulator python3 billiardspy gardient descent iterationand gradient descent iteration 100 img width400px src img width400px src see video remaining two simulator bibtex articlehu2019difftaichi titledifftaichi differentiable programming physical simulation authorhu yuanming anderson luke li tzumao sun qi carr nathan ragankelley jonathan durand fr edo journaliclr year2020 articlehu2019taichi titletaichi language highperformance computation spatially sparse data structure authorhu yuanming li tzumao anderson luke ragankelley jonathan durand fr edo journalacm transaction graphic tog volume38 number6 pages201 year2019 publisheracm,"[('width400px', 'src'), ('img', 'width400px')]"
gogojjh/M-LOAM,C++,mloam robust odometry mapping multilidar system online extrinsic calibration mloam robust system multilidar extrinsic calibration realtime odometry mapping without manual intervention system start several extrinsicuncalibrated lidar automatically calibrate extrinsics provide accurate pose well globally consistent map author jianhao jiao haoyang ye yilong zhu linxin jiang ming liu ramlab hkust project website video video link mainland china friend href related paper solving different subproblems multilidar system robust odometry mapping multilidar system online extrinsic calibration jianhao jiao haoyang ye yilong zhu ming liu ieee transaction robotics tro 2021 pdf tackle extrinsic calibration multilidar fusion pose drift mapping uncertainty greedybased feature selection efficient lidar slam jianhao jiao yilong zhu haoyang ye huaiyang huang peng yun linxin jiang lujia wang ming liu international conference robotics automation icra 2021 xi china pdf tackle algorithm latency issue mlod awareness extrinsic perturbation multilidar 3d object detection autonomous driving jianhao jiao peng yun lei tai ming liu ieeersj international conference intelligent robot system iros 2020 pdf tackle multilidarbased 3d object detection hardware failure injected large extrinsic perturbation use mloam academic research please cite one paper bib prerequisite 11 ubuntu ubuntu 64bit 1604 1804 kinetic melodic installation 12 cere solver eigen3 glog setupinstalleigen3ceressh 13 openmp sudo apt install libompdev 14 pcl18build mloam mkdir p catkinwssrc cd catkinwssrc git clone catkin build mloam source catkinwsdevelsetupbash example datasets collected different platform simulation robot sr real handheld device rhd real vechile rv oxford robocar run mloam baseline method provide script perform batch testing mloam baseline method enter script folder roscd mloamscript modify python script runmloampy specific platform correct path modify shell file method xxmainsh run python script python2 runmloampy programsingletest sequencesr startidx0 endidx4 broadcast sr01bag sr02bag sr03bag sr04bag sr05bag respectively test mloam system python2 runmloampy programsingletest sequencerhd startidx0 endidx2 broadcast rhd02labbag rhd03gardenbag rhd04buildingbag respectively test mloam system python2 runmloampy programsingletest sequencerhd startidx1 endidx1 broadcast rv01bag test mloam system system pipeline could help understand pipeline mloam loop closure part finished also refer mloam pipeline detailed diagram code review acknowledgement thanks great work learned develop mloam loam j zhang singh loam lidar odometry mapping realtime advanced version aloam legoloam liomapping vinsmono lidar perception library thanks ming cao providing clear diagram code review mloam licence source code released gplv3 license technical issue please contact dr jianhao jiao jiaojh1994gmailcom commercial inquiry please contact profming liu eeliumusthk,"[('jianhao', 'jiao'), ('odometry', 'mapping')]"
url-kaist/dynaVINS,C++,dynavins visualinertial slam dynamic environment bookmarktabs dynavins ieee ral 22 robust visualinertial state estimator algorithm dynamic environment robust bundle adjustment used dynamic object car car human runner bus bus etc please refer paper detailed explanantions experimental result ba module validated viode datasetviodelink dataset loop closure module validated dataset algorithm based vinsfusionvinsfusionlink youtube video detailed explanation demo video heavyplussign additional package vinsfusionsc switchableconstraints paper vinsfusionvinsfusionlink combined switchable constraint gitswitchgitlinkwas compared dynavins vinsfusionsc algorithm integrates switchable constraint loop closure module vinsfusion also useful released algorithm visit herevfsclink use vinsfusionsc using vinsfusionsc paper forget cite paperwink vfsclink test env code tested linux 1804 lts melodic cere solver 1140 opencv 341 package prerequisite dependency dynavins equal vinsfusionubuntu ubuntu 64bit 1604 1804 kinetic melodic installationceres solver follow cere installationsupport file vinsfusion due limiting file size github need one package two file vinsfusion repository set cameramodels package workspace included vinsfusion copy supportfilesbriefk10l6bin vinsfusion supportfiles folder copy supportfilesbriefpatternyml vinsfusion supportfiles folder buildingconstruction build please follow command build dynavins bash cd catkinwssrc git clone cd catkinmake use catkin tool catkin build source catkinwsdevelsetupbash runner run demo code viode dataset ba example convenience also provide 3highbag file parkinglot scene download file following command bash wget since blocked network provider download dataset note larger number bag file viode dataset dynamic object existviode sequence monocular camera imu bash roslaunch dynavins viodemonolaunch rosbag play 3highbag 0nonebag 1lowbag viode sequence stereo camera imu bash roslaunch dynavins viodestereolaunch rosbag play 3highbag 0nonebag 1lowbag dataset loop closure module example use intel realsense d455 calibration required easily download bag file following command bash wget since blocked network provider download dataset bash roslaunch dynavins d455monolaunch rosbag play eshapebag looptempstaticbag bash roslaunch dynavins d455stereolaunch rosbag play eshapebag looptempstaticbag gear parameter parameter dynavins find result parameter wiki page param time comparison according various parameter found wiki page timewikilink2 regularizationlambda lambda value regularization term paper section iiic momentumon using momentum factor truefalse momentumlambda lambda value momentum term paper section iiid alternatingconverge threshold checking convergence alternating optimization 90 usually enough want faster speed please try reduce time comparison found wiki page marginfeaturethresh feature le weight value used marginalization may affect accuracy effective reducing time cost try uncomment line 848 vinsestimatorestimatorestimatorcpp enable feature also optimization c additional feature use opt ifitperidweightdynfeatmarginthresh continue hypodiffdist distance threshold grouping constraint hypothesis section ivb hypodiffyaw angle threshold grouping constraint hypothesis section ivb hyporegularization lambda value regularization term loop closure module section ivc hypoalternatingconverge threshold checking convergence alternating optimization loop closure module bookmark citation use code please cite paper arxiv articlesong2022dynavins titledynavins visualinertial slam dynamic environment authorsong seungwon lim hyungtae lee alex junho myung hyun journalieee robotics automation letter year2022 mailbox contact information question please hesitate contact u seungwon song envelope sswan55 kaistackr hyungtae lim envelope shapelim kaistackr,"[('loop', 'closure'), ('closure', 'module')]"
MIT-SPARK/TEASER-plusplus,C++,teaser fast certifiable 3d registration license mit documentation status img src teaser fast certifiablyrobust point cloud registration library written c python matlab binding left correspondence generated 3dsmoothnet green red line represent inlier outlier correspondence according ground truth respectively right alignment estimated teaser green dot represent inliers found teaser teaser solve rigid body transformation problem two point cloud 3d performs well even input correspondence extremely large number outlier short conceptual introduction check video find library helpful use project please cite bibtex articleyang20troteaser titleteaser fast certifiable point cloud registration authorh yang j shi l carlone journalieee trans robotics pdf year 2020 interested work u please visit lab page tldr minimal c example run following script show minimal c example shell script sudo apt install cmake libeigen3dev libboostalldev git clone cd teaserplusplus mkdir build cd build cmake make sudo make install sudo ldconfig cd cd examplesteasercppply mkdir build cd build cmake make teasercppply see terminal output like shell script read 1889 total vertex pmc heuristic threadcurrent max clique 577 time 000163579 sec pmc threadcurrent max clique 602 time 044515 sec teaser result expected rotation 0996927 00668736 00406664 0066129 0997618 00194009 00418676 00166518 0998978 estimated rotation 0996658 00729647 00367288 00740469 0996832 00290182 00344951 00316408 0998904 error deg 00783556 expected translation 0115577 00387705 0114875 estimated translation 0116132 00390858 011729 error 000249818 number correspondence 1889 number outlier 1700 time taken 0786677 minimal c example macos brew run following script show minimal c example shell script brew install cmake brew install boost brew install eigen git clone cd teaserplusplus mkdir build cd build cmake make sudo make install cd cd examplesteasercppply mkdir build cd build cmake make teasercppply minimal pythonexample run following script show minimal pythonexample need anaconda installed shell script sudo apt install cmake libeigen3dev libboostalldev conda create n teasertest python36 numpy conda activate teasertest conda install c open3dadmin open3d0900 git clone cd teaserplusplus mkdir build cd build cmake dteaserpppythonversion36 make teaserpppython cd python pip install cd cd examplesteaserpythonply python teaserpythonplypy see output similar shell script teaser python registration example pmc heuristic threadcurrent max clique 563 time 000185895 sec pmc threadcurrent max clique 605 time 0618481 sec teaser result expected rotation 099692656 006687358 004066644 006612899 099761788 001940087 004186755 001665178 099897777 estimated rotation 996883589e01 788648224e02 185738207e03 788858464e02 996487579e01 280985536e02 365129272e04 281575081e02 999603432e01 error deg 006284342361637997 expected translation 011557694 003877054 011487489 estimated translation 011652176 00373522 0111885 error 00034414811018018978 number correspondence 1889 number outlier 1700 time taken 09492652416229248 reproduce gif run following script shell script sudo apt install cmake libeigen3dev libboostalldev conda create n teaser3dsmooth python36 numpy conda activate teaser3dsmooth conda install c open3dadmin open3d0900 conda install scikitlearn git clone cd teaserplusplus mkdir build cd build cmake dteaserpppythonversion36 make teaserpppython cd python pip install cd cd examplesteaserpython3dsmooth python teaserpython3dsmoothpy able see open3d window showing registration result getting started installation dependency compilation install c library install python binding install matlab binding run test usage c python matlab api documentation c python matlab publication publication related teaser include h yang l carlone quaternionbased certifiably optimal solution wahba problem outlier proceeding ieee international conference computer vision iccv 2019 pp 16651674 pdf h yang p antonante v tzoumas l carlone graduated nonconvexity robust spatial perception nonminimal solver global outlier rejection ieee robotics automation letter ral 2020 pdf acknowledgement work wa partially funded arl dcist cra w911nf1720181 onr raider n000141812828 lincoln laboratory resilient perception degraded environment google daydream research program,"[('shell', 'script'), ('mkdir', 'build')]"
BehaviorTree/BehaviorTree.CPP,C++,license mit version conan ubuntu conan window ros1 ros2 behaviortreecpp 44 c 17 library provides framework create behaviortrees wa designed flexible easy use reactive fast even main usecase robotics use library build ai game replace finite state machine feature make behaviortreecpp unique compared implementation make asynchronous action ie nonblocking firstclass citizen build reactive behavior execute multiple action concurrently orthogonality tree defined using domain specific scripting language based xml loaded runtime word even written c morphology tree hardcoded statically link custom treenodes convert plugins load runtime provides typesafe flexible mechanism dataflow node tree includes loggingprofiling infrastructure allows user visualize record replay analyze state transition documentation community learn main concept api tutorial documentation answer question andor want connect btcpp user visit forum previous version version 38 software found branch v38 branch might receive bug fix new feature implemented master branch gui editor editing behaviortree simple editing xml file favorite text editor looking fancy graphical user interface know check groot2 compile btcpp requires compile support c17 three build system supported catkin use colcon ament use ros2 conan otherwise linuxwindows straight cmake want personally responsible dependency compiling conan assuming parent directory behaviortreecpp mkdir build cd build conan install behaviortreecpp outputfolder buildmissing cmake behaviortreecpp dcmaketoolchainfileconantoolchaincmake cmake build parallel dependency zeromq sqlite already installed want use conan simply type mkdir build cd build cmake behaviortreecpp cmake build parallel want use btcpp application please refer example commercial support using btcpp commercial product need technical support consulting contact primary author dfacontiaurynroboticscom discus use case need license mit license mit copyright c 20192023 davide faconti copyright c 20182019 davide faconti eurecat copyright c 20142018 michele colledanchise permission hereby granted free charge person obtaining copy software associated documentation file software deal software without restriction including without limitation right use copy modify merge publish distribute sublicense andor sell copy software permit person software furnished subject following condition copyright notice permission notice shall included copy substantial portion software software provided without warranty kind express implied including limited warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arising connection software use dealing software,"[('license', 'mit'), ('copyright', 'c')]"
curieuxjy/Awesome_Quadrupedal_Robots,Python,awesomequadrupedalrobots awesome hesitate leave issue discussion correction error item alphabetical order good start boston dynamic spot robot engineering secret development quadruped walking robot review quadruped robot basic quadrupedal robot platform aidin anymal barkour cheetah cyberdog deeprobotics hyq magnecko max pongbot rbq solo8 spot unitree vision60 paper could include abroad keywords related quadrupedal walking robot eg control method reinforcement learning 2023 amp wild learning robust agile natural legged locomotion skill armp autoregressive motion planning quadruped locomotion navigation complex indoor environment artplanner robust legged robot navigation field asc adaptive skill coordination robotic mobile manipulation autonomous stair ascending descending quadruped wheelchair barkour benchmarking animallevel agility quadruped robot barry highpayload agile quadruped robot curiositydriven learning joint locomotion manipulation task doc differentiable optimal control retargeting motion onto legged robot dojo differentiable physic engine robotics dreamwaq learning robust quadrupedal locomotion implicit terrain imagination via deep reinforcement learning dribblebot dynamic legged manipulation wild drilling task quadruped robot silage face measurement event camerabased visual odometry dynamic motion tracking legged robot using adaptive time surface eventbased agile object catching quadrupedal robot extreme parkour legged robot fast traversability estimation wild visual navigation fast traversability estimation wild visual navigation datafitting discovery interpreting neural dynamic motor control reinforcement learning geometric mechanic contactswitching system guardian fall active mode transition safe falling iplanner imperative path planning language reward robotic skill synthesis learning single policy diverse behavior quadrupedal robot using scalable motion imitation learning adapting agile locomotion skill transferring experience learning armassisted fall damage reduction recovery legged mobile manipulator learning complex motor skill legged robot fall recovery learning impulsereduced gait quadruped robot using cmaes learning quadrupedal locomotion deformable terrain learning walk steering perceptive quadrupedal locomotion dynamic environment leg manipulator pushing quadrupedal agility beyond locomotion lsc languageguided skill coordination lstp long shortterm motion planning legged leggedwheeled system mastering diverse domain world model reward also constraint application legged robot locomotion optmimic imitation optimized trajectory dynamic quadruped behavior orbit unified simulation framework interactive robot learning environment reinforcement learning legged robot motion imitation modelbased optimal control reinforcement learning multiple sensor via joint representation rl modelbased control using ondemand optimal control learn versatile legged locomotion robot parkour learning robust quadrupedal locomotion via riskaverse policy learning robust recovery motion control quadrupedal robot via learned terrain imagination rolldrop accounting observation noise single parameter safesteps learning safer footstep planning policy legged robot via modelbased prior saytap language quadrupedal locomotion scientific exploration challenging planetary analog environment team legged robot solving challenging control problem via learningbased motion planning imitation towards legged locomotion steep planetary terrain versatile multicontact planning control legged locomanipulation 2022 collisionfree mpc wholebody dynamic locomotion manipulation linearization centroidal dynamic modelpredictive control quadruped robot reconfigurable leg walking robot walk park learning walk 20 minute modelfree reinforcement learning wholebody controller based simplified template rendering impedance quadruped manipulator a1 slam quadruped slam using a1 onboard sensor accelerated policy learning parallel differentiable simulation accessibilitybased clustering efficient learning locomotion skill advanced skill learning locomotion local navigation endtoend advanced skill multiple adversarial motion prior reinforcement learning agile versatile climbing ferromagnetic surface quadrupedal robot animal motion legged robot using nonlinear model predictive control animal motion legged robot using nonlinear model predictive control central pattern generator evolved realtime adaptation cerberus lowdrift visualinertialleg odometry agile locomotion collisionbackpropagation based obstacle avoidance method legged robot expressed simplified dynamic model combining learningbased locomotion policy modelbased manipulation legged mobile manipulator concurrent training control policy state estimator dynamic robust legged locomotion control wheeledlegged quadruped using deep reinforcement learning coupling vision proprioception navigation legged robot cpgrl learning central pattern generator quadruped locomotion creating dynamic quadrupedal robotic goalkeeper reinforcement learning daydreamer world model physical robot learning deep hierarchical planning pixel deep wholebody control learning unified policy manipulation locomotion deepphase periodic autoencoders learning motion phase manifold elevation mapping locomotion navigation using gpu factor graph fusion raw gnss sensing imu lidar precise robot localization without base station genloco generalized locomotion controller quadrupedal robot hierarchical adaptive locomanipulation control quadruped robot hierarchical decentralized deep reinforcement learning architecture simulated fourlegged agent hierarchical reinforcement learning precise soccer shooting skill using quadrupedal robot highspeed quadrupedal locomotion imitationrelaxation reinforcement learning human motion control quadrupedal robot using deep reinforcement learning imitate repurpose learning reusable robot movement skill human animal behavior conditional generative modeling need decisionmaking round quantized observation space enable memory efficient learning dynamic locomotion landing control method lightweight fourlegged landing walking robot layered control cooperative locomotion two quadrupedal robot centralized distributed approach learning unified policy wholebody control manipulation locomotion learning agile skill via adversarial imitation rough partial demonstration learning deploying robust locomotion policy minimal dynamic randomization learning footstep planning quadrupedal locomotion model predictive control learning forward dynamic model informed trajectory sampler safe quadruped navigation learning lowfrequency motion control robust dynamic robot locomotion learning modular robot visualmotor locomotion policy learning plastic matching robot dynamic closedloop central pattern generator learning robust perceptive locomotion quadrupedal robot wild learning torque control quadrupedal locomotion learning visual locomotion crossmodal supervision legged locomotion challenging terrain using egocentric vision locomotion policy guided traversability learning using volumetric representation complex environment meta reinforcement learning optimal design legged robot model predictive control quadruped robot based reinforcement learning monte carlo tree search gait planner nongaited legged system control multimodal legged locomotion framework automated residual reinforcement learning neural scene representation locomotion structured terrain next step learning disentangled gait representation versatile quadruped locomotion nonlinear model predictive control quadrupedal locomotion using secondorder sensitivity analysis online kinematic calibration legged robot perceptive locomotion nonlinear model predictive control piars accelerating evolutionlearned visuallocomotion predictive information representation prepare predictive proprioception agile failure event detection robotic exploration extreme terrain psto learning energyefficient locomotion quadruped robot quadruped reinforcement learning without explicit state estimation rapid reliable quadruped motion planning omnidirectional jumping rapid locomotion via reinforcement learning realtime digital double framework predict collapsible terrain legged robot revolver continuous evolutionary model robottorobot policy transfer rloc terrainaware legged locomotion using reinforcement learning optimal control roloma robust locomanipulation quadruped robot arm safe reinforcement learning legged locomotion sample efficient dynamic learning symmetrical legged robotsleveraging physic invariance geometric symmetry saving limping faulttolerant quadruped locomotion via reinforcement learning state estimation hybrid locomotion drivingstepping quadruped step state estimator legged robot using preintegrated foot velocity factor trotq traversability obstacle aware target tracking system quadruped robot unsupervised learning terrain representation haptic monte carlo localization vaeloco versatile quadruped locomotion learning disentangled gait representation versatile realtime motion synthesis via kinodynamic mpc hybridsystems ddp versatile skill control via selfsupervised adversarial imitation unlabeled mixed motion vinl visual navigation locomotion obstacle vital visionbased terrainaware locomotion legged robot walk way gaitconditioned policy yield diversified quadrupedal agility walking narrow space safetycritical locomotion control quadrupedal robot dualitybased optimization 2021 review physic simulator robotic application unified mpc framework wholebody dynamic locomotion manipulation adaptive clfmpc application quadrupedal robot adaptive forcebased control legged robot animal gait quadrupedal robot using motion matching modelbased control catlike jumping landing legged robot low gravity using deep reinforcement learning circus anymal quadruped learning dexterous manipulation limb cpgactor reinforcement learning central pattern generator development quadruped robot system torquecontrollable modular actuator unit dynamic randomization revisiteda case study quadrupedal locomotion efficient motion planning based kinodynamic model quadruped robot following person confined space glide generalizable quadrupedal locomotion diverse environment centroidal model imitation learning reinforcement learning imitation learning mpc quadrupedal multigait control jumping obstacle mit cheetah learning agile locomotion skill mentor learning fast adaptation meta strategy optimization learning multiple gait quadruped robot using hierarchical reinforcement learning learning jump pixel learning navigate sidewalk outdoor environment learning walk minute using massively parallel deep reinforcement learning learning visionguided quadrupedal locomotion endtoend crossmodal transformer legged robot keep learning finetuning locomotion policy real world minimizing energy consumption lead emergence gait legged robot obstacle overcoming gait design quadruped robot vision tactile sensing feedback perceptive autonomous stair climbing quadrupedal robot realtime optimal navigation planning using learned motion cost reinforcement learning collaborative quadrupedal manipulation payload challenging terrain reinforcement learning evolutionary trajectory generator general approach quadrupedal locomotion representationfree model predictive control dynamic motion quadruped representationfree model predictive control dynamic motion quadruped rma rapid motor adaptation legged robot robust highspeed running quadruped robot via deep reinforcement learning searchbased kinodynamic motion planning omnidirectional quadruped robot simulationbased climbing capability analysis quadrupedal robot traversing steep granular martian analog slope dynamic quadrupedal robot vilens visual inertial lidar leg odometry allterrain legged robot vilens visual inertial lidar leg odometryfor allterrain legged robot visionbased terrain perception quadruped robot complex environment visuallocomotion learning walk complex terrain vision 2020 open torquecontrolled modular robot architecture legged locomotion research dream control learning behavior latent imagination dynamic equilibrium climbing robot based stability polyhedron gravitoinertial acceleration dynamicsaware unsupervised discovery skill emergent realworld robotic skill via unsupervised offpolicy reinforcement learning first step latentspace control semantic constraint quadruped locomotion guided constrained policy optimization dynamic quadrupedal robot locomotion learning agile robotic locomotion skill imitating animal learning quadrupedal locomotion challenging terrain learning walk real world minimal human effort model pixel reward evaluating design tradeoff visual modelbased reinforcement learning mpcbased controller terrain insight dynamic legged locomotion multiexpert learning adaptive legged locomotion one policy control shared modular policy agentagnostic control path planning local motion estimation perceptive locomotion rough terrain online foothold optimization planebased stairway mapping legged robot locomotion pronto multisensor state estimator legged robot realworld scenario rapidly adaptable legged robot via evolutionary metalearning reinforcement learning quadrupedal locomotion design continualhierarchical curriculum vision aided dynamic exploration unstructured terrain smallscale quadruped robot 2019 deepgait planning control quadrupedal gait using deep reinforcement learning design fall recovery strategy wheellegged quadruped robot using stability feature space dynamic locomotion slippery ground fast continuous foothold adaptation dynamic locomotion cnns fast continuous foothold adaptation dynamic locomotion cnns feedback mpc torquecontrolled legged robot hierarchical reinforcement learning quadruped locomotion learning agile dynamic motor skill legged robot model predictive control motion planning quadrupedal locomotion policy modulating trajectory generator robust legged robot state estimation using factor graph optimization spacebok dynamic legged robot space exploration stabilizing offpolicy qlearning via bootstrapping error reduction wholebody motion landing force control quadrupedal stair climbing 2018 contact model fusion eventbased locomotion unstructured terrain dynamic locomotion mit cheetahthrough convex modelpredictive control gait trajectory optimization legged system phasebased endeffector parameterization learning walk via deep reinforcement learning mit cheetahdesign control robust dynamic quadruped robot modeadaptive neural network quadruped motion control percontact iteration method solving contact dynamic policy transfer strategy optimization robust roughterrain locomotion quadrupedal robot robust roughterrain locomotion quadrupedal robot scalability analysis legged robot space exploration simtoreal learning agile locomotion quadruped robot 2017 anymal highly mobile dynamic quadrupedal robot design hyq hydraulically electrically actuated quadruped robot highslope terrain locomotion torquecontrolled quadruped robot meta learning shared hierarchy robotcentric elevation mapping uncertainty estimate slip detection recovery quadruped robot state estimation legged robot consistent fusion leg kinematics imu survey numerical method trajectory optimization terrainadaptive locomotion skill using deep reinforcement learning wholebody trajectory optimization nonperiodic dynamic motion quadrupedal system github repository youtube channel ai robotics seminar university toronto anybotics biomimetics mit boston dynamic cmu robotic exploration lab cmurobotics conference robot learning deepmind deeprobotics dynamic robotics laboratory oregon state university erwin coumans eth zurich figure ai ghost robotics hybrid robotics ihmc robotics kaist urban robotics lab magnecko mit robotics mpcrl 2021 recent advance mpc rl legged robot northwestern robotics oxford dynamic robot system group pro robot railab kaist rclab reinforcement learning zurich rise lab skku robomechanics lab robot mania robotics innovatory robotics today stoch lab iisc robot brain podcast umrobotics unitree robotics lab homepage biomimetic robotics lab mit computational robotics lab eth dynamic autonomous robotic system daros laboratory university massachusetts amherst dynamic legged system lab istituto italiano di tecnologia dynamic robot system group university oxford hybrid robotics lab uc berkely rai lab kaist rclab kookmin university robomechanics lab carnegie mellon university robotic system lab eth zurich robotics innovatory sungkyunkwan university stochastic robotics lab stochlab iisc robotics lab idsia related material extended bipedallegged robot agility robotics boardwalk robotics nadia dynamic robotics laboratory oregon state university human centered robotics laboratory university texas austin institute human machine cognition nadia,"[('reinforcement', 'learning'), ('legged', 'robot')]"
aravindr93/mjrl,Python,rl mujoco package contains implementation various rl algorithm continuous control task simulated mujoco installation main package dependency mujoco python37 gym013 mujocopy20 pytorch10 see setupreadmemd link detailed install instruction bibliography find package useful please cite following paper inproceedingsrajeswarannips17 author aravind rajeswaran kendall lowrey emanuel todorov sham kakade title towards generalization simplicity continuous control booktitle nip year 2017 inproceedingsrajeswaranrss18 author aravind rajeswaran vikash kumar abhishek gupta giulia vezzani john schulman emanuel todorov sergey levine title learning complex dexterous manipulation deep reinforcement learning demonstration booktitle proceeding robotics science system r year 2018 credit package maintained aravind rajeswaran member movement control lab university washington seattle,"[('aravind', 'rajeswaran'), ('continuous', 'control')]"
borglab/gtsam,C++,readme georgia tech smoothing mapping library important note january 2023 develop branch officially pre 43 mode envision several apibreaking change switch c17 away boost addition feature deprecated 42 removed please use stable 42 release need feature however easily converted tracked 42 disabling cmake flag gtsamallowdeprecatedsincev42 gtsam gtsam c library implement smoothing mapping sam robotics vision using factor graph bayes network underlying computing paradigm rather sparse matrix current support matrix platform compiler build status ubuntu 1804 gccclang linux ci macos clang macos ci window msvc window ci top c library gtsam includes wrapper matlab python quickstart root library folder execute sh bash mkdir build cd build cmake make check optional run unit test make install prerequisite boost 165 ubuntu sudo aptget install libboostalldev cmake 30 ubuntu sudo aptget install cmake modern compiler ie least gcc 473 linux optional prerequisite used automatically findable cmake intel threaded building block tbb ubuntu sudo aptget install libtbbdev intel math kernel library mkl ubuntu installing using apt see installmd installation information note mkl may provide speedup case make sure benchmark problem without mkl gtsamcompatibility gtsamintroduces several new feature notably expression python toolbox also introduces trait c technique allows optimizing nongtsam type open door retiring geometric type point2 point3 pure eigen type also significant change trigger compile error zeroinitializing point2 point3 deprecated please aware might render function using default constructor incorrect wrapper provide support matlab python wrapper gtsam please refer linked document detail citation using gtsam academic work please use following citation bibtex softwaregtsam author frank dellaert gtsam contributor title borglabgtsam month may year 2022 publisher georgia tech borg lab version 42a8 doi 105281zenodo5794541 url cite factor graph robot perception book please use bibtex bookfactorgraphsforrobotperception authorfrank dellaert michael kaess year2017 titlefactor graph robot perception publisherfoundations trend robotics vol url using imu preintegration scheme please cite bibtex bookimupreintegration authorchristian forster luca carlone frank dellaert davide scaramuzza titleimu preintegration manifold efficient visualinertial maximumaposteriori estimation year2015 preintegrated imu factor gtsam includes state art imu handling scheme based todd lupton salah sukkarieh visualinertialaided navigation highdynamic motion built environment without initial condition tro 2816176 2012 link implementation improves using integration manifold detailed luca carlone zsolt kira chris beall vadim indelman frank dellaert eliminating conditionally independent set factor graph unifying perspective based smart factor int conf robotics automation icra 2014 link christian forster luca carlone frank dellaert davide scaramuzza imu preintegration manifold efficient visualinertial maximumaposteriori estimation robotics science system r 2015 link using factor academic work please cite publication gtsama new efficient implementation based integrating navstate tangent space detailed document enabled default switch r 2015 version set flag gtsamtangentpreintegration additional information gtsam user google group general discussion read important gtsamconcepts primer gtsam expression support superfast automatic differentiation found gtsam wiki bitbucket see install file detailed installation instruction gtsam open source bsd license see license licensebsd file please see example directory usage file example use gtsam gtsam wa developed lab frank dellaert georgia institute technology help many contributor year see thanks,"[('frank', 'dellaert'), ('please', 'use')]"
ontodev/robot,Other,robot obo tool java ci maven central javadocs robot commandline tool library automating ontology development task focus open biological biomedical ontology obo cite robot rc jackson jp balhoff e douglas nl harris cj mungall ja overton robot tool automating ontology workflow bmc bioinformatics vol 20 july 2019 installation usage please see build use maven mvn clean package create selfcontained jar file binrobotjar build option mvn clean test run junit test report moduletargetsurefirereports mvn clean verify rebuilds package run integration test report moduletargetfailsafereports mvn site generates javadoc targetsite moduletargetsite alternatively use docker provided dockerfile build run robot within container first build image docker build tag robot run robot container usual commandline argument docker run rm robot help code style use google java style automatically enforced googlejavaformat fmtmavenplugin may want use styleguide configuration file eclipse intellij design library provides set operation set command command handle commandline interface io task operation focus manipulating ontology sometimes pair operation command necessity onetoone correspondence command implement command interface requires mainstring args method command called via main commandlineinterface class provides single entry point selecting available command command run independently shared convention commandline option input prefix output etc shared convention implemented commandlinehelper utility class also iohelper class providing convenient method loading saving ontology list term simple command consist commandlinehelper call determine argument iohelper call load save file one call appropriate operation operation currently implemented static method shared interface contain io cli code current implementation modular pluggable particular commandlineinterface class depends hardcoded list command term list many operation require list term iohelper class defines method collecting list term string file returning setiri convention term list spaceseparated list iris curie optional comment character everything end line ignored note must start line preceded whitespace inside iri doe start comment acknowledgment initial version robot wa developed james overton based requirement design given chris mungall heiko dietze david osumisutherland initial version wa funded p41 grant 5p41hg00227309 gene ontology consortium current support nih grantr24 hg01003201 service support obo foundry standard c mungall b peter copyright copyright robot code documentation belongs respective author robot code distributed bsd3 license pomxml file list number software dependency license,"[('mvn', 'clean'), ('list', 'term')]"
ori-drs/pronto,C++,ci introduction pronto efficient versatile modular ekf state estimator proprioceptive inertial kinematics exteroceptive lidar camera sensor fusion ha used variety input sensor imu microstrain kvh xsense lidar hokuyo velodyne camera carnegie robotics multisense sl intel realsense joint kinematics legged robot pronto provided state estimate wa used mit drc team darpa robotics challenge estimate position motion boston dynamic atlas robot image pronto atlas since ha adapted estimate motion nasa valkyrie robot university edinburgh hyq quadruped robot istituto italiano di tecnologia anymal quadruped robot university oxford image pronto hyq micro aerial vehicle pronto wa originally developed micro aerial vehicle state estimation module specific mavs eg altimeter gps currently supported software overview algorithm wrapper written cc organized catkin package repository consists following main module prontocore core library implment filter state basic measurement module eg imu pose update prontobiped leg odometry measurement module humanoid robot tested atlas valkyrie prontoquadruped leg odometry library quadruped robot tested hyq anymal prontoquadrupedcommons abstract interface perform leg odometry quadruped robot fork iitcommons package see wrapper module support package filtering dependency pronto depends eigen boost system requirement target operating system ubuntu 1804 equipped melodic version ubunturos might work actively supported tested building code pronto organized collection catkin package build code run catkin build followed name package interested build robot implementation example learn use pronto robot look repository contains full implementation anymal quadruped robot publication use part work academic context please cite following publication camurri ramezani nobili fallon pronto multisensor state estimator legged robot realworld scenario frontier robotics ai 2020 pdf doi 103389frobt202000068 articlecamurri2020frontiers author camurri marco ramezani milad nobili simona fallon maurice title pronto multisensor state estimator legged robot realworld scenario journal frontier robotics ai volume number 68 page 118 year 2020 url doi 103389frobt202000068 issn 22969144 previous publication nobili camurri v barasuol focchi dg caldwell c semini fallon heterogeneous sensor fusion accurate state estimation dynamic legged robot proceeding robotics science system xiii 2017 pdf doi 1015607rss2017xiii007 inproceedingsnobili2017rss author simona nobili marco camurri victor barasuol michele focchi darwin caldwell claudio semini maurice fallon title heterogeneous sensor fusion accurate state estimation dynamic legged robot booktitle proceeding robotics science system year 2017 address cambridge massachusetts month july doi 1015607rss2017xiii007 camurri fallon bazeille radulescu v barasuol dg caldwell c semini probabilistic contact estimation impact detection state estimation quadruped robot ieee robotics automation letter volnopp 10231030 april 2017 pdf doi 101109lra20172652491 articlecamurri2017ral authorm camurri fallon bazeille radulescu v barasuol g caldwell c semini journalieee robotics automation letter titleprobabilistic contact estimation impact detection state estimation quadruped robot year 2017 volume number page 10231030 doi 101109lra20172652491 issn 23773766 month april fallon antone n roy teller driftfree humanoid state estimation fusing kinematic inertial lidar sensing 2014 ieeeras international conference humanoid robot pdf doi101109humanoids20147041346 inproceedingsfallon2014humanoids authorm f fallon antone n roy teller booktitle2014 ieeeras international conference humanoid robot titledriftfree humanoid state estimation fusing kinematic inertial lidar sensing year2014 volume number pages112119 doi101109humanoids20147041346 issn monthnov bry bachrach n roy state estimation aggressive flight gpsdenied environment using onboard sensing 2012 ieee international conference robotics automation pdf doi101109icra20126225295 inproceedingsbry2012icra authora bry bachrach n roy booktitle2012 ieee international conference robotics automation titlestate estimation aggressive flight gpsdenied environment using onboard sensing year2012 volume number pages18 doi101109icra20126225295 issn monthmay credit originally developed adam bry abe bachrach nicholas roy mit robust robotics group micro aerial vehicle extended support humanoid motion maurice fallon help mit darpa robotics challenge team support quadruped robot full conversion logo design marco camurri iit dynamic legged system lab ori dynamic robot system group additional contributor andy barry pat marion dehann fourie marco frigerio michele focchi benoit casseau russell buchanan wolfgang merkt license pronto released lgpl v21 license please see license file attached document information,"[('quadruped', 'robot'), ('state', 'estimation')]"
linorobot/linorobot2,Python,linorobot2 linorobot2 ros2 port linorobot robot urdf ha configured linorobot2description package user easily switch booting physical robot spawning virtual robot gazebo assuming using one tested sensor linorobot2 automatically launch necessary hardware driver topic conveniently matched topic available gazebo allows user define parameter high level application ie nav2 slamtoolbox amcl common virtual physical robot image summarizes topic available running bringuplaunchpy indepth tutorial build robot available linorobot2hardware installation package requires rosfoxy rosgalactic installed ros2 yet use installer script ha tested work x86 arm based dev board ie raspberry pi4nvidia jetson series robot computer linorobot2 package easiest way install package robot computer run bash script found package root directory install dependency set env variable robot base sensor create linorobot2ws robotcomputerws robot computer home directory using zed camera jetson nano must create custom ubuntu 2004 image cuda gpu driver work quick guide create custom image jetson nano source optrosrosdistrosetupbash cd tmp wget bash installlinorobot2bash robottype lasersensor depthsensor source bashrc robottype 2wdwheel drive robot 4wdwheel drive robot mecanum mecanum drive robot lasersensor rplidar rp lidar a1 ldlidar ld06 lidar ydlidar ydlidar xv11 xv11 realsense intel realsense d435 d435i zed zed zed2 zed zed2i zed 2i zedm zed mini robot sensor listed sensor marked asterisk depth sensor depth sensor used laser sensor launch file run depthimagetolaserscan convert depth sensor depth image laser scan depthsensor realsense intel realsense d435 d435i zed zed zed2 zed zed2i zed 2i zedm zed mini oakd oak oakdlite oak lite oakdpro oakd pro alternatively follow guide installation manuallyhost machine development computer gazebo simulation optional step required plan use gazebo later come handy want finetune parameter ie slam toolbox amcl nav2 test application virtual robot 21 install linorobot2 package install linorobot2 package host machine cd hostmachinews git clone b rosdistro srclinorobot2 rosdep update rosdep install frompath src ignoresrc skipkeys microxrceddsagent skipkeys microrosagent colcon build source installsetupbash microxrceddsagent microrosagent dependency check skipped prevent issue finding key mean always add skipkeys microxrceddsagent skipkeys microrosagent whenever run rosdep install ros2 workspace installed linorobot2 22 define robot type set linorobot2base env variable type robot base used available env variable 2wd 4wd mecanum example echo export linorobot2base2wd bashrc source bashrc skip next step host machine rviz configuration since package already contains rviz configuration visualize robot host machine rviz configuration install linorobot2viz package visualize robot remotely specifically creating map initializingsending goal pose robot package ha separated minimize installation required using simulation tool host machine cd hostmachinews git clone srclinorobot2viz rosdep update rosdep install frompath src ignoresrc colcon build source installsetupbash hardware robot firmware hardware documentation robot microcontroller firmware found urdfdefine robot property linorobot2description package ha parameterized xacro file help kickstart writing robot urdf open propertiesurdfxacro linorobot2descriptionurdf directory change value according robot specificationdimensions pose definition must measured baselink center base wheel position ie wheelposx referring wheelfor custom urdfs change urdfpath descriptionlaunchpy found linorobot2descriptionlaunch directory robot orientation front wheel1 wheel2 2wd4wd wheel3 wheel4 4wd back build robot computer workspace load new urdf cd robotcomputerws colcon build change must made host machine propertiesurdfxacro simulating robot gazebo remember also build host machine workspace editing xacro file cd hostmachinews colcon build visualize newly created urdf 21 publish urdf robot computer ros2 launch linorobot2description descriptionlaunchpy optional parameter simulation host machine rviz set true visualize robot rviz2 configuring urdf host machine example ros2 launch linorobot2description descriptionlaunchpy rviztrue 22 visualize robot host machine rviz argument descriptionlaunchpy work headless setup visualize robot remotely host machine ros2 launch linorobot2viz robotmodellaunchpy quickstart command run robot computer unless running simulation rviz2 visualize robot remotely host machine slam navigation launch file real simulated robot gazebobooting robot 11a using real robot ros2 launch linorobot2bringup bringuplaunchpy optional parameter baseserialport serial port robot microcontroller assumed value devttyacm0 otherwise change default value correct serial port example ros2 launch linorobot2bringup bringuplaunchpy baseserialportdevttyacm1 joy set true run joystick node background tested logitech f710 always wait microros agent connected running application ie creating map autonomous navigation connected agent print rootcpp createclient create sessionmanagerhpp establishsession session established agent need second get reconnected le 30 second unplug plug back microcontroller take longer usual 11b using gazebo ros2 launch linorobot2gazebo gazebolaunchpy linorobot2bringuplaunchpy gazebolaunchpy must always run separate terminal creating map robot navigation working real robot gazebo simulation respectivelycontrolling robot 21 keyboard teleop run teleoptwistkeyboard control robot using keyboard ros2 run teleoptwistkeyboard teleoptwistkeyboard press drive robot forward reverse robot j rotate robot ccw l rotate robot cw shift j strafe robot left mecanum robot shift l strafe robot right mecanum robot u used turning robot combining linear velocity x angular velocity z 22 joystick pas joy argument launch file set true enable joystick example ros2 launch linorobot2bringup bringuplaunchpy joytrue f710 gamepad top switch set x mode led press buttonmove joystick rb first top right button press hold button moving joystick enable control left joystick updown drive robot forwardreverse left joystick leftright strafe robot leftright right joystick leftright rotate robot cwccwcreating map 31 run slam toolbox ros2 launch linorobot2navigation slamlaunchpy optional parameter simulation host machine example ros2 launch linorobot2navigation slamlaunchpy rviztrue simtrue sim set true simulated robot host machine default value false rviz set true visualize robot rviz default value false 31 run rviz2 visualize robot host machine rviz argument slamlaunchpy work headless setup visualize robot remotely host machine ros2 launch linorobot2viz slamlaunchpy 32 move robot start mapping drive robot manually robot ha fully covered area operation alternatively use 2d goal pose tool rviz set autonomous goal mapping info 33 save map cd linorobot2linorobot2navigationmaps ros2 run nav2mapserver mapsavercli f mapname rosargs p savemaptimeout10000 autonomous navigation 41 load map created open linorobot2linorobot2navigationlaunchnavigationlaunchpy change mapname name newly created map build robot computer workspace done cd robotcomputerws colcon build alternatively map argument used launching nav2 next step dynamically load map file example ros2 launch linorobot2navigation navigationlaunchpy mappathtomapfilemapnameyaml 42 run nav2 package ros2 launch linorobot2navigation navigationlaunchpy optional parameter loading map map path newly created map optional parameter simulation host machine sim set true simulated robot host machine default value false rviz set true visualize robot rviz default value false 43 run rviz2 visualize robot host machine rviz argument navigationlaunchpy work headless setup visualize robot remotely host machine ros2 launch linorobot2viz navigationlaunchpy check nav2 tutorial detail initialize send goal pose navigationlaunchpy continue throw error timed waiting transform baselink map become available tf error invalid frame id map passed cantransform argument targetframe frame doe exist robot pose ha initialized troubleshooting guidethe change made file taking effect package configurationrobot behavior need build workspace every time modify file cd colcon build continue slamtoolbox message filter dropping message frame laser try transformtimeout 01 linorobot2navigationconfigslamyaml warning gone targetframe frame doe exist check propertiesurdfxacro ensure syntax error repeated decimal point weird microros agent behavior updating linuxros forget update microros agent well update run bash updatemicrorosbash useful resource,"[('host', 'machine'), ('ros2', 'launch')]"
robocorp/rpaframework,Python,packagesmainreadmerst,[]
skumra/robotic-grasping,Python,antipodal robotic grasping present novel generative residual convolutional neural network based model architecture detects object camera field view predicts suitable antipodal grasp configuration object image repository contains implementation generative residual convolutional neural network grconvnet paper antipodal robotic grasping using generative residual convolutional neural network sulabh kumra shirin joshi ferat sahin arxiv video pwc use project research wish refer baseline result published paper please use following bibtex entry inproceedingskumra2020antipodal authorkumra sulabh joshi shirin sahin ferat booktitle2020 ieeersj international conference intelligent robot system iros titleantipodal robotic grasping using generative residual convolutional neural network year2020 pages96269633 doi101109iros4574320209340777 requirement numpy opencvpython matplotlib scikitimage imageio torch torchvision torchsummary tensorboardx pyrealsense2 pillow installation checkout robotic grasping package bash git clone create virtual environment bash python36 venv systemsitepackages venv source virtual environment bash source venvbinactivate install requirement bash cd roboticgrasping pip install r requirementstxt datasets repository support cornell grasping dataset jacquard dataset cornell grasping dataset download extract cornell grasping dataset convert pcd file depth image running python utilsdatasetprocessinggeneratecornelldepth path dataset jacquard dataset download extract jacquard dataset model training model trained using trainnetworkpy script run trainnetworkpy help see full list option example cornell dataset bash python trainnetworkpy dataset cornell datasetpath path dataset description trainingcornell example jacquard dataset bash python trainnetworkpy dataset jacquard datasetpath path dataset description trainingjacquard usedropoutinputsize 300 model evaluation trained network evaluated using evaluatepy script run evaluatepy help full set option example cornell dataset bash python evaluatepy network path trained network dataset cornell datasetpath path dataset ioueval example jacquard dataset bash python evaluatepy network path trained network dataset jacquard datasetpath path dataset ioueval usedropoutinputsize 300 run task task executed using relevant run script task script named runtask namepy example run grasp generator run bash python rungraspgeneratorpy run robot run grasp generator robot please use implementation baxter robot available,"[('jacquard', 'dataset'), ('path', 'dataset')]"
cajt/list_of_robot_electronics,Other,list resource project product useful robot electronics addition please open issue pull request open source module subsystem motor driver vesc brushless dc motor controller cheap focerlowcost vesc 6based brushless dc motor controller openbldc openbldc stand open source brush le dc motor controller highpowermechaduino closed loop stepper servo 50v10a motorcontrolboard cvra dcmotor driver using stm32f3 support bus wa designed using kicad motctrl bldc motor controller ottercontrol ottercontrol bldc motor controller stmbl highvoltage ac servo driver rca motor control bldc dc motor 250w brushless dc motor controller board dan strother stm32f103 based bldc controller board closed loop motor controller stepdir input cnc use based psoc4 dc servomotor controller dcmotor driver build around avr stmmotorcontroller robot design control lab cit odrive odriveros2 high performance motor control later version wo open hw near zero open hardware arduinobased dualmotor simple foc variety board available rp2040motorcontroller based rp2040 chip dagor esp32based brushless controller ha onboard magnetic encoder betzdrive bldc controler ditributed multiaxis system see also blue actuator mechaduino closed loop stepper servo opentorque actuator joint legged robot 3d printed robot actuator motorcontroller bldc cycloidal gearbox position feedback directservo robotic joint controller bldc driver magnetic encoder moteus joint controller quadruped robot design computer vision openmv openmv embedded cv module cmos sensor stm32 px4flow px4flow optical flow sensor battery management diebiems diebiems 312s liionbased 100a libresolar project different sized bm bm liion 5 bm liion 48v ceech bm arduinobased 5 bm bq76920 battman bm liion bm ltc6803 ennoid bm fw gui modular bm based ltc68xx stm32 mcu 400v ev battery pack foxbms github modular bm many chemistry many cell foxbmsorg green bm modular bm many chemistry fpga based loa loa framework designed build specialized io subsystem snickerdoodle snickerdoodle zynq based systemonmodule logibone fpga beaglebone also vhdl module relevant robotics available flink universal interface fpga includes ipcores robotics bus system sab sensor actuator bus sab also modmio opencyphal formerly uavcan protocol top bus suited robotics aerospace control application uc4h uavcan hobbyist github uavcan applied multirotor plattform luo library used mcu leading free fast multielectronicboards product development simple robot rpi4 ethercat lely canopen open source canopen stack canopennode another open source canopen stack canopen driver framework canopen bridge kacanopen easytouse canopen stack sensor opensimplelidar open hardware scanning laser rangefinder oslrf01 open source laser range sensor using timeofflight project open reuseable design open source project reachy humanoid robot remote teleoperation using virtual reality morph github modular platform open robotics development support us vesc evezor evezor open source scara class robotic manufacturing platform octanis rover octanis rover project electronics oap open automaton project source repo inactive since 2008 linorobot suite open source compatible robot git bobblebot demo robot realtime control using rpi rt linux stanforddoggoproject 8dof quadruped robot pulurobots open source mobile service robot open dynamic robot initiative 812dof walker fast multiaxis force control bldcdrivers scuttle mobile robot platform us rpi opencv lidar hoverboard provides support modified hoverboard provide differential drive plattform us modified firmware hello robot mobile robot mit manipulation capability also github nanosaur nanosaur little tracked robot ros2 enabled made nvidia jetson nano robot competition cvra rca rca github repository eurobot team apbteam eurobot team opensource robot design university project thesis work etc litter bot autonomous litter collecting robot using opencv rpi avr zynq ov7670 student project using zynq image sensor ov7670,"[('open', 'source'), ('motor', 'controller')]"
anki/vector-python-sdk,Python,anki vector python sdk learn vector learn sdk sdk documentation forum getting started follow step set vector robot sdk also generate local copy sdk documetation following instruction doc folder project privacy policy term condition use vector vector sdk subject anki privacy policy term condition,"[('privacy', 'policy'), ('policy', 'term')]"
MarketSquare/robotframework-browser,Python,robotframeworkbrowser contributor version action status license robot framework browser library powered playwright moving browser automation year 2023 aiming rocket speed whitecheckmark reliability microscope visibility see keyword documentation web page detail installation instruction python 38 newer supported install nodejs eg update pip pip install u pip ensure latest version used install robotframeworkbrowser commandline pip install robotframeworkbrowser install node dependency run rfbrowser init shell rfbrowser found try python browserentry init please note default chromium firefox webkit browser installed even would already installed system installation size depends operating system usually 700mb possible skip browser binary installation rfbrowser init skipbrowsers command user responsible browser binary installation possible install selected browser binary adding chromium firefox webkit argument init command example rfbrowser init firefox would install firefox binary rfbrowser init firefox chromium would install firefox chromium binary use docker image documented dockerreadmemd update instruction upgrade already installed robotframeworkbrowser library update commandline pip install u robotframeworkbrowser clean old node side dependency browser binary rfbrowser cleannode install node dependency newly installed version rfbrowser init uninstall instruction completely install library including browser binary installed playwright run following commandsclean old node side dependency browser binary rfbrowser cleannodeuninstall pip pip uninstall robotframeworkbrowser example testing robot framework robotframework setting library browser test case example test new page get text h1 contains playwright testing python python import browser browser browserbrowser browsernewpage assert playwright browsergettexth1 browserclosebrowser extending javascript javascript async function mygotokeywordurl page logger loggergoing url return await pagegotourl mygotokeywordrfdoc go keyword exportsesmodule true exportsmygotokeyword mygotokeyword robotframework setting library browser jsextensioncurdirmymodulejs test case example test new page mygotokeyword see example ready made extension place share robotframeworkbrowserextensions ergonomic selector syntax support chaining text cs xpath selector robotframework select element containing text login text selector strategy select parent input element xpath click login xpathinput select element cs strategy select button text strategy click divdialog ok evaluate browser page robotframework new page loginurl ref get element h1 get property ref innertext login page evaluate javascript ref elem eleminnertext abc get property ref innertext abc asynchronously waiting http request response robotframework button id delayedrequest fire delayed request use promise capture promise promise wait response matcher timeout3s click delayedrequest body wait promise device descriptor robotframework device get device iphone x new context device new page get viewport size return width 375 height 812 sending http request parsing response robotframework response http apipost post name john equal responsestatus 200 parallel test execution using pabot let rf browser spawn separate process every pabot process simple run test normally using pabot see however small test use testlevelsplit cause lot overhead test cannot share browser case share node side rf browser process using robotframeworkbrowsernodeport environment variable browserutils import spawnnodeprocess helper see doc helper save overhead based many split test running clean process afterwards reusing authentication credential figure page storing authentication localstorage cooky save storage state work see usage example development see contributingmd development instruction core team order appearance mikko korpela tatu aalto janne harkonen alumnus kerkko pelttari rene rohner contributor project community driven becomes reality work people contribute supported robocorp robot framework foundation mikko korpela tatu aalto antti karjalainen ismo aro janne harkonen kerkko pelttari robocorp rene bryan oakley tanakiat srisaranyakul maaret pyhajarvi karlo smid frank schimmel christoph mika hanninen imbus niklas gdroes reaktor adrian yorke nanakawa ed manlove brian tsao chari sgalante simon meggle annagunda anton264 emakaay nea ohvo elout van leeuwen lderikx olga nicholas bollweg ville salonen jani mikkonen aleh borysiewicz jurgen knauth dalaakso msirkka ossi r adrian v sami sallmen pekka klarck jani palsamaki allanmedeiros emmanuel alap ankurbhallagmail ulisei tomasz pawlak mtoskamp zastress juga paazmaya raphael smadja antti pakkanen luis gomeztinoco eplanlori laguna357 gavin rodgers pokaalinkanssayohon ryan sandbach niko kahilainen guillaume gautier robin matz stavros ntentos massukio atihinen gvrkumar lauri helkkula rlall07 eldad uzman mgarcibu dominikg jokinr jier chen idvoe cosmin poieana shenthil marduk bolanos amodzelewski timdicos vinismarques nizwiz reddriver seppo rousku tomaspekarovic robin mackaij nixuewei slava kari harju axiom41 amankul jcbentrnce remppa tomasz pawlak timo stordell marcin gmurczyk daniel biehl rarajabs sandeep vaidya falk ciadoh johan van iperen fabio zadrozny bcgst wilfried van asten mikal h henriksen alexinodr trybuskrzysztof aino1980 bjornahmark mezohren zoupers zou lasselindqvist david nieto sanz gil forcada codinachs nathan hannig martin kjellstrand anton medvedev martamedovovaext91522 dr dirk richter ratexmak horzuff naibra antti pekka vilkko serafin martin joostw21111 camatius,"[('browser', 'binary'), ('rfbrowser', 'init')]"
Healthcare-Robotics/assistive-gym,Python,assistive gym v10 v10 branch ha released see feature list new v10 assistive gym also supported google colab example open colab see wiki available google colab example assistive gym physicsbased simulation framework physical humanrobot interaction robotic assistance assistive gym integrated openai gym interface enabling use existing reinforcement learning control algorithm teach robot interact people paper paper assistive gym found z erickson v gangaram kapusta c k liu c c kemp assistive gym physic simulation framework assistive robotics ieee international conference robotics automation icra 2020 articleerickson2020assistivegym titleassistive gym physic simulation framework assistive robotics authorerickson zackory gangaram vamsee kapusta ariel liu c karen kemp charles c journalieee international conference robotics automation icra year2020 install google colab open colab try assistive gym google colab assistive gym fully supported google colab online python jupyter notebook click link example everything run online need install anything local machine available google colab example listed wikigoogle colab basic install want use existing environment without changing bash pip3 install upgrade pip pip3 install git recommend using python 36 37 although python 3x version may still work either download python 36 use pyenv install python 36 local directory eg pyenv install 365 pyenv local 365 python 365 3710 tested working full installation editcreate environment using python virtual environment encourage installing assistive gym dependency python virtualenv installation instruction window also found install guide bash python3 pip install user virtualenv python3 venv env source envbinactivate pip3 install upgrade pip git clone cd assistivegym pip3 install e getting started provide 10 minute getting started guide help get familiar using assistive gym assistive robotics research visualize various assistive gym environment using environment viewer full list available environment found environment bash python3 assistivegym env feedingjacov1 provide pretrained control policy robot assistive task see running pretrained policy detail run pretrained policy see training new policy documentation train new control policy assistive gym environment finally creating new assistive environment discus process creating assistive gym environment humanrobot interaction task see list common command available assistive gym open colab new feature v10 clean code syntax v10 example getting robot left end effector velocity python endeffectorvelocity selfrobotgetvelocityselfrobotleftendeffector old v01 using default pybullet syntax python endeffectorvelocity pgetlinkstateselfrobot 76 selfrobottype pr2 else 19 selfrobottype sawyer else 48 selfrobottype baxter elsecomputeforwardkinematicstrue computelinkvelocitytrue physicsclientidselfid6 google colab support open colab assistive gym supported google colab ton new example available developing learning assistive gym google colab see wikigoogle colab list available example notebook support mobile base mobile manipulation robot mobile base locomotion control supported ground friction slip dynamically changed domain randomization reference google colab notebook support stretch panda robot multirobot control support assitive gym provides interface simulating controlling multiple robot people openai gym framework see example multirobot control integration igibson assistive gym used igibson static human mesh model smplx smplx human mesh model supported assistive gym see wiki page detail use human mesh model google colab example building simple robotassisted feeding environment smplx human mesh also available assistive gym smplx colab base feature human robot model customizable female male human model default body size weight matching 50th percentile human 40 actuated human joint head torso arm waist leg four collaborative robot pr2 jaco baxter sawyer realistic human joint limit building prior research assistive gym provides model realistic posedependent human joint limit robot base pose optimization robot base pose greatly impact robot ability physically assist people provide baseline method using jointlimitweighted kinematic isotopy jlwki select good base pose near person jlwki robot chooses base pose position yaw orientation high manipulability near end effector goal human preference assistance person typically prefer robot spill water apply large force body assistive gym provides baseline set human preference unified across task incorporated directly reward function allows robot learn provide assistance consist person preference refer paper detail feature assistive gym,"[('assistive', 'gym'), ('google', 'colab')]"
mithi/hexapod-robot-simulator,Python,build status codecov code climate hitcount license mit code style black pr welcome firsttimersonly mithi hexapod robot simulator bare minimum browserbased hexapod robot simulator built first principle like project consider buying cup coffee announcement might interested checking rewrite javascript feature status feature description forward kinematics given angle joint doe robot look like inverse kinematics angle joint make robot look way want even possible uniform movement leg behaved way hexapod robot whole behave customizability set dimension shape robot body legsparameters usability control camera view pan tilt zoom whatever simplicity minimal dependency depends solely numpy calculation us plotly dash plotting dash safely replaced better 3d plotting library available stability check wip pose robot particular way fall fast okay fast wanted run locally okay bugfree fine right still room improvement welltested yeah need compile test case first preview image image image requirement x python 381 x plotly dash 1181 x plotly dash daq 050 x numpy 1195 x see also requirementstxt run bash python indexpy running modify default setting settingspy dark mode default modify page style stylesettingspy screenshots kinematics ik information check wiki additional information contributor mithi philippeitis mikong guilyx markkulube,"[('hexapod', 'robot'), ('plotly', 'dash')]"
stereolabs/zed-sdk,C++,zed sdk zed sdk crossplatform library designed get best tada zed sdk 40 released support zed x zed x mini camera added fusion api multicamera body tracking please check release note latest version detail overview depth sensing object detection body tracking depth sensing object detection body tracking positional tracking geo tracking spatial mapping positional tracking geotracking spatial mapping camera control plane detection multi camera fusion camera control plane detection multi camera fusion zed endtoend spatial perception platform humanlike sensing capability realtime performance algorithm zed sdk designed optimized run realtime reduce timetomarket comprehensive readytouse hardware software designed multiple application userfriendly intuitive easytouse integration welldocumented api streamlined development wide range supported platform desktop embedded pc getting started zed sdk contains library power camera along tool let experiment feature setting get started get zed stereolabs store download zed sdk install zed sdk window linux documentation api reference great starting point learn zed sdk many module sample repository contains readytouse sample start using zed sdk line code organized zed sdk module tutorial series basic tutorial demonstrate use api module camera control sample show adjust zed camera parameter camera streaming sample show stream receive local network zed video feed depth sensing sample show capture 3d point cloud display opengl also show save depth data different format positional tracking sample show use positional tracking display result opengl geotracking sample show fuse zed sdk positional tracking gnss data global positioning spatial mapping sample show capture 3d mesh zed display opengl classic mesh point cloud fusion available object detection sample show use object detection api module zed body tracking sample show use body tracking api zed recording sample show record playback video file svo format svo file let use zed sdk feature without zed connected supported platform list supported operating system latest version zed sdk please find recommended specification make sure configuration compatible zed sdk ubuntu lts window jetson zed sdk requires use nvidia gpu compute capabilityif familiar corresponding version nvidia jetpack sdk jetson linux please take look blog post integration zed sdk easily integrated project using following programming language c python c c thanks comprehensive api zed camera interfaced multiple thirdparty library environment unity unreal engineopencv pytorch yolo matlab isaac sim touch designer zed hub experience zed like never zed hub stereolabs iot platform allowing easy management camera fleet data aggregation fully managed cloud unlike competitor zed hub offer plugandplay functionality dedicated feature application developed zed sdk zed hub simplifies integration 3d perception offering remote access monitoring camera start free community join conversation connect zed sdk user share idea solve problem help make zed sdk awesome aim make extremely convenient everyone communicate u discourse forum zed user connect best place brainstorm exchange zed camera zed sdk software stereolabs product feel free create account ask question even share awesome project twitter follow stereolabs stereolabs3d official news release announcement github come across bug please raise issue github repository email talk stereolabs directly easiest way email get touch u supportstereolabscom,"[('zed', 'sdk'), ('sample', 'show')]"
OttoDIY/OttoNinja,C++,otto ninja robot arduino library license gpl v3 version repository main otto ninja robot library esp compatible board created sebastian coddington star star u github help installation need arduino ide computer download zip otto ninja library open arduino ide navigate sketch include library add zip library navigate zip file location downloaded open see bottom black area message ha installed verify properly installed go sketch include library menu see library bottom dropdown menu mean ready use otto example code find file example ottoninja detail way install library visit link led matrix example code need adafruit led bacck pack library dependence exact installation step oled display example code need u8g2 library additionally need add esp8266 arduino ide board flash led little way esp8266 board work unless program behave different uploading firmware code remote control ninja select nodemcu 10 board connect ninja board usb cable computer servo anything else connected check upload code first upload code download tp phone open app press add new device select wifi point select otto ninja visible option password 12345678 make sure wifi disconnected network power ninja battery time otto blockly need deal library stuff compatible hardware designed work esp8266 board code could adapted microcontrollers contribute contributing software warmly welcomed areways contribute projecttest find problem post issuehelps u solve issue bugsimprove optimize curren library basically forking committing modification pulling request please add change log contact file header thanks contribution welcome otto diy community license ccbysa use resource otto free otto diy website must included redistribution remixes must keep ccbysa license might seen original otto diy project idea people access therefore copy remix otto must also release open license mean must release file also public otto diy licensed rellicense href common attributionsharealike 40 international license otto diy website must included redistribution remixes must keep ccbysa license,"[('otto', 'diy'), ('otto', 'ninja')]"
scala-steward-org/scala-steward,Other,scala steward github workflow status codecov join chat typelevel project scala steward badge docker pull scala steward bot help keep library dependency sbt plugins scala sbt version uptodate see also announcement blog post keep project uptodate scala steward quick start guide open pull request add github repository project reposgithubmd edit pr merged scalastewardscalasteward check periodically version update project open pull request update found many thanks virtuslabvirtuslab hosting managing public scala steward instance show u pull request curious scalasteward sscalasteward pull request look like one ha created far created pull request compact merged pull request compact also watch currently wanna badge badge available show scala steward helping repos let spread scala steward keep scala ecosystem updated scala steward badge markdown scala steward badge documentation doc directory contains documentation topic running scala steward scalafix migration frequently asked question repositoryspecific configuration artifact migration contributor thanks go wonderful people contributing scala steward alejandro hernandez alessandro buggin alex alex klibisz alexis hernandez andrea andrea mistretta anil kumar myla anton sviridov antonio gelameris arjun dhawan arman bilge arnold farkas arulselvan madhavan barry neill bayram kiran ben carter brice jaglin cedric chantepie chris kipp chris llanwarne christoph meier christopher davenport claudio bley cwholmes dale wijnand daniel esik daniel pfeiffer daniel spiewak daniil leontiev david francoeur declan dominic egger smith iii doug roper eldar yusupov ender tunc erik erlandson erlend hamnaberg eugeniyk fabian grutsch felix dietze filipe regadas florian meriaux frank thomas frederick roth georgy davityan grzegorz kocur harm weites ikenna darlington ogbajie ingar abrahamsen jakub kozowski javier arrieta jcollier jeff martin jichao ouyang joan goyeau jose eduardo montenegro cavalcanti de oliveira kalejami kawachi takashi kenji yoshida kilic alifirat laurencewarne leonhard riedier maksym ochenashko manuel cueto marco zuhlke mark canlas mark van der tol mat1g3r mat mannion matthias kurz maxence cramet michael wizner michel daviot miguelpuyol nafg nabil abdelhafeez ondra pelech pavel shapkin philippus baalman piotr gabara pj fanning renato cavalcanti rikito taniguchi robert stoll roberto tyley robin raju roman langolf ropiteaux theo scott rice seeta ramayya solar stanislav chetvertkov sullis tatsuno yasuhiro terry hendrix thomas heslin thomas kaliakos tim steinbach tobias roeser toshiyuki takahashi victor viale yan yannick heiber yoan alvarezvanhard zack power zelenya community following company using scala steward manage dependency using scala steward company see listed consider creating pr add company list join community adform agoda autoscout24 avast babylon health besedo bitrock chartboost colisweb commercetools dataswiftio enliven system evolution gaming firstbird hellosoda holidaycheck iadvize leadiq lightbend mobimeo ocado technology play framework playq precog reward network rivero septeni original snowplow analytics softwaremill spotify springernature teads tegonal gmbh tupl virtuslab wehkamp wiringbits zalando participation scala steward project support scala code conduct want channel github gitter etc welcoming environment everyone credit scala steward exist without great sbtupdates plugin wa used version 06 find dependency update thanks go also impurepics license scala steward licensed apache license version 20,"[('scala', 'steward'), ('pull', 'request')]"
MIT-SPARK/Kimera,Other,kimera kimera c library realtime metricsemantic simultaneous localization mapping us camera image inertial data build semantically annotated 3d mesh environment kimera modular rosenabled run cpu kimera comprises four module fast accurate visual inertial odometry vio pipeline kimeravio full slam implementation based robust pose graph optimization kimerarpgo perframe multiframe 3d mesh generator kimeramesher generator semantically annotated 3d mesh kimerasemantics click following link install kimera module get started easy install kimeravio kimeramesher kimerarpgo kimerasemantics chart citation found module useful would really appreciate could cite work rosinol sattler pollefeys l carlone incremental visualinertial 3d mesh generation structural regularity ieee int conf robotics automation icra 2019 arxiv190301067 bibtex inproceedingsrosinol19icraincremental title incremental visualinertial 3d mesh generation structural regularity author rosinol antoni sattler torsten pollefeys marc carlone luca year 2019 booktitle 2019 international conference robotics automation icra pdf rosinol abate chang l carlone kimera opensource library realtime metricsemantic localization mapping ieee intl conf robotics automation icra 2020 arxiv191002490 bibtex inproceedingsrosinol20icrakimera title kimera opensource library realtime metricsemantic localization mapping author rosinol antoni abate marcus chang yun carlone luca year 2020 booktitle ieee intl conf robotics automation icra url pdf rosinol gupta abate j shi l carlone 3d dynamic scene graph actionable spatial perception place object human robotics science system r 2020 arxiv200206289 bibtex inproceedingsrosinol20rssdynamicscenegraphs title 3d dynamic scene graph actionable spatial perception place object human author rosinol gupta abate j shi l carlone year 2020 booktitle robotics science system r pdf rosinol gupta abate j shi l carlone kimera slam spatial perception 3d dynamic scene graph arxiv210106894 bibtex inproceedingsrosinol21arxivkimera title kimera slam spatial perception 3d dynamic scene graph author rosinol violette abate n hughes chang j shi gupta l carlone year 2021 booktitle arxiv pdf opensource datasets addition reallife test euroc dataset use photorealistic unitybased simulator test kimera simulator provides rgb stereo camera depth camera groundtruth 2d semantic segmentation imu data groundtruth odometry 2d lidar tf groundtruth odometry robot agent static tf groundtruth pose static object using simulator created several large visualinertial datasets feature scene without dynamic agent human well large variety environment indoors outdoors small large ideal test metricsemantic slam andor spatialai system uhumans released withuhumans2 released acknowledgment kimera partially funded arl dcist onr raider mit lincoln laboratory la caixa foundation id 100010434 lcfbqaa1811680088 rosinol license bsd license,"[('l', 'carlone'), ('3d', 'mesh')]"
MrinmoiHossain/Online-Courses-Learning,Other,onlinecourseslearning computer science data science ibm data science professional certificate targetblank href data science targetblank href targetblank href open source tool data science targetblank href targetblank href data science methodology targetblank href targetblank href python data science targetblank href targetblank href database sql data science targetblank href targetblank href data analysis python targetblank href targetblank href data visualization python targetblank href targetblank href machine learning machine learning tensorflow google cloud platform google cloudprogramming language google doe machine learning launching machine learning intro tensorflow feature engineering art science machine learning programming language python programming language python everody university michigan targetblank href programming everybody getting started python targetblank href github python data structure targetblank href targetblank href using python access web data targetblank href targetblank href using database python targetblank href targetblank href capstone retrieving processing visualizing data python targetblank href targetblank href go programming language programming google go university california irvine targetblank href getting started go targetblank href targetblank href function method interface go targetblank href targetblank href concurrency go targetblank href targetblank href matlab programming language introduction programming matlab vanderbilt university targetblank href targetblank href javascript programming language introduction computer programming university london targetblank href targetblank href operating system open source software development linux git linux foundation targetblank href open source software development method targetblank href targetblank href linux developer targetblank href targetblank href linux tool developer targetblank href targetblank href using git distributed development targetblank href targetblank href mechanical engineering mechanic material georgia institute technologyb mechanic material fundamental stress strain axial loading targetblank href targetblank href mechanic material ii thinwalled pressure vessel torsion targetblank href targetblank href mathematics calculus single variable university pennsylvania calculus single variable partfunctions targetblank href github calculus single variable partdifferentiation targetblank href github calculus single variable partintegration coursera github calculus single variable partapplications coursera github robotics introduction programming internet thing iot university california targetblank href introduction internet thing embedded system targetblank href targetblank href arduino platform c programming targetblank href targetblank href interfacing arduino targetblank href targetblank href raspberry pi platform python programming raspberry pi targetblank href targetblank href interfacing raspberry pi targetblank href targetblank href programming internet thing project targetblank href targetblank href,"[('targetblank', 'href'), ('href', 'targetblank')]"
Phylliade/ikpy,Python,ikpy pypi doi demo live demo ikpy click image see video also presentation ikpy presentation feature ikpy compute inverse kinematics every existing robot compute inverse kinematics position orientation define kinematic chain using arbitrary representation dh denavithartenberg urdf custom automatically import kinematic chain urdf file support arbitrary joint type revolute prismatic come future use preconfigured robot baxter poppytorso ikpy precise todigits limitation underlying model precision fast fromms 50 depending precision complete ik computation plot kinematic chain need use real robot simulator test algorithm define inverse kinematics method utils parse analyze urdf file moreover ikpy purepython library install matter second compiling required installation three option pypi recommended simply run bash pip install ikpy intend plot robot install plotting dependency mainly matplotlib bash pip install ikpyplot source first download extract archive run bash pip install nb must proper right execute command quickstart follow ipython notebook guide tutorial go wiki introduce basic concept ikpy api documentation extensive documentation api found dependency compatibility starting ikpy v31 pythonis supported version v31 library work version python 27 3x term dependency requires numpy scipy sympy highly recommended fast hybrid computation installed default matplotlib optional used plot model 3d contributing ikpy designed easily customisable add ik method robot representation dhparameters using dedicated developer api contribution welcome awesome patented also opensource ik method hesitate propose adding library link performance main concern aversive ha inverse kinematics module written c work way ikpy doe citation use ikpy part publication please use bibtex citation bibtex softwaremanceronpierre20226551158 author manceron pierre title ikpy month may year 2022 note use software please cite using metadata file publisher zenodo version v333 doi 105281zenodo6551158 url,"[('inverse', 'kinematics'), ('kinematic', 'chain')]"
osrf/rosbook,Python,rosbook repository contains example code accompany book programming robot erratum grateful reader found reported erratum book official erratum page reilly website list known erratum printed book code available github repo ha erratum corrected therefore may slightly different code listing provided book,"[('rosbook', 'repository'), ('repository', 'contains')]"
tesseract-robotics/tesseract,C++,tesseract codecov python pypi platform ci status linux focal build status window build status lint clangformat build status lint cmakeformat build status lint clangtidy build status lint codecov build status github issue license apache 20 license bsdclause support level consortium planning framework tesseract wa designed light weight limiting number dependency mainly using standard library like eigen boost orocos package core package agnostic full python support dependency rosindustrialcmakeboilerplate opwkinematics tesseract setup wizard visualization tool python installation self contained tesseract python package available pypi window 10 ubuntu 2004 ubuntu 2204 package contains tesseract tesseract planning dependency single package package available python 37 310 install window python pip install tesseractrobotics tesseractroboticsviewer install ubuntu 2004 ubuntu 2204 sudo apt install python3pip python3numpy supplied version pip ubuntu 2004 old manylinux231 upgrade pip python3 pip install u pip python3 pip install user tesseractrobotics tesseractroboticsviewer tesseract core package tesseract main class manages major component environment forward kinematics inverse kinematics loading various data tesseractcommandlanguage package contains generic command language support motion process planning similar industrial teach pendant tesseractcollision package contains common interface collision checking prividing several implementation bullet collision library fcl collision library includes continuous discrete collision checking convexconvex convexconcave concaveconcave shape tesseractcommon package contains common functionality needed majority package tesseractenvironment package contains tesseract environment provides functionality addremovemove modify link joint also manages adding object contact manager provides ability tesseractgeometry package contains geometry type used tesseract including primitive shape mesh convex hull mesh octomap signed distance field tesseractkinematics package contains common interface forward inverse kinematics chain tree graph including implementation using kdl opw kinematics tesseractscenegraph package contains scene graph data structure used manage connectivity object environment inherits boost graph provides addition functionality addingremoving modifying link joint along search implementation tesseractsupport package contains support data used unit test example throughout tesseract tesseractvisualization package contains visualization utility library related repository tesseract planning tesseract python tesseract tesseract documentation documentation wiki doxygen benchmark evolution create create video gource 1280x720 secondsperday 02 autoskipseconds 02 disablebloom background d0d3d4 hide filenamesmouseprogress ffmpeg r 60 f image2pipe vcodec ppm vcodec libx264 preset ultrafast pixfmt yuv420p crfthreadsbfgourcemp4 create gif ffmpeg gourcemp4 r 10 vf scale8001splits0s1s0palettegenps1ppaletteuse tesseractevolutiongif todo warning package heavy development subject change see issue 66 build instructionsclone repository workspaceclone repository dependenciesrepos file using wstool method eg manually git cloning thembuild workspace using catkin tool colcon similar tool note noetic tesseractext required install following dependency libbulletdev libbulletextrasdev rosnoeticfcl taskflow install using ppa note speed clean build may want add tesseractext extended workspace note install taskflow rosindustrial ppa building clangtidy enabled must pas dtesseractenableclangtidyon cmake building automatically enabled cmake argument dtesseractenabletestingallon passed building tesseract test must pas dtesseractenabletestingon cmake wanting build test automatically enabled cmake argument dtesseractenabletestingallon passed note building using catkin tool use catkin build forcecmake dtesseractenabletestingon running tesseract test tesseract package use ctest agnostic run test call catkin test nodeps tesseractcollision tesseractcommon tesseractenvironment tesseractgeometry tesseractkinematics tesseractscenegraph tesseracturdf tesseractcommandlanguage building tesseract code coverage must pas dtesseractenablecodecoverageon cmake wanting build code coverage code coverage report located individual build directory inside ccovallmerged folder open indexhtml file see package code coverage report note must clean build generating code coverage report also must build debug exclude code code coverage lcovexclline line containing marker excluded lcovexclstart mark beginning excluded section current line part section lcovexclstop mark end excluded section current line part section note replace lcov gcov gcovr create debian package linux nuget package window following process generate debian nuget package leveraging cmake cpack based package located current directory bash cd workspace directory catkin build dcmakebuildtyperelease dtesseractpackageon srctesseractruncpack note add prefix package name setting dtesseractpackageprefixrosnoetic quality tool leverage tesseract currently leverage compiler warnigs clang tidy code coverage warning produced compiler clang tidy treated error ci build compiler wall wextra wconversion wsignconversion wnosigncompare wnonvirtualdtor clang tidy clanganalyzer bugprone cppcoreguidelinesavoidgoto cppcoreguidelinesccopyassignmentsignature cppcoreguidelinesinterfacesglobalinit cppcoreguidelinesnarrowingconversions cppcoreguidelinesnomalloc cppcoreguidelinesslicing cppcoreguidelinesspecialmemberfunctions miscmiscnonprivatemembervariablesinclasses modernizemodernizeusetrailingreturntypemodernizeusenodiscard performance readabilityavoidconstparamsindecls readabilitycontainersizeempty readabilitydeletenullpointer readabilitydeleteddefault readabilityelseafterreturn readabilityfunctionsize readabilityidentifiernaming readabilityinconsistentdeclarationparametername readabilitymisleadingindentation readabilitymisplacedarrayindex readabilitynonconstparameter readabilityredundant readabilitysimplify readabilitystatic readabilitystringcompare readabilityuniqueptrdeleterelease readabilityraryobjects documentation tutorial documentation tutorial tesseract located debugging window build search directory ci dir b coptrosnoeticassimp location window build,"[('package', 'contains'), ('code', 'coverage')]"
dydxprotocol/liquidator,Other,deprecated dydx liquidator bot automatically liquidate undercollateralized expired dydx account usage docker requires running docker engine docker run e walletaddress0x2c7536e3605d9c16a7a3d7b1898e529396a65c23 e walletprivatekey0x4c0883a69102937d6231471b5dbb6204fe5129617082792ae468d01a3f362318 e ethereumnodeurl e sololiquidationsenabledtrue e soloexpirationsenabledfalse dydxprotocolliquidator overview service automatically liquidate undercollateralized andor expired account dydx bot work solo margintrading account use envvars sololiquidationsenabled soloexpirationsenabled control kind liquidation perform liquidation dydx happen internally account need alreadyfunded dydx account use liquidator bot use default soloaccountnumber0 fund dydx margin solo account margindydxexchange successfully liquidating account modify dydx account balance liquidate asset account provided another asset collateral cause dydx account balance go negative asset solo liquidation liquidation solo reward aspread top current oracle price asset liquidated used collateral example undercollateralized accounteth 350 dai liquidator account 100 eth 1000 dai oracle price eth oracle price 200 dai oracle pricefully liquidating account would cause 350 dai paid zero balance would reward 350 dai 1dai 200eth 105 18375 eth payout liquidation account balance would undercollateralized account 01625 ethdai liquidator account 1018375 eth 1350 dai configuration environment variable env variabledescription walletaddressrequired ethereum address dydx account owner liquidation walletprivatekeyrequired ethereum private key dydx account owner liquidation make sure 0x start metamask export private key without networkidethereum network id ethereumnodeurlrequired url ethereum node use eg alchemy,"[('dydx', 'account'), ('account', 'balance')]"
glumb/robot-gui,Other,robotgui threejs based 3d robot interface download clone open indexhtml robotglumbde enjoy may need use chrome since es6 feature supported browser yet robotgui geometry configure robot geometry using geometry tab bildschirmfoto 20171022 um 21 14 02 angle limit angle limit shown visualy red negative green positive bildschirmfoto 20171022 um 21 16 38 toggle space switch global tcp aligned control bildschirmfoto 20171022 um 21 18 43 bildschirmfoto 20171022 um 21 18 53 working space click add pose visualize working area current tcp orientation add muliple pose compare work area v orientation bildschirmfoto 20171022 um 21 22 20 bildschirmfoto 20171022 um 21 22 51,"[('bildschirmfoto', '20171022'), ('20171022', 'um')]"
PaoPaoRobot/IROS2020-paper-list,Other,iros2020paperlist 2020 ieeersj international conference intelligent robot system iros 2020 ha held oct 25 nov 25 held inperson continued resurgence covid19 within state nevada particular la vega along city prohibiting large even moderatelysized public gathering make impossibility hold inperson event originally planned iros one largest impacting robotics research conference worldwide brings international community researcher educator practitioner explore frontier science technology intelligent robot system discus latest advancement fast growing exciting field iros 2020 free access every technical talk plenary keynote 60 workshop tutorial competition includes publishing accepted paper iros proceeding ieee xplore list edited paopaorobot chinese academic nonprofit organization recently classify paper topic welcome follow github wechat public platform account paopaorobotslam course could contact yvon shong download link title 0018,"[('intelligent', 'robot'), ('robot', 'system')]"
StockSharp/StockSharp,Other,stocksharp trading platform doc2 download chat education4 introduction stocksharp shortly free platform trading market world crypto exchange american european asian russian stock future option bitcoins forex etc able trade manually automated trading algorithmic trading robot conventional hft available connection fixfast itch lse nasdaq blackwoodfusion barchart cqg etrade iqfeed interactivebrokers lmax matlab oanda fxcm openecry rithmic r sterling btce bitstamp bitfinex coinbase kraken poloniex gdax bittrex bithumb hitbtc okcoin coincheck binance liqui cexio cryptopia okex bitmex yobit livecoin exmo deribit huobi kucoin bitexbook coinexchange quantfeed many sdesigner8 sdesigner free universal algorithmic strategy application easy strategy creation visual designer create strategy mouse clicking embedded c editor easy create indicator build debugger connection multiple electronic board broker world platform schema sharing team sdata sdata free software automatically load store market data support many source high compression ratio data type program access stored data via api export csv excel xml database import csv scheduled task autosync internet several running program sdata sterminal10 terminal free trading charting application trading terminal connection multiple electronic board broker trading chart clicking arbitrary timeframes volume tick range pf renko candle cluster chart box chart volume profile sshell sshell readymade graphical framework ability quickly change need fully open source code c complete source code support stocksharp platform connection support sdesigner schema flexible user interface strategy testing statistic equity report save load strategy setting launch strategy parallel detailed information strategy performance launch strategy schedule sapi12 sapi free c library programmer use visual studio sapi let create trading strategy longtimeframe positional strategy high frequency strategy hft direct access exchange dma info12 strategy example c public class simplestrategy strategy displayname candleseries groupname base setting public candleseries candleseries get set public simplestrategy protected override void onstarted var connector connectorconnector connectorwhencandlesfinishedcandleseriesdocandlesfinishedapplythis connectorsubscribecandlescandleseries baseonstarted private void candlesfinishedcandle candle candleopenprice candlecloseprice position registerorderthisbuyatmarketvolume mathabsposition else candleopenprice candlecloseprice position registerorderthissellatmarketvolume mathabsposition crypto exchange logo name documentation eng documentation ru bibox eng ru binance eng ru bitalong eng ru bitbank eng ru bitexbook eng ru bitfinex eng ru bithumb eng ru bitmax eng ru bitmex eng ru bitstamp eng ru bittrex eng ru bitz eng ru bw eng ru cexio eng ru coinbase eng ru coinbene eng ru coincap eng ru coincheck eng ru coinex eng ru coinexchange eng ru coinigy eng ru coinhub eng ru cryptopia eng ru deribit eng ru digifinex eng ru digitexfutures eng ru exmo eng ru fatbtc eng ru gdax eng ru gopax eng ru hitbtc eng ru hotbit eng ru huobi eng ru idax eng ru kraken eng ru kucoin eng ru latoken eng ru lbank eng ru liqui eng ru livecoin eng ru okcoin eng ru okex eng ru poloniex eng ru prizmbit eng ru quoinex eng ru tradeogre eng ru upbit eng ru yobit eng ru zaif eng ru zb eng ru stock future option logo name documentation eng documentation ru polygonio eng ru interactive broker eng ru fix protocol 42 44 50 eng ru fast protocol eng ru bvmt eng ru alphavantage eng ru bachart eng ru cqg eng ru etrade eng ru google eng ru iex eng ru iqfeed eng ru itch eng ru openecry eng ru quandl eng ru quantfeed eng ru rithmic eng ru sterling eng ru tradier eng ru xignite eng ru yahoo eng ru blackwood fusion eng ru finviz eng ru russian market logo name documentation ru quik ru tinkoff ru mfd ru micex teap ru plaza ii ru quik fix ru smartcom ru spb exchange ru transaq ru twime ru ux ru ru ru ru ru ru forex logo name documentation eng documentation ru mt4 eng ru mt5 eng ru dukascopy eng ru fxcm eng ru gain capital eng ru lmax eng ru mb trading eng ru oanda eng ru truefx eng ru,"[('eng', 'ru'), ('ru', 'ru')]"
jr-robotics/robo-gym,Python,robogym pypi python version pypi robogym open source toolkit distributed reinforcement learning real simulated robot robogym provides collection reinforcement learning environment involving robotic task applicable simulation real world robotics additionally provide tool facilitate creation new environment featuring different robot sensor main feature openai gym interface environment simulated real robot interchangeability enables seamless transfer training simulation application real robot builtin distributed capability enable use distributed algorithm distributed hardware based open source software allows develop application hardware without incurring cloud service fee software licensing cost integration multiple commercially available industrial robot mir 100 universal robot come ha successfully deployed train drl algorithm solve two different task simulation wa able solve task real robot well without training real world paper note continuously working improve expand robogym interested reproducing result obtained iros 2020 paper please refer v010 therepositories involved framework robogym robogymrobotservers robogymservermodules see news section table content basic installation use environment example testing troubleshooting contributing citation news basic back top robogym framework composed several building block detailed information given paper robogym framework framework subdivided two main part robot server side green one directly interacting real robot simulating robot based gazebo python includes robot simulation driver communicate real robot additional required software tool environment side one providing openai gym interface robot implementing different environment robot server side environment side run pc different pc connected via network installation back top environment side requirement python 36 perform minimal install robogym bash git clone cd robogym pip install e prefer minimal install packaged version directly pypi bash pip install robogym robot server side requirement ubuntu 2004 recommended 1804 robot server side installed machine running environment side andor multiple machine install robogymrobotservers following instruction repository readme use back top environment come version run simulated version robot scenario version run real robot simulated environment name ending sim whereas real robot environment name ending rob simulated environment making simulated environment necessary start server manager sh startservermanager server manager take care starting managing correct simulation robot server depending setup choose server manager could running machine call envmake another machine connected via network server manager part robogymservermodules package list command available start environment use python import gym robogym env gymmake environmentnamesimv0 ip envreset ip address machine server manager running ha passed argument envmake server manager running machine use ip 127001 start simulated environment gui use optional gui argument python env gymmake environmentnamesimv0 ip servermanageraddress guitrue additional command simulated environment simulation wrapper provides extra functionality simulated environment envrestartsim restart simulation envkillsim kill simulation exception handling wrapper exception handling wrapper come handy training simulated environment wrapper implement reaction strategy common exception raised training one know exception raised try restart robot server simulation recover system exception happen reset environment robot server simply restarted background whereas exception happen execution environment step environment return python return selfenvobservationspacesampletrue exceptiontrue exceptiontype exceptiontype adding wrapper simulated environment easy python import gym robogym robogymwrappersexceptionhandling import exceptionhandling env gymmake environmentnamesimv0 ip env exceptionhandlingenv real robot environment making real robot environment robot server need started manually see real robot server running start corresponding environment python import gym robogym env gymmake environmentnamerobv0 rsaddress envreset thehas formed asipport environment back top see list environment information creating environment see creating environment example back top random agent mir100 simulation environment python import gym import robogym robogymwrappersexceptionhandling import exceptionhandling targetmachineip 127001 machine xxxxxxxxxxxx initialize environment env gymmake noobstaclenavigationmir100simv0 iptargetmachineip guitrue env exceptionhandlingenv numepisodes 10 episode rangenumepisodes done false envreset done random step environment state reward done info envstepenvactionspacesample additional example found testing back top start server manager attach session sh startservermanager attachtoservermanager expected output sh 2021xxxx xxxxxxxxx servermanager info server manager started 50100 problem step see testing section robogymservermodules pc running robogym associate ip pc server manager running hostname robotservers sh sudo sh c printf 127001 robotservers etchosts running server manager different pc replace 127001 ip address machine using pytest test run short selection test sh pytest nightly full test suite sh pytest done run killservermanager kill robot server server manager troubleshooting encounter trouble running robogym please take look existing issue still cannot find solution problem please submit new issue troubleshooting robogymrobotservers troubleshooting robogymservermodules contributing back top new environment new robot sensor implementation welcome detail guide contribute added soon general question idea would like share please start new discussion citation back top articlelucchi2020robo titlerobogyman open source toolkit distributed deep reinforcement learning real simulated robot authorlucchi matteo zindler friedemann muhlbacherkarrer stephan pichler horst journal2020 ieeersj international conference intelligent robot system iros year2020 news back top 20210519 v100 added support universal robot model ur3 ur3e ur5 ur5e ur10 ur10e ur16e robot server state defined dictionary instead list reduce error caused wrong indexing added support python 37 38 39 stopped support 35 added obstacle avoidance environment improved logging debugging improved code quality readability 20201103 iros 2020 live year event ondemand accessible free everyone register find presentation paper robogym 20200707 robogym paper ha accepted iros 2020 20200602 v017 improved documentation added exception handling feature simulated environment 20200427 v011 added simplified installation option robot server side 20200415 v010 robogym first release,"[('robot', 'server'), ('server', 'manager')]"
robotattackorg/robot-detect,Python,robotdetect proof concept attack detection robot return bleichenbacher oracle threat info dependency script need pythonthe gmpy2 cryptography library install pip install needed dependency run pip install robotdetect license work licensed cc0 public domain author attack proof concept code wa provided tibor jager detection wa written robot team hanno bock juraj somorovsky craig young,"[('proof', 'concept'), ('pip', 'install')]"
arviedelgado/roro,Other,archived repository everyone salamat sa pagsuporta roro free opensource robotic process automation software software released bsd 2clause opensource license c source file available compiled binary watch hello automation example see work credit x x need help message linkedin,"[('archived', 'repository'), ('repository', 'everyone')]"
webfansplz/volute,Other,volute volute raspberry pinodejs raspberrypi raspberrypi4 raspberry pi linux broadcom arm 2gb 8gb sd tf usb hdmi rca ethernetwlanbluetooth b zero computemodule nodejs nodejs nodejs javascript io javascript google v8 chatbot humanmachine conversation asrnludmnlgtts asr nlu dm nlg tt 4b 5v3a type c usb 16g tf material macbook pro micro sd micro sd raspbian debian linux raspberry pi imager imager ip scanner raspberry pi ip ipscanner ip vnc viewer vncviewer ssh raspiconfig sshpi asound volute volute j const f requirefs const path requirepath const speaker requirespeaker const record requirenoderecordlpcm16 const xunfeiiat requireservicesxunfeiiatservice const xunfeitts requireservicesxunfeittsservice const initsnowboy requireservicessnowboyservice const tulingbotservice requireservicestulingbotservice const taskscheduling mic null speaker null detector null inputstream null outputstream null init snowboy thisdetector initsnowboy record thisrecordsoundbindthis stoprecord thisstoprecordbindthis snowboy thismicpipethisdetector start thismic record samplerate 16000 threshold 05 verbose true recordprogram arecord stream thisinit recordsound thisstopspeak consolelogstart record thisinputstream fscreatewritestream pathresolvedirname assetsinputwav encoding binary thismicpipethisinputstream stoprecord thisinputstream consolelogstop record thismac thismicunpipethisinputstream thismicunpipethisdetector processnexttick thisinputstreamdestroy thisinputstream null thisinit thisspeech2text speech text speech2text const iatservice new xunfeiiat onreply msg consolelogmsg msg thisonchatmsg iatserviceinit onchattext tulingbotservicestarttextthenres consolelogres thistext2speechres text speech text2speechtext const ttsservice new xunfeitts text ondone consolelogondone thisonspeak ttsserviceinit onspeak speaker thisspeaker new speaker channel bitdepth 16 samplerate 16000 thisoutputstream fscreatereadstream pathresolvedirname assetsoutputpcm activate speaker 2 delay thisspeakerwritebufferalloc32000 10 speaker thisoutputstreampipethisspeaker thisoutputstreamonend thisoutputstream null thisspeaker null stopspeak thisoutputstream thisoutputstreamunpipethisspeaker taskschedulingstart snowboy snowboy hotwords detection library raspberry piubuntulinux mac x snowboy j const path requirepath const snowboy requiresnowboy const model new snowboymodels modelsadd file pathresolvedirname configsvolutepmdl sensitivity 05 hotwords volute detector const detector new snowboydetector resource pathresolvedirname configscommonres model model audiogain 10 applyfrontend false initsnowboy silencecount silencecount3 function initsnowboy record stoprecord const maxsilencecount let silencecount speaking false silence const onsilence consolelogsilence speaking silencecount maxsilencecount speaking false stoprecord stoprecord detectoroffsilence onsilence detectoroffsound onsound detectoroffhotword onhotword sound const onsound consolelogsound speaking silencecount hotword const onhotword index hotword buffer speaking silencecount speaking true record record detectoronsilence onsilence detectoronsound onsound detectoronhotword onhotword return detector moduleexports initsnowboy api 60 25 12 j requiredotenvconfig const f requirefs const websocket requirews const resolve requirepath const createauthparams requireutilsauth class xunfeiiat constructor onreply super websocket thisws null thismessage thisonreply onreply thisinputfile resolvedirname assetsinputwav thisparams host iatapixfyuncn path v2iat apikey processenvxunfeiapikey secret processenvxunfeisecret websocket generatewsurl const host path thisparams const params createauthparamsthisparams return wshostpathparams init const requrl thisgeneratewsurl thisws new websocketrequrl thisinitwsevent websocket initwsevent thiswsonopen thisonopenbindthis thiswsonerror thisonerror thiswsonclose thisonclose thiswsonmessage thisonmessagebindthis websocket open onopen consolelogopen thisonpushthisinputfile onpushfile thispushaudiofilefile websocket onmessagedata const payload jsonparsedata payloaddata payloaddataresult thismessage payloaddataresultwsreduce acc item acc itemcwmapcw cww status payloaddatastatus thisonreplythismessage websocket onclose consolelogclose websocket onerrorerror consolelogerror pushaudiofileaudiofile thismessage const audiopayload statuscode audiobase64 common statuscode appid 5f6cab72 undefined business statuscode language zhcn domain iat ptt undefined data status statuscode format audiol16rate16000 encoding raw audio audiobase64 const chunksize 9000 buffer const buffer bufferallocchunksize fsopenaudiofile r err fd err throw err let function readnextchunk fsreadfd bufferchunksize null errr nread errr throw errr nreadstatus2 nread thiswssend jsonstringify data status return fsclosefd err err throw err let data nread chunksize data bufferslice0 nread else data buffer const audiobase64 datatostringbase64 const payload audiopayloadi1audiobase64 thiswssendjsonstringifypayload readnextchunkcallthis readnextchunkcallthis moduleexports xunfeiiat api api v20 api 10 26 j requiredotenvconfig const axios requireaxios const tulingbotservice requesturl starttext return new promiseresolve axios postthisrequesturl reqtype perception inputtext text userinfo apikey processenvtulingbotapikey userid processenvtulingbotuserid thenres consolelogjsonstringifyresdata null resolveresdataresults0valuestext moduleexports tulingbotservice api websocket api websocket api ai sdkapi http apiwebsocket api j requiredotenvconfig const f requirefs const websocket requirews const resolve requirepath const createauthparams requireutilsauth class xunfeitts constructor text ondone super thisws null thistext text thisondone ondone thisoutputfile resolvedirname assetsoutputpcm thisparams host ttsapixfyuncn path v2tts appid processenvxunfeiappid apikey processenvxunfeiapikey secret processenvxunfeisecret websocket generatewsurl const host path thisparams const params createauthparamsthisparams return wshostpathparams init const requrl thisgeneratewsurl consolelogrequrl thisws new websocketrequrl thisinitwsevent websocket initwsevent thiswsonopen thisonopenbindthis thiswsonerror thisonerror thiswsonclose thisonclose thiswsonmessage thisonmessagebindthis websocket open onopen consolelogopen thisonsend fsexistssyncthisoutputfile fsunlinksyncthisoutputfile onsend const frame common common appid thisparamsappid business business aue raw auf audiol16rate16000 vcn xiaoyan tte utf8 data data text bufferfromthistexttostringbase64 status thiswssendjsonstringifyframe onsavedata fswritefilesyncthisoutputfile data flag websocket onmessagedata err err return const jsonparsedata rescode thiswsclose return const audio resdataaudio const audiobuf bufferfromaudio base64 thisonsaveaudiobuf rescoderesdatastatus thiswsclose thisondone onclose consolelogclose onerrorerror consolelogerror moduleexports xunfeitts github,"[('requirepath', 'const'), ('raspberry', 'pi')]"
rerun-io/rerun,Other,source mediamaxwidth 480px srcset source mediamaxwidth 768px srcset source mediamaxwidth 1024px srcset source mediamaxwidth 1200px srcset picture rerun us opencore model everything repository stay open source free beer freedom future rerun offer commercial product build top core free project rerun open source project target need individual developer commercial product target need specific team build run computer vision robotics product development architecturemdarchitecturemd buildmdbuildmd rerunpyreadmemdrerunpyreadmemd build instruction python sdk codeofconductmdcodeofconductmd codestylemdcodestylemd contributingmdcontributingmd releasesmdreleasesmd installing prerelease python sdk download correct whl github releasesrun pip install rerunsdk getting started python pip install rerunsdk conda rust cargo add rerun c c coming soon rerun viewer binary python rust library start rerun viewer stream log data network load rrd data file also need rerun binary installed pip install rerunsdk cargo install reruncli able run rerun help terminal documentation highlevel doc example python api doc rust api doc troubleshooting status active development many feature want add api still evolving expect breaking change shortcoming big point cloud 1m slow 1136 data want visualize must fit ram see bound memory use plan diskbased data store time future rust library take long time compile way many big dependency planning improving situation 1316 business model rerun us opencore model everything repository stay open source free beer freedom future rerun offer commercial product build top core free project rerun open source project target need individual developer commercial product target need specific team build run computer vision robotics product development architecturemdarchitecturemd buildmdbuildmd rerunpyreadmemdrerunpyreadmemd build instruction python sdk codeofconductmdcodeofconductmd codestylemdcodestylemd contributingmdcontributingmd releasesmdreleasesmd installing prerelease python sdk download correct whl github releasesrun pip install rerunsdkwhl replace actual filenametest rerun version,"[('source', 'mediamaxwidth'), ('open', 'source')]"
vikashplus/robohive,Python,pypi pypi license downloads open colab slack documentation robohive social preview robohive collection environmentstasks simulated mujoco physic engine exposed using openaigym api getting started getting started robohive simple bash install robohive pip install robohive initialize robohive robohiveinit demo environment python robohiveutilsexamineenv e frankareachrandomv0 alternatively editable installation bash clone robohive git clone recursive cd robohive install editable robohive pip install e demo environment python robohiveutilsexamineenv e frankareachrandomv0 see detailed installation instruction option mujocopythonbindings visualencoders r3m rrl vc frequently asked question detail suite robohive contains variety environment organized suite suite collection loosely related environment following suite provided moment plan improve diversity collection handmanipulationsuite video collection environment centered around dexterous manipulation standard adroit benchmark introduced learning complex dexterous manipulation deep reinforcement learning demonstration rss2018 part suite armmanipulationsuite collection environment centered around arm manipulation myosuite website collection environment centered around musculoskeletal control myomyodmsuite website myodmtasksuite collection musculoskeletal environment dexterous manipulation introduced myodm myodex multitask suite collection environment centered around multitask standard relaykitchen benchmark part suite tcdm suite wip suite contains collection environment centered around dexterous manipulation standard tcdm benchmark part suite robel suite coming soon suite contains collection environment centered around realworld locomotion manipulation standard robel benchmark part suite citation find robohive useful research please consider supporting project providing star please consider citing project using following bibtex entry bibtex miscrobohive2020 title robohive unified framework robot learning howpublished url year 2020 url,"[('collection', 'environment'), ('environment', 'centered')]"
tianheyu927/mil,Python,oneshot visual imitation learning via metalearning tensorflow implementation two paper oneshot visual imitation learning via metalearning finn yu et al 2017 oneshot imitation observing human via domainadaptive metalearning yu finn et al 2018 instruction run experiment shown paper first clone fork gym repo found following instruction install gym switch branch mil go mil directory run scriptsgetdatash download data downloading data training testing script mil available script update 732018 run experiment learned temporal loss oneshot imitation observing human via domainadaptive metalearning paper take look scriptsrunsimpushvideoonlysh script note code includes simulated experiment,"[('oneshot', 'visual'), ('visual', 'imitation')]"
iris-ua/iris_lama,C++,lama localization mapping library build developed maintained eurico pedrosa university aveiro c 2019 overview lama c11 software library robotic localization mapping developed intelligent robotics system iris laboratory university aveiro portugal includes framework 3d volumetric grid mapping localization algorithm based scan matching two slam solution online slam particle filter slam main feature efficiency low computational effort low memory usage whenever possible minimum viable computer run localization slam solution raspberry pimodel b build build lama clone github use cmake build git clone cd irislama mkdir build cd build cmake dependency eigen3 note lama doe provide executable example use please take look integration integration source code contains packagexml used library external package provide node run localization two slam solution please go irislamaros information sparsedense mapping sdm sparsedense mapping sdm framework efficient implementation 3d volumetric grid divide space small dense patch addressable sparse datastructure improve memory usage individual patch compressed live operation using lossless data compression currently lz4 zstandard low overhead replacement octomap currently ha following grid map implemented distance map provides distance closest occupied cell map provide dynamicdistancemap implementation dynamic euclidean map proposed b lau c sprunk w burgard efficient gridbased spatial representation robot navigation dynamic environment robotics autonomous system 61 10 2013 pp 11161130 elsevier occupancy map common representation environment used robotics threevariants occupancy map provided simpleoccupancymap cell ha tristate free occupied unknown probabilisticoccupancymap encodes occupancy probability cell logods frequencyoccupancymap track number time beam hit traverse miss cell calculates hitmiss ratio information sdm please read eurico pedrosa artur pereira nuno lau sparsedense approach efficient grid mapping 2018 ieee international conference autonomous robot system competition icarsc localization based scan matching provide fast scan matching approach mobile robot localization supported continuous likelihood field used provide accurate localization robot equipped laser good odometry nevertheless good odometry always recommended eurico pedrosa artur pereira nuno lau efficient localization based scan matching continuous likelihood field 2017 ieee international conference autonomous robot system competition icarsc online slam environment without considerable loop solution accurate efficient run real time even lowspec computer running turtlebot raspberry pi 3b us localization algorithm combined dynamic likelihood field incrementally build occupancy map information please read eurico pedrosa artur pereira nuno lau nonlinear least square approach slam using dynamic likelihood field journal intelligent robotic system 93 34 519532 multithreaded particle filter slam particle filter slam rbpf slam like gmapping extension online slam solution multiple particle multithread support solution capable parallelizing localization mapping process us threadpool manage number working thread even without multithreading solution lightweight competitor heavyweight gmapping information please read eurico pedrosa artur pereira nuno lau fast grid slam based particle filter scan matching multithreading 2020 ieee international conference autonomous robot system competition icarsc ponta delgada portugal 2020 pp 194199 doi 101109icarsc4992120209096191 graph slam really fast graph based solution,"[('eurico', 'pedrosa'), ('scan', 'matching')]"
carlosmccosta/dynamic_robot_localization,C++,doi dynamic robot localization overview dynamicrobotlocalization even though package wa developed robot selflocalization mapping wa implemented generic configurable extensible point cloud matching library allowing usage related problem estimation thedof pose object 3d object scanning example launch file video use case example docsusecasesmd dof localization mapping flying kinect using ethzasl iros dataset launch file video dof robot localization map cad data launch file robot localization video dof object pose estimation pick pack operation launch file pick pack object conveyor dof point cloud registration using scanned reference point cloud repository dof object pose estimation projection mapping launch file pose estimation video projection mapping dof object pose estimation using principal component analysis pca repository dof robot localization mapping launch file robot mapping video robot localization video figureoverview data flow main processing stagesdof localization system test guardian platform crob lab video3 dof localization navigation test guardian platform crob labdof localization navigation test guardian platform ship interior video3 dof localization navigation test guardian platform ship interiordof localization navigation welding test guardian platform ship interior video3 dof localization navigation welding test guardian platform ship interiordof localization system test jarvis platform crob lab video3 dof localization system test jarvis platform crob labdof localization system test pioneer platform tum rgbd dataset video3 dof localization system test pioneer platform tum rgbd dataset free fly test kinect ethz rgbd dataset using thedof localization system videofree fly test kinect ethz rgbd dataset using thedof localization system rotation test kinect ethz rgbd dataset using thedof localization system videorotations test kinect ethz rgbd dataset using thedof localization systemdof localization system test guardian platform labiomep dataset video3 dof localization system test guardian platform labiomep dataset mapping guardian robot lab using thedof localization system videomapping guardian robot lab using thedof localization system mapping guardian robot simulated ship interior using thedof localization system video 10 mapping guardian robot simulated ship interior using thedof localization system mapping guardian robot ship interior using thedof localization system video 11 mapping guardian robot ship interior using thedof localization system free fly mapping test kinect ethz rgbd dataset using thedof localization system video 12 free fly mapping test kinect ethz rgbd dataset using thedof localization system object pose estimation assisted assembly operation video 13 object pose estimation assisted assembly operation object pose estimation pick pack operation video 14 object pose estimation pick pack operation bin picking using region growing principal component analysis video 15dof pose estimation vacuum grasp pose smooth object inside bin using region growing principal component analysis data source localization system operate type sensor provide point cloud use number laser sensor using laserscantopointcloud rgbd tof camera reference map reference map provided localization system cad mesh pointcloud file ply stl obj vtk pcd topic point cloud sensormsgspointcloud2 2d costmap navmsgsoccupancygrid avoid unnecessary overhead provided ha pointcloud ply pcd fast loading convert cad file point cloud two option please read docsmeshconversionsmd using conversion script filter cad using meshlabserver add point curvature information convert cad pcd supported file type 3d aln apts asc dae gts obj ply pt ptx stl tri v3d vrml x3d x3dv xyz using meshtopointcloud package convert cad pcd directly without curvature filtering supported file type 3dc 3d asc ac bsp dae dw dxf fbx flt gem geo iv ive logo lwo lw lws md2 obj ogr osg pfb ply shp stl x wrl aware mesh pointcloud given drl uniform point density surface point cloud registration algorithm work properly please read docsmeshtessellationmd detail achieve localization method localization system ha two different localization method tackle different scenario initial pose estimation pose recovery use feature matching several keypoint detector scale invariant feature transform sift intrinsic shape signature iss3d several keypoint descriptor point feature histogram pfh fast point feature histogram fpfh signature histogram orientation shot shape context 3d sc3d unique shape context usc ensemble shape function esf pose tracking use several variant iterative closest point algorithm also normal distribution transform ndt moreover pose tracking two configuration one tuned expected operation condition robot another able recover odometry estimation problem system operate without odometry give possibility configuration perform pose tracking minimum amount computational resource required pointtopoint icp robust computational expensive configuration handle temporary tracking problem pointtopoint non linear icp pointtoplane icp generalized icp example localization pipeline available dynamicrobotlocalizationyamlconfigs localization reliability localization pipeline allows attachment transformation validators publishing pose estimation used suppress estimation plausible given robot operation condition validators suppress localization estimation pose correction ha outlier percentage inliers root mean square error inliers outlier angular distribution translation rotation correction outside acceptable threshold tracking method recover given amount sensor update time initial pose estimation using feature activated dynamic map update dynamic map update performed without surface reconstruction also coupled octomap package order perform probabilistic point cloud integration useful dynamic environment large object may appear disappear setting referencepointcloudsreferencepointcloudupdatemode parameter one available integration mode nointegration fullintegration inliersintegration outliersintegration configuring octomap use registered cloud inlier outlier cloud input output octomap reference cloud localization system usage localization system started dynamicrobotlocalizationsystemlaunch launch file start node dynamicrobotlocalization posetotfpublisher disabled laserscantopointcloudassembler disabled octomap disabled localization integrated node publishing tf transforms map odom frame configurable frame name using posetotfpublisher node initial pose given yaml roslaunch file dynamically using geometrymsgsposestamped geometrymsgsposewithcovariancestamped topic rviz dynamicrobotlocalization node publishes geometrymsgsposestamped geometrymsgsposewithcovariancestamped received posetotfpublisher converted tf message tf published separate node ensure system remains operational constant tf publish rate even localization node ha variable computational time moreover remote case localization system crash lack system resource programming error localization node one external library system remain operational using odometry given amount time ie tf message published continuously timeout counted last valid pose estimation one message pose estimation localization node automatically restarted ha node respawn activated without impact rest system dynamicrobotlocalization node publishes latched topic required publish message disabled reduce consumption system resource dynamicrobotlocalizationlocalizationdetailed message ha detailed information localization estimation number registered point number inliers outlier percentage inliers root mean square error inliers outlier angular distribution translation rotation correction global estimation accepted pose dynamicrobotlocalizationlocalizationtimes message computation time localization processing stage also global time dynamicrobotlocalizationlocalizationdiagnostics message diagnostics currently ha point cloud size major localization pipeline stage registered cloud sensormsgspointcloud2 full registered cloud point categorized inliers outlier computed pose estimation also published asseparated point cloud reference point cloud sensormsgspointcloud2 current reference point cloud also published order available localization supervisor dynamic robot localization test main test performed using dynamicrobotlocalization package available dynamicrobotlocalizationtests installation installing setting installation package done precompiled debian file source future release drl build farm making easier install using apt installation debian file drl dependency available precompiled debian file available release tab associated github repository installing debian file run adependenciesbash script install drl dependency available official precompiled debian file download debian file associated drl dependency developed compiled fork pcl laserscantopointcloud posetotfpublisher dynamicrobotlocalization install deb order specified running sudo dpkg absolutepathtodebfiledeb confirming installation finished correctly run source optrosrosversion dsetupbash rospack profile rospack find packagenamefromlistabove run launch file available package distribution doe yet precompiled debian file drl follow tutorial generating quickly easily install drl dependency machine distribution installation source want latest development need compile drl dependency source using installation script install folder installbash hasparameters catkinwspath1homecatkinwsdrl workspace repository dependency cloned src folder numberofcputhreadsforcompilation22 number cpu thread using compilation computer ha low amount ram swap set variable usecatkintools3true flag indicating newer build system catkintools installbash script execute following accompanying script order adependenciesbash dependency installed aptget bworkspacebash setup workspace existing workspace specified script change configuration workspace crepositoriesbash cloning repository dependency must built source list dependency posetotfpublisher laserscantopointcloud fork pcl pclmsgs perceptionpcl drosdepbash remaining transitive dependency installed using rosdep ebuildbash building package also provided repositoriesupdatebash script update repository related package hand wstool used since crepositoriesbash added repository rosintall file note hydrodevel branch use pcl 17 ubuntu ppa starting kineticdevel branch necessary compile fork pcl source using branch masterallpr ensure version pcl library used drl dependency following package must also compiled source already included install script pclmsgs perceptionpcl list related git repository dynamicrobotlocalizationtests objectrecognition pointcloudregistration posetotfpublisher laserscantopointcloud meshtopointcloud robotlocalizationtools crobgazebomodels octomapmapping info dissertation webpage dissertation pdf dissertation latex dissertation abstract icit2015 conference paper intech cutting edge research technology book chapter robotics autonomous system journal article result folder,"[('localization', 'system'), ('pose', 'estimation')]"
NeBula-Autonomy/LAMP,C++,lamplogo build instruction install build package catkin workspace bash mkdir p catkinwssrc cd catkinws catkin init catkin config dcmakebuildtyperelease dgtsamtangentpreintegrationoff dgtsambuildwithmarchnativeoff dopengvbuildwithmarchnativeoff dbuildteaserfpfhon cd src git clone gitgithubcomnebulaautonomylampgit localizerlamp git clone gitgithubcomnebulaautonomycommonnebulaslamgit wstool init wstool merge localizerlampinstalllampsshrosinstall wstool catkin build lamp rosinstall file take care dependency gtsam eigen loop closure prioritization module also need install python dependency package us python2 torch140 torchscatter140 torchsparse044 torchcluster145 torchsplineconv111 torchgeometric132 torchvision alternatively run python2 pip install r requirementstxt note using develop branch gtsam constantly updated last tested commit gtsam 99c01c4dba6443d923a28b9617b12fee06394688 reference run instruction multirobot testing run multirobot example released subterranean multirobot dataset first download dataset start lamp basestation process roslaunch lamp turnonlampbaselaunch robotnamespacebase1 play rosbag rosbag play pathtodatabag r1 clock clockclock waitforsubscribers visualize map launch rviz rviz rospack find lamprvizlampbaserviz data input unit test compile run unit test bash roscore catkin build runtests view result package bash catkintestresults buildpackagename result unit test package stored buildtestresults folder publication cite using code original lamp paper 2020 inproceedingsebadi2020lamp titlelamp largescale autonomous mapping positioning exploration perceptuallydegraded subterranean environment authorebadi kamak chang yun palieri matteo stephen alex hatteland alex heiden eric thakur abhishek funabiki nobuhiro morrell benjamin wood sally others booktitle2020 ieee international conference robotics automation icra pages8086 year2020 organizationieee lamp 20 paper 2022 overall lamp system articlechang2022lamp titlelamp 20 robust multirobot slam system operation challenging largescale underground environment authorchang yun ebadi kamak denniston christopher e ginting muhammad fadhil rosinol antoni reinke andrzej palieri matteo shi jingnan chatterjee arghya morrell benjamin others journalieee robotics automation letter volume7 number4 pages91759182 year2022 publisherieee loop closure prioritization articledenniston2022loop titleloop closure prioritization efficient scalable multirobot slam authordenniston christopher e chang yun reinke andrzej ebadi kamak sukhatme gaurav carlone luca morrell benjamin aghamohammadi aliakbar journalieee robotics automation letter volume7 number4 pages96519658 year2022 publisherieee,"[('closure', 'prioritization'), ('unit', 'test')]"
evildmp/BrachioGraph,Python,brachiograph cheapest simplest possible penplotter brachiograph ultracheap total cost material 14 plotter built minimal skill heart raspberry pi zero relatively simple custom software driving three servo motor mechanical hardware built nothing two stick pen pencil glue tool required almost everything required found desk kitchen drawer entire device built special skill hour image docsimagesreadmecombinedimagepng width 100 brachiograph found twitter documentation complete documentation project detailed instruction build use,"[('brachiograph', 'cheapest'), ('cheapest', 'simplest')]"
PaoPaoRobot/IROS2019-paper-list,Other,iros2019paperlist 2019 ieeersj international conference intelligent robot system iros 2019 ha held november8 2019 venetian macao macau china iros one largest impacting robotics research conference worldwide brings international community researcher educator practitioner explore frontier science technology intelligent robot system discus latest advancement fast growing exciting field list edited paopaorobot chinese academic nonprofit organization recently classify paper topic welcome follow github wechat public platform account paopaorobotslam course could contact yvon shong title index outlierrobust manifold preintegration insgps fusion 0688 autonomous steering concentric tube robot enhanced forcevelocity manipulability 0813 2piece sixaxis forcetorque sensor capable measuring load applied tool complex shape 1744 autonomous hybrid groundaerial mobility unknown environment 2028 hybrid activepassive wrist approach increasing virtual fixture stiffness comanipulated robotic minimally invasive surgery 2255 6axis hybrid sensing estimation tip forcestorques hyperredundant robotic surgical instrument 2324 hybrid forcemotion control implementation aerial manipulator towards sustained contact operation 2586 xllaser largescale cabledriven laser cuttingengraving robot 2742 2d contour following unmanned aerial manipulator towards tactilebased aerial navigation 1391 2dof transformable wheel design various sized stair step climbing 2643 2entity ransac robust visual localization changing environment 0982 3d canonical pose estimation abnormal gait recognition single rgbd camera 2323 3d deformable object manipulation using deep neural network 2307 3d lidar stereo fusion using stereo matching network conditional cost volume normalization 1026 3d micromanipulation particle swarm using hexapole magnetic tweezer 1134 3d move see multiperspective visual servoing towards next best view within unstructured occluded environment 1719 3dof gravity compensation mechanism robot waist variation center mass 0992 3dof manipulator design slendershaped wide endeffector 2630 3d point cloud data acquisition using synchronized inair imaging sonar sensor network 0969 3d printed single incision laparoscopic manipulator system adapted required force laparoscopic surgery 0964 3d reconstruction single camera omnidirectional multistereo system 0095 3d shape control linear deformable object robot manipulator 2664 3d static modeling method experimental verification continuum robot based pseudorigid body theory 1362 behavior driven approach sampling rareevent situation autonomous vehicle 0265 behavior tree cognitive assistant system emergency medical service 0449 benchmark visualinertial odometry system employing onboard illumination 1770 bidirectional multiple timescales lstm model grounding action verb 0344 absolute localization orbital map surface perspective imagery synthetic lunar dataset neural network approach 1712 capabilityaware role allocation approach industrial assembly task 2472 accelerated visual inertial navigation via fragmented structure update 0363 accelerating construction boundary feasibility three class robot design problem 1434 accurate pouring using model predictive control enabled recurrent neural network 1981 challenge deformation control cloth actuator 2740 achievement online agile manipulation task aerial transformable multilink robot 1396 compact lasersteering endeffector transoral robotic surgery 1804 compact soft articulated parallel wrist grasping narrow space 2170 comparative analysis use autoencoders robot security anomaly detection 0417 comparison action space learning manipulation task 1513 comparison visual servoing feature velocity acceleration interaction model 0827 convexcombinatorial model planar caging 0896 convolutional network joint deraining dehazing single image autonomous driving rain 0696 convolutional neural network feature detection approach autonomous quadrotor indoor navigation 1540 acoustic length sensor soft extensible pneumatic actuator frequency characteristic model 2535 action recognition based 3d skeleton rgb frame fusion 1903 active incremental learning contextual skill model 0480 active infrared coded target design pose estimation multiple object 0310 active inverse model learning error reachable set estimate 1235 active learning reward dynamic hierarchical query 1879 active slam using connectivity graph prior 0630 active whisker placement exploration rapid object recognition 1329 actuation stiffening fluiddriven soft robot using lowmeltingpoint material 0489 adapting weed growth prediction mechanical weeding agbots 2616 adaptive adversarial video roadside billboard dynamically modifying trajectory autonomous vehicle 1939 adaptive assistasneeded control based actorcritic reinforcement learning 1191 adaptive deep path efficient coverage known environment various configuration 1142 adaptive dynamic control magnetically actuated medical robot 2435 adaptive leaderfollower formation control obstacle avoidance via deep reinforcement learning 1241 adaptive loss balancing multitask learning object instance recognition 3d pose estimation 0698 adaptive navigation scheme optimal deepsea localization using multimodal perception cue 1565 adaptive neural admittance control collision avoidance humanrobot collaborative task 0510 adaptive outcome selection planning reduced model 1181 adaptive riskbased replanning humanaware multirobot task allocation local perception 2188 adaptive swept volume generation humanrobot coexistence using gaussian process 0789 adaptive trajectory planning optimization limit handling 1698 adaptive unscented kalman filterbased disturbance rejection application high precision hydraulic robotic control 0817 adaptive visionbased control ropeclimbing robot manipulator 0712 datadriven framework learning dexterous manipulation unknown object 1014 deep learning approach multiview engagement estimation child childrobot joint attention task 0522 deep learning approach probabilistic security multirobot team 2576 deep learning approach robust corridor following 1158 density map estimation model dropblock regularization clusteredfruit counting 1774 development inertial2d lidar slam manifold towards agv 2764 distributed reconfiguration planning algorithm smoresep modular robot 2565 adjusting weight action decision exploration logistics warehouse picking learning 0213 admittance control based stiffness ellipse collision force control object manipulation 2758 advanced autonomy lowcost educational drone platform 1806 advection diffusion effect towards bioinspired artificial pheromone system 2626 dynamic optimization approach sloshing free transport liquid filled container using industrial robot 1405 aerial animal biometrics individual friesian cattle recovery visual identification via autonomous uav onboard deep inference 0851 aerial robot control close proximity ceiling force estimationbased nonlinear mpc 0450 aerial robot advanced manipulation capability inspection maintenance aeroarms project 2610 aerodynamic model identification quadrotor subject rotor failure highspeed flight regime 2433 aexp4 online social policy learning adaptive robotpedestrian interaction 0034 fast freeviewpoint video synthesis algorithm sport scene 0318 fast heuristic path planning algorithm mobile robot 2747 fast online frequency adaptation mechanism cpgbased robot motion control 2346 affordance learning endtoend visuomotor robot control 1257 flexible sensor suture training 2545 forcecontrolled robotic wrist module macromicro manipulation industrial robot 2707 framework depth estimation relative localization ground robot using computer vision 0115 fullyintegrated sensing control system highaccuracy mobile robotic building construction 1219 geardriven prosthetic hand major grasp function toddler 1869 generative model underwater image active landmark detection docking 0113 agent prioritization autonomous navigation 0560 agile standingup control humanoid energybased reactive contact wrench optimization strict dynamic consistency 1646 gpsaided omnidirectional visualinertial state estimator ubiquitous environment 2174 handheld master controller robotassisted microsurgery 1992 air ground collaboration energyefficient path planing ground robot 1520 joint optimization approach lidarcamera fusion accurate dense 3d reconstruction 2268 kernelized approach learning adapting symmetric positive definite profile 2684 learningbased inverse kinematics solver twosegment continuum robot model 2750 linear series elastic actuator accurate force impedance control high torquetorotorinertia ratio 2724 altro fast solver constrained trajectory optimization 1603 magnetically transduced whisker angular displacement moment sensing 2105 ambiguity pose estimation object symmetry 2773 mechanical approach suppress oscillation long continuum robot flying water jet 2564 method designing lowprofile compliant transmission mechanism 2463 method guiding person combining robot movement projection 0155 methodology formulating exploiting innovative technology collaborative robot manufacturing setting 2683 mobile extendable robot arm singularity analysis design 1526 modelbased human activity recognition humanrobot collaboration 0569 model simulating robotic pushing dirt 0860 multichannel embedded dsp closedloop control system musical robot 0096 multiclass eeg signal classification model using spatial feature extraction xgboost algorithm 0926 multidof humanpowered robot using regenerative clutch constantforce spring 0914 multimodal humanrobot interaction manager assistive robot 1728 multimodal soft crawlingclimbing robot controllable horizontal plane slope transition 1676 multitask convolutional neural network autonomous robotic grasping object stacking scene 0395 multitrainee architecture haptic handson training 0762 adaptive velocity obstacle avoidance algorithm autonomous surface vehicle 0979 analysis exploitation synchronized parallel execution behavior tree 0845 analysis ground effect smallscale uavs forward flight 2392 analyzing liquid pouring sequence via audiovisual neural network 0041 approach facilitated investigation active selfhealing tension transmission system oriented legged robot 1813 approximationfree simple control scheme uncertain quadrotor system theory validation 1074 assisted telemanipulation approach combining autonomous grasp planning haptic cue 0501 assistive lowvision platform augments spatial cognition proprioceptive guidance pointtotellandtouch 1252 asynchronous multibody simulation framework realtime dynamic haptics learning application surgical robot 2113 augmented reality interface humanrobot interaction unconstrained environment 1080 automated learningbased procedure largescale vehicle dynamic modeling baidu apollo platform 0508 autonomous exploration algorithm using environmentrobot interacted traversability analysis 0723 autonomous quadrotor system robust highspeed flight cluttered environment without gps 2166 educational robotic platform multimodal perception teaching sensor servoing control 2629 efficient accurate algorithm perspectivenpoint problem 1972 efficient scheduling algorithm multirobot task allocation assembling aircraft structure 2571 neurologically inspired sequence processing model mobile robot place recognition 2115 evaluation robottohuman handover configuration commercial robot 0766 new timevarying feedback rise control pkms theory application 0088 experimental study parameter influencing physical humanrobot negotiation comanipulative tracking task 0224 angle arrival estimation based channel impulse response measurement 2093 inpipe inspection module omnidirectional bentpipe selfadaptation mechanism using joint torque control 0551 integrated delta manipulator aerial repair new aerial robotic system 2608 interactive indoor drone assistant 1038 interactive method virtual fixture generation unstructured environment 2704 interactive physicallybased model active suction phenomenon simulation 1385 intuitive affordances oriented telemanipulation framework dual robot arm hand system execution bimanual task 1177 ankle torque midstance doe lower energy requirement steady gait 1265 object attribute guided framework robot learning manipulation human demonstration video 0936 anonymous hedonic game task allocation largescale multiple agent system 2598 opensource 7axis robotic platform enable dexterous procedure within ct scanner 1428 optimal algorithm solve combined task allocation path finding problem 0471 optimization framework simulation kinematic control constrained collaborative mobile agent ccma system 2393 novel 4dof robotic link mechanism ecosmo kinematics based torque analysis 0775 novel approach outlier detection robust sensory data model learning 0340 novel capability quadruped robot moving vertical ladder without handrail support 0329 novel fourdegreeoffreedom versus conventional foot interface controlling robotic assistive arm surgery 2658 novel rescue system using multiagent slam framework 2759 novel robust approach correspondencefree extrinsic calibration 1541 novel semiautonomous control framework retina confocal endomicroscopy scanning 0483 novel smallscale turtleinspired amphibious spherical robot 1467 anyexo versatile dynamic upperlimb rehabilitation robot 2123 parallel gripper universal fingertip device using optical sensing jamming transition maintaining stable grasp 1496 passive closing tendon driven adaptive robot hand ultrafast aerial grasping perching 0015 penetration metric deforming tetrahedron using object norm 0064 application digging control based centerofmass velocity attachment hydraulic excavator 0719 applying interaction walkingemotion assistive device rehabilitation exercise 0238 approximating cfree space topology constructing vietorisrips complex 1486 pressure field model fast robust approximation net contact force moment nominally rigid object 1597 probabilistic approach humanrobot communication 1359 realtime dynamic simulator associated frontend representation format simulating complex robot environment 1766 realtime v2x enabled dynamic path planning system autonomous vehicle road blockage test scenario 2715 reliable gravity compensation control strategy dvrk robotic arm nonlinear disturbance force 2340 hearing listening effect task performance verbal behavior smart speaker 0332 determining associationof individual collective social space 0902 arguing security autonomous robot 0158 ring network protocol articulated robot 1955 armcl arm contact point localization via monte carlo localization 0132 robotic surgery approach mitochondrial transfer amongst single cell 0604 robust biped locomotion based linearquadraticgaussian controller divergent component motion 0243 robust extrinsic calibration framework vehicle unscaled sensor 1578 robust laserinertial odometry mapping method largescale highway environment 1670 robustness analysis inverse optimal control bipedal walking 2583 robust position posture measurement system using visual marker inertia measurement unit 0584 robust stereo semidirect slam system based hybrid pyramid 1883 articulated multiperspective camera application truck motion estimation 1440 artificial intelligent navigation technology robotic vacuum cleaner indoor environment 2749 artificial lateral line based longitudinal separation sensing two swimming robotic fish leaderfollower formation 0629 rugd dataset autonomous navigation visual perception unstructured outdoor environment 1126 simple approach global control class underactuated mechanical robotic system 1681 soft exoglove equipped wearable musclemachine interface based forcemyography electromyography 2234 springaided twodimensional electromechanical spine architecture bioinspired robot 2000 stabilization analysis omnimobile manipulator 4k camera 2650 study class vibrationdriven robot modeling analysis control design brushbot 1866 study electric wheelchairhumanoid collaboration clothing assistance elderly 2769 sweeping grinding method combined hybrid sampler asteroid exploration 1759 asynchronous behavior tree memory aimed aerial vehicle redundancy flight controller 1485 systematic comparison affective robot expression modality 0607 tactile stimulation system robotassisted hand rehabilitation 2751 taxonomy characterizing mode interaction goaldriven humanrobot team 1548 teleoperated hexapod robot imitation learning task training 0454 teleoperation interface locomanipulation control mobile collaborative robotic assistant moca 2469 testbed haptic magnetic resonance imagingguided percutaneous needle biopsy 2479 atomic force microscope tip localization tracking deep learning based vision inside electron microscope 1025 attentionbased hierarchical deep reinforcement learning lane change behavior autonomous driving 0397 attitude cruise control vtol tiltwing uav 2142 twodof bipedal robot utilizing reuleaux triangle drive mechanism 0464 audiovisual sensing quadcopter dataset baseline source localization sound enhancement 0889 augmented reality controlled smart wheelchair using dynamic signifier affordance representation 0901 augmenting knowledge statistical goaloriented humanrobot dialog 1182 unified active assistance control framework hip exoskeleton walking balance assistance 1816 unified formulation visual odometry 0165 automated boxwood topiary trimming robotic arm integrated stereo vision 1053 automated macromicro manipulation robotic microinjection computer vision 0609 automated singleparticle micropatterning system using dielectrophoresis 2755 automated sorting rare cell based autofocusing visual feedback fluorescence microscopy 0599 automatic annotation semantic segmentation indoor scene 0469 automatic calibration multiple 3d lidar urban environment 0822 automatic cell assembly twofingered microhand 0726 automatic coverage selection surfacebased visual localization 2201 automatic multisensor extrinsic calibration mobile robot 2110 automatic spatial template generation realistic 3d modeling largescale indoor space 1666 autonomous 3d reconstruction mapping exploration indoor environment robotic arm 2383 autonomous detection pv panel using unmanned aerial vehicle 2729 autonomous freeform trenching using walking excavator 2171 autonomous humanaware navigation dense crowd 2673 autonomous landing pipe using soft gripper inspection maintenance outdoor environment 1291 autonomous mobile manipulation framework intelligent home service robot 2694 autonomous photogrammetry process managing stockpile inventory unmanned aerial vehicle 2780 autonomous safe locomotion system bipedal robot applying vision sole reaction force footstep planning 0121 autonomous search source gamma radiation 2737 variable stiffness elbow joint upper limb prosthesis 2266 video datadriven approach development active guidance robotassisted minimally invasive surgical training 2791 virtual reality interface autonomous spray painting uav 2494 avoiding obstacle push recovery using realtime vision feedback 0628 vr system immersive teleoperation live exploration mobile robot 1046 bag semantic visual word 2762 basic performance planar omnidirectional crawler direction switching using disturbance degree ground evaluation method 2461 bayesian gaussian mixture model robotic policy imitation 2512 bayesian optimization policy search highdimensional system via automatic domain selection 0091 bebot bernstein polynomial toolkit trajectory generation 1490 bee 95mg fourwinged insectscale flying robot driven twinned unimorph actuator 2421 behavior change based stiffness haptic interface 2679 beliefdriven control policy drone microphone multiple sound source search 1785 belief space metareasoning exception recovery 0836 benchmarking workload analysis robot dynamic algorithm 1641 better lost transition lost space slam state machine 1450 bidirectional heuristic search motion planning extend operator 1851 bimodal hemispherical sensor unifying solution three axis force contact angle measurement 1523 biomimetic wrinkled mxene pressure sensor towards collisionaware robot 2781 biped robot pelvis kinematics estimation based touchpoint updating method 0364 black block recorder immutable black box logging robot via blockchain 2303 boosting slam combining slam methodology robust localization 2746 boundary effectaware visual tracking uav online enhanced background learning multiframe consensus verification 0650 boundederror lqrtrees 1519 bp neural network based onboard training realtime locomotion mode recognition robotic transtibial prosthesis 0393 btel binary tree encoding approach visual localization 2502 bucklinginduced shape morphing using dielectric elastomer actuator patterned spatiallyvarying electrode 1849 cabledriven 4dof upper limb rehabilitation robot 1599 calc20 combining appearance semantic geometric information robust efficient visual loop closure 2006 camera exposure control robust robot vision noiseaware image quality assessment 2210 camera pose estimation based pnl known vertical direction 2378 camera pose estimation semantic 3d model 0984 camera zoom control integrated control platform advancement performance shooting system 2651 robot become movie director learning artistic principle aerial cinematography 1472 robot hear shape dimension room 1987 social robot encourage child selfstudy 0656 cannot avoid penalty fluctuating order arrival rate let minimize 0071 usercentered reinforcement learning allow robot attract passersby without causing discomfort 0691 capillary force gripper complex shaped micro object fast droplet forming onoff control piston slider 2169 carpie soft mechanicallyreconfigurable worm robot 0195 cascaded gaussian process dataefficient robot dynamic learning 1399 centralized control architecture cooperative object transportation using multiple omnidirectional agvs 0646 chanceconstrained trajectory optimization nonlinear system unknown stochastic dynamic 1216 characterizing environmental interaction soft growing robot 0632 characterizing nanoparticle swarm tuneable concentration enhanced imaging contrast 2203 cheating robot ease make u feel 0757 clocktorqued rolling slip model application variablespeed running hexapod robot 2592 clone swarm learning predict control multirobot system imitation 1337 closedform equation experimental verification soft robot arm based cosserat theory 0854 closedloop force control pneumatic gripper actuated two pressure regulator 1068 cobra collaborative bot multirotor actuation 0533 cognitive robotic architecture semiautonomous execution manipulation task surgical environment 1349 collaborative human augmented slam 0359 collaborative mapping pose uncertainty using different radio frequency communication module 0042 collaborative needle insertion active tissue deformation control 2038 collaborative robot assistant ergonomic manipulation cumbersome object 0169 collision detection isolation robot using joint torque sensing 1378 combined optimization gripper finger design pose estimation process advanced industrial assembly 0870 combined task action learning human demonstration mobile manipulation application 0406 combining spiking motor primitive behaviorbased architecture model locomotion sixlegged robot 0494 combining stochastic optimization frontier aerial multirobot exploration 3d terrain 1102 commercialization robot navigation technology guidance service large highlycrowded airport 2748 common dimensional autoencoder learning redundant muscleposture mapping complex musculoskeletal robot 1375 communication constrained cloudbased longterm visual localization real time 1016 compact reachability map excavator motion planning 1922 comparing swimming performance flexible helical magnetic swimmer 0058 comparison deep reinforcement learning policy formal method moving obstacle avoidance 1823 complexity conditioned goal reinforcement learning agent 2786 complex stiffness model physical humanrobot interaction implication control performance augmentation exoskeleton 1342 component modularized design musculoskeletal humanoid platform musashi investigate learning control system 0124 computational design statically balanced planar spring mechanism 2462 computationally efficient mpc cabledriven robot 2718 computing 3d fromregion visibility using visibility integrity 2220 computing minimal set tspanning motion primitive lattice planner 1507 concept validation largescale humanmachine safety system based realtime uwb indoor localization 0785 conditional generative neural system probabilistic trajectory prediction 0952 configuration modeling soft robotic element selectable bending ax 1287 configuration transition control continuum surgical manipulator improved kinematic performance 2457 connectivitypreserving swarm teleoperation tree network 0477 constrained heterogeneous vehicle path planning largearea coverage 1465 constructing highly interactive vehicle motion dataset 1827 contactbased bridge inspection multirotors design modelling control considering ceiling effect 2390 contact distance estimation soft active biowhisker sensor based morphological computation 2612 contactgrasp functional multifinger grasp synthesis contact 1159 contactimplicit trajectory optimization dynamic object manipulation 0803 contact skill imitation learning robotindependent assembly programming 0488 contamination detection classification automated faaade cleaning operation 2631 context intention aware planning urban driving 0640 contextdependent search generating path redundant manipulator cluttered environment 1424 continuous closerange 3d object pose estimation 1380 continuous collision detection robotic arm mounted cabledriven parallel robot 1054 continuous mechanical indexing single cell spheroid using robot integrated microfluidic chip 2204 continuous modeling affordances symbolic knowledge base 1245 continuous neural control based integration bci adaptive controller steering vehicle 2721 continuous relaxation symbolic planner oneshot imitation learning 0565 continuoustime collision avoidance trajectory optimization dynamic environment 1904 contour based reconstruction underwater structure using sonar visual inertial depth sensor 1537 control perception framework deep sea mining exploration 0999 control nonprehensile planar rolling manipulation passivitybased approach 2607 convolutional autoencoder feature extraction tactile sensing 2519 cooperative audiovisual system localizing micro aerial robot 1366 cooperative decentralised circumnavigation application algalbloom tracking 0864 cooperative rangeonly slam based sum gaussian filter dynamic environment 0842 cooperative scheduledriven intersection control connected autonomous vehicle 1677 cosimulation mechanical system hydraulic actuator 2743 coupling disturbance compensated mimo control parallel ankle rehabilitation robot actuated pneumatic muscle 0745 covariance preintegration delayed measurement multisensor fusion 1557 coverage path planning using path primitive sampling primitive coverage graph visual inspection 0337 coverage sampling planner uavenabled environmental exploration field mapping 1408 criterion maintaining desired contact quasistatic system 1558 crowdsourced semantic edge mapping autonomous vehicle 1701 cubeslam monocular 3d object slam 2611 curiosity driven exploration classification dark using tactile sensing 2761 curvedvoxel clustering accurate segmentation 3d lidar point cloud realtime performance 1780 data association aware semantic mapping localization via viewpointdependent classifier model 0627 databased modeling contact state robotic assembly 2698 datadriven model predictive control trajectory tracking robotic arm 2403 data flow orbslam realtime performance embedded gpu board 0413 decentralized control 3d mblocks path following line formation light gradient aggregation 1308 decentralized pose control modular reconfigurable robot operating liquid environment 1996 decentralized visualinertial localization mapping mobile device augmented reality 0461 decoding perceived difficulty communicated content older people toward conversational robotassistive elderly care 2507 deduce diverse scene detection method unseen challenging environment 0590 deepcontrol energyefficient control quadrotor using deep neural network 1839 deep dive face pose illumination invariant multiface emotion recognition system 0742 deep generative modeling lidar data 1601 deep imitation learning autonomous driving generic urban scenario enhanced safety 1371 deep lagrangian network endtoend learning energybased control underactuated system 1042 deep learningbased mutual detection collaborative localization mobile robot fleet using solely 2d lidar sensor 1175 deep learning based robotic tool detection articulation estimation spatiotemporal layer 2384 deep learning proprioceptive model robotic force estimation 0372 deeplocnet deep observation classification ranging bias regression radio positioning system 1961 deep multitask learning anomalous driving detection using bus scalar sensor data 1665 deep neural network approach electrical impedance tomographybased realtime soft tactile sensor 0574 deep neural network based visual inspection 3d metric measurement concrete defect using wallclimbing robot 2008 deep orientation fast robust upper body orientation estimation mobile robotic application 1070 deeppco endtoend point cloud odometry deep parallel neural network 1056 deep predictive autonomous driving using multiagent joint trajectory prediction traffic rule 2013 deep reinforcement learning robotic pushing picking cluttered environment 1325 deep sensor fusion realtime odometry estimation 0421 deep supervised hashing similar hierarchy place recognition 0365 deepvio selfsupervised deep learning monocular visual inertial odometry using 3d geometric constraint 0978 deep visual mpcpolicy learning navigation 2120 degeneracyaware factor application underwater slam 1187 degeneracy selfcalibration revisited deep learning solution uncalibrated slam 1031 delayed output feedback control gait assistance resistance using robotic exoskeleton 2338 delayed output feedback control gait assistance robotic hip exoskeleton 2609 delivering cognitive behavioral therapy using conversational social robot 1394 dempster shafer gridbased hybrid fusion virtual lane autonomous driving 0437 dense 3d reconstruction visual tunnel inspection using unmanned aerial vehicle 0336 densepeds pedestrian tracking dense crowd using frvo sparse feature 1295 dense sonarbased reconstruction underwater scene 1471 depthimagebased texturelessobject picking dcnn visual servoing 2619 design dexterous hand logistic robot bin picking 2730 design analysis new 3dof activetype constantforce compliant parallel stage 0545 design analysis allinone actuation module multisensors 2670 design characterization fully autonomous underactuated soft batoidlike robot 1374 design comparative analysis 1d hopping robot 1831 design control aerial module inflight selfdisassembly 2389 design control hightorque highlybackdrivable hybrid soft exoskeleton knee injury prevention squatting 2493 design control multifunctional ankle exoskeleton powered magnetorheological actuator assist walking jumping landing 2227 design development compactly folding parallel openclose gripper wide stroke 1926 design experiment dragonfly inspired flexible blade improve safety drone 2331 design implementation contact aerial manipulator system glasswall inspection task 0740 design takeoff flight samarainspired revolvingwing robot 0797 design verification gravity compensated tool handler supporting automatic hair implanting device 2367 design verification portable master manipulator based effective workspace analysis framework 2096 design characterization mechanical programming fabricreinforced textile actuator soft robotic hand 1585 design fabrication characterization untethered amphibious sea urchininspired robot 2276 design cobotassisted manufacturing assembly dfcoma 2738 designing mechanical tool robot 2finger parallel grippers 2293 design modeling control fully actuated 2d transformable aerial robot withdof thrust vectorable link module 1461 design modeling testing flagelluminspired soft underwater propeller exploiting passive elasticity 0641 design modelling adaptive control novel autonomous underwater vehicle equipped vectored thruster 2660 design modelling control novel agricultural robot iinterlock drive system 2195 design 3dof linkagedriven underactuated finger multiple grasping 1645 design ballisticallylaunched foldable multirotor 0511 design bipedal hopping robot morphable inertial tail agile locomotion 2717 design compact smaactuated mricompatible steerable neurosurgical robot 2768 design failsafe wearable robot novel extendable arm ergonomic accommodation floor work 1696 design growing robot inspired plant growth 1653 design mobile robot treatment reuse removal manure monitoring environmental variable poultry farm 2783 design modular continuumarticulated laparoscopic robotic tool decoupled kinematics 2231 design adhesionaware faaade cleaning robot 0151 design novel gripper system 3d inkjetprinted multimodal sensor automated grasping forestry robot 2306 design novel leg small tree climbing robot driven shape memory alloy 2709 design semihumanoid telepresence robot plant disaster response prevention 1936 design variable counterbalance mechanism minimize required torque robot arm 2622 design compact variable gravity compensator cvgc based cam variable pivot lever mechanism 0541 design robot leg variable reduction ratio crossed fourbar linkage mechanism 1784 design soft flexible wiredriven finger mechanism contact pressure distribution 0909 design wearable robot focused contact state wearer 2756 desk robotic activity dataset dexterous surgical skill transfer medical robot 1757 detecting layered structure partially occluded object bin picking 1934 development 3dof manipulator cablehydraulic driven actuation module large workspace high payloadtoweight 2771 development continuous verticalpulling automatic doffing robot ring spinning 1921 development adjustable knee assist device wearable robot based linkage rolling joint 0387 development location finding system minute sound source using human acoustic system stochastic resonance 1857 development adaptive hexapod robot based followthecontactpoint gait control timekeeper control 0559 development arm curl machine variable resistance using pneumatic artificial rubber muscle 1928 development autonomous sanding robot structuredlight technology 0660 development navigation algorithm optimal path planning autonomous electric vehicle 1110 development steel bridge climbing robot 1315 development flexible dualtype proximity sensor resonant frequency robotic application 0821 development immersive vr interface finger motion without restriction real environment 2676 development joint module twospeed gear transmission joint lock mechanism driving task adaptable robot 0296 development load weight height classifier liftingup task using body motion metric 2555 development micro ultrasonic actuator micro rotor blade micro aerial vehicle 0623 development novel bevelgeared 5mm articulating wrist microlaparoscopy instrument 2238 miss sign false negative alarm system traffic sign detector 1156 directional tsdf modeling surface orientation coherent mesh 1151 disaster response robot autonomous manipulation valve disaster site based visual analysis rgbd image 0514 disc largescale virtual dataset simulating disaster scenario 0018 discoman dataset indoor scene odometry mapping navigation 1019 discrete ndimensional entropy behavior dndeb 1377 disr deep infrared spectral restoration algorithm robot sensing intelligent visual tracking system 0403 distancebased cooperative relative localization leaderfollowing control mavs 2397 distributed dynamic sensor assignment multiple mobile target 0716 disturbance estimation rejection highprecision multirotor position control 2361 dld deep learning based line descriptor line feature matching 0049 intermediate gait matter rapidly accelerating 2284 domainindependent unsupervised detection grasp region grasp novel object 1689 dottodot explainable hierarchical reinforcement learning robotic manipulation 0887 double refinement network efficient monocular depth estimation 1041 driving style inverse reinforcement learning generalpurpose planning automated driving 1356 dualarm assembly planning considering gravitational constraint 1859 duckiepond open education research environment fleet autonomous maritime vehicle 2301 dynamic control soft robot internal constraint presence obstacle 1384 dynamic density topological structure generation realtime ladder affordance detection 0831 dynamic flexandflip manipulation deformable linear object 1515 dynamic identification franka emika panda robot retrieval feasible parameter using penaltybased optimization 2443 dynamic input deep reinforcement learning autonomous driving 1229 dynamic locomotion slippery ground 2528 dynamic spatiotemporal pattern identification analysis using fingertipbased electrotactile display array 1716 dynamic task control method flexible manipulator using deep recurrent neural network 0566 dynamic wholebody control unstable wheeled humanoid robot 2252 early fusion goal directed robotic vision 1150 edgepreserving camera trajectory improved optical character recognition static scene text 2280 effective estimation contact force torque visionbased tactile sensor helmholtzhodge decomposition 2464 effect arm swinging trunk twisting bipedal locomotion 0557 effect planning period mpcbased navigation biped robot crowd 0382 effect vibration twisted string actuation conduit high bending angle 1529 effect biomimicked flapping path propulsion efficiency twosegmental fish robot 1034 effect personfollowing lighttouch device overground walking visual perturbation virtual reality environment 2498 effect limb morphology transient locomotion quadruped robot 2336 efficient accurate operational space control dualhaptic interface large workspace teleoperation 2708 efficient guaranteed planar pose graph optimization using complex number representation 0987 efficient autonomous robotic exploration semantic road map indoor environment 2225 efficient environment guided approach exploration complex environment 1085 efficient grasp planning execution multifingered hand surface fitting 2424 efficient quadrupedal walking via decentralized coordination mechanism limb neck 0606 eigenfactors plane estimation multiframe timecontinuous point cloud alignment 1499 electrical bioimpedance proximity sensing vitreoretinal microsurgery 2320 elevatenet convolutional neural network estimating missing dimension 2d underwater sonar image 1249 empirical characterization highperformance exteriorrotor type brushless dc motor drive 2477 employing magnet improve force exertion capability adaptive robot hand precision grasp 0290 employing wholebody control assistive robotics 1269 empowered optical inspection using robotic manipulator industrial application 1004 enabling humanlike task identification natural conversation 0079 endoscopic bimanual robotic instrument design using genetic algorithm 0816 endtoend driving model steering control autonomous vehicle future spatiotemporal feature 1524 endtoend sensorimotor control problem auvs deep reinforcement learning 0245 energybased adaptive control learning patientaware rehabilitation 1918 energybased hybrid control balldribbling robot 2739 energyefficient locomotion strategy performance benchmark using point mass tensegrity dynamic 1919 energy harvesting across temporal temperature gradient using vaporization 0714 ensembledagger bayesian approach safe imitation learning 0294 enthusiastic robot make better contact 0924 entropic risk measure policy search 1298 environmental sound segmentation utilizing mask unet 1814 episodic learning control lyapunov function uncertain robotic system 1943 epn edgeaware pointnet object recognition multiview 25d point cloud 1436 ergodic flocking 1807 escaping local minimum searchbased planning using soft duplicate detection 1931 esko6d binocular rgbd dataset stored kitchen object 6d pose 1055 establishing safer humanvehicle visual interaction night 2659 estimating metric scale visual odometry video using 3d convolutional network 1923 estimating center mass angular momentum derivative legged locomotion recursive approach 2585 evaluating acceptability assistive robot early detection mild cognitive impairment 0468 evaluation largescale eventdriven robot skin 2181 evaluation hopping robot performance novel foot pad design natural terrain hopper development 2326 evaluation system hydraulic excavator operation skill using remote controlled excavator virtual reality 2465 evimo motion segmentation dataset learning pipeline event camera 1351 executing underspecified action real world based online projection 1112 exo wrist soft tendon driven wrist wearable robot active anchor dart throwing motion hemiplegic patient 2482 experience reuse probabilistic movement primitive 0485 experimental analysis influence olfactory property chemical plume tracing performance 2126 experimental comparison open source visualinertialbased state estimation algorithm underwater domain 0500 experimental study microfluidic mixing trapezoidal obstacle 1000fold span reynolds number 0099 experimental study parameter highpressure waterjet cleaning facade 2637 experimental validation hydraulic interlocking drive system biped humanoid robot 2460 explainable oneshot metalearning imitate motion segment unseen humanrobot interaction 2765 exploiting linearity dynamic solver design composable robotic manipulation architecture 1717 exploiting sparse semantic hd map selfdriving vehicle localization 0272 explore approach terminate evaluating subtasks active visual object search based deep reinforcement learning 1123 exploring logical consistency viewport sensitivity compositional vqa model 1250 exploring lowlevel highlevel transfer learning multitask facial recognition semisupervised neural network 0765 extending monocular visual odometry stereo camera system scale optimization 1173 external force estimation humancooperative robot object manipulation using recurrent neural network 2614 extrinsic calibration thermal ir camera mmwave radar exploiting depth rgbd camera 2697 faharris fast asynchronous corner detector event camera 1843 fast adaptation metareinforcement learning trust modelling humanrobot interaction 1576 fast incremental loop closure detection using proximity graph 0330 fast robust 3d sound source localization dsvdphat 0271 fast safe policy adaptation via alignmentbased transfer 0563 faster fast safe trajectory planner flight unknown environment 1577 fast handover robot character small sensorimotor delay improve perceived quality 1613 fast manipulability maximization using continuoustime trajectory optimization 2317 fast motion planning via free cspace estimation based deep neural network 0832 fast perception planning execution robotic butler wheeled humanoid mhubo 1637 fast runtime monitoring replanning recovery safe autonomous system operation 1274 fast timeoptimal avoidance moving obstacle highspeed mav flight 0030 fast trajectory planning multiple quadrotors using relative safe flight corridor 1460 faulttolerant force tracking multilegged robot 2672 feasibility gait entrainment hip mechanical perturbation locomotor rehabilitation 0462 feasibility wireless power transfer mobile robot 2655 feasibility test exoskeleton ankle robot gait training stair subacute stroke patient 2779 feedbackbased fabric strip folding 0932 feedback mpc torquecontrolled legged robot 1021 fiber optic fabryperot interferometry biopsy needle tip force sensing 2710 fiesta fast incremental euclidean distance field online quadrotor motion planning 1758 filter early match late improving networkbased visual place recognition 0618 first step towards full model based motion planning control quadruped hybrid zero dynamic approach 1761 flame featurelikelihood based mapping localization autonomous vehicle 0770 flexible layout fiducial tag 1503 flexible trinocular nonrigid multicameraimu dense reconstruction uav navigation mapping 0615 flexure mechanism variable stiffness damping using layer jamming 1292 flightgoggles photorealistic sensor simulation perceptiondriven robotics using photogrammetry virtual reality 1834 flight recovery mavs compromised imu 1352 flower interaction subsystem precision pollination robot 1332 fluid lubricated dexterous finger mechanism humanlike impact absorbing capability 2404 flying narrow gap using neural network endtoend planning control approach 0784 follow robot modeling coupled humanrobot dyad navigation 0878 foot coreshell structural sixaxis force sensor pedal depressing recovering foot slipping pedal pushing toward autonomous driving humanoid 0763 forceandmotion constrained planning tool use 1619 force fieldbased indirect manipulation uav flight trajectory 1531 force sensitive robotic endeffector using embedded fiber optic anddeep learning characterization dexterous remote manipulation 2179 forecasting timetocollision monocular video feasibility dataset challenge 1358 forest tree detection segmentation using high resolution airborne lidar 0536 formation pvdf piezoelectric film 3d bellow surface robotic suction cup providing force sensing ability feasibility study two method dipcoating lamination 1347 freespace feature global localization 2d laser slam using distance function map 0438 pixel building endtoend probabilistic deep network largescale semantic mapping 1737 frustum convnet sliding frustum aggregate local pointwise feature amodal 3d object detection 0835 fusing body posture facial expression joint recognition affect childrobot interaction 2449 fusing lidar data aerial imagery perspective correction precise localization urban canyon 1311 fusion passive ferromagnetic sensor navigational data improvement detection underwater metalcontaining object 0918 gaple generalizable approaching policy learning robotic object searching indoor environment 2275 gaussian mixture model gmm based object detection tracking using dynamic patch estimation 1013 gazebased intention anticipation driving manoeuvre semiautonomous vehicle 1667 gaze training modulated dropout improves imitation learning 0474 general hand guidance framework using microsoft hololens 0814 generalized contact constraint hybrid trajectory optimization different terrain analysis sensitivity randomized initial guess 1704 generalized multiple correlation coefficient similarity measurement trajectory 1020 generalized raybased lattice generation graph representation wrenchclosure workspace arbitrary cabledriven robot 2589 generate see viewdependent image generation 1170 generating key pose sequence based kinematics static optimization manipulating heavy object humanoid robot 1048 generating image object appearance somatosensory information haptic exploration 1339 generating coordinated reachgrasp motion neural network 2794 generating grasp pose highdof gripper using neural network 0196 geometric physical constraint dronebased head plane crowd density estimation 0262 georeferenced semantic point cloud map using usyd campus dataset 2690 glassloc plenoptic grasp pose detection transparent clutter 1636 glfp global localization floor plan 0727 global visionbased impedance control robotic wall polishing 0558 goaldirected behavior variational predictive coding dynamic organization visual attention working memory 0133 gpu accelerated robust scene reconstruction 0279 gqstn optimizing oneshot grasp detection based robustness classifier 1065 graphbased design hierarchical reinforcement learning agent 1226 graphbased path planning autonomous robotic exploration subterranean environment 1749 graph element network flexible model robotic application 2726 grasping unknown object based gripper workspace sphere 1656 grip generative robust inference perception semantic robot manipulation adversarial environment 1598 grounding language attribute object using bayesian eigenobjects 1368 guinea fowl jumping robot balance control mechanism modeling simulation experiment result 0309 handeye calibration remote centre motion 2216 hand movement intention recognition based emg intensity map convolutional neural network 2728 handover process autonomous driver assist system call critical performance assessment 2693 haptic guidance robotassisted endovascular procedure implementation evaluation surgical simulator 0495 hapticguided shared control needle grasping optimization minimally invasive robotic surgery 1234 haptic perception liquid enclosed container 1169 haptic sharedcontrol method robotic cutting nonholonomic constraint 2480 hapticube compact 5dof fingerwearable tactile interface 0603 harmonious sampling mobile manipulation planning 1306 heuristicbased multiple mobile depot route planning recharging persistent surveillance robot 1402 hierarchical reinforcement learning concurrent discovery compound composable policy 0988 hierarchical reinforcement learning quadruped locomotion 1783 hierarchical segmentation continuous motion semg signal analysis 2525 highdimensional motion segmentation variational autoencoder gaussian process 0297 highfidelity dexterous tactile telerobot intuitive teleoperation 2727 highspeed humanoid robot arm badminton using pneumaticelectric hybrid actuator 2311 highspeed onchip mixing microvortex generated controlling local jet flow using dual membrane pump 2104 highspeed sliding locomotion generation slippery surface indirectly controlled robot viscoelastic body 2251 homographybased deep visual servoing method planar grasp 1691 hong hu efficient versatile tailsitter vtol uav platform design implementation control 2678 houseexpo largescale 2d indoor layout dataset learningbased algorithm 2719 hovering control tturt thrust vector decomposition technique 2640 robot gaze ratio gaze type show awareness power dynamic people interacting 2506 htetran polyabolo inspired self reconfigurable tiling robot 1790 human intention inference online human hand motion prediction humanrobot collaboration 1604 human interactive motion planning shared teleoperation 2703 humanoid robot forcebased heavy manipulation task torquecontrolled arm wrist force sensor 0776 humanoid robot next best view planning occlusion using body movement primitive 2250 human robot visual interface 3d steering flexible bioinspired needle brain surgery 0392 hybrid visual servoing autonomous robotic laser tattoo removal 1208 hysteresis compensator learningbased pose estimation flexible endoscopic surgery robot 0934 wife free format dialogue cri 2753 identification rat ultrasonic vocalization mix sound robotic rat nonsilent environment 0746 identification timevarying timescalable synergy continuous electromyographic pattern 2237 identifying opportunity relationshipfocused robotic intervention strained hierarchical relationship 0139 ignorance bliss analysis centralplace foraging algorithm 1591 implementation natural dynamic controller underactuated compassbiped robot 1259 implementing regularized predictive control simultaneous realtime footstep ground reaction force optimization 0946 improved energy efficiency via parallel elastic element thestraightlegged verticallycompliant robot slider 2734 improved exploration latent trajectory optimization deep deterministic policy gradient 1584 improved learning accuracy learning stable control human demonstration 0589 improved mechanical design simplified motion planning hybrid active passive cabledriven segmented manipulator coupled motion 0760 improved planetary rover inertial navigation wheel odometry performance periodic use zerotype constraint 0886 improving 3d object detection pedestrian virtual multiview synthesis orientation estimation 1574 improving learningbased egomotion estimation homomorphismbased loss drift correction 1310 improving local trajectory optimization probabilistic movement primitive 1128 improving robot success detection using static object data 0143 improving taskparameterised movement learning generalisation frameweighted trajectory generation 1448 imubased spectrogram approach deep convolutional neural network gait classification 2775 inchworminspired soft climbing robot using microspine array 0327 inertialbased motion capturing smart training system 0587 inference userintention remote robot wheelchair assistance using multimodal interface 1710 infer intermediate representation future prediction 1417 inferring distribution depth single image 0118 influence parameter uncertainty positioning cabledriven parallel robot 1005 information filter occupancy mapping using decomposable radial kernel 0695 informationguided robotic maximum seekandsample partially observable continuous environment 2385 informed region selection efficient uavbased object detector altitudeaware vehicle detection cycar dataset 1463 infrastructurefree nlos obstacle detection autonomous car 0031 integer programming general solution methodology pathbased optimization robotics principle best practice application 0849 intentiondriven shoulder rehabilitation targeted neuromuscular training using exomusculoskeletal robot 2777 interactionaware decision making adaptive strategy merging scenario 1650 interaction empathetic agent regulating emotion improving engagement autism 2606 interaction template multirobot system 2292 interactive trajectory adaptation forceguided bayesian optimization 0811 introducing scalable modular control framework lowcost monocular robot hazardous environment 0983 intuitive control robotic arm hand system pneumatic haptic feedback 2587 inverse dynamic modeling robotic manipulator hierarchical recurrent network 1999 inverse kinematics sensitivity minimization nstack stewart platform 1063 inverse optimal planning air traffic control 1258 ironcub towards aerial humanoid robotics 2733 iterative learning control fast accurate position tracking articulated soft robotic arm 0235 ivoa introspective vision obstacle avoidance 1560 jisap joint inference surgeon attribute prediction robotassisted surgery 0540 jointly learnable behavior trajectory planning selfdriving vehicle 1301 joint offset optimization hip joint humanoid robot 2701 joint torque estimation toward dynamic compliant control geardriven torque sensorless quadruped robot 0201 joint velocity acceleration estimation serial chain rigid body flexible joint manipulator 1959 kinematically redundant hybrid robot simple singularity condition analytical inverse kinematic solution 2402 kinematic modeling soft pneumatic actuator using cubic hermite spline 0717 kinematics design experimental validation novel parallel robot twofingered dexterous manipulation 0900 kinematic synthesis serial robotic manipulator using generalized differential inverse kinematics 2579 lambdafield continuous counterpart bayesian occupancy grid risk assessment 0423 laminated foambased soft actuator actuatable flexible structure 0089 landing multirotor aerial vehicle uneven surface using multiple onboard manipulator 0804 lane marking learning based crowdsourced data 1148 largescale 6d object pose estimation dataset industrial binpicking 0857 lazy compilation variant multirobot path planning satisfiability modulo theory smt approach 1422 ldl 3d object segmentation label diffusion 2d image 2164 learning 2d 3d lifting object detection 3d autonomous vehicle 1917 learning action human demonstration video robotic manipulation 0994 learning barrier function constrained motion planning dynamical system 2374 learningbased model predictive control autonomous racing 2310 learningbased nonlinear model predictive control reconfigurable autonomous robotic boat roboats 0476 learning based robotic binpicking potentially tangled object 2408 learning demonstration robust control dexterous inhand robotic manipulation skill 1966 learning continuous time control policy minimizing hamiltonjacobibellman residual 2685 learning eventbased height plane parallax 1144 learning footstep planning irregular surface partial placement 0597 learning demonstration based mechanism utilize object invisibility 2516 learning generalisable coupling term obstacle avoidance via lowdimensional geometric descriptor 2418 learning generative sociallyaware model pedestrian motion 2395 learning grasp affordance reasoning semantic relation 2527 learning intention aware online adaptation movement primitive 2468 learning interactive behavior musculoskeletal robot using bayesian interaction primitive 0481 learning local feature descriptor motion attribute visionbased localization 0823 learning multimodal representation sampleefficient recognition human action 0975 learning multiple sensorimotor unit complete compound task using rnn multiple attractor 2092 learning object model nonprehensile manipulation 1178 learning physicsbased manipulation clutter combining imagebased generalization lookahead planning 1536 learning qnetwork active information acquisition 1810 learning realtime closed loop robotic reaching monocular vision exploiting control lyapunov function structure 0583 learning realworld robot policy dreaming 1155 learning residual flow dynamic motion stereo video 1898 learning safe unlabeled multirobot planning motion constraint 2531 learning singularity avoidance 1516 learning statedependent sensor measurement model localization 1870 learning scope applicability task planning knowledge experiencebased planning domain 0230 learning augment synthetic image sim2real policy transfer 0729 learning estimate center mass arbitrary object 1592 learning estimate pose shape handheld object rgb image 0937 learning explore motion interaction task 1281 learning generate unambiguous spatial referring expression realworld environment 1082 learning grasp arbitrary household object single demonstration 1051 learning topometric semantic map occupancy grid 1776 learning sequence multiple task competing constraint 1238 learning viapoint movement primitive inter extrapolation capability 1076 learning virtual border semantic scene understanding augmented reality 0253 learning virtual grasp failed demonstration via bayesian inverse reinforcement learning 0490 learn adapt human walking modelbased reinforcement learning approach robotic assistant rollator 2489 lego leveraging experience roadmap generation samplingbased planning 1481 licfusion lidarinertialcamera odometry 2005 lidar based navigable region detection unmanned surface vehicle 0582 lidarflow dense scene flow estimation sparse lidar stereo image 0972 lifelong federated reinforcement learning learning architecture navigation cloud robotic system 2090 linebased absolute relative camera pose estimation structured environment 0898 loamlivox robust lidar odemetry mapping loam package livox lidar 2663 localization mapping using instancespecific mesh model 0572 local online motor babbling learning motor abundance musculoskeletal robot arm 0351 local pose optimization attentionbased neural network 1439 locomotion planning variable geometry robot based polygonshaped ground contact 2639 long range neural navigation policy real world 2264 longterm community social robot promote social connectedness among older adult 2580 longterm prediction motion trajectory using path homology cluster 0667 longterm visual inertial slam based time series map prediction 0893 longtime selfbody image acquisition application control musculoskeletal structure 2344 look recognize better learning shared topic categoryspecific dictionary openended 3d object recognition 0127 lowcost sonar navigation system 1459 low level control quadrotor deep modelbased reinforcement learning 2530 lswarm efficient collision avoidance large swarm coverage constraint complex urban scene 2370 macromicro multiarm robot singleport access surgery 2456 magneticneedleassisted micromanipulation dynamically selfassembled magnetic droplet cargo transportation 2205 magnetic needle steering model identification using expectationmaximization 1099 magnetic sensor based probe microrobot detection localization 2784 making sense audio vibration liquid height estimation robotic pouring 1118 manipulation motion taxonomy coding robot 1733 manipulation planning soft orientation constraint based composite configuration space 2788 manipulation purpose underwater agent vehicle ghost net recovery mission 1625 mapaware slam sparse map feature 0178 map based human motion prediction people tracking 0167 mapping planetary rover terramechanics perspective 1168 mathematic modeling optimal design magnetorheological clutch compliant actuator physical robot interaction 2478 mavnet effective semantic segmentation micronetwork mavbased task 2330 maximum information bound planning active sensing trajectory 1273 maximum likelihood path planning fast aerial maneuver collision avoidance 0106 measuring engagement elicited eye contact humanrobot interaction 0949 metalearning multiobjective reinforcement learning 0929 metaworld benchmark evaluation multitask meta reinforcement learning 2686 metric monocular localization using signed distance field 0840 miniaturization mr safe pneumatic rotational stepper motor 0892 minimal sensor setup lower limb exoskeleton motion classification based multimodal sensor data 0722 minimum kconnectivity maintenance robust multirobot system 1935 misalignment recognition using markov random field fully connected latent variable detecting localization failure 2263 mixed reality control humanoid robot eve 2735 mobile robot learning human demonstration nonlinear model predictive control 1451 mobile robot localization reinforcement learning map update decision aided absolute indoor positioning system 1223 model free calibration wheeled robot using gaussian process 1795 modeling force control terramechanical wheelsoil contact robotic manipulator used planetary rover design process 0754 modeling identification design rotary soft actuator based wren mechanism 0652 modeling learning prediction longitudinal behavior humandriven vehicle incorporating internal human decisionmaking process using inverse model predictive control 1284 modeling novel soft mechanosensors based airflow measurement 2568 modeling simulation experimental validation tendondriven softarm robot configuration continuum mechanic approach 1091 modelless active compliance continuum robot using recurrent neural network 2319 modelling dynamic tracking control industrial vehicle tractortrailer structure 1947 modelling uniaxial egainbased strain sensor proprioceptive sensing soft robot 1933 model predictive contouring control collision avoidance unstructured dynamic environment 2387 model predictive control based dynamic path tracking fourwheel steering mobile robot 1060 model simplification dynamic control seriesparallel hybrid robot representative study effect neglected dynamic 1049 modular volumetric actuator using motorized auxetics 1643 monocular depth estimation new environment absolute scale 0759 monocular object plane slam structured environment 2277 monocular outdoor semantic mapping multitask network 0174 monocular plan view network autonomous driving 1829 morphing structure changing hydrodynamic characteristic soft underwater walking robot 2540 motion decoupling composition via reduced order model optimization dynamic humanoid walking clfqp based active force control 0625 motion direction decoding upper limb eeg signal cognitive distraction task 2675 motion planning continuum robotic mobile lamp defining navigating configuration space 1370 motorpropeller matching aerial propulsion system direct aerialaquatic operation 0416 moving onto high step fourlimbed robot torso contact 1965 mperl hardware software codesign robotic manipulator 1211 mrlift semiactive lower back support exoskeleton based mr fluid force retention technology 1388 mtrrt general purpose multithreading library path planning 0806 multiagent image classification via reinforcement learning 2003 multicamera 3d reconstruction dynamic surgical cavity nonrigid registration point classication 0585 multicontact stabilization humanoid robot realizing dynamic contact transition noncoplanar surface 1098 multicontroller multiobjective locomotion planning legged robot 0701 multidof force characterization soft actuator 2554 multihand direct manipulation complex constrained virtual object 0687 multilayer environmental affordance map robust indoor localization event detection social friendly navigation 1075 multilevel incremental roadmap spanner reactive motion planning 1878 multimodal uncertainty reduction intention recognition humanrobot interaction 0432 multiple hypothesis semantic mapping robust data association 2279 multirobot assembly sequencing via discrete optimization 1747 multirobot charging strategy gametheoretic approach 2125 multirobot distributed digital printing system 2795 multi robot route planning mrrp extended spatialtemporal prioritized planning 0163 multisensor 6dof localization aerial robot complex gnssdenied environment 1328 multistep pickandplace task using objectcentric dense correspondence 1421 multivehicle cooperative local mapping using split covariance intersection filter 0869 muse multisensor integration strategy applied sequential monte carlo method 0043 nearcontact grasping strategy awkward pose simply closing finger enough 0637 neural control artificial hormone system energyefficient compliant terrain locomotion adaptation walking robot 2584 neurallearning trajectory tracking control flexiblejoint robot manipulator unknown dynamic 1590 neural network based heterogeneous sensor fusion robot motion planning 0459 neural path planning fixed time nearoptimal path generation via oracle imitation 0194 neurotrajectory neuroevolutionary approach local state trajectory learning autonomous vehicle 2219 nmerci new metric evaluate correlation predictive uncertainty true error 1624 noncontact sensing respiratory signal 2754 nonlinear optimization step duration step location 0950 nonmyopic planetary exploration combining situ remote measurement 1367 nonparametric mixedmanifold product using multiscale kernel density 1893 nonuniform robot density vibration driven swarm using phase separation theory 1874 normal distribution mixture matching based model free object tracking using 2d lidar 1307 novel lockable stackable compliant actuation unit modular spea actuator 2600 object placement planning optimization robot manipulator 1756 object proposal algorithm wild generalizable robot perception 1538 object rearrangement nested nonprehensile manipulation action 1431 object singulation via nonlinear pushing robotic grasping 0428 observability analysis position estimation quadrotors modified dynamic range measurement 1690 obstacle avoidance using capacitive skin safe humanrobot interaction 0903 obstacle climbing humanoid robot using standing jump motion 2702 obstacle overcoming faaade novel design rotating leg mechanism 2634 occlusionrobust deformable object tracking without physic simulation 1309 older people prefrontal cortex activation estimate perceived difficulty humanoidmediated conversation 2281 omnipush accurate diverse realworld dataset pushing dynamic rgbd video 1101 onboard markerless detection localization noncooperating drone safe interception autonomous aerial system 2327 onchip threedimension cell rotation using whirling flow generated oscillating asymmetrical microstructures 0313 data sharing strategy decentralized collaborative visualinertial simultaneous localization mapping 0465 enhancing ground surface detection sparse lidar point cloud 0013 oneshot composition visionbased skill demonstration 0561 oneshot object localization using learnt visual cue via siamese network 0353 flying backwards preventing runaway small lowspeed fixedwing uavs strong wind 1693 online active safety robotic manipulator 1732 online consistent occupancy grid mapping planning unknown environment 1487 online motion planning multiple homotopy class gaussian process inference 1340 online optimal impedance planning legged robot 1763 online performance prediction profiling human activity observation 1033 online planning autonomous underwater vehicle performing information gathering task large subsea environment 0997 online relative footstep optimization legged robot dynamic walking using discretetime model predictive control 1001 online system identification algorithm without persistent excitation robotic system application reconfigurable autonomous vessel 1069 online trajectory generation mav chasing moving target 3d dense environment 1511 online trajectory generation reactive control return inside admissible kinematic domain 0877 modelbased adhesion control vortex climbing robot 1401 modeling effect auditory annoyance driving style passenger comfort 1415 bayes filter shared autonomy 2304 covariance x ax xb 2597 effect semielliptical foot shape energetic efficiency passive bipedal gait 0873 feasibility multidegreeoffreedom haptic device using passive actuator 1453 tunable sparse graph solver pose graph optimization visual slam problem 1595 training flexible robot using deep reinforcement learning 1855 operational space control framework torque controlled humanoid robot joint elasticity 2529 operation pneumatic soft manipulator using wearable interface flexible strain sensor 2132 opposite treatment null space null space projection v null space avoidance 2711 optical coherence tomography guided robotic device autonomous needle insertion cornea transplant surgery 1539 optimal solving constrained pathplanning problem graph convolutional network optimized tree search 1095 optimal temporal logic planning multirobot system uncertain semantic map 1083 optimal temporal logic planning cascading soft constraint 1824 optimization based motion planning multilimbed vertical climbing robot 0601 optimization based trajectory planning mobile cabledriven parallel robot 1137 optimization model planning precision grasp multifingered hand 1892 optimized locomotion energyefficient quadrupedal robot rough terrain 2646 optimizing motionplanning problem setup via bounded evaluation application following surgical trajectory 1635 orbit characterization stabilization composition 3d underactuated bipedal walking via hybrid passive linear inverted pendulum model 0624 orbslamatlas robust accurate multimap system 0830 oreo oriented recognition 3d point cloud outdoor scenario 1242 outlierrobust spatial perception hardness generalpurpose algorithm guarantee 1688 outlierrobust state estimation humanoid robot 0433 panopticfusion online volumetric semantic mapping level stuff thing 0278 paperbased modular origami gripper 0282 partial caging clearancebased definition deep learning 2217 pass3d precise accelerated semantic segmentation 3d point cloud 1842 passive inverted ultrashort baseline piusbl localization experimental evaluation accuracy 1268 passive model reduction switching fast soft object simulation intermittent contact 1953 path planning algorithm transformation shapemorphing wheel stepclimbing 2642 path planning surgery robot bidirectional continuous tree search neural network 0812 path planning incremental roadmap update visibilitybased target tracking 0673 pd based robust quadratic program robotic system 1039 pedestrian density prediction efficient mobile robot exploration 0166 people vformation sidebyside model adapted accompany group people social robot 0472 perception prediction using general value function autonomous driving application 1442 perception pedestrian avoidance strategy selfbalancing mobile robot 2510 perception system design lowcost commercial ground robot sensor configuration calibration localization mapping 2209 performance guarantee receding horizon search terminal cost 1438 periodic trajectory planning robust output zeroing control underactuated bipedal robot predicted disturbance 1623 permanent magnet based actuator microrobots navigation 0839 personfollowing telepresence robot using web camera 0396 physical fatigue analysis assistive robot teleoperation via wholebody motion mapping 1567 physical orienteering problem unmanned aerial vehicle data collection planning environment obstacle 2146 piecewise rigid scene flow implicit motion segmentation 1418 pixelattentive policy gradient multifingered grasping cluttered scene 0252 pixel plan learning nonprehensile manipulation imitating planner 1386 planning beyond sensing horizon using learned context 1586 planning highquality motion concentric tube robot point cloud via parallel sampling optimization 1365 planning stochastic environment goal uncertainty 0943 planning reactive manipulation dynamic environment 0643 plant phenotyping deeplearning based planner multirobots 2176 plasticity collective decisionmaking robot creating global reference frame detecting dynamic environment preventing lockins 1968 pns perspectivenspheres algorithm laparoscope calibration minimally invasive surgery 0752 pointatrousnet point atrous convolution point cloud analysis 2290 policy distillation value matching multiagent reinforcement learning 1867 porthamiltonian passivitybased control se3 fullyactuated uav aerial physical interaction nearhovering 2434 poseaware placing semantic label brandnamebased affordance prediction cooperative dualarm active manipulation 0208 pose estimation omnidirectional camera using sinusoid fitting 1527 posegraph based indoor navigation test unmanned underwater vehicle navigation 2760 positionbased control underconstrained haptics system dexmo glove 2496 positionbased monocular visual servoing unknown target using online selfsupervised learning 1902 position control wiresuspended hand longreach aerial manipulation 2674 pprnet pointwise pose regression network instance segmentation 6d pose estimation binpicking scenario 0342 precise correntropybased 3d object modelling geometrical traffic prior 1593 precision modeling optimallysafe design quadcopters controlled crash landing case rotor failure 1618 precision pouring unknown container service robot 0756 predicting grasp success soft sensing skin shapememory actuated gripper 2309 prediction human arm target robot reaching movement 0219 predictive adaptive map longterm visual navigation changing environment 0005 predictive inverse kinematics redundant manipulator task scaling kinematic constraint 2601 predictive inverse kinematics optimizing future trajectory implicit time integration future jacobian estimation 0519 predictive optimization assistive force admittance controlbased mobile walking support system 2487 preliminary evaluation orbital camera teleoperation remote manipulator 1088 preliminary investigation relationship perceived intimacy touch characteristic 2671 preliminary result active compression sleeve using wire fabric mechanism 2700 preliminary study developing visionbased detection system unmanned surface vessel 2705 pressuredriven body compliance using robot skin 2425 printingwhilemoving new paradigm largescale robotic 3d printing 0347 privacypreserving robot vision anonymized face extreme low resolution 1845 probabilistic risk metric navigating occluded intersection 2394 proposal peristaltic motion type duct cleaning robot traveling flexible pipe 2533 protoobject based saliency eventdriven camera 1195 qpswift realtime sparse quadratic program solver robotic application 2157 quaternionbased smooth trajectory generator via pose se3 considering kinematic limit cartesian space 2386 quickly inserting peg uncertain hole using multiview image deep network trained synthetic data 2308 radar slam indoor disaster environment via multimodal registration prior lidar map 0355 randomized sensor selection nonlinear system application target localization 2504 rangelimited distributed algorithm higherorder voronoi partition multirobot system 0509 rangenet fast accurate lidar semantic segmentation 0346 rapid robust monocular visualinertial initialization gravity estimation via vertical edge 1687 rapid collision detection multicopter trajectory 1449 rapid design mechanical logic based quasistatic electromechanical modeling 1304 rapid estimation optical property simulationbased evaluation pose estimation performance 0671 rapid trajectory optimization using cfrost illustration cassieseries dynamic walking biped 1651 reactive interaction body motion phasestatemachine 0427 realtime 6d object pose estimation cpu 0189 realtime biped walkingpattern generation spline collocation 2706 realtime contact dynamic continuum arm using physic engine 2776 realtime dense depth estimation using semanticallyguided lidar data propagation motion stereo 2260 realtime detection distracted driving using dual camera 2668 realtime global registration globally consistent rgbd slam 2577 realtime modelbased image color correction underwater robot 1775 realtime monitoring human task advancement 0888 realtime quadrotor path planning using convex optimization compound statetriggered constraint 2315 realtime samplingbased optimization fpga accurate grid map merging embedded robotic system 2714 rebellion obedience effect intention prediction cooperative handheld robot 0968 recalling candidate grasping method object image using neural network 0875 reconfiguration motion planning variable topology truss 1830 reconstructing endovascular catheter interaction force 3d using multicore optical shape sensor 2136 recurrent convolutional fusion rgbd object recognition 2138 redundant resolution method underwater manipulation disturbance rejection 2641 refusion 3d reconstruction dynamic environment rgbd camera exploiting residual 0135 regionwise polynomial regression 3d mobile gaze estimation 0223 regressing noisy joint state visual data using cnn 2665 reinforcement learning boat autopilot sampleefficient model predictive control based approach 2313 reinforcement learning trajectory distribution application assisted teleoperation motion planning 2550 relaxing conservatism passivity condition impedance controlled series elastic actuator 2312 remote center motion surgical assisted robot insitu collaboration 2654 representation learning via parallel subset reconstruction 3d point cloud generation 0053 representing robot task plan robust logicaldynamical system 1703 research finite ground effect rotor 1709 resflow multitasking sequentially pooling spatiotemporal feature action recognition optical flow estimation 0410 resilience reconfiguration exploiting heterogeneity robot team 2108 resolving elevation ambiguity 1d radar array measurement using deep learning 2086 responsive joint attention humanrobot interaction 0028 resqbot 20 mobile stretcher bed robot neck securing device safe casualty extraction 2716 retrievalbased localization based domaininvariant feature learning changing environment 1695 rgbtotsdf direct tsdf prediction single rgb image dense 3d reconstruction 0378 right way assertiveness social recognition humanrobot doorway interaction 1564 rinsw robust inertial navigation system wheel 0067 riseslam resourceaware inverse schmidt estimator slam 0283 riskaware motion planning control using cvarconstrained optimization 2316 riverine coverage autonomous surface vehicle known environment 0502 roboat autonomous surface vehicle urban waterway 0188 robotassisted composite manufacturing using deep learning multiview computer vision 2732 robot audition approach field observation bird song 2682 robotbased machining unmodeled object via feature detection dense point cloud 0960 robotbased strategy objective assessment motor impairment 2649 robotenhanced therapy development validation supervised autonomous robotic system autism spectrum disorder therapy 2500 robot finger remote center motion mechanism covering joint thick skin 2151 robot robot gesturing anchoring representation 2605 robotic cutting solid based fracture mechanic fem 1501 robotic laparoendoscopic singlesite surgery platform dvrk 2772 robotic tracking control kernel trickbased reinforcement learning 0381 robotic ultrasound catheter navigation endovascular procedure 0487 robot learning shifting object grasping cluttered environment 0482 robot learning via human adversarial game 1400 robot localization floor plan using room layout edge extraction network 1403 robot localization via odometryassisted ultrawideband ranging stochastic guarantee 1037 robot take advantage human trust 1277 robust adaptive lower limb prosthesis control via extended kalman filterbased phase estimation 2097 robust efficient quadrotor trajectory generation fast autonomous flight 2377 robust efficient vehicle motion estimation lowcost multicamera odometergyroscope 1803 robust compliant assembly elastic part model uncertainty 1059 robust deformation model approximation robotic cable manipulation 1626 robust grasp planning uncertain shape completion 0761 robust handeye calibration via iteratively reweighted rankconstrained semidefinite programming 2026 robust high accuracy visualinertiallaser slam system 0971 robust impedance shaping redundant teleoperators timedelay via sliding mode control 1203 robust legged robot state estimation using factor graph optimization 2582 robust loop closure detection based bag superpoints graph verification 1544 robust moving path following control robotic vehicle theory experiment 2295 robust nonrigid point set registration algorithm considering anisotropic uncertainty based coherent point drift 1673 robust outdoor selflocalization changing environment 1163 robust realtime rgbd visual odometry dynamic environment via rigid motion model 1254 robust trajectory planning multirotor disturbance based hamiltonjacobi reachability analysis 1801 robust uav localization around large scale facility multiple subsidiary uavs 2757 robust uav position attitude estimation using multiple gnss receiver laserbased 3d mapping 0577 roficom first openhardware connector metamorphic robot 0354 roibased robotic grasp detection object overlapping scene 0190 rollingshutter modelling direct visualinertial odometry 0350 ronet realtime rangeonly indoor localization via stacked bidirectional lstm residual attention 2267 routing fleet automated vehicle capacitated transportation network 0931 safe path planning gaussian process regulated risk map 0706 safe physical hri toward unified treatment speed separation monitoring together power force limiting 2490 sailmav design implementation novel multimodal flying sailing robot 2599 sampleefficient deep reinforcement learning imaginary rollouts humanrobot interaction 0933 sample efficient interactive endtoend deep learning selfdriving car selective multiclass safe dataset aggregation 1303 samplingbased motion planning aerial pickandplace 1504 samplingbased motion planning 3d solid object guided multiple approximate solution 1108 samplingbased path planning cooperative autonomous maritime vehicle reduce uncertainty rangeonly localisation 2223 scaffoldbased asynchronous distributed selfreconfiguration continuous module flow 0990 scaling robot supervision hundred hour roboturk robotic manipulation dataset human reasoning dexterity 1251 scheduling mobile workstation overlapping production time delivery time 0586 seeing behind thing extending semantic segmentation occluded region 1433 seeing beyond appearance mapping real image geometrical domain unsupervised cadbased recognition 1124 seeking analytical approximation stance dynamic 3d springloaded inverted pendulum model using perturbation approach 0633 segregation flow module robot swarm utilising brazil nut effect 0622 selfcalibration learning chip towards neuromorphic robot 2752 selfcollision detection avoidance dualarm concentric tube robot 2523 selfmodeling tracking control crawler fire fighting robot based causal network 0419 selforganised flocking robotic swarm based active elastic sheet 2625 selforganized adaptive path multirobot manufacturing reconfigurable patternindependent fibre deployment 1952 selfspecialization general robot plan based experience 2508 selfsupervised 3d shape viewpoint estimation single image robotics 0758 selfsupervised transfer learning instance segmentation physical interaction 1890 semantically assisted loop closure slam using ndt histogram 0879 semantic mate intuitive geometric constraint efficient assembly specification 0478 semantic segmentation using gan weakly supervised based deep transfer learning 2618 semiautonomous interventional manipulation using pneumatically attachable flexible rail 0871 sensitivity legged balance control uncertainty sampling period 2349 sensor installation retrieval operation using unmanned aerial manipulator 2558 sensorless estimation planar distal shape tipactuated endoscope 2497 seqlpd sequence matching enhanced loopclosure detection based largescale point cloud description selfdriving vehicle 1907 sequential clustering tactile image compression enable direct adaptive feedback 1971 setup method remote center motion positioning guidance robotassisted surgery 2447 sganvo unsupervised deep visual odometry depth estimation stacked generative adversarial network 2427 shared autonomy flexible manipulator constrained endoluminal surgical task 2232 shared controller obstacle avoidance manipulator teleopeartion system 2662 sharing caring sociallycompliant autonomous intersection negotiation 1136 siamese convolutional neural network submillimeteraccurate camera pose estimation visual servoing 1514 silhonet rgb method 6d object pose estimation 2334 simdop simd optimized bounding volume hierarchy collision detection 0940 simitate hybrid imitation learning benchmark 0497 simtomultireal transfer lowlevel robust control policy multiple quadrotors 1589 simtoreal learning casualty detection ground projected point cloud data 1239 simtoreal transfer biped locomotion 1040 simulationbased physic reasoning consistent scene estimation hri context 1050 simultaneous drone localisation wind turbine model fitting autonomous surface inspection 0648 simultaneous transparent nontransparent object segmentation multispectral scene 0694 singlehand movement direction decoding eeg signal oppositehand movement distraction 2627 single motorbased bidirectional twisted string actuation variable radius pulley 2412 situation awareness proactive robot hri 0967 six dof pose estimation tendondriven continuum mechanism without deformation model 2347 skill interaction category communication flexible humanrobot team 0338 smallscale compliant dual arm tail winged aerial robot 1409 soft action particle deep reinforcement learning continuous action space 0588 soft pneumatic helical actuator high contraction ratio 2538 soft polymerelectrolytefuelcell tube realizing airhosefree thin mckibben muscle 2520 sp2 sphericallystratifiedpoints projection generating novel image 3d point cloud segmentation 2696 sparse3d lidar outdoor mapbased autonomous vehicle localization 0595 sparse depth enhanced direct thermalinfrared slam beyond visible spectrum 2278 spatiotemporal learning directional uncertainty urban environment kernel recurrent mixture density network 2197 spatiotemporal representation dynamic scene 1228 specificationbased maneuvering quadcopters hoop 1297 specifying synthesizing humanrobot handover 1397 spiking neural network neuromorphic hardware energyefficient unidimensional slam 1452 spinebot pneumatically actuated muscle 2620 spineinspired continuum soft exoskeleton stoop lifting assistance 2588 spiral zipper manipulator aerial grasping manipulation 1937 stability gait switching underactuated biped walker 0520 stair environment mapping walkable plane detecting algorithm quadrupedal robot locomotion 2712 starnet pedestrian trajectory prediction using deep neural network star topology 0199 state representation learning robotic prior partially observable environment 1302 static analysis modular detachable climbing robot walltowall transition 2633 statistical coverage control mobile sensor network 2604 stereo visual inertial lidar simultaneous localization mapping 2562 stereo visualinertial slam using graphbased optimization 2621 stiffness bound resilient stable physical interaction articulated soft robot 2429 stochastic path planning autonomous underwater glider safety constraint 1317 stochastic sampling simulation pedestrian trajectory prediction 2419 structured classification locomotion mode wearable robot control 2653 structured reward shaping using signal temporal logic specification 1818 study elastic element allocation energyefficient robotic cheetah leg 0928 study performance marker detection via training data augmentation partial distortion underwater sonar image 2687 study stumble elderly depth perception dependency test 1812 submodular optimization coupled task allocation intermittent deployment problem 2134 subspacebased direct visual servoing 2161 suma efficient lidarbased semantic slam 0228 svin2 underwater slam system using sonar visual inertial depth sensor 0269 synchronizing virtual constraint preview controller walking pattern generator humanoid robot coman 1061 synergybased control multifingered hand using selected joint space 2688 synthesizing robot manipulation program single observed human demonstration 0328 systematic benchmarking reproducibility computer vision algorithm realtime system example optic flow estimation 0506 tactilebased insertion dense boxpacking 1881 tactile localization unknown known object 2628 talk vehicle language conditioned autonomous navigation self driving car 1765 target classification prediction unguided rocket trajectory using deep neural network 2723 target tracking moving rotating object highspeed monocular active vision 2692 taskmotion planning reinforcement learning adaptable mobile service robot 1443 taskoriented grasping object stacking scene crfbased semantic model 0663 taskspecific selfbody controller acquisition musculoskeletal humanoid application pedal control autonomous driving 0109 teaching drone accompany person demonstration using nonlinear asfm 1107 teleoperating robot international space station microgravity effect performance force feedback 0370 tendencyrl multistage discriminative hint efcient goaloriented reverse curriculum learning 0532 terrainfusion realtime digital surface model reconstruction based monocular slam 0786 anbot intelligent robotic coworker industrial abrasive blasting 1497 armm system demonstrating clinical feasibility steering magnetically actuated catheter endovascular application 2648 combination function multileg modular robot biomimicked ant behavior 2657 compliant joint toolbox matlab introduction example 2574 costar block stacking dataset learning workspace constraint 1236 impact domain randomization object detection case study parametric shape synthetic texture 1333 mastr1325 dataset training deep usv obstacle detection model 1480 theoretical foundation design frictiontunable soft finger wrinkle morphology 2518 rgbd triathlon towards agile visual toolbox robot 2357 thermalinertial odometry autonomous flight throughout night 1819 road enough extrinsic calibration nonoverlapping stereo camera lidar using road information 2213 robot show must go effective response robot failure 1280 role robot payload safety map framework 1984 smellicopter biohybrid odor localizing nano air vehicle 2245 stability human supervisory control operator behavioral model using hidden markov model 1015 threedegreesoffreedom passive gravity compensation mechanism applicable robotic arm remote center motion minimally invasive surgery 2239 timedelastic band manipulation motion planning 2371 timedelastic smooth curve optimization mobilebase motion planning 1549 timedelay compensation using energy tank satellite dynamic robotic simulator 1116 timeoptimal path tracking jerk controlled robot 2375 timeoptimal trajectory generation dynamic vehicle bilevel optimization approach 1850 timepix radiation detector autonomous radiation localization mapping micro unmanned vehicle 2593 time series motion generation considering long shortterm motion 1608 timevarying graph patrolling attacker locally limited imperfect observation model 0553 timtam tunnelimage texturallyaccorded mosaic location refinement underground vehicle single camera 2561 tip model combination unstable subsystem lateral balance walking 1354 torsomounted vibrotactile interface experimentally induce illusory ownbody perception 0367 toward ballbot physically leading people humancentered approach 0920 toward bipedal robot variable gait style sagittal force analysis planar simulation prototype balltray mechanism 1446 toward achieving formal guarantee humanaware controller humanrobot interaction 1096 toward affordance detection ranking novel object realworld robotic manipulation 2318 toward humanmachine interface based electrical impedance tomography robotic manipulator control 0596 toward efficient hybrid interaction paradigm object manipulation optical seethrough mixed reality 0084 toward versatile robotic platform fluoroscopy mriguided endovascular intervention preclinical study 1894 toward controllable morphogenesis large robot swarm 2193 toward improving patient safety surgeon comfort synergic robotassisted eye surgery comparative study 2256 toward modelbased benchmarking robot component 1224 towards active stabilization probebased confocal laser endomicroscopy using handheld micromanipulator 2680 towards general framework generating stable flexible locomotion skill 2736 towards generic vivo situ camera lens cleaning module laparoscopic surgery 0073 towards assisted robotic platform soft neural tissue interaction 2770 towards natural motion generator pipeline control humanoid based motion data 1573 towards autonomous unwrapping system intralogistics 2444 towards opensource micro robot oceanarium lowcost modular mobile underwater motioncapture system 1925 towards robot architecture situated lifelong object learning 1429 towards robust aerial cinematography platform localizing tracking moving target unstructured environment 1607 towards autonomous industrialscale bathymetric surveying 1353 towards ergonomic control collaborative effort multihuman mobilerobot team 0899 towards explainable shared control using augmented reality 0448 towards generalizing sensorimotor control across weather condition 0954 towards jumping locomotion quadruped robot moon 0801 towards learning trajectory segmentation semisupervised learning 2767 towards realistic humanrobot conversation seq2seqbased body gesture interaction system 1420 towards reversible dynamic movement primitive 0753 towards design development pediatric neuroendoscope tool 1125 tpfc trajectoryoptimized perturbation feedback control approach 2388 tracking control fullyconstrained cabledriven parallel robot using adaptive dynamic programming 0777 training task space speed guide reinforcement learning 0186 trajectory estimation geofencing application smallsize fixedwing uavs 1209 trajectory optimization legged robot slipping motion 2145 trajectory optimization unknown constrained system using reinforcement learning 1077 trajectory planning batlike flapping wing robot 0863 transferable trialminimizing progressive peginhole model 0232 transfer learning visionbased tactile sensing 0248 trust verify distributed algorithm multirobot wireframe exploration mapping 0720 tunable contact condition grasp hydrodynamics using gentle fingertip suction 2575 twin kinematics approach roboticassisted teleechography 1979 twoview fusion based convolutional neural network urban road detection 0198 tzc efficient interprocess communication robotics middleware partial serialization 0386 uav landing unknown location marked radio beacon 1512 uncertaintyaware imitation learning using kernelized movement primitive 0255 underactuated gripper forearm roll estimation human limb manipulation rescue robotics 1320 understanding multirobot system concept legibility 0435 understanding natural language instruction fetching daily object using ganbased multimodal targetsource classification 2288 unified balance control biped robot including modification footstep angular momentum falling detection based capturability 0126 unified humanrobot shared control application haptic telemanipulation 1748 unstructured terrain navigation topographic mapping lowcost mobile cuboid robot 0164 unsupervised task segmentation approach bimanual surgical task using spatiotemporal variance property 1244 unsupervised traffic accident detection firstperson video 1278 untethered quadrupedal hopping trampoline 2677 upperlimb joint angle estimation method commercial depth sensor planar robotaided reaching movement 2766 upper limb motion simulation algorithm prosthesis prescription training 1052 urban street trajectory prediction multiclass lstm network 2691 use deep learning based recurrent neural network modeling characteristic pneumatic artificial muscle 2617 variable configuration planner leggedrolling obstacle negotiation locomotion application centauro robot 0134 variable impedance endeffector space action space reinforcement learning contactrich task 1610 various sized obstacle stair climbing robot wheel transformation prototype experimental result 2644 vehicular multicamera sensor system automated visual inspection electric power distribution equipment 1736 view management lifelong visual map 0649 view sharing enhance driving safety vehicletovehicle communication 2667 vilivo virtual lidarvisual odometry autonomous vehicle multicamera system 2025 virtual lane boundary generation humancompatible autonomous driving tight coupling perception planning 1364 virtual map autonomous exploration pose slam 1215 virtualmassellipsoid inverted pendulum model application 3d bipedal locomotion uneven terrain 0739 virtual region based multirobot path planning unknown occluded environment 2127 visionaided localization ground robot 0314 visionbased automatic control 5fingered simulated assistive robotic manipulator activity daily living 0805 visionbased estimation driving energy planetary rover using deep learning terramechanics 2329 visionbased magnetic platform actuator positioning wireless control microrobots 0479 visionbased virtual fixture generation roboticassisted polyp dissection procedure 1167 visualbased autonomous driving deployment stochastic uncertaintyaware perspective 0055 visual domain adaptation exploiting confidencesamples 0222 visualinertial localization prior lidar map constraint 2271 visualinertial odometry tightly coupled wheel encoder adopting robust initialization online extrinsic calibration 0614 visualinertial odometry point line feature 1809 visualinertial onboard throwandgo initialization micro air vehicle 1957 visual servo control novel magnetic actuated endoscope uniportal video assisted thoracic surgery 2228 visual servoing miniature magnetic film swimming robot 3d arbitrary path following 2521 voicecontrolled flexible exotendon flexotendon glove hand rehabilitation 1130 volumetric instanceaware semantic mapping 3d object discovery 2118 volumetric tree adaptive sparse graph effective exploration homotopy class 1616 walking augmented reality realtime visual feedback wearing cabledriven active leg exoskeleton calex 2485 walking confidence safety regulation full order biped model 2526 wallmounted robot arm equipped 3dof rollpitchpitch counterbalance mechanism 2411 warped hypertime representation longterm autonomy mobile robot 2131 wearable activity recognition robust humanrobot teaming safetycritical environment via hybrid neural network 1950 wholebody control humanoid robot 3d multicontact contact wrench constraint including joint load reduction selfcollision internal wrench distribution 0670 wholebody control self collision avoidance using vector field inequality 2432 wholebody locomotion posture control torquecontrolled hydraulic rover 2175 wholebody motion landing force control quadrupedal stair climbing 1470 wholebody motion planning walking excavator 0991 wholebody mpc dynamically stable mobile manipulator 2422 wholebody postural control approach based multiple zmp evaluation humanoid robot 2638 wide aperture imaging sonar reconstruction using generative model 0138 proximity servoing towards safe humanrobotinteraction 1369 wlrii hoseless hydraulic wheellegged robot 0226 word2vec behavior morphology facilitates grounding language machine 1517 wsrender workspace analysis visualization toolbox robotic system design verification 2499 youwasps towards autonomous multirobot mobile deposition construction 1282,"[('reinforcement', 'learning'), ('neural', 'network')]"
m4mallu/clonebot,Python,clonebot opensource telegram robot clone medium text chat chat read documentation know use bot due security reason deploy heroku repository ha abolished deploy bot heroku may need follow step mentioned fork repository first change appjson repository url fork url change deploy button url fork url finally deploy fork risk factor m4mallu deploy using dockerdeploying vps using docker start docker daemon skip already running installed snap use 2nd command sudo dockerd sudo snap start docker note started starting run command try start sudo apt install dockerio build docker image sudo docker build clonebot run image sudo docker run clonebot stop image sudo docker p sudo docker stop id clear container sudo docker container prune delete image sudo docker image prune deploying vps using dockercompose note want use port 80 change dockercomposeyml sudo apt install dockercompose build run docker image sudo dockercompose editing file nano example nano startsh sudo dockercompose build stop image sudo dockercompose stop run image sudo dockercompose start,"[('image', 'sudo'), ('sudo', 'docker')]"
ros-controls/ros2_control_demos,C++,ros2control demo licence repository provides example functionality capability ros2control framework consists simple implementation demonstrate different concept choose right branch repository matching rosdistribution well full documentation controlrosorg see table want rather step step manual thing ros2control checkout roscontrolroscon2022workshop repository content following example part demo repository examplerrbot rrbot revoluterevolute manipulator robot simple position controlled robot one hardware interface example also demonstrates switching different controller examplediffbot diffbot differential mobile robot simple mobile base differential drive robot basically box moving according differential drive kinematics examplerrbot multiple interface rrbot multiple interface exampleindustrial robot integrated sensor rrbot integrated sensor exampleindustrial robot externally connected sensor rrbot externally connected sensor examplemodular robot separate communication actuator example show implement robot hardware separate communication actuator example6dof robot full tutorial adof robot intermediate rosusers exampleusing transmission rrbot exposed transmission interface examplegazebo classic simulation demonstrates switch simulation hardware example 10 industrial robot gpio interface rrbot gpio interface example 11 carlike robot using steering controller library tba example 12 controller chaining example show simple chainable controller integration form controller chain control joint rrbot example 13 multirobot example tba example 14 modular robot actuator providing state additional sensor getting started repository structured examplexy folder fully contained package name ros2controldemosexamplexy package following structure subfolders bringup store launch file runtime configuration demo robot description store urdf xacro description file rviz configuration mesh example robot hardware store implementation example hardware component interface controller optional store implementation example controller important file check example bringuplaunchexamplenamelaunchpy launch file example bringupconfigexamplenamecontrollersyaml parameter controller setup example descriptionexamplenameros2controlxacro xacro file ros2controlurdftag hardware setup parameter descriptionexamplenameurdfxacro main description example used generate urdf fly published robotdescription topic hardwareexamplenamehpp header file example hardware component implementation hardwareexamplenamecpp source file example hardware component implementation controllersexamplenamehpp header file example controller implementation controllersexamplenamecpp source file example controller implementation note structure package folder file given repository recommended used robot usually folder defined separate package naming convention robotnameortypebringupdescriptionhardwarecontrollers standard structure found roscontrolboilerplate repository dave coleman documentation rosteamworkspace stogl robotics concept package demonstrated example rrbot diffbot two worldknown imaginary robot trivial simulation demonstrate test ros2control concept build status rosdistro branch build status documentation rolling master rolling binary build rolling semibinary build documentation api reference iron master iron binary build iron semibinary build documentation api reference humble humble humble binary build humble semibinary build documentation api reference galactic galactic galactic binary build galactic semibinary build documentation api reference foxy foxy foxy binary build foxy semibinary build documentation api reference explanation different build type note three build stage checking current future compatibility package binary build released package main testing distribution show direct local build possible us repos file srcnamenamenotreleasedrosdistrorepos semibinary build released core package main testing immediate dependency pulled source show local build dependency possible fails expect next package sync able build us repos file srcnamenamerepos source build also core package build source show potential issue mid future,"[('binary', 'build'), ('semibinary', 'build')]"
serialport/node-serialport,Other,node serialport backer open collective sponsor open collective lerna codecov test lint access serial port javascript linux osx window welcome robotic javascript overlord better yet program go learn find guide api documentation quick link guide serialport package api doc people start developing developing node serialport project clone repo git clone gitgithubcomserialportnodeserialportgit run npm install setup local package dependency run time depend package local repo run npm test ensure everything working properly add dev dependency root packagejson package dependency package one developing doc see license serialport package mit licensed dependency mit licensed code conduct serialport follows nodebots code conduct code mit licensed participation community ha rule make good place work learn tldr respectful abusive behavior never tolerated data published nodebots hosted discretion service administrator may removed build evil robot violation code may result swift permanent expulsion nodebots community governance community serialport currently employee governance group maintainer committers contributor fixing bug adding feature improving documentation need apply work serialport welcome join build maintain project contributor individual creating commenting issue pull request participating committers contributor given write access repository review merge pull request maintainer committers representing required technical expertise resolve rare dispute pr improves project people people help land maintainer francis gulotta reconbot nick hehr hipsterbrown contributor project exists thanks people contribute contribute backer thank backer become backer img src sponsor support project becoming sponsor logo show link website become sponsor img src,"[('mit', 'licensed'), ('node', 'serialport')]"
andrewkirillov/AForge.NET,Other,failtoloadreadme,[]
atb033/multi_agent_path_planning,Python,multiagent path planning python introduction repository consists implementation multiagent pathplanning algorithm python following algorithm currently implemented multiagent path planning python introduction dependency centralized solution prioritized safeinterval path planning execution result reference conflict based search execution result reference postprocessing postprocessing tpg decentralized solution velocity obstacle execution result reference nonlinear modelpredictive control execution result reference dependency install necessary dependency running shell python3 pip install r requirementstxt centralized solution method responsibility central planner provide plan robot prioritized safeinterval path planning sipp local planner using collisionfree plan generated considering static dynamic obstacle environment case multiagent path planning agent environment considered dynamic obstacle execution sipp multiagent prioritized planning run cd centralizedsipp python3 multisipppy inputyaml outputyaml result visualize generated result python3 visualizesipppy inputyaml outputyaml record video python3 visualizesipppy inputyaml outputyaml video sippavi speed testsuccess testfailure reference sipp safe interval path planning dynamic environment conflict based search conclictbased search cbs multiagent global path planner execution run cd centralizedcbs python3 cbspy inputyaml outputyaml result visualize generated result shell python3 visualizepy inputyaml outputyaml testsuccess testsuccess 8x8 grid 32x32 grid reference conflictbased search optimal multiagent pathfinding postprocessing postprocessing tpg plan computed discrete time postprocessed generate planexecution schedule take care kinematic constraint well imperfection plan execution work based multiagent path finding kinematic constraint plan generated using cbs please run following generate planexecution schedule shell cd centralizedscheduling python3 minimizepy cbsoutputyaml realscheduleyaml decentralized solution approach responsibility robot find feasible path robot see robot dynamic obstacle try compute control velocity would avoid collision dynamic obstacle velocity obstacle execution shell cd decentralized python3 decentralizedpy f velocityobstaclevelocityobstacleavi velocityobstacle result testthe robot try stay at5 avoiding collision dynamic obstacle testthe robot move from0 to10 avoiding obstacle test 1test reference hybrid reciprocal velocity obstacle nonlinear modelpredictive control execution shell cd decentralized python3 decentralizedpy nmpc result testthe robot try stay at5 avoiding collision dynamic obstacle testthe robot move from0 to10 avoiding obstacle test 1test reference nonlinear model predictive control multimicro aerial vehicle robust collision avoidance,"[('path', 'planning'), ('dynamic', 'obstacle')]"
nestjs/terminus,Other,progressive nodejs framework building efficient scalable serverside application heavily inspired angular p aligncenter href src href src backer open collective sponsor open collective description module contains integrated healthchecks nest installation nestjsterminus integrates lot cool technology typeorm grpc mongodb many case missed dependency nestjsterminus throw error prompt install required dependency install actually required bash npm install save nestjsterminus usage import terminus module make sure additionally needed module available eg typeormmodule case want database health check typescript appmodulets module controller healthcontroller import make sure typeormmodule available module context typeormmoduleforroot terminusmodule export class healthmodule setup healthcontroller executes health check typescript healthcontrollerts controller health export class healthcontroller constructor private health healthcheckservice private db typeormhealthindicator get healthcheck readiness return thishealthcheck async thisdbpingcheck database timeout 300 everything set correctly access healthcheck json status ok info database status detail database status information see doc find sample sample folder repository contribute order get started first read contributing guideline setup setup development environment following instruction fork clone repository install dependency bash npm install rebuild project run npm run build test unit testing run following command bash npm run test e2e testing make sure docker installed bash dockercompose npm run teste2e support nest mitlicensed open source project grow thanks sponsor support amazing backer like join please read stay touch author kamil mysliwiec livio brunner website twitter nestframework license nest mit licensed,"[('bash', 'npm'), ('make', 'sure')]"
andybarry/flight,Other,flight flight code mit csail robot locomotion group flyingthroughforests project code power selfflying drone dip dart dive tree 30 mph video thesis pdf drone autonomously avoiding obstacle 30 mph techincal video pushbroom stereo highspeed obstacle avoidance technical video fpga v pushbroom stereo vision mavs paper pdf pushbroom stereo highspeed navigation cluttered environment paper pdf video pushbroom stereo highspeed navigation cluttered environment fast accurate knifeedge maneuver autonomous aircraft video abstract pdf thesis pdf pushbroom stereo file main class cpp camera capture recording management debugging ui etc cpp stereo image synced sensor data datasets see also full part list pdf drake toolbox planning control analysis simulation code cad pronto state estimator contact abarrycsailmitedu abarryorg information,"[('pushbroom', 'stereo'), ('stereo', 'highspeed')]"
snape/RVO2,C++,optimal reciprocal collision avoidance doi present formal approach reciprocal collision avoidance multiple independent mobile robot agent need avoid collision without communication among agent moving common workspace formulation optimal reciprocal collision avoidance orca provides sufficient condition collisionfree motion letting agent take half responsibility avoiding pairwise collision selecting optimal action agent reduced solving lowdimensional linear program prove resulting motion smooth test optimal reciprocal collision avoidance approach several dense complex simulation scenario workspace involving thousand agent compute collisionfree action millisecond rvo2 library opensource c98 implementation algorithm two dimension ha simple api thirdparty application user specifies static obstacle agent preferred velocity agent simulation performed stepbystep via simple call library simulation fully accessible manipulable runtime library exploit multiple processor available using openmp efficient parallelization simulation build status build status spdxfilecopyrighttext 2008 university north carolina chapel hill spdxlicenseidentifier apache20 licensed apache license version 20 license may use file except compliance license may obtain copy license unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license please send bug report geomcsuncedu author may contacted via jur van den berg stephen j guy jamie snape ming c lin dinesh manocha dept computer science 201 columbia st frederick p brook jr computer science bldg chapel hill nc 275993175 united state america,"[('reciprocal', 'collision'), ('collision', 'avoidance')]"
graydon/bors,Python,note 2021 project moderately maintained mostly dormant though obsolete still used daily wa originally developed use early rust project life ha superseded multiple enhanced rewrite homu fork homu rust us borsng periodically accept pr minor compatibility issue blocker keep running general future featurework development lineage go one successor project bors automated integrator github buildbot written rust project probably contains number peculiarity project may need work reuse elsewhere assume bors run loop perhaps per minute cron github ha ratelimited api time run reloads entire state github buildbot decides fruitful nextthing doe one thing exit crude design mean script workspace mostly stateless debugged never require operator intervention workspace driving sometimes site read github buildbot requires config file borscfg workspace config file hold json dictionary owner githubusernametheownerofrepo repo shortgithubreponame reviewer user1 user2 builder buildbotbuilder1 buildbotbuilder2 testref gitreffortesting masterref gitrefforintegration nbuilds numberofbuildbotbuildshistorytolookat buildbot buildboturl ghuser githubusertorunas ghpass passwordforthatuser example rust config time writing minus password owner mozilla repo rust reviewer brson catamorphism graydon nikomatsakis pcwalton builder autolinux autowin autobsd automac testref auto masterref incoming nbuilds buildbot ghuser bors ghpass general cycle bors operation follows load pull reqs load status comment sort state value pick ripest lateststate one try advance meaning stateunreviewed discussing look r r r set approved r set disapproved nothing said exit nothing stateapproved merge pullsha master testref merge ok set pending merge fail set error pull req bitrotted statepending look buildbot test result failed set failed passed set tested test status exit waiting result statetested fastforward master testref ffwd work close pull req ffwd fails set error someone moved master u license copyright 2013 mozilla foundation licensed apache license version 20 mit license option file may copied modified distributed except according term,"[('github', 'buildbot'), ('rust', 'project')]"
erwincoumans/motion_imitation,Python,motion imitation development new feature bug fix etc happen master branch paper branch repository contains original code accompanying paper learning agile robotic locomotion skill imitating animal xue bin peng et al provides gym environment training simulated quadruped robot imitate various reference motion example training code learning policy project page getting started use repository python 37 python 38 ubuntu macos window install mpc extension optional python3 setuppy install user install dependency install mpi sudo apt install libopenmpidev install requirement pip3 install r requirementstxt good go training imitation model train policy run following command python3 motionimitationrunpy mode train motionfile motionimitationdatamotionsdogpacetxt intsavefreq 10000000 visualize mode either train test motionfile specifies reference motion robot imitate motionimitationdatamotions contains different reference motion clip intsavefreq specifies frequency saving intermediate policy every n policy step visualize enables visualization rendering disabled removing flag trained model log written output parallel training mpi run mpiexec npython3 motionimitationrunpy mode train motionfile motionimitationdatamotionsdogpacetxt intsavefreq 10000000 n number parallel testing imitation model test trained model run following command python3 motionimitationrunpy mode test motionfile motionimitationdatamotionsdogpacetxt modelfile motionimitationdatapoliciesdogpacezip visualize modelfile specifies zip file contains trained model pretrained model available motionimitationdatapolicies motion capture data motionimitationdatamotions contains different reference motion clip motionimitationdatapolicies contains pretrained model different reference motion information reference motion data format see deepmimic documentation locomotion using model predictive control getting started mpc environment start clone codebase install dependency using bash pip install r requirementstxt explore environment running bash python3 motionimitationexamplestestenvgui robottypea1 motorcontrolmodeposition onracktrue three commandline flag robottype choose a1 laikago different robot motorcontrolmode choose position torque different motor control mode onrack whether fix robot base rack setting onracktrue handy debugging visualizing openloop gait gym interface additionally codebase directly installed pip package run bash pip3 install motionimitation user directly invoke default gym environment python python import gym env gymmake motionimitationa1gymenvv1 note pybullet rendering slightly different mujoco enable gui rendering visualize training process call python import gym env gymmake motionimitationa1gymenvv1 rendertrue pop standard pybullet renderer always call envrendermode rgbarray generate frame running mpc real a1 robot since sdk unitree implemented c find optimal way robot interfacing via cpython interface using pybind11 stepbuild test robot interface start build python interface running following bash cd thirdpartyunitreeleggedsdk mkdir build cd build cmake make copy built robotinterfacexxxso file main directory see readmemd file stepsetup correct permission nonsudo user since unitree sdk requires memory locking highpriority process usually granted without sudo add following line etcsecuritylimitsconf username soft memlock unlimited username hard memlock unlimited username soft nice eip username hard nice eip may need reboot computer change get effect steptest robot interface test python interfacing running sudo python3 motionimitationexamplestestrobotinterface previous step completed correctly script finish without throwing error note code doe anything actual robot running wholebody mpc controller see wholebody mpc controller sim run bash python3 motionimitationexampleswholebodycontrollerexample see wholebody mpc controller real robot run bash sudo python3 motionimitationexampleswholebodycontrollerrobotexample credit repo wa developed google robotics maintained one member erwin coumans original motion imitation code wa written jason peng part internship student researcher google robotics mpc part a1 running real a1 written yuxiang yang former resident researcher google robotics disclaimer official google product,"[('reference', 'motion'), ('motionimitationrunpy', 'mode')]"
robotframework/HowToWriteGoodTestCases,Other,write good test case project document general guideline writing good test case using robot framework howto howtowritegoodtestcasesrst file,"[('good', 'test'), ('test', 'case')]"
heuristicus/spot_ros,Python,spot driver prefer ros2 ros2 version driver also available prerequisite using noetic melodic also used may require modification build correctly must install boston dynamic sdk machine run driver pip3 install bosdynclient bosdynmission bosdynapi bosdyncore quick start installing package go source directory workspace clone repository bash git clone gitgithubcomheuristicusspotrosgit initialise submodule wrapper use interact boston dynamic sdk bash cd spotros git submodule init git submodule update install python package containing wrapper bash pip3 install e spotwrapper build package bash catkin build spotdriver spotviz finally remember source workspace connecting robot test functionality easiest connect robot via wifi actual operation recommended connect robot directly payload port higher bandwidth connect robot wifi network usually found ssid spotbdxxxxxxxx password network found robot battery compartment connected verify ping robot ping 192168803 start roscore machine roscore run driver username password robot found battery compartment bash roslaunch spotdriver driverlaunch usernameuser passwordyourpassword hostname192168803 view control robot rviz interface running bash roslaunch spotviz viewrobotlaunch documentation detailed documentation found moveit simulation spot arm found,"[('connect', 'robot'), ('boston', 'dynamic')]"
glumb/kinematics,Other,kinematicsjs github license travis npm codecov 6dof robot kinematics javascript install console npm install kinematics save use j const kinematics require kinematics default const geometry 1v0 1x 1y 10v1 10y 0v2 5x 0v3 3x 3v4 3y const robotkin new kinematicsgeometry let angle 157 1203 22 11 const pose robotkinforwardangles5 angle robotkininversepose geometry geometry array consists ofentries describing link v0v5 vn tuple ofcoordinates jn jn1 one constraint yz v3 xz v4 must befor kinematics work img aligncenter src width70 api forward j robotkinforwardr0 r1 r2 r3 r4 r5 return 0j0 0508 j1 02 88 03 j2 18 56 28 j3 30 36 47 j4 47 13 556 28 j5 tcp euler angle inverse xyz coordinate abc euler angle order abc j robotkininversex z b c return 16 21 3515 array angle 23 31 nan nan nan nan reach angle kinematic coupling kinematicsjs assumes robot series joint robot may different kinematics depicted robot ha hinge j1 r1r2 kinematic position therefore moving r1 also change angle j2 account r2 ha move amount srgeometrykinematiccoupling using information use kinematicsjs calculate initial angle correct according kinematics j let angle robotkininversepose angles2 angles1 set angle stuff todo robot configuration comply dh tcp orientation kinematic chain demo see kinematics action use chrome ff due es6 feature robotgui gui available repo,"[('nan', 'nan'), ('let', 'angle')]"
adityadua24/robopy,Python,build status pypi license mit checkout newer port rtb toolbox feature pythonimplementation peter corke robotics toolbox website bug report dependency vtk numpy scipy install pip install robopy unofficial window binary available puma 560 simulation click image see vr simulation unitquaternions click image see unitquaternion animation transformation function make gif pose plot orion5,"[('click', 'image'), ('image', 'see')]"
danijar/dreamer,Python,dream control note check code dreamerv2 support atari dmcontrol environment fast simple implementation dreamer agent tensorflowimg width100 src find code useful please reference paper articlehafner2019dreamer titledream control learning behavior latent imagination authorhafner danijar lillicrap timothy ba jimmy norouzi mohammad journalarxiv preprint arxiv191201603 year2019 method dreamer dreamer learns world model predicts ahead compact feature space imagined feature sequence learns policy statevalue function value gradient backpropagated multistep prediction efficiently learn longhorizon policy project website research paperpaper official implementationcode tensorflow code instruction get dependency pip3 install user tensorflowgpu220 pip3 install user tensorflowprobability pip3 install user gitgitgithubcomdeepminddmcontrolgit pip3 install user panda pip3 install user matplotlib train agent python3 dreamerpy logdir logdirdmcwalkerwalkdreamer1 task dmcwalkerwalk generate plot python3 plottingpy indir logdir outdir plot xaxis step yaxis testreturn bin 3e4 graph gifs tensorboard logdir logdir,"[('pip3', 'install'), ('install', 'user')]"
ZiwenZhuang/parkour,Python,robot parkour learning project website author ziwen zhuang zipeng fu jianren wang christopher atkeson soren schwertfeger chelsea finn hang zhao conference robot learning corl 2023 oral repository structure leggedgym contains isaacgym environment config file leggedgymleggedgymenvsa1 contains training config file leggedgymleggedgymenvsbase contains environment implementation leggedgymleggedgymutilsterrain contains terrain generation code rslrl contains network module algorithm implementation copy folder directly robot rslrlrslrlalgorithms contains algorithm implementation rslrlrslrlmodules contains network module implementation training simulation install run code training a1 simulation please clone repository follow instruction leggedgymreadmemd hardware deployment todo trouble shooting cannot run distillation part graphic computing go gpudispite multiple gpus set cudavisibledevices please use docker isolate gpu done nov 2023 go1 training pipeline simulation a1 deployment code go1 deployment code citation find project helpful research please consider cite u really important u inproceedings zhuang2023robot titlerobot parkour learning authorziwen zhuang zipeng fu jianren wang christopher g atkeson soren schwertfeger chelsea finn hang zhao booktitleconference robot learning corl year2023,"[('parkour', 'learning'), ('zhuang', 'zipeng')]"
PRBonn/SHINE_mapping,Python,shinemapping largescale 3d mapping using sparse hierarchical implicit neural representation equal contribution incremental mapping reconstruction result table content abstract installation docker prepare data run evaluation tip citation contact acknowledgment abstract accurate mapping largescale environment essential building block outdoor autonomous system challenge traditional mapping method include balance memory consumption mapping accuracy paper address problem achieving largescale 3d reconstruction implicit representation using 3d lidar measurement learn store implicit feature octreebased hierarchical structure sparse extensible feature turned signed distance value shallow neural network leverage binary cross entropy loss optimize local feature 3d measurement supervision based implicit representation design incremental mapping system regularization tackle issue catastrophic forgetting continual learning experiment show 3d reconstruction accurate complete memoryefficient current stateoftheart 3d mapping method installation clone shine mapping repository git clone gitgithubcomprbonnshinemappinggit cd shinemapping set conda environment conda create name shine python37 conda activate shine install key requirement kaolin kaolin depends pytorch 18 1131 please install corresponding pytorch cuda version checked nvcc version find installation command example cuda version 116 use pip install torch1121cu116 torchvision0131cu116 torchaudio0121 extraindexurl kaolin support installation wheel example install kaolin 0120 torch 1121 cuda 116 pip install kaolin0120 f build kaolin click expand follow instruction install kaolin firstly clone kaolin local directory git clone recursive cd kaolin install kaolin python setuppy develop use python c import kaolin printkaolinversion check kaolin successfully installed install requirement pip install open3d scikitimage wandb tqdm natsort pyquaternion containerized installation note cuda version must 1162 compatible container install docker install nvidia container runtime clone shine mapping repository git clone gitgithubcomprbonnshinemappinggit cd shinemapping build container docker build tag shine run container example mkdir tmpshinetestdata docker run rm v pwdrepository v tmpshinetestdatadata gpus shine result produced tmpshinetestdataresults run container data docker run rm v repository v mydatadirdata gpus shine bash mydatadir directory host data format described configkittidockerkittibatchyaml inside container run described result found host mydatadirresults prepare data generally speaking need providepcpath folder containing point cloud bin ply pcd format frameposepath pose file txt containing transformation matrix frame calibpath calib file txt containing static transformation sensor body frame optional would identity matrix set follow kitti odometry data format preparing data need correctly set data path pcpath posepath calibpath config file config folder may also set path outputroot store experiment result log provide link several publicly available datasets testing shine mapping maicity synthetic lidar dataset download dataset use following script download 34gb sh scriptsdownloadmaicitysh kitti realworld lidar dataset download full dataset want use example part dataset seq 00 test use following script download 117 mb sh scriptsdownloadkittiexamplesh newer college realworld lidar dataset download full dataset want use example part dataset quad test use following script download 634 mb sh scriptsdownloadncdexamplesh rgbd datasets shine mapping also support mapping rgbd datasets may first try synthetic dataset neuralrgbd download full dataset use following script download 725 gb sh scriptsdownloadneuralrgbddatash downloading data need convert dataset kitti format using sequence sh scriptsconvertrgbdtokittiformatsh mapping without ground truth pose detail click expand method currently mappingwithknownpose system ground truth pose file may use lidar odometry system kissicp easily estimate pose simply install kissicp pip install kissicp run kissicp data path pcpath kissicppipeline estimated pose file found resultslatestvelodynetxt directly use posepath case need calib file set calibpath config file run take maicity dataset example show shine mapping work simply replace maicity dataset name config file path configdatasetdatasetxxxyaml result stored experiment name starting timestamp outputroot directory set config file find reconstructed mesh ply format optimized model mesh model folder respectively savemap option turned find grid sdf map map folder mapping based offline batch processing use python shinebatchpy configmaicitymaicitybatchyaml expected result click expand incremental mapping replay strategy within local bounding box use python shineincrepy configmaicitymaicityincrereplayyaml interactive visualizer would pop set o3dvison true default config file press space pause resume expected result click expand sake efficiency sacrifice bit mapping quality use 50cm leaf voxel size feature octree visualize mesh local bounding box faster operation set mclocal true mcwithoctree false config file incremental mapping regularization strategy use python shineincrepy configmaicitymaicityincreregyaml expected result click expand sake efficiency sacrifice bit mapping quality use 50cm leaf voxel size feature octree expected result datasets click expand kitti newer college apollo wild place forest ipb office replica icl living room log monitored via weight bias online turn wandbvison option first time use weight bias would requested register login wandb account evaluation evaluate reconstruction quality need provide reference ground truth point cloud reconstructed mesh ground truth point cloud found sampled downloaded folder maicity newer college neural rgbd datasets please change data path evaluation setup evalevaluatorpy run python evalevaluatorpy get reconstruction metric chamfer distance completeness fscore etc mentioned paper also compute fairer accuracy metric using ground truth point cloud masked intersection reconstructed mesh compared method generate masked ground truth point cloud configure data path evalcropintersectionpy run reproduce quantitative result maicity newer college dataset paper use config file configconfigicra2023 reconstructed mesh also downloaded note number obtained using batch mapping mode achieve similar result using incremental mapping mode replay strategy tip detail click expand play different loss function shine mapping rayloss false option loss would calculated sdf sample point case select sdfbce proposed method sdfl1 sdfl2 loss mainlosstype rayloss true option loss would calculated ray containing multiple point sample depth rendering procedure case select dr drneus mainlosstype according experiment using proposed sdfbce loss achieve best reconstruction efficiently get decent reconstruction scene several hundred frame one minute additionally use ekionallosson option turn onoff ekional loss use weighte weight feature octree built mainly according leafvoxsize treelevelworld treelevelfeat leafvoxsize represents size leaf voxel size meter treelevelworld treelevelfeat represent total tree level tree level latent feature code respectively treelevelworld large enough guarantee map data lie inside cube size leafvoxsizetreelevelworld1 shine mapping support offline batch mapping incremental sequential mapping incremental mapping one either load fixed pretrained decoder batching mapping similar dataset set loadmodel true train decoder freezeafterframe frame onthefly freeze afterwards set loadmodel false first option would lead better mapping performance use mcvislevel parameter tradeoff scene completion exact measurement accuracy parameter indicates level octree marching cube reconstruction would conducted larger value mcvislevel larger treelevelfeat scene completion ability would gain also artifact double wall may appear small value shine mapping would reconstruct part actual measurement without filling hole safest way avoid hole ground set mcmaskon false disable masking marching cube turning mcwithoctree option achieve faster marching cube reconstruction region within octree node incremental mapping regularization strategy setting continuallearningreg true achieve incremental neural mapping without storing evergrowing data pool would burden memory coefficient lambdaforget need finetuned different feature octree point sampling setting recommended value 1e5 1e8 pretrained decoder also recommended loaded incremental mapping regularization better performance also provide option conduct incremental mapping replay strategy local sliding window turn setting windowreplayon true valid windowradiusm indicating size sliding window also possible incorporate semantic information shinemapping framework may set semanticon true utilsconfigpy file enable semantic mapping also provide semantic supervision setting labelpath config file label semantic kitti format example semantic reconstruction result using semantic kitti downloaded citation use shine mapping academic work please cite original paper inproceedingszhong2023icra titleshinemapping largescale 3d mapping using sparse hierarchical implicit neural representation authorzhong xingguang pan yue behley jens stachniss cyrill booktitle proceeding ieee international conference robotics automation icra year2023 contact question please contact xingguang zhong zhongiggunibonnde yue pan yuepaniggunibonnde acknowledgment work ha partially funded european union horizon programme grant agreement 101070405 digiforest grant agreement 101017008 harmony additionally thank greatly author following opensource project nglod octree based hierarchical feature structure built based kaolin vdbfusion comparison baseline voxblox comparison baseline puma comparison baseline maicity dataset kissicp simple yet effective pose estimation,"[('incremental', 'mapping'), ('shine', 'mapping')]"
udacity/robot_pose_ekf,C++,udacity robotics nanodegree program robotposeekf package robotposeekf package applies sensor fusion robot imu odometry value estimate 3d pose node package contains single node robotposeekf implement extended kalman filter subscribes robot measurement publishes filtered 3d pose script file wtfpy subscriber odom imudata vo publisher robotposeekfodomcombined step launch node step1 install package sh cd homeworkspacecatkinwssrc git clone step2 edit robotposeekflaunch file html step3 build package cd homeworkspacecatkinws catkinmake source develsetupbash step4 launch node roslaunch robotposeekf robotposeekflaunch,"[('robotposeekf', 'package'), ('3d', 'pose')]"
RoboStack/jupyter-ros,Python,support jupyter notebook jupyter ecosystem ha widely adopted data science machine learning community robotics community ha jumped band wagon yet tool around robot operating system built using python qt however using qt separate user away code built set tool jupyter notebook trying promote rich interactive experience robotics developer utilizing power jupyter notebook video jupyterros jupyterlab jupyterros possible easily create widget custom message type send message find package useful hesitate contribute also always reach wvollprechtgmailcom twitter join u gitter installation dependency need environment rospy recommend using robostack follow installation instruction allows install conda environment also required numpy bqplot liveplotting ipywidgets interactive widget ipycanvas turtlesim animation conda install jupyter bqplot pyyaml ipywidgets ipycanvas pyyaml necessary rospy install use conda mamba conda install jupyterros c robostack development installation create dev environment bash conda create n jupyros c condaforge python nodejs14 jupyterlab3 jupyter bqplot pyyaml ipywidgets ipycanvas development installation requires npm git clone cd jupyterros pip install e jupyter nbextension install py symlink sysprefix jupyros jupyter nbextension enable py sysprefix jupyros update defaultsjs javascript need run python jupyrosros3dpy troubleshooting might see warning like rospy package found pythonpath subscribe publish going work need activate environment harmless installation see warning notebook check environment activated also set path inside notebook using import sys syspathappend optrosmelodiclibpython27distpackages next line work import jupyros got following error run cell failed display jupyter widget type vbox solve running following command jupyter nbextension enable py sysprefix widgetsnbextension license use shared copyright model enables contributor maintain copyright contribution software licensed bsd3clause license see license file detail,"[('jupyter', 'notebook'), ('jupyter', 'nbextension')]"
nicrusso7/rex-gym,Python,rex opensource quadruped robot goal project train opensource 3d printed quadruped robot exploring reinforcement learning openai gym aim let robot learns domestic generic task simulation successfully transfer knowledge control policy real robot without manual tuning project mostly inspired incredible work done boston dynamic related repository rexctl cli application bootstrap control rex robot running trained control policy rexmodels web urdf visualizer collection rex robot model rexgym openai gym environment tool repository contains collection openai gym environment used train rex rex urdf model learning agent implementation ppo script start training session visualise learned control police cli application allows batch training policy reproduction single training rendered session installation create python 37 virtual environment eg using anaconda conda create n rex python37 anaconda conda activate rex pypi package install public rexgym package pip install rexgym install source clone repository run root project pip install cli usage run rexgym help display available command rexgym commandname help show help message specific command use arg flag eventually set simulation argument full list check environment parameter switch open loop bezier controller inverse kinematics mode append either openloop inversekinematics flag rexgym commandname ik rexgym commandname ol info mode check learning approach policy player run pretrained agent start pretrained agent play learned control policy rexgym policy env envname train run single training simulation start single agent rendered session agents1 rendertrue rexgym train playground true env envname logdir logdirpath train start new batch training simulation start new batch training session rexgym train env envname logdir logdirpath robot platform markthe robot used first version spotmicro made deokyeon kim printed component using creality ender3 3d printer pla tpu hardware used listed wiki idea extend robot adding component like robotic arm top rack lidar sensor next version alongside fixing design issue support better easier calibration reliable servo motor simulation model base model rex 12 joint robot withmotors shoulder leg foot leg robot base model imported pybullet using urdf file servo motor modelled modelmotorpy class robotic arm arm model ha open source 6dof robotic arm poppy ergo jr equipped top rack switch base arm model use mark flag learning approach library us proximal policy optimization ppo algorithm hybrid policy defined varied continuously fully userspecified entirely learned scratch want use userspecified policy set lower upper bound zero want policy learned scratch set atand give feedback component wide output range varying open loop signal output bound feedback component decide much user control applied system twofold approach used implement rex gym environment bezier controller open loop bezier controller implement fully userspecified policy controller us inverse kinematics model see modelkinematicspy generate gait open loop mode consists case let system lean scratch setting open loop component atwhile others providing simple trajectory reference eg sint purpose compare learned policy score using two different approach task list task experiment want cover basic control static pose frame point standing spot x bezier controller open loop signal gallop forward x bezier controller x open loop signal backward bezier controller open loop signal walk forward x bezier controller x open loop signal backward x bezier controller open loop signal turn spot x bezier controller x open loop signal stand floor bezier controller x open loop signal navigate uneven terrain x random heightfield hill mount maze stair open door grab object fall recovery reach specific point map map open space terrain set specific terrain use terrain flag default terrain standard plane feature quite useful test policy robustness random heightfield use terrain random flag generate random heighfield pattern pattern updated every reset step hill use terrain hill flag generate uneven terrain mount use terrain mount flag generate scenario maze use terrain maze flag generate scenario environment basic control static pose goal move rex base assume static pose standing spot inverse kinematic gym environment used learn gracefully assume pose avoiding fast transaction us onedimensional action space feedback component bound 01 01 feedback applied sigmoid function orchestrate movement playground flag used possible use pybullet ui manually set specific pose altering robot base position xyz orientation roll pitch jaw basic control gallop goal gallop straight stop desired position order make learning robust rex target position randomly chosen every reset step bezier controller gym environment used learn gracefully start gait stop reaching target position x axis us twodimensional action space feedback component bound 03 03 feedback component applied two ramp function used orchestrate gait correct start contributes void drift effect generated gait resulted learned policy open loop signal gym environment used let system learn gait scratch action space hasdimensions two front leg foot two rear leg foot feedback component output bound 03 03 basic control walk goal walk straight stop desired position order make learning robust rex target position randomly chosen every reset step bezier controller gym environment used learn gracefully start gait stop reaching target position x axis us twodimensional action space feedback component bound 04 04 feedback component applied two ramp function used orchestrate gait correct start contributes void drift effect generated gait resulted learned policy forward backwards open loop signal gym environment us sinusoidal trajectory reference alternate rex leg gait legt 01 cos2tt foott 02 cos2tt feedback component ha small bound 001 001 ramp function used start stop gait gracefully basic control turn spot goal reach target orientation turning spot order make learning robust rex start orientation target randomly chosen every reset step bezier controller gym environment used optimise steplength steprotation argument used gaitplanner implement steer gait us twodimensional action space feedback component bound 005 005 open loop environment used learn steeronthespot gait allowing rex moving towards specific orientation us twodimensional action space small feedback component bound 005 005 optimise shoulder foot angle gait basic control stand goal stand starting standby position environment introduces restpostion ideally position assumed rex standby open loop action space equal towith feedback component bound 01 01 used optimise signal timing signal function applies brake forcing rex assume halfway position completing movement environment parameter environment env flag arg flag galloping gallop targetposition walking walk targetposition turn turn initorient targetorient stand standup na arg description initorient starting orientation rad targetorient target orientation rad targetposition target position x axis flag description logdir path log directory created required playground boolean start single training rendered session agentsnumber set number parallel agent ppo agent configuration may want edit ppo agent default configuration especially number parallel agent launched simulation use agentsnumber flag eg agentsnumber 10 configuration launch 10 agent thread parallel train model default value setup agentsscriptsconfigspy script def default default configuration ppo general numagents 20 credit paper simtoreal learning agile locomotion quadruped robot related paper google brain google x google deepmind minitaur ghost robotics inverse kinematic analysis quadruped robot leg trajectory planning quadruped robot highspeed trot gait robot platform v1 deokyeon kim creator spotmini awesome poppy project spotmicro cad file spotmicroai community inspiring project kinematics model wa inspired great work done miguel ayuso,"[('open', 'loop'), ('bezier', 'controller')]"
jimmyyhwu/tidybot,Python,tidybot code release accompanies following project tidybot personalized robot assistance large language model jimmy wu rika antonova adam kan marion lepert andy zeng shuran song jeannette bohg szymon rusinkiewicz thomas funkhouser autonomous robot auro special issue large language model robotics 2023 ieeersj international conference intelligent robot system iros 2023 project page pdf arxiv video abstract robot personalize physical assistance effectively must learn user preference generally reapplied future scenario work investigate personalization household cleanup robot tidy room picking object putting away key challenge determining proper place put object people preference vary greatly depending personal taste cultural background instance one person may prefer storing shirt drawer another may prefer shelf aim build system learn preference handful example via prior interaction particular person show robot combine languagebased planning perception fewshot summarization capability large language model llm infer generalized user preference broadly applicable future interaction approach enables fast adaptation achieves 912 accuracy unseen object benchmark dataset also demonstrate approach realworld mobile manipulator called tidybot successfully put away 850 object realworld test scenario overview overview codebase organized server server code tidybot run gpu workstation robot robot code tidybot run mobile base computer stl file 3d printed part benchmark code benchmark dataset setup recommend using conda environment setup tested ubuntu 20046 lts us followingenvironments tidybot env server general use tidybot env robot general use vild env server object detection see respective readmes inside server robot directory detailed setup instruction tidybot quickstart unless otherwise specified tidybot conda env always used bash conda activate tidybot teleoperation mode provide teleoperation interface teleoppy operate robot using primitive pick place toss first run command start teleop interface server workstation robotnum is2 ordepending robot controlled bash python teleoppy robotnum robotnum robot mobile base computer make sure convenience stop mobile base driver running run command start controller bash python controllerpy server robot show successfully connected use control teleop robot click overhead image select waypoints press enter execute selected waypoints robot press esc clear selected waypoints stop robot pressthroughto change selected primitive press q quit necessary use convenience stop kill controller necessary use estop cut power robot mobile base computer stay note keypresses registering make sure teleop interface active window default primitive indexis movementonly arm use arm need change selected primitive something else check terminal output see list primitive well currently selected primitive generate path occupancy map rather manually clicking waypoints use shortestpath flag bash python teleoppy robotnum robotnum shortestpath load receptacle specified scenariostestyml obstacle build occupancy map avoid running additional debugging visualization debug flag used server bash python teleoppy robotnum robotnum debug robot bash python controllerpy debug fully autonomous mode operate robot fully autonomous mode use demo interface demopy default demo load test scenario scenariostestyml along corresponding llmsummarized user preference preferencestestyml start demo server first start object detector server vild conda env bash conda activate vild python objectdetectorserverpy separate terminal start demo interface tidybot env bash python demopy robotnum robotnum robot make sure convenience stop mobile base driver running run command start controller bash python controllerpy control used run demo press enter start robot press esc stop robot time pressto enter supervised mode default mode robot wait human approval via enter keypress executing every command pressto enter autonomous mode robot start executing command whenever enter pressed stop moving whenever esc pressed press q quit necessary use convenience stop kill controller necessary use estop cut power robot mobile base computer stay note keypresses registering make sure demo interface active window load different scenario default test use scenarioname argument bash python demopy robotnum robotnum scenarioname scenarioname example load scenario08 use robotyou run bash python demopy robotnumscenarioname scenario08 additional debugging visualization debug flag used server bash python demopy robotnum robotnum debug robot bash python controllerpy debug troubleshooting mobile base accuracy marker detection setup output 2d robot pose estimate centimeterlevel accuracy instance setup reliably pick small lego duplo block 32 mm x 32 mm floor inaccurate marker detection due many reason inaccurate camera alignment suboptimal camera setting eg exposure gain see getvideocap utilspy also note mobile base motor calibrated motorcaltxt accurate movement arm accuracy thekinova arm repeatable slightly different zero heading position require compensation consistent see armdependent heading compensation controllerpy server port multiple people using server may run error oserror errno 98 address already use kill process using occupied port use clearportssh script requires sudo bash clearportssh reference port used codebase 6000 camera server top camera 6001 camera server bottom camera 6002 marker detector server 6003 object detector server 6004 robotcontroller server 6005 robotcontroller server 6006 robotcontroller server 6007 robotcontrol 6008 robotcontrol 6009 robotcontrol 6010 robotcamera 6011 robotcamera 6012 robotcamera camera error overhead camera may occasionally output error warn161367080 global ioopencvmodulesvideoiosrccapv4lcpp 1013 tryioctl videoiov4l2devv4lbyidusb046dlogitechwebcamc930ee4298f4evideoindex0 select timeout warn162049229 global ioopencvmodulesvideoiosrccapv4lcpp 1013 tryioctl videoiov4l2devv4lbyidusb046dlogitechwebcamc930e099a11eevideoindex0 select timeout corrupt jpeg data 36 extraneous byte marker 0xd9 corrupt jpeg data premature end data segment typically error resolved unplugging camera plugging back sure also check quality length usb extension cable usb 20 doe support cable length longer thanmeters citation find work useful research please consider citing articlewu2023tidybot title tidybot personalized robot assistance large language model author wu jimmy antonova rika kan adam lepert marion zeng andy song shuran bohg jeannette rusinkiewicz szymon funkhouser thomas journal autonomous robot year 2023,"[('bash', 'python'), ('mobile', 'base')]"
meganetaaan/stack-chan,Other,stackchan build stackchan firmware stackchan javascriptdriven m5stackembedded superkawaii robot video english subtitle official hashtag stackchan jp feature neutralface show cute face smile expressionhappy angry sad etc smileycat customize face eye glancestaregaze speechballoon say thing bulb addon m5units cyclone drive serialttlpwm servo gamedie make application content repository includes component robot firmware source code firmware case stereolithographystl case schematic schematic board layout data installation assemble board see schematicsreadmemd casereadmemd get preassembled modulecoming soon flash firmware m5stack see firmwarereadmemd contribution feature requestsbug report extremely welcome see issue page post wanna sponsor would great honor please visit sponsor page license resource repository distributed apache version 20 license see license,"[('stackchan', 'build'), ('build', 'stackchan')]"
SteveMacenski/jetson_nano_detection_and_tracking,Python,jetsonnanodetectionandtracking jetson nano ml install script automated optimization robotics detection model filterbased tracking detection motivation installing setting new nvidia jetson nano wa surprisingly time consuming unintuitive protobuf version conflict tensorflow version opencv recompiling gpu model running model optimized general chaos rank repository set install tool get nano running convincing scalable demo robotcentric us particular using detection semantic segmentation model capable running realtime robot 100 convincing mean using nvidia 2day startup model compile magically working without control give full control model run repository find key thing install dependency getting right version tensorflow protobufs etc everyone play well jetson nano platform wa big hassle hopefully help accomplished via installsh run root repository model going installed linked download pretrained model realtime detection script automatically download pretrained tensorflow inference graph checkpoint optimize tensorrt found critical musthave even run nano also nothing prohibits using tensorflow model using script optimize tensorrt deploy described retrained model zoo followed instruction equal success really needed additional glass beer class reason execution live detection attached mipibased camera run argus streamer mipi camera compatible jetson nano number available happen use raspberry pi v21 camera simply around another project also shockingly high resolution 20 toy filterbased tracking detection us constant velocity kalman filter track detection image frame report stabilized detection based centroid handlethings first deal irregular detection missing frame make upstream application think person disppeared thin air 57 secondarily act smoother individual frame detect irraneous thing like airplane rather ear single frame detection introduced system robotics application would pretty bad saw airplane living room walkthrough jetsonliveobjectdetectionpy main live object detection program take flag run debug mode printed statement detection found visualization visualization include bounding box around object line thickness proportional confidence example use run ssd mobilenet v1 trt optimized model debug mode python3 jetsonliveobjectdetectionpy ssdmobilenetv1trtgraphpb true tfdownloadandtrtmodelpy pretrained model savior able download pretrained model unoptimized zoo placed data directory along side coco label download run tensorrt optimization leave file named modeltrtgraphpb use example use tfdownloadandtrtmodelpy model model option include ssdmobilenetv1coco ssdmobilenetv2coco ssdinceptionv2coco model available considering usecase project realtime detection robotics main valid option make warranty model us,"[('jetson', 'nano'), ('download', 'pretrained')]"
robotlearn/pyrobolearn,Python,pyrobolearn repository contains code pyrobolearn prl framework python framework robot learning framework revolves mainly aroundaxes simulator world robot interface learning task environment policy learning model learning algorithm warning development framework ongoing thus substantial change might occur sorry inconvenience requirement framework ha tested python 27 35 36 ubuntu 1604 1804 installation experimental installation two way install framework using virtual environment pip using docker virtualenv pip first download pip python package manager create virtual environment python described following link ubuntu install pip virtualenv typing terminal python 27 codeblock bash sudo apt install pythonpip sudo pip install virtualenv python 35 codeblock bash sudo apt install python3pip sudo pip install virtualenv create virtual environment typing codeblock bash virtualenv p usrbinpythonversion virtualenvname activate virtual environment source virtualenvnamebinactivate version python version want use select 27 35 virtualenvname name choice virtual environment instance py27 py35 deactivate virtual environment type codeblock bash deactivate clone repository install requirement executing setuppy python 27 codeblock bash git clone cd pyrobolearn pip install numpy cython pip install python 27 pip install e install pyrobolearn well required package need pip install r requirementstxt python 35 codeblock bash git clone cd pyrobolearn pip install numpy cython pip install gpytorch python 35 pip install e install pyrobolearn well required package need pip install r requirementstxt depending computer configuration python version use might need install also following package aptget codeblock bash sudo apt install pythontk python 27 sudo apt install python3tk python 35 docker moment docker self contained ubuntu image library installed launched access python36 interpreter import pyrobolearn directly future may splitted another container linked one install docker nvidiadocker codeblock bash sudo aptget update sudo apt install apttransport cacertificates curl softwarepropertiescommon curl fssl sudo aptkey add sudo addaptrepository deb archamd64 bionic stable replace bionic version sudo apt update sudo apt install dockerce sudo systemctl status docker check docker active build image codeblock bash docker build pyrobolearn launch start python interpreter every library already installed codeblock bash docker run p 1131111311 v pwddevpyrobolearndevrw ti pyrobolearn python3 open interactive terminal docker image use codeblock bash docker run p 1131111311 v pwddevpyrobolearndevrw ti pyrobolearn binbash nvidiadocker gpu recognized interpreter install nvidiadocker codeblock bash curl sl sudo aptkey add distribution etcosreleaseecho idversionid curl sl sudo tee etcaptsourceslistdnvidiadockerlist sudo aptget update sudo aptget install nvidiadocker2 sudo pkill sighup dockerd use codeblock bash nvidiadocker run p 1131111311 v pwddevpyrobolearndevrw ti pyrobolearn operating system note interface like game controller depth camera etc might available however main robotic framework work window install first pybullet nlopt beforehand nlopt install first conda type codeblock bash conda install c condaforge nlopt pybullet install window using visual studio might copy rcexe rcdll cprogram file x86windows kits10binxxxxxxxxx64 cprogram file x86windows kits10binx86 add last folder window environment path go system property advanced environment variable path edit finally remove nlopt package requirementstxt rest installation straightforward mac osx managed install pyrobolearn framework macosx mojave following procedure explained section virtualenv pip replace sudo apt install brew install installing homebrew use check readmerst file example folder license pyrobolearn currently released gnu gplv3 license citation cite repository please refer citationrst file use specific learning model algorithm robot controller please cite corresponding paper reference usually found class documentation end sometimes readme file corresponding folder acknowledgement currently mainly use pybullet simulator pybullet python module physic simulation game robotics machine learning erwin coumans yunfei bai 20162019 reference robot model others found corresponding class documentation locomotion controller provided songyan xin thanks daniele bonatto providing docker file test installation window,"[('codeblock', 'bash'), ('pip', 'install')]"
UniversalRobots/Universal_Robots_ROS2_Driver,C++,universal robot ros2 driver universal robot ha become dominant supplier lightweight robotic manipulator industry well scientific research education one first ros2 manipulator driver new feature enabled ros2 include decreased latency improved security flexibility regarding middleware configuration package contains launch file quickly get started using driver standalone version combination moveit2 driver developed top universalrobotsclientlibrary support key cobot functionality like pause emergency stop safeguard stop automatic speed scaling avoid violate safety setting manually speed scaling teach pendant addition externalcontrol urcap make possible include ros2 behavior robot program driver compatible across entire line ur robot fromkg payload 16 kg payload includes cb3 eseries check also presentation video driver release status ros2 distro foxy eol galactic eol humble iron rolling branch table show build status package repo buildfarm endoflife eol distribution nightly binary build ci shown eol distribution receive update may lacking feature detailed build status show state ci workflow inside repo please note detailed view intended developer one give end user overview current released state package repository ur metapackage provides single point installation released package urcalibration tool extracting calibration information real robot urcontrollers implementation controller specific ur robot urdashboardmsgs package defining message used dashboard node urmoveitconfig example moveit configuration ur robot urrobotdriver driver hardware interface communication ur robot getting started getting started basically need three step install driver see either install driver binary package build source recommend binary package installation unless want join development submit change start setup robot installed driver setup robot create program external control please step carefully extract calibration explained otherwise tcp pose correct inside ecosystem real robot required use simulated robot behave almost exactly like real robot start driver see usage documentation detail unless started headless mode run externalcontrol program pressing play teach pendant install binary package install ros2 branch support ros2 rolling ros2 version please see respective branch install driver using sudo aptget install rosrosdistrour build source building source please make sure actually need building source might require special treatment especially come dependency management dependency might change time time upstream package library might change feature api require change repo therefore repo source build might require upstream repository present certain version otherwise build might fail starting scratch following exactly step always work simply pulling building might fail occasionally install ros2 branch support ros2 rolling ros2 version please see respective branch installed please make sure actually source ros2 proceeding make sure colcon extension vcs installed sudo apt install python3colconcommonextensions python3vcstool create new ros2 workspace export colconwsworkspacerosurdriver mkdir p colconwssrc clone relevant package install dependency compile source workspace using cd colconws git clone srcuniversalrobotsros2driver vcs import src skipexisting input srcuniversalrobotsros2driveruniversalrobotsros2drivernotreleasedrosdistrorepos rosdep update rosdep install ignoresrc frompaths src colcon build cmakeargs dcmakebuildtyperelease source installsetupbash consecutive pull lead build error possible build upstream package source well see detailed build status binary build red semibinary build green need build upstream dependency source easiest way achieve using repos file cd colconws vcs import src skipexisting input srcuniversalrobotsros2driveruniversalrobotsros2driverrosdistrorepos rosdep update rosdep install ignoresrc frompaths src moveit support moveit support builtin driver already watch moveit action universal robot ros2 driver video moveit2 demo video show freespace trajectory planning around modeled collision scene object using moveit2 motionplanning widget rviz2 see moveit section usage guide detail expected change near future trajectory control currently support position command future velocity control added contributor guideline code autoformatted clangformat 14 whenever git commit made please ensure dependency installed pip3 install precommit sudo apt install clangformat14 prepare precommit formatting run like precommit install,"[('ur', 'robot'), ('universal', 'robot')]"
at-wat/mcl_3dl,C++,mcl3dl build status codecov license package summary mcl3dl node perform probabilistic 3d6dof localization system mobile robot 3d lidar implement pointcloud based monte carlo localization us reference pointcloud map node receives reference pointcloud environment map localizes 6dof x z yaw pitch roll pose measured pointclouds assisted motion prediction using odometry currently supported motion model differentialwheeledrobot node provides classic mcl currently implement adaptive feature like kdlsampling etc algorithm fundamental algorithm mcl3dl node monte carlo localization mcl aka particle filter localization mcl represents probabilistic distribution estimated pose density weight particle estimate pose distribution algorithm detail parameter node io install source note mcl3dlmsgs package required build mcl3dl package shell clone cd pathtoyourcatkinwssrc git clone git clone build cd pathtoyourcatkinws rosdep install frompaths src ignoresrc install dependency catkinmake dcmakebuildtyperelease release build recommended apt repository indigokineticlunar ubuntu sudo aptget install rosrosdistromcl3dl running demo example bag file 24dof tracked vehicle two hokuyo yvtx002 3d lidar available online preprocessed filtered 3d pointcloud imu pose odometry map data packed bag shell download example bag 230m wget p downloads running demo roslaunch mcl3dl testlaunch usepointcloudmapfalse usecadmapfalse usebagfiletrue bagfilehomedownloadsshorttest3bag map data bag wa generated using cartographerros filtered using pcloutlierremoval pclvoxelgrid utility rviz image demo markerarray show several mcl3dl internal information purple sphere sampled point used likelihoodmodel calculation red line casted ray beammodel calculation red box detected collision raycasting try global localization call globallocalization following command shell rosservice call globallocalization demo without odometry without imu also available contributing mcl3dl package developed github flow feel free open new issue andor pull request code repository following c style guide configuration file clangformat available license mcl3dl provided bsd license backport code point cloud library pcl provided bsd license,"[('mcl3dl', 'node'), ('3d', 'lidar')]"
leggedrobotics/free_gait,C++,free gait architecture versatile control legged robot notice software supported anymore author software changed affiliation work project anymore please excuse inconvenience might cause interested working anymal robot please reach anybotics free gait application free gait software framework versatile robust taskoriented control legged robot free gait interface defines wholebody abstraction layer accommodate variety taskspace control command end effector joint base motion defined motion task tracked feedback wholebody controller ensure accurate robust motion execution even slip external disturbance application framework includes intuitive teleoperation robot efficient scripting behavior fully autonomous operation motion footstep planner source code released bsd 3clause license author peter fankhauser contribution samuel bachmann dario bellicoso thomas bi remo diethelm christian gehring projected wa initially developed rsl eth zurich build status publication use work academic context please cite following publication p fankhauser bellicoso c gehring r dube gawel hutter free gait architecture versatile control legged robot ieeeras international conference humanoid robot 2016 pdfinproceedingsfankhauser2016freegait author fankhauser p eter bellicoso c dario gehring christian dub e renaud gawel abel hutter marco booktitle ieeeras international conference humanoid robot title free gait architecture versatile control legged robot year 2016 unit test catkin build freegaitcore nodeps verbose catkinmakeargs runtests overview video show application free gait motion based combination possibly multiple leg motion base motion per command step command structure allows control legged robot various way motion goal commanded free gait api wholebody motion controller usage video present overview tool provided free gait free gait action free gait action library script define motion using free gait api action write language client library using message action definition freegaitmsgs c free gait provides freegaitcore library work motion definition freegaitros interfacing work python use freegaitpython library simple motion definition free gait support action defined yaml format information using yaml action refer yaml scripting interface free gait command expressed combination leg joint endeffector cartesian space base motion definition position velocity andor forcetorque target trajectory target trajectory automatic leg motion joint space jointtarget jointtrajectory legmode leg motion cartesian space endeffectortarget endeffectortrajectory footstep base motion basetarget basetrajectory baseauto free gait action either launched manually help freegaitactionloader free gait action loader freegaitactionloader allows launch action service action currently action loader support yaml motion definition python script starting launch file c library run freegaitactionloader rosrun freegaitactionloader actionloaderpy freegaitactionloader manages action make sure one action running time register action freegaitactionloader one ha load action plugin rqt free gait action href alignright src rqtfreegaitaction package provides rqt user interface freegaitactionloader interface show action organized collection allows preview send action additionally collection run sequence action rightclick collection selected favorite favorite shown button top quick access rqt free gait monitor href alignright src action executed free gait action server rqtfreegaitmonitor show progress execution allows pause stop active action free gait rviz plugin href alignright src action previewed freegaitrvizplugin take current state robot visualizes motion based defined action rviz plugin allows scrub time visualize foothold trajectory support polygon etc yaml scripting interface href alignright src simple motion sequence free gait action defined sequence yaml definition example action lift rightfore leg robot adaptcoordinates transform sourceframe footprint targetframe odom step step baseauto step baseauto endeffectortarget name rfleg ignorecontact true targetposition frame footprint position 039 022 020 adaptcoordinates command transforms motion defined sourceframe targetframe faq action found free gait action foundloaded service call return empty rosservice call freegaitactionloaderlistactions collectionid case try initializing rosdep sudo rosdep init rosdep update yaml,"[('free', 'gait'), ('gait', 'action')]"
htnanako/movie-robot-public,Other,movierobotpublic movierobot,"[('movierobotpublic', 'movierobot')]"
robotology/gym-ignition,C++,gymignition warning project longer actively maintained development ha stalled indepth description current status actionable step revive development please consult robotologygymignition430url pendulum panda pendulum description gymignition framework create reproducible robotics environment reinforcement learning research based scenario project provides lowlevel apis interface ignition gazebo simulator default rl environment share lot boilerplate code eg initializing simulator structuring class expose gymenv interface gymignition provides task runtime abstraction help focusing development decisionmaking logic rather engineering includes randomizers simplify implementation domain randomization model physic task gymignition also provides powerful dynamic algorithm compatible fixedbase floatingbased robot exploiting robotologyidyntree exposing highlevel functionality gymignition doe provide outofthebox environment ready used rather aim simplifying streamlining development nonetheless illustrative purpose includes canonical example gymignitionenvironments package visit websitewebsite information project website installation first follow installation instruction scenario pip install gymignition preferably virtual environment contributing visit community forum hosted github discussion pull request welcome major change please open discussion first propose would like change citation bibtex inproceedingsferigo2020gymignition titlegymignition reproducible robotic simulation reinforcement learning authord ferigo traversaro g metta pucci booktitle2020 ieeesice international symposium system integration sii year2020 pages885890 doi101109sii4643320209025951 license lgpl v21 later version disclaimer gymignition independent project related mean openai open robotics,"[('reinforcement', 'learning'), ('gymignition', 'warning')]"
dongjing3309/minisam,C++,minisam website minisam opensource cpython framework solving factor graph based least square problem apis implementation minisam heavily inspired influenced gtsam famous factor graph framework minisam much lightweight framework full pythonnumpy api enables agile development easy binding existing python project wide list sparse linear solver including cuda enabled sparse linear solver minisam developed jing dong zhaoyang lv work wa initially started final project math 6644 back 2017 mostly finished parttime author phd student college computing georgia institute technology mandatory prerequisite cmake 34 ubuntu sudo aptget install cmake compilation configuration tool eigen 330 ubuntu sudo aptget install libeigen3dev c template library linear algebra optional dependency sophus c implementation lie group using eigen minisam us sophus slammultiview geometry functionality python 2734 use minisam python package suitesparse ubuntu sudo aptget install libsuitesparsedev suite sparse matrix algorithm minisam ha option use cholmod spqr sparse linear solver cuda 90 minisam ha option use cusolver cholesky sparse linear solver get started please refer detail get compile library ubuntu linux git clone recursesubmodules mkdir build cd build cmake make make check optional run unit test tested compatibility minisam library designed crossplatform compatible modern compiler support c11 ha tested ubuntu linux window ubuntu gcc 54 clang 38 window visual c 20153 question bug reporting please use github issue tracker general question reporting bug submitting issue please look page citing use minisam academic context please cite following publication articledong19ppniv author jing dong zhaoyang lv title minisam flexible factor graph nonlinear least square optimization framework journal corr volume abs190900903 year 2019 url license minisam released bsd license reproduced file license directory note linked sparse linear solver different license see page detail,"[('sparse', 'linear'), ('linear', 'solver')]"
gtrll/gpmp2,C++,note version compatible latest gtsam maintained borglabgpmp2 gpmp2 library implementation gpmp2 gaussian process motion planneralgorithm described motion planning probabilistic inference using gaussian process factor graph r 2016 core library developed c language optional python 27 toolbox gpmp2 wa started georgia tech robot learning lab see thanks contributor prerequisite cmake 30 ubuntu sudo aptget install cmake compilation configuration tool boost 150 ubuntu sudo aptget install libboostalldev portable c source library anaconda2 virtual environment needed installing python toolbox gtsam wrapexport c library implement smoothing mapping sam framework robotics vision use factor graph implementation inferenceoptimization tool provided gtsam installation c install gtsam bash git clone cd gtsam git checkout wrapexport mkdir build cd build cmake make check optional run unit test sudo make install setup path bash echo export ldlibrarypathusrlocallibldlibrarypath bashrc echo export ldlibrarypathusrlocalshareldlibrarypath bashrc source bashrc install gpmp2 bash git clone cd gpmp2 mkdir build cd build cmake make check optional run unit test sudo make install installation c python toolbox setup virtual environment bash conda create n gpmp2 pip python27 conda activate gpmp2 pip install cython numpy scipy matplotlib conda deactivate install gtsam bash conda activate gpmp2 git clone cd gtsam git checkout wrapexport mkdir build cd build cmake dgtsaminstallcythontoolboxon make check optional run unit test sudo make install conda deactivate setup path bash echo export ldlibrarypathusrlocallibldlibrarypath bashrc echo export ldlibrarypathusrlocalshareldlibrarypath bashrc echo export pythonpathusrlocalcythonpythonpath bashrc source bashrc install gpmp2 bash conda activate gpmp2 git clone cd gpmp2 mkdir build cd build cmake dgpmp2buildpythontoolboxon make check optional run unit test sudo make install cd gpmp2python pip install e conda deactivate citing use gpmp2 academic context please cite following publication inproceedingsmukadamijrr18 author mustafa mukadam jing dong xinyan yan frank dellaert byron boot title continuoustime gaussian process motion planning via probabilistic inference journal international journal robotics research ijrr volume 37 number 11 page 13191340 year 2018 inproceedingsdongrss16 author jing dong mustafa mukadam frank dellaert byron boot title motion planning probabilistic inference using gaussian process factor graph booktitle proceeding robotics science system r year 2016 inproceedingsdong2018sparse titlesparse gaussian process matrix lie group unified framework optimizing continuoustime trajectory authordong jing mukadam mustafa boot byron dellaert frank booktitle2018 ieee international conference robotics automation icra pages64976504 year2018 organizationieee license gpmp2 released bsd license reproduced license,"[('gaussian', 'process'), ('echo', 'export')]"
saucepleez/taskt,Other,taskt taskt formerly sharprpa first truly free easy use opensource process automation client built net framework c taskt allows build design process automation without needing write application code license open source love svg1 branch build status master build status developmentbranch build status tasktmainscreen click configure done taskt allows automate boring stuff create efficienies giving power craft digital workforce executes performs rulebased automation api problem included see get bot designer dozen automation command element recorder screen recorder also included record replay scripted automation recorder configuring task taskt taskt perform automation web desktop application simulating action person would swivelchair data entry report generation taskt handle automation need prefer write implement code taskt use existing net dlls service additionally ability compile code fly using custom code command taskt start stop process launch vb powershell script work directly excel workbook perform ocr onenote installation required among many function review automation command clicking tasktserver get started find download latest signed release clicking extract folder doubleclick tasktexe taskt ask want create script folder store script well copy deploy sample file also build directly source take latest master branch doe taskt cost taskt free personal commercial use taskt licensed apache 20 license see licensemd detail communitydriven project goal taskt give everyone big small ability build deploy process automation let u know think feel free open feature request report bugissue system specification please note whatever software taskt automating affect minimum software requirement minimum window 78110server 2012server 2016 1gb ram 200mb disk spacevcpu net framework 48 recommended window 10server 2012server 2016server 2019 4gb ram 1gb disk spacecpu net framework 48 open new issue chat gitter,"[('process', 'automation'), ('net', 'framework')]"
eProsima/Fast-DDS,C++,contact u supported rosin rosindustrial qualityassured robot software component information project ha received funding european union horizon 2020 research innovation programme grant agreement 732287,"[('contact', 'u'), ('u', 'supported')]"
mikeroyal/Photogrammetry-Guide,Python,img src br r learning resource r open source software environment statistical computing graphic compiles run wide variety platform window macos introduction r google r style guide r developer guide azure running r scale google compute engine running r aws rstudio server pro aws learn r codecademy learn r programming online course lesson edx r language course coursera learn r data science udacity r tool library framework rstudio integrated development environment r python console syntaxhighlighting editor support direct code execution tool plotting history debugging workspace management shiny newer package rstudio make incredibly easy build interactive web application r rmarkdown package help create dynamic analysis document combine code rendered output figure prose rplugin r language supported plugin intellij ide plotly r package creating interactive web graphic via open source javascript graphing library plotlyjs metaflow pythonr library help scientist engineer build manage reallife data science project metaflow wa originally developed netflix boost productivity data scientist work wide variety project classical statistic stateoftheart deep learning prophet procedure forecasting time series data based additive model nonlinear trend fit yearly weekly daily seasonality plus holiday effect work best time series strong seasonal effect several season historical data lightgbm gradient boosting framework us tree based learning algorithm used ranking classification many machine learning task dash python framework building analytical web application python r julia jupyter mlr machine learning r ml workspace allinone webbased ide specialized machine learning data science simple deploy get started within minute productively built ml solution machine ml workspace ultimate tool developer preloaded variety popular data science library tensorflow pytorch kera mxnet dev tool jupyter v code tensorboard perfectly configured optimized integrated catboost fast scalable high performance gradient boosting decision tree library used ranking classification regression machine learning task python r java c support computation cpu gpu plumber tool allows create web api merely decorating existing r source code special comment drake rfocused pipeline toolkit reproducibility highperformance computing diagrammer package create modify analyze visualize network graph diagram output incorporated r markdown document integrated shiny web apps converted graph format exported image file knitr generalpurpose literate programming engine r lightweight api designed give user full control output without heavy coding work broom tool convert statistical analysis object r tidy format contribute x would like contribute guide simply make pull request license back top distributed creative common attribution 40 international cc 40 public license,"[('data', 'science'), ('machine', 'learning')]"
mithi/hexapod,Other,build status code climate technical debt codecov code style prettier buy coffee mithi bareminimum hexapod robot simulator use web app solve inverse kinematics simulate various gait real time also view angle robot eighteen joint make particular pose computation solely done browser nothing fetching data somewhere else fast another somewhat cool thing app doe depend external mathematics library us javascript builtin math object consider buying cup coffee motivate build roboticsrelated visualizer quadrotors feature control x robot dimension x robot 3d orientation translation stance solve x inverse kinematics x forward kinematics simulate x ripple tripod gait variation x walking forward backwards x rotating clockwise counterclockwise related thing like build user interface node download algorithm alone package hexapod kinematics library walking gait kinematics main contributor pr welcome contribution improve source code always appreciated see contributing guide put name merged pr multiple time substantially contributed project way mithi icyjoseph mikong love badge license code climate issue last commit commits per month top language code file size repo size code base blank count code base line count number file count number comment line code base line code hitcount,"[('code', 'base'), ('code', 'climate')]"
buzz-lang/Buzz,Other,buzz buzz novel programming language heterogeneous robot swarm buzz advocate compositional approach offering primitive define swarm behavior bottomup topdown fashion bottomup primitive include robotwise command manipulation neighborhood data mappingreducingfiltering operation topdown primitive allow dynamic management robot team sharing information globally across swarm selforganization result fact buzz runtime platform purely distributed language extended add new primitive thus supporting heterogeneous robot swarm laid top framework simulation demonstration available whitepaper buzz design implementation available documentation content documentation structured followsinstallationargos integrationbuzz concept 31 basic 32 virtual machinebuzz apiextending buzzexamples 61 distance gradient 62 pattern formation 63 restlike apitechnical specification 71 assembly language 72 backusnaur form syntaxrobot integration 81 khepera iv made buzz buzz research project conducted nestlab worcester polytechnic institute mist ecole polytechnique de montreal funded natural science engineering research council canada main developer maintainer carlo pinciroli buzz news scientific publication c pinciroli g beltrame 2016 swarmoriented programming distributed robot network ieee computer press c pinciroli g beltrame 2016 buzz extensible programming language heterogeneous swarm robotics proceeding ieeersj international conference intelligent robot system iros 2016 press c pinciroli g beltrame 2016 buzz programming language robot swarm ieee software volume 33 numberpages 97100 ieee press c pinciroli leebrown g beltrame 2015 tuple space data sharing robot swarm 9th eai international conference bioinspired information communication technology bict 2015 page 287294 acm digital library medium coverage 20150811 heise short version full version 20150810 robohub 20150806 ecole polytechnique de montreal 20150803 communication acm 20150803 fusion 20150730 sd time 20150729 mit technology review talk tutorial demo 20170104 icra2017 tutorial page online 20161116 tutorial proposal buzz accepted icra2017 2016102930 demo nerc 2016 5th northeast robotics colloquium 20161012 oral presentation iros 2016 20160618 tutorial swarmathon workshop rss2016 20160129 colloquium worcester polytechnic institute software complex robot swarm carlo pinciroli 20160115 colloquium universite de montreal software complex robot swarm carlo pinciroli 20151119 guest lecture course evolutionary swarm robotics prof moses university new mexico programming complex robot swarm carlo pinciroli 20151118 colloquium university new mexico software complex swarm robotics carlo pinciroli 20160302 buzz used nasa swarmathon 20150810 hello world collection includes example buzz hello world program,"[('robot', 'swarm'), ('carlo', 'pinciroli')]"
leggedrobotics/delora,Python,delora selfsupervised deep lidar odometry robotic application overview paper link video link icra presentation link corresponding code paper selfsupervised learning lidar odometry robotic application published international conference robotics automation icra 2021 code provided robotics system lab eth zurich switzerland author julian nubert juliannubertmavtethzch shehryar khattak marco hutter copyright ieee python setup provide conda environment running code conda conda environment comfortable use combination pytorch nvidia driver needed installation suitable cuda cudnn library handle conda install conda link set conda environment run following command bash conda env create f condadelorapy39yml installs environment including gpuenabled pytorch including needed cuda cudnn dependency activate environment bash conda activate delorapy39 install package set path correctly bash pip3 install e setup running code srcrosutils folder need installed link recommend ubuntu 2004 noetic due native python3 support performing inference python27 convert pytorch model scriptsconvertpytorchmodelspy run older pytorch version 13 rosnumpy case need install rosnumpy want make use provided rosnode bash sudo apt install rosdistrorosnumpy datasets preprocessing instruction use preprocess datasets found datasets folder provide script preprocessing general rosbags containing lidar scan kitti dataset format example kitti dataset lidar scan download velodyne laster data official kitti odometry evaluation 80gb link put delorawsdatasetskitti kitti contains dataodometryvelodynedatasetsequences0021 groundtruth pose please also download groundtruth pose make sure file located delorawsdatasetskitti kitti contains dataodometryposesdatasetposes0010txt preprocessing file configdeploymentoptionsyaml make sure set datasets kitti run bash preprocessdatapy custom dataset want add dataset please add sensor specification configconfigdatasetsyaml information need added dataset name sequence sensor specification vertical field view number ring deploy preprocessing dataset assume following hierarchical structure datasetnamesequencescan see previous dataset example code natively support training andor testing various datasets various sequence time training run training following command bash runtrainingpy training executed datasets specified configdeploymentoptionsyaml prompted enter name training run used reference mlflow logging custom setting custom setting hyperparameters please look config default loading ram disabled enough memory enable configdeploymentoptionsyaml loading disk first iteration sometimes slow due io accelerate quite quickly storing kitti training set entirely memory roughly 50gb ram required continuing training continuing training provide checkpoint flag path model checkpoint script visualizing progress result visualizing progress use mlflow allows simple logging parameter metric image artifact artifact could eg also whole tensorboard logfiles visualize training progress execute delora folder bash mlflow ui mlflow visualized browser following link terminal testing testing run along line bash runtestingpy checkpoint pathtocheckpoint checkpoint found mlflow training run testing dataset specified configdeploymentoptionsyaml provide exemplary trained model checkpointskittiexamplepth rosnode rosnode take pretrained model location modellocation performs inference ie predicts publishes relative transformation incoming point cloud scan variable dataset contain name dataset config file eg kitti order load corresponding parameter topic frame name specified following way bash runrosnodepy checkpoint modellocation dataset dataset lidartopicnameoflidartopic lidarframenameoflidarframe resulting odometry published navmsgsmsgodometry message topic deloraodometry example darpa dataset darpa dataset could look follows bash runrosnodepy checkpoint downloadscheckpointepoch0pth dataset darpa lidartopic shermanlidarpoints lidarframe shermanousterlink comfort function additional functionality provided bin script visualization normal mainly debugging located bin see readmefile datasetreadmemd information creation rosbags kitti dataset starting roscore conversion kitti dataset format rosbag done using following command bash python scriptsconvertkittitorosbagpy point cloud scan contained topic velodynepoints located frame velodyne eg created rosbag provided rosnode run using following command bash runrosnodepy checkpoint downloadscheckpointepoch30pth lidartopic velodynepoints lidarframe velodyne convert pytorch model older pytorch compatibility converion new model pathtomodelmodelpth old compatible pytorch13 pathtomodelmodelpy27pth done following bash python scriptsconvertpytorchmodelspy checkpoint pathtomodelmodel note pth ending script time network execution time network timed using bash python scriptstimenetworkpy paper thank citing delora icra2021 use code inproceedingsnubert2021self titleselfsupervised learning lidar odometry robotic application authornubert julian khattak shehryar hutter marco booktitleieee international conference robotics automation icra year2021 organizationieee dependency dependency specified condadelorapy39yml piprequirementstxt tuning result doe achieve desired performance please look normal estimation since loss usually dominated planetoplane loss impacted noisy normal estimate result presented paper picked reasonable parameter without finetuning convinced le noisy normal estimate would lead even better convergence,"[('following', 'command'), ('command', 'bash')]"
marcelrv/XiaomiRobotVacuumProtocol,Other,xiaomi robot vacuum protocol attempt describe xiaomi robot vacuum protocol command send using xiaomi mihome protocol decoding vacuum map see rr map file application implementing protocol openhab java mirobo python iobroker iobroker roborock javascript supported vacuum device model name alias rockrobovacuumv1 mi robot vacuum roborockvacuuma01 roborock e series roborockvacuuma08 roborock s6 pure roborockvacuuma09 roborock t7 pro roborockvacuuma10 roborock s6 maxv roborockvacuuma11 roborock t7 roborockvacuuma14 roborock t7s roborockvacuuma15 roborock s7 roborockvacuuma19 roborock s4 max roborockvacuuma23 roborock t7s plus roborockvacuumc1 xiaowa c1 roborockvacuume2 roborock xiaowa e series roborockvacuumm1s mi robot vacuum 1 roborockvacuump5 roborock p5 roborockvacuums4 roborock s4 roborockvacuums5 mi robot vacuum v2 roborock vacuum s5 roborock vacuum s50 roborockvacuums5e roborock s5 max roborockvacuums6 roborock s6 roborockvacuumt4 roborock t4 roborockvacuumt6 roborock t6 roborockvacuumt7 roborock vacuum t7 see supported robot capability matrix based getfwfeatures command vacuum command warning depending model firmware version command might available last column show model command available assumed latest firmware installed entry command available device type command documentation available appstat appstat carpetmodeget getcarpetmode s5e carpetmodeset setcarpetmode s5e charge appcharge basic operation cleanrecorddel delcleanrecord s5e cleanrecordget getcleanrecord clean summary cleanrecordmapget getcleanrecordmap clean summary cleansummaryget getcleansummary clean summary consumablesget getconsumable consumable consumablesreset resetconsumable consumable custommodeget getcustommode custom mode custommodeset setcustommode custom mode custommodewaterboxget getwaterboxcustommode water box custom mode s5e custommodewaterboxset setwaterboxcustommode water box custom mode s5e s6 deleteselectmap delmap dndclose closedndtimer disturb dndget getdndtimer disturb dndset setdndtimer disturb findme findme find robot getcleanrecordmapv2 getcleanrecordmapv2 getcustomcleanmode getcustomizecleanmode getfreshmap getfreshmap getledstatus getledstatus getmap getmap getmapv2 getmapv2 getmultimap getmultimap getpersistmap getpersistmap getprop getprop getservertimer getservertimer getstatus appgetstatus getfwfeatures getfwfeatures firmware feature s5e getinitstatus appgetinitstatus initial status s5e getlocale appgetlocale locale information s5e getnetworkinfo getnetworkinfo netwotk info s5e s5 s7 s6 getserialnumber getserialnumber serial number getstatus getstatus status message gototargetstop stopgototarget gototarget appgototarget goto target v1 s5 s6 s5e loadmultimap loadmultimap loguploadenable enablelogupload loguploadget getloguploadstatus log upload loguploaduser useruploadlog s5e manualsegmentmap manualsegmentmap mapsgetmultimaps getmultimapslist multimap s5e s7 s6 mapsloadmultimap loadmultimap multimap s5e s7 s6 mapsrecoverget getrecovermaps s5e mapeditend endeditmap s5e mapeditstart starteditmap s5e maprecover recovermap s5e maprecoverget getrecovermap s5e mapreset resetmap s5e mapsave savemap map s5 s6 s5e mapstatusget getmapstatus s5e mapusenew usenewmap s5e mapuseold useoldmap s5e mapv1freshget getfreshmapv1 s5e mapv1get getmapv1 map v1 mapv1persistget getpersistmapv1 s5e namemultimap namemultimap pause apppause basic operation recovermultimap recovermultimap remoteend apprcend remote control remotemove apprcmove remote control remotestart apprcstart remote control roommappingget getroommapping room mapping s5e m1 segmentcleanresume resumesegmentclean segment cleaning s5e segmentcleanstart appsegmentclean segment cleaning s5 s5e m1 segmentcleanstop stopsegmentclean segment cleaning s5e segmentmerge mergesegment s5e segmentname namesegment s5e segmentsplit splitsegment s5e segmentstatusget getsegmentstatus s5e setapptimezone setapptimezone setcustomcleanmode setcustomizecleanmode setfdsendpoint setfdsendpoint setledstatus setledstatus setswitchmapmode setswitchmapmode setlabstatus setlabstatus lab status s5 s6 s5e soundcurrentget getcurrentsound current sound soundinstall dnldinstallsound voice pack installation soundprogressget getsoundprogress voice pack installation s5e soundvolumechange changesoundvolume sound volume s5e soundvolumeget getsoundvolume sound volume soundvolumetest testsoundvolume sound volume s5e startspot appspot basic operation startvacuum appstart basic operation stopvacuum appstop basic operation timerstart startclean timerdel deltimer cleaning timer timerget gettimer cleaning timer timerserverdel delservertimer cleaning timer s5e timerserverget getservertimer cleaning timer s5e timerserverset setservertimer cleaning timer s5e timerserverupdate updservertimer cleaning timer s5e timerset settimer cleaning timer timerupdate updtimer cleaning timer timezoneget gettimezone timezone timezoneset settimezone timezone wakeuprobot appwakeuprobot s5e zonedcleanresume resumezonedclean zone cleaning s5e zonedcleanstart appzonedclean zone cleaning v1 s5 s6 s5e zonedcleanstop stopzonedclean zone cleaning s5e generic miio command informationsource command appear shared amongs xiaomi mi io device type command documentation info miioinfo info router miioconfigrouter ota miioota update firmware air otaprog miiogetotaprogress otastate miiogetotastate wifistate miiowifiassocstate wifi status ruby variant command model take command preponed user known one type command getmap userappgetmap appcharge userapphome apppause userapppause appremotecontrolend userapprcend appremotecontrolmove userapprcmove appremotecontrolstart userapprcstart appspot userappspot appstart userappstart appwakeuprobot userappwakeuprobot closedndtimer userclosedndtimer deltimer userdeltimer enablelogupload userenablelogupload findme userfindme getcarpetmode usergetcarpetmode getcleanrecord usergetcleanrecord getcleanrecordmap usergetcleanrecordmap getcleanrecordmapv2 usergetcleanrecordmapv2 getcleansummary usergetcleansummary getcurrentsoundpackage usergetcurrentsound getcustommode usergetcustommode getdndtimer usergetdndtimer getloguploadstatus usergetloguploadstatus getmapandroid usergetmapv1 getmapv2 usergetmapv2 getserialnumber usergetserialnumber getsoundpackageprogress usergetsoundprogress getsoundvolume usergetsoundvolume getsupplies usergetconsumable gettimer usergettimer gettimezone usergettimezone gototarget userappgototarget gototargetstop userstopgototarget resetsupplies userresetconsumable resumezonedclean userappresumezonedclean setcarpetmode usersetcarpetmode setcustommode usersetcustommode setdndtimer usersetdndtimer setsoundpackage userdnldinstallsound setsoundvolume userchangesoundvolume settimer usersettimer settimezone usersettimezone startzonedclean userappzonedclean stopzonedclean userstopzonedclean testsoundvolume usertestsoundvolume timerstart userstartclean updtimer userupdtimer exclamation suggestion improvement welcome,"[('cleaning', 'timer'), ('robot', 'vacuum')]"
Geonhee-LEE/mpc_ros,C++,github issue open github fork github star github license nonlinear model predictive control abstract goal repository implement path tracking algorithm mobile robot using nonlinear model predictive controlnmpc one optimal controller nmpc provide poweful effective performance among existing optimal controller since preview ability easy regulate constraint repository based rosrobot operating system therefore support local planner plugin standalone node well feature nonlinear model pridictive control ipopt solver wheeled mobile robot installation ubuntu 1804 install melodic install dependency sudo apt install rosmelodiccostmap2d rosmelodicmovebase rosmelodicglobalplanner rosmelodicamcl install ipopt please refer tutorial documentipoptinstall create catkinws clone repository git clone optional already urdf model need clone git clone note also refer model ackermann model holonomic model see mpcrosdescription build catkinmake try launch run navigation algorithm mpc simulation selected dwa mpc pure persuit according controller argument roslaunch mpcros navgazebolaunch run tracking reference line mpc tracking trajectory infinityshaped epitrochoid square using nonlinear model predictive control roslaunch mpcros reftrajectorytrackinggazebolaunch use local planner building successfully change baselocalplanner param mpcrosmpcplannerros param namebaselocalplanner valuempcrosmpcplannerros youtube video video label u contact gunhee6392gmailcom date 20200502 license apache 20 reference hypharos mpc minicar udacity selfdriving car nanodegree model predictive control mpc project korean path tracking nonlinear model predictive control differential drive wheeled robot,"[('nonlinear', 'model'), ('model', 'predictive')]"
foxglove/mcap,Python,mcap mcap modular container format logging library pubsub message arbitrary message serialization primarily intended use robotics application work well various workload resource constraint durability requirement documentation file format specification kaitai struct definition motivation support matrix developer quick start mcap library provided following language guidance language see corresponding readme language readme api doc package name version c readme api doc mcap go readme api doc see release python readme api doc mcap javascripttypescript readme api doc mcapcore swift readme api doc see release rust readme api doc mcap run conformance test need use git lf used store test log testsconformancedata cli tool cli tool interacting format available license mit license contributor required accept contributor license agreement,"[('readme', 'api'), ('api', 'doc')]"
xdspacelab/openvslam,Other,important notification termination release english japanese,"[('important', 'notification'), ('notification', 'termination')]"
StanfordVL/iGibson,Python,igibson simulation environment train robot large realistic interactive scene igibson simulation environment providing fast visual rendering physic simulation based bullet igibson equipped fifteen fully interactive high quality scene hundred large 3d scene reconstructed real home office compatibility datasets like cubicasa5k 3dfront providing 8000 additional interactive scene feature igibson include domain randomization integration motion planner easytouse tool collect human demonstration scene feature igibson allows researcher train evaluate robotic agent use visual signal solve navigation manipulation task opening door picking placing object searching cabinet latest update 892021 major update igibson reach igibson 20 detail please refer arxiv preprint igibson 20 support object state including temperature wetness level cleanliness level toggled sliced state necessary cover wider range task igibson 20 implement set predicate logic function map simulator state logic state like cooked soaked igibson 20 includes virtual reality vr interface immerse human scene collect demonstration 1212020 major update igibson reach igibson 10 detail please refer arxiv preprint release igibson dataset includes 15 fully interactive scene 500 object model annotated material physical attribute top existing 3d articulated model compatibility import cubicasa5k 3dfront scene description leading 8000 extra interactive scene new feature igibson physically based rendering 1beam 16beam lidar domain randomization motion planning integration tool collect human demo code refactoring better class structure cleanup 05142020 added dynamic light support flashlight 04282020 added support mac osx computer citation use igibson asset model consider citing following publication inproceedingsli2022igibson title igibson 20 objectcentric simulation robot learning everyday household task author li chengshu xia fei mart inmart roberto lingelbach michael srivastava sanjana shen bokui vainio kent elliott gokmen cem dharan gokul jain tanish kurenkov andrey liu karen gweon hyowon wu jiajun feifei li savarese silvio booktitle proceeding 5th conference robot learning page 455465 year 2022 editor faust aleksandra hsu david neumann gerhard volume 164 series proceeding machine learning research month 0811 nov publisher pmlr pdf url inproceedingsshen2021igibson titleigibson 10 simulation environment interactive task large realistic scene authorbokui shen fei xia chengshu li roberto mart inmart linxi fan guanzhi wang claudia p erezd arpino shyamal buch sanjana srivastava lyne p tchapmi micael e tchapmi kent vainio josiah wong li feifei silvio savarese booktitle2021 ieeersj international conference intelligent robot system iros year2021 pagesaccepted organizationieee documentation documentation igibson found igibson documentation includes installation guide including data download instruction quickstart guide code example apis want know igibson also check webpage igibson 20 arxiv preprint igibson 10 arxiv preprint dowloading dataset 3d scene instruction install igibson download dataset visit installation guide dataset download guide datasets link igibson include support use cubicasa5k 3dfront scene adding 10000 extra interactive scene use igibson check documentation use also maintain compatibility datasets 3d reconstructed large realworld scene home office download use igibson gibson dataset stanford 2d3dsemantics dataset please fill form matterport3d dataset please fill form using igibson vr want use igibson vr interface please visit vr guide tba contributing github repository igibson pip package igibson 20 release igibson 10 please use 10 branch bug report suggestion improvement well community development encouraged appreciated please consider creating issue sending u email support previous version environment gibson found following repository acknowledgment igibson us code open source repository without effort folk willingness release implementation permissable copyleft license igibson would possible thanks author effort syoyo fujita tinyobjloader erwin coumans eglexample caelan garrett sspybullet sean barrett stb micha siejak pbr cryptopp,"[('igibson', '20'), ('interactive', 'scene')]"
greenkeeperio/greenkeeper,Other,important announcement greenkeeper saying goodbye passing torch snyk june 3rd 2020 new installation longer possible find migrate snyk greenkeeperio greenkeeper brings safety consistency automatic update realtime monitoring npm dependency let bot send informative actionable issue easily keep software date working condition join 10000 project github trust greenkeeper warn dependency update break build else using anyone know well helping fine folk example lodash pouchdb karma request google amp modernizr standard webtorrent mustachejs freecodecamp html5 boilerplate many thousand tell greenkeeper work please problem greenkeeper sits npm github observing module depend get updated project get new branch update ci test kick watch see whether pas based test result current version definition open clear actionable issue nothing wont nag dependency doe break software youll know immediately get started fixing problem youve got stuff understand sometimes simply make pragmatic tradeoff fixing build breaking update pinning working version get back later bot respect let pin last working version dependency issue thread screenshot pinning dependency choosing repository found critical bug talk youve discovered securityrelated bug greenkeeper related service please disclose u confidentially emailing u supportgreenkeeperio find dont share security vulnerability publicly github issue example always keep conversation u confidential chance get thing fixed anyone exploit bug job service documentation core service greenkeeper take care dependency update logic related pull requestissue creation job type following documentation might outdated currently working improving section githubevent githubevent job get created hook service answering incoming webhooks github creates job full payload github jobdata add one additional type property name webhook event githubeventintegrationinstallation depending action new entry addedremoved tofrom installation database repository requested github sync database repository packagejson receive initial pull request createinitialbranch githubeventintegrationinstallationrepositories depending action entry addedremoved tofrom repository database added repository packagejson receive initial pull request createinitialbranch githubeventpush packagejson content retrieved parsed synced database githubeventstatus status affect greenkeeper pullrequest result recorded repository database metadata status branch failing create new branch pin last working version createpinbranch status pin branch coming issue created createissue issue already exists still failing comment commentissue succeeding close issue closeissue githubeventpullrequest initial greenkeeper pull request merged repository get enabled enablerepository greenkeeper pull request merged olderincluded pull request dependency closed deleteolderbranches unmergeable greenkeeper pull request get rebased rebaseunmergeablebranches registrychange registrychange job get created change service listening change npm creates job full payload npm jobdata figure whether change actually contains new version disttag store version npm database figure depending dependency changed schedule branch creation job enabled one createversionbranch createpinbranch creates branch dependency pinning version createissue creates issue information dependency failing commentissue comment issue dependency still failing closeissue close issue dependency longer failing createversionbranch used packagebump oauth app test detected update outside version range trigger createversionpr right away createversionpr used packagesendpr oauth app deletebranches deletes branch related dependency version le equal specified one createinitialbranch used packagepin oauth app enablerepository used happen inside webservice oauth app deleteolderbranches used happen inside pullrequestclose oauth app rebaseunmergeablebranches used happen inside pullrequestclose oauth app document installation j id 8422 github account id installation 10 installation id plan free plan login finnp github name type user user organization repository type repository j id 111 stringrepoid type repository enabled false accountid 8422 account id key installation fullname greenkeeperiojobs private true fork false hasissues true package packagejson typebranch j id 111branchdeadbeefdeadbeef repositoryid sha type branch purpose undefined pin otherwise defined sha deadbeefdeadbeef base master base branch head greenkeeperlodash800 branch name dependency lodash version 800 oldversion 700 oldversionresolved 700 dependencytype devdependencies repositoryid 111 accountid 8422 processed true branch wa processed referencedeleted true branch reference wa deleted state failure ci status updatedat 20160928t150703022z typepr j id 111pr6 repositoryid prid type pr repositoryid 11 accountid 42 initial true initial pull request number head greenkeeperlodash800 branch name state open closed merged true updatedat 20160928t150703022z typeissue j id 111issue6 type issue repositoryid 111 dependency lodash version 100 number state open updatedat,"[('pull', 'request'), ('oauth', 'app')]"
sopel-irc/sopel,Python,sopel version build issue coveragestatus license introduction sopel simple lightweight open source easytouse irc utility bot written python designed easy use run extend installation latest stable release system run python best way install sopel install pip pip install sopel arch user install sopel package community repository though new version might take slightly longer become available failing option grab latest tarball github follow step installing latest source latest source first either clone repository git clone download asource archive github note sopel requires python 38 run source directory whether cloned tarball run pip install e run sopel configure start bot database support sopel leverage sqlalchemy support following database type sqlite mysql postgresql mssql oracle firebird sybase default sopel use sqlite database current configuration directory alternative database configured following config option dbtype dbfilename sqlite dbdriver dbuser dbpass dbhost dbport dbname need manually install package system pip needed make chosen database work note plugins updated since sopel 70 wa released might problem database type sqlite many work fine adding plugins easiest place put new plugins sopelplugins newer plugins installable package search pypi many plugins written user found using favorite search engine older unmaintained plugins available sopelextras repository course also write atutorial creating new plugins available sopel website api documentation found online create local version running make doc documentation official website includes valuable information full listing builtincommands tutorial api documentation usage information question join u sopel ircircliberachatsopel libera chat donation thrilled want support project sponsor sopel github donate throughopen collective donation received used cover infrastructure cost domain name hosting service main project site easily hosted netlify considering building new feature would require static hosting projectrelatedexpenses tracked open collective profile transparency version image target build image target issue image target coveragestatus image target license image target,"[('image', 'target'), ('install', 'sopel')]"
vita-epfl/CrowdNav,Python,crowdnav website paper video repository contains code icra 2019 paper detail please refer paper crowdrobot interaction crowdaware robot navigation attentionbased deep reinforcement learning please find recent work following link relational graph learning crowd navigation iros 2020 social nce contrastive learning sociallyaware motion representation iccv 2021 abstract mobility effective sociallycompliant manner essential yet challenging task robot operating crowded space recent work shown power deep reinforcement learning technique learn socially cooperative policy however cooperation ability deteriorates crowd grows since typically relax problem oneway humanrobot interaction problem work want go beyond firstorder humanrobot interaction explicitly model crowdrobot interaction cri propose rethink pairwise interaction selfattention mechanism ii jointly model humanrobot well humanhuman interaction deep reinforcement learning framework model capture humanhuman interaction occurring dense crowd indirectly affect robot anticipation capability proposed attentive pooling mechanism learns collective importance neighboring human respect future state various experiment demonstrate model anticipate human dynamic navigate crowd time efficiency outperforming stateoftheart method method overview setup install pythonrvo2 library install crowdsim crowdnav pip pip install e getting started repository organized two part gymcrowd folder contains simulation environment crowdnav folder contains code training testing policy detail simulation framework found instruction training testing policy executed inside crowdnav folder train policy python trainpy policy sarl test policy 500 test case python testpy policy orca phase test python testpy policy sarl modeldir dataoutput phase test run policy one episode visualize result python testpy policy orca phase test visualize testcasepython testpy policy sarl modeldir dataoutput phase test visualize testcasevisualize test case python testpy policy sarl modeldir dataoutput phase test visualize testcaseplot training curve python utilsplotpy dataoutputoutputlog simulation video cadrl lstmrl sarl omsarl learning curve learning curve comparison different method invisible setting citation find code paper useful research please cite paper bibtex inproceedingschen2019crowd titlecrowdrobot interaction crowdaware robot navigation attentionbased deep reinforcement learning authorchen changan liu yuejiang kreiss sven alahi alexandre booktitle2019 international conference robotics automation icra pages60156022 year2019 organizationieee,"[('testpy', 'policy'), ('phase', 'test')]"
snape/RVO2-CS,Other,optimal reciprocal collision avoidance c doi present formal approach reciprocal collision avoidance multiple independent mobile robot agent need avoid collision without communication among agent moving common workspace formulation optimal reciprocal collision avoidance orca provides sufficient condition collisionfree motion letting agent take half responsibility avoiding pairwise collision selecting optimal action agent reduced solving lowdimensional linear program prove resulting motion smooth test optimal reciprocal collision avoidance approach several dense complex simulation scenario workspace involving thousand agent compute collisionfree action millisecond rvo2 library c opensource c netimplementation algorithm two dimension ha simple api thirdparty application user specifies static obstacle agent preferred velocity agent simulation performed stepbystep via simple call library simulation fully accessible manipulable runtime build status spdxfilecopyrighttext 2008 university north carolina chapel hill spdxlicenseidentifier apache20 licensed apache license version 20 license may use file except compliance license may obtain copy license unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license please send bug report geomcsuncedu author may contacted via jur van den berg stephen j guy jamie snape ming c lin dinesh manocha dept computer science 201 columbia st frederick p brook jr computer science bldg chapel hill nc 275993175 united state america,"[('reciprocal', 'collision'), ('collision', 'avoidance')]"
oceanlvr/ChatGPT-ProBot,Other,chatgpt probot release version twitter github deploy vercel chatgptbased github app type chatgpt chat robot powered probot chatgptapi usage try issue1 try reviewrefactor pr7 event description example ping ping robot status chatgpt chat bot issuepr comment chatgpt review auto review code pr review fix callback hell problem refactor refactor code refactor fix callback hell problem deploy app install configure github app create env file following exampleenv please check config section github apps page appidprivatekeygithubclientsecretgithubclientid required please check chatgptbot setting fill privatekey required encoded base64consolelogbufferfromprivatekeytostring base64 sessiontoken required generated chatgpt website get following step vercel deploy recommend click deploy vercel clone deploy copy env file environment vercel app environmentvariables setting page edit webhooks url vercelappurlapigithubwebhooks type chatgpt issue chat bot step4 update webhook url vercel app domain note package switch using official api released dev sh install dependency npm install run bot npm dev license isc 2022 oceanlvr,"[('deploy', 'vercel'), ('github', 'app')]"
SkyentificGit/SmallRobotArm,C++,smallrobotarm open source project 6dof robot arm based stepper motor cad code licensed gpl3,"[('smallrobotarm', 'open'), ('open', 'source')]"
wsnewman/learning_ros,C++,learningros repository accompanies text systematic approach learning robot programming code example reside folder corresponding chapter entire repository cloned roswssrc assuming workspace named rosws resides within home directory navigate roswssrc terminal enter git clone recursive also clone external package used withgit clone recursive terminal navigate rosws compile code command catkinmake installing first time see instruction installation script script located site automate installation consistent version package used learningros code example script also install variety useful tool,"[('code', 'example'), ('clone', 'recursive')]"
FlorianWilk/SpotMicroAI,Other,logo abstract spotmicroai project designed low cost easily built quadruped robot design roughly based boston dynamic quadruped robot spotmini though obvious adaptation size sensor suite project maintained community volunteer much still early stage individual welcome contribute particular expertise area involving simulation reinforcement learning hardware development greatly appreciated code moved gitlabcom repository due current limitation githubcom prevents community work repository certain quota reached new repository url located like know migrated gitlab data triggered decision,"[('quadruped', 'robot'), ('logo', 'abstract')]"
MorvanZhou/train-robot-arm-from-scratch,Python,train robot arm scratch partbuilt training framework partlearn build environment scratch partcomplete basic environment script see arm move partplug reinforcement learning method try train partoptimize debug final make moving goal dependency python tensorflow pyglet numpy reinforcement learning practice code ha chinese tutorial python view tutorial page know,"[('reinforcement', 'learning'), ('train', 'robot')]"
nebrius/raspi-io,Other,raspi io note project maintenance mode longer actively maintained gitter raspi io io plugin johnnyfive nodejs robotics platform enables johnnyfive control hardware raspberry pi api doc module found johnnyfive io plugin specification page except constructor documented raspi io support model raspberry pi except model compute module bug report feature request wish contribute code please sure check contributing guide system requirement raspberry pi model b revor newer sorry model user except compute module raspbian jessie newer nodered work finicky difficult debug see info support os node 640 newer detailed instruction getting raspberry pi ready nodebots including install nodejs found wiki warning module must installed normal user run root user installation install npm raspberry pi laptop shell npm install raspiio note must reboot raspberry pi first time install raspi io usage using raspi io inside johnnyfive fairly straightforward although doe take extra step compared using johnnyfive arduino uno javascript const raspi require raspiio raspiio const five require johnnyfive const board new fiveboard io new raspi boardon ready create led pingpio4 p1 strobe onoff optionally set speed default 100ms new fiveled p17 strobe run code bash sudo node indexjs io property must specified explicitly differentiate trying control say arduino uno plugged raspberry pi note specify pin p17 notsee section pin explanation pin numbering scheme raspberry pi bit confusing warning module must run root even though cannot installed root note module intended used directly want use johnnyfive recommend taking look raspijs underpins library little straightforward use using raspi io directly important note pin naming pin raspberry pi little complicated multiple header raspberry pi extra pin pin number consistent raspberry pi board version help make easier specify pin three way first specify pin function eg gpio18 second way specify pin number specified form pheaderpin eg p17 final way specify wiring pi virtual pin number egif specify number instead string assumed wiring pi number sure read full list pin supported model raspberry pi i2c note limitation extra step aware using i2c raspberry pi first note i2c pin used i2c raspi io even though capable gpio hardware level also note need edit bootconfigtxt order change i2c baud rate default need notice behavior unstable trying communicate another microcontroller try setting baudrate 10000 default 100000 instability ha observed arduino nano install raspi io first time must reboot raspberry pi i2c support enabled default module run script enable automatically adjust i2c setting setting take effect reboot pi finally try access device exist get error stating eio io error sorry descriptive come operating system change serial note also limtations extra step aware using serial uart raspberry pi i2c serial pin used serial raspi io even though capable gpio hardware level running raspberry pi without wifi older version raspberry pi enable tty console serial meaning use screen command nix computer log raspberry pi serial get way using serial port robotics however disable tty serial following run sudo raspiconfig start raspberry pi configuration utility selectinterface option select p6 serial option select asked would like login shell accessible serial select yes asked would like serial port hardware enabled select ok select finish select yes reboot prompted warning running raspberry pi wifi bluetooth module raspberry pi controlled using serial port meaning cannot used directly also using bluetooth using module default serial port disable bluetooth indepth discussion work around read api new raspiiooptions instantiates new raspi io instance given option argument argument type description option optional object configuration option property type description enableserial optional boolean enables use serial port johnnyfive default true except model bluetooth false currently raspberry pimodel b raspberry pimodel b raspbery pi zero w enablei2c optional boolean enables use i2c port johnnyfive default true includepins optional arraynumberstring list pin include initialization specified pin listed initialized available use raspi io specified pin available use raspi io excludepins optional arraynumberstring list pin exclude initialization specified pin listed initialized available use raspi io specified pin available use raspi io license mit license mit copyright c 20142017 bryan hughes bryannebrius permission hereby granted free charge person obtaining copy software associated documentation file software deal software without restriction including without limitation right use copy modify merge publish distribute sublicense andor sell copy software permit person software furnished subject following condition copyright notice permission notice shall included copy substantial portion software software provided without warranty kind express implied including limited warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arising connection software use dealing software,"[('raspberry', 'pi'), ('raspi', 'io')]"
PCrnjak/Faze4-Robotic-arm,C++,license mit faze4roboticarm join discord community faze4 small fully 3d printable open sourceaxis robotic arm functionally esthetically similar robotic arm industry aimed research education anyone interested making robot arm main selling point arm separate diy arm cheap 1000 dollar us 3d printed cycloidal gearbox low backlash repaired really easy wire hidden giving really clean design whole arm ha around 1000 part including screw bearing weight around 15 kg check arm action check arm action start build robotic arm follow building instruction general info robotic arm doc building instruction doc go hand hand need follow build arm building instruction general mechanical assembly doc contain info electrical wiring low level setup high level matlab tip content low level code coming soon high level code matlab coming soon building instruction bom doc contains info arm urdf file see faze4 robotic arm youtube hackaday doc support project project completely open source free would like keep way help term donation advice really appreciated thank check arm action project mit licence,"[('robotic', 'arm'), ('building', 'instruction')]"
Lakr233/BBackupp,Other,bbackupp backup io device way sandboxed single binary stuff automation support feature x backup iosipadvisionosmaybe device x backup encryption x backup compression x backup external drive x backup network drive x wireless backup initial setup x unpack backup itunesfinder restore x automatic backup device connected x automatic backup device connected power x backup notification need setup provider notification wait backup send notification beginning end backup process also send notification backup failed currently support following notification provider x bark restore default unpack location backup tab system storage mobile backup click save use finder restore device license gnu general public license version29 june 2007 see license detail may change time disclaimer responsible consequence resulting use program list potential occurrence awareness app crash noneworking backup computer crash freeze restarts computer chip damage screen glitch white screen black screen flashing screen arriving late work scolded wife daughter something wrote getting caught bos slacking facing dismissal job handling leaked confidential information security department unfortunate event transforming cat earth exploding universe rebooting anything else think copyright 2023 lakr aream right reserved,"[('x', 'backup'), ('drive', 'x')]"
leggedrobotics/xpp,C++,build status documentation hosting license bsd3clause xpp package visualization motionplans legged robot draw support area contact force motion trajectory rviz display urdfs specific robot including onelegged twolegged hopper hyq example motion seen video generated library towr install recommended way install binary bash sudo aptget install rosrosdistroxpp build source case want install binary package requires eigen bash sudo aptget install rosrosdistrodesktopfull sudo aptget install libeigen3dev build package catkin workspace bash cd catkinworkspacesrc git clone cd catkinmake source develsetupbash unit test make sure everything installed correctly running unit test catkinmake runtests using catkin tool catkin build xppvis nodeps verbose catkinmakeargs runtests usage example different robot provided xppexamples package eg xppexamplessrcmonopedpubcc starter run roslaunch xppexamples hyqbaglaunch launch file package instruction author alexander w winkler initial workmaintainer work wa carried following institution citation use work academic context please cite follows miscxppros author alexander w winkler title xpp collection package visualization legged robot year 2017 doi 105281zenodo1037901 url bug feature request please report bug request feature ask question using issue tracker fa2png,"[('sudo', 'aptget'), ('aptget', 'install')]"
ARISE-Initiative/robomimic,Python,robomimic homepage documentation study paper study website arise initiative latest update 10112023 v031 support extracting training visualizing depth observation robosuite datasets 07032023 v030 bctransformer iql brain support deepmind mujoco binding robot pretrained image rep eye wandb logging chartwithupwardstrend 05232022 v021 updated website documentation feature tutorial notebookwithdecorativecover 12162021 v020 modular observation modality encoders wrench support momart datasets openfilefolder release note documentation 08092021 v010 initial code paper release colab quickstart get started quick colab notebook demo robomimic without installing anything locally open colab robomimic framework robot learning demonstration offer broad set demonstration datasets collected robot manipulation domain offline learning algorithm learn datasets robomimic aim make robot learning broadly accessible reproducible allowing researcher practitioner benchmark task algorithm fairly develop next generation robot learning algorithm core feature reproducing benchmark robomimic framework also make reproducing result different benchmark datasets easy see datasets page information downloading datasets reproducing experiment troubleshooting please see troubleshooting section common fix submit issue github page contributing robomimic project part broader advancing robot intelligence simulated environment arise initiative aim lowering barrier entry cuttingedge research intersection ai robotics project originally began development late 2018 researcher stanford vision learning lab svl actively maintained used robotics research project across multiple lab welcome community contribution project detail please check contributing guideline citation please cite paper use framework work bibtex inproceedingsrobomimic2021 titlewhat matter learning offline human demonstration robot manipulation authorajay mandlekar danfei xu josiah wong soroush nasiriany chen wang rohun kulkarni li feifei silvio savarese yuke zhu roberto mart inmart booktitleconference robot learning corl year2021,"[('robot', 'learning'), ('arise', 'initiative')]"
ethz-adrl/towr,C++,ipopt snopt heavycheckmark elegant rviz visualization motion plan using xpp heavycheckmark roscatkin integration optional heavycheckmark lightweight 6k line make easy use extend install run develop contribute publication author optioncore library hopperexample pure cmake optionrecommended core library gui rosrvizvisualization built catkin building cmake install dependency cmake eigen ipopt bash sudo aptget install cmake libeigen3dev coinorlibipoptdev install ifopt cloning repo cmake make install system build towr bash git clone cd towrtowr mkdir build cd build cmake dcmakebuildtyperelease make sudo make install copy file folder usrlocal sudo xargs rm installmanifesttxt case want uninstall test hopperexamplecc generates motion onelegged hopper using ipopt bash towrexample towrtest gtest wa found use easily customize add constraint variable optimization problem herefore add following cmakeliststxt cmake findpackagetowr 12 required addexecutablemain maincpp custom variable cost constraint added towr targetlinklibrariesmain public towrtowr add include directory library building catkin provide roswrapper pure cmake towr library add keyboard interface modify goal state motion type well visualizes produce motion plan rviz using xpp install dependency cmake catkin eigen ipopt xpp ncurses xterm bash sudo aptget install cmake libeigen3dev coinorlibipoptdev libncurses5dev xterm sudo aptget install rosrosdistrodesktopfull rosrosdistroxpp build workspace bash cd catkinworkspacesrc git clone git clone cd catkinmakeisolated dcmakebuildtyperelease catkin build source develisolatedsetupbash use include catkin project adding cmakeliststxt cmake addcompileoptionsstdc11 findpackagecatkin component towr includedirectoriescatkinincludedirs targetlinklibrariesfoo catkinlibraries add following packagexml xml package dependtowrdepend package run launch program using bash roslaunch towrros towrroslaunch debugtrue debug gdb click xterm terminal hit information tune paramters found develop library overview relevant class parameter build collected module nice graphical overview uml seen doxygen documentation provides helpful information developer problem formulation code formulates variable cost constraint using ifopt make sense briefly familiarize syntax using example minimal towr example without formulating problem onelegged hopper seen great starting point recommend using infrastructure provided dynamically visualize plot change problem formulation define problem using infrastructure use example guide add variable cost constraint library provides set variable cost constraint formulate trajectory optimization problem example formulation combine given however formulation probably improved add eg constraintset define class value derivative add formulation nlpaddconstraintsetyourcustomconstraints shown add robot want add robot towr start visualize robot rviz see xpp contribute love pull request whether new constraint formulation additional robot model bug fix unit test updating documentation please look contributingmd information see list contributor participated project project using towr publication publication underlying code found core paper articlewinkler18 author winkler alexander w bellicoso dario c hutter marco buchli jonas title gait trajectory optimization legged system phasebased endeffector parameterization journal ieee robotics automation letter ral year 2018 month july page 15601567 volume doi 101109lra20182798285 broader overview topic trajectory optimization derivation singlerigidbody dynamic model used work doi 103929ethzb000272432 author alexander w winkler initial workmaintainer work wa carried following institution example,"[('variable', 'cost'), ('cost', 'constraint')]"
JsonChao/ML-Roadmap,Other,mlroadmap roadmap becoming machine learning developer 2020 img src div foundation data science computational inferential thinking foundation data science learndatascience google learning data youtubeneural network awesomemachinelearning pattern recognition machine learning pdf matlab introduction machine learning python handson machine learning scikitlearn tensorflow understandingmachinelearningtheoryalgorithms eslii google tensorflow python machine python machinelearningmastery iamtrask python rnneffectiveness nnmanifoldstopology understandinglstms augmentedrnns spotifycnns kmeans meanshift dbscan emgmm agglomerative hierarchical machine learning algorithm atourofmachinelearningalgorithms scikitlearn supervisedlearning clustering decomposition modelselection preprocessing awesomedeeplearning awesomedeeplearningpapers awesomedeeplearningresources emailchaoqu521gmailcom blog license copyright 2018 jsonchao licensed apache license version 20 license may use file except compliance license may obtain copy license unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license,"[('machine', 'learning'), ('foundation', 'data')]"
zhuhu00/Awesome_Dynamic_SLAM,Other,awesomedynamicslam awesome following paper paper focus slam dynamic environment lifelong slam dynamic environment two kind robust slam first detection removal another detection tracking although mapping part dynamic environment focus also put article yet also interesting vision mean pipeline built camera others lidar radar sensor fusion related survey paper survey feature required dynamic visual simultaneous localization mapping zewen xucas 2021 state art realtime registration rgbd image stotko patrick university bonn 2016 visual slam structure motion dynamic environment survey university oxford 2018 state art 3d reconstruction rgbd camera michael zollhofer stanford university 2018 dynamic object detection removal benchmark dynablox realtime detection diverse dynamic object complex environment voxlobx iros 2022cfpslam realtime visual slam based coarsetofine probability dynamic environment iros 2022 drgslam semantic rgbd slam using geometric feature indoor dynamic scene ieee ral 22dynavins visualinertial slam dynamic environment code deflowslam selfsupervised scene motion decomposition dynamic dense slam droidslampage efficient spatialtemporal information fusion lidarbased 3d moving object segmentation code 220303923 roll longterm robust lidarbased localization temporary mapping changing environment iros 2022 code pocd probabilistic objectlevel change detection volumetric mapping semistatic scene r 2022 j schauer nuchter peopleremoverremoving dynamic object 3d point cloud data traversing voxel occupancy grid ieee robot autom lett volnopp 16791686 jul 2018 doi 101109lra20182801797 trick codevideo n rufus u k r nair v b kumar v madiraju k krishna srom simple realtime odometry mapping using lidar data autonomous vehicle iv 2020 schorghuber steininger cabon humenberger gelautz slamantic leveraging semantics improve vslam dynamic environment iccv 2019 workshop slam gu yao j yang h kong semanticsguided moving object segmentation 3d lidar arxiv 202205 rangenet pan b gao j mei geng c li h zhao semanticposs point cloud dataset large quantity dynamic instance iv 2020 pagad agarwal narayanan k rangan h kim g yalla robust method removing dynamic object point cloud icra 2020 video l sun z yan zaganidis c zhao duckett recurrentoctomap learning statebased map refinement longterm semantic mapping 3dlidar data ral life long slam p egger p v k borges g catt pfrunder r siegwart r dube posemap lifelong multienvironment 3d lidar localization iros 2018 lifelong slameth sal dynamicfilter online dynamic object removal framework highly dynamic environmentsicra 2022 ijrr x wang b zhang hj c luo dynplsvo new method using point line feature stereo visual odometry dynamic scene arxiv may 17 2022 lazaro r capobianco g grisetti efficient longterm mapping dynamic environment iros 2018 icp2d code krajnik j p fentanes j santos duckett fremen frequency map enhancement longterm mobile robot autonomy changing environment tro 2017 g kurz holoch p biber geometrybased graph pruning lifelong slam iros 2021 slam queian chen akihiro tsukadaflow supervised neural radiance field staticdynamic decomposition icra 2022 aicode w ding hou h gao g wan song lidar inertial odometry aided robust lidar localization system changing city scene icra 2020 imu lifelong slam g tipaldi meyerdelius w burgard lifelong localization changing environment ijrr 2013 lifelong zhu x zhang guo j li h liu lifelong localization semidynamic environment icra 2021 lifelong f pomerleau p krusi f cola p furgale r siegwart longterm 3d map maintenance dynamic environment icra 2014 j yoon tang barfoot maple online detection dynamic object 3d lidar conference computer robot vision crv 2019 dynamicslam semantic monocular visual localization mapping based deep learning dynamic environment robotics autonomous system 2019 zhao et al general framework lifelong localization mapping changing environment iros 2021 lifelong sessionlloglmpgrlloglmpgrpgrlloglm henning laidlow leutenegger bodyslam joint camera localisation mapping human motion tracking arxiv220502301 slamairdos pfreundschuh patrick et al dynamic object aware lidar slam based automatic generation training data icra 2021 eth aslcode video dataset lidar deeplearning3dmininet3dloamslam canovas bruce et al speed memory efficient dense rgbd slam dynamic scene iros 2020 gipsalab code video yuan xun chen song sadslam visual slam based semantic depth information iros 2020 ustc code video dong erqun et al pairnavi peertopeer indoor navigation mobile visual slam iccc 2019 tsinghua code video slide ji tete et al towards realtime semantic rgbd slam dynamic environment icra 2021 palazzolo emanuele et al refusion 3d reconstruction dynamic environment rgbd camera exploiting residual iros 2019 code bonn arora mehul et al mapping static part dynamic scene 3d lidar point cloud exploiting ground segmentation p chen xieyuanli et al moving object segmentation 3d lidar data learningbased approach exploiting sequential data ieee robotics automation letter 2021 code video university bonn zhang tianwei et al flowfusion dynamic dense rgbd slam based optical flow code video zhang tianwei et al acousticfusion fusing sound source localization visual slam dynamic environment 2021 video liu yubao miura jun rdsslam realtime dynamic slam using semantic segmentation method ieee access 2021 liu yubao miura jun rdmoslam realtime visual slam dynamic environment using semantic label prediction optical flow ieee access vol2021 pp 10698197 ieee xplore code video cheng jiyu et al improving visual localization accuracy dynamic environment based dynamic region removal ieee transaction automation science engineering vol 17 nojuly 2020 pp 158596 ieee xplore soares joao carlos virgolino et al crowdslam visual slam towards crowded environment using object detection journal intelligent robotic system 2021 code video visual localization mapping dynamic changing environment 2022 orbslam2orbslam3 kaveti pushyami singh hanumant light field frontend robust slam dynamic environment kuenhan lin chiehchih wang stereobased simultaneous localization mapping moving object tracking iros 2010 fu h xue h hu x liu b lidar data enrichment fusing spatial temporal adjacent frame remote sen 2021 13 3640 qian chenglong et al rflio removalfirst tightlycoupled lidar inertial odometry high dynamic environment piros2021 xjtu k minoda f schilling v wuest floreano yairi viode simulated dataset address challenge visualinertial odometry dynamic environment 2021 code w dai zhang p li z fang scherer rgbd slam dynamic environment using point correlation ieee transaction pattern analysis machine intelligence pp 11 2020 c huang h lin h lin h liu z gao l huang yovio robust multisensor semantic fusion localization dynamic indoor environment 2021 international conference indoor positioning indoor navigation ipin 2021 yolo vio iros 2022dynamicvinsrgbd inertial odometry resourcerestricted robot dynamic environment code dynamic object detection tracking youngjae min doun kim hanlim choi kernelbased 3d dynamic occupancy mapping particle tracking 2021 ieee international conference robotics automation icra cod dyobslam dynamic object tracking slam system 2022 vdoslamdynaslam dynavig monocular visioninsgnss integrated navigation object tracking agv dynamic scene 2022 directtracker 3d multiobject tracking using direct image alignment photometric bundle adjustment 2022 page iros 2022motslam motassisted monocular dynamic slam using singleview depth estimation 2022 twistslam fusing multiple modality accurate dynamic semantic slam 2022 slammot iros 2022visualinertial multiinstance dynamic slam objectlevel relocalisation 2022 iros 2022 learning complete object shape objectlevel mapping dynamic scene 2022 midfusion ou mlo multiobject tracking lidar odometry dynamic environment arxiv apr 29 2022 slammot z wang w li shen b cai 4d slam efficient dynamic bayes networkbased approach dynamic scene understanding ieee access ukf ou mlo multiobject tracking lidar odometry dynamic environment arxiv 2022 loam iros 2022r long c rauch zhang v ivan l lam vijayakumar rgbd slam indoor planar environment multiple large dynamic object slammot airdos dynamic slam benefit articulated object qiu yuheng et al 2021arxiv code paper video cmu ri vision dot dynamic object tracking visual slam ballester irene et alicra 2021 code video university zaragoza vision liu yubao miura jun rdmoslam realtime visual slam dynamic environment using semantic label prediction optical flow ieee access kim aleksandr et al eagermot 3d multiobject tracking via sensor fusion icra 2021 tum code video sensor fusion mo et al orcvio object residual constrained visualinertial odometry iros2020 mo et al orcvio object residual constrained visualinertial odometry iros 2021 code video project page rosen david et al towards lifelong featurebased mapping semistatic environment icra 2016 henein mina et al dynamic slam need speed icra 2020 zhang jun et al vdoslam visual dynamic objectaware slam system arxiv 2020 robust ego object 6dof motion estimation tracking zhang mina henein robert mahony viorela ila iros 2020code code video vision minoda koji et al viode simulated dataset address challenge visualinertial odometry dynamic environment ral 2021 codeand dataset video vincent jonathan et al dynamic object tracking masking visual slam iros 2020 code video huang jiahui et al clustervo clustering moving instance estimating visual odometry self surroundings cvpr 2020 tsinghua code video liu yuzhen et al switchingcoupled backend simultaneous localization dynamic object tracking ral 2021 tsinghua yang charig et al selfsupervised video object segmentation motion grouping project page long ran et al rigidfusion robot localisation mapping environment large dynamic rigid object ral 2021 project page video yang bohong et al multiclasses motion property concurrent visual slam dynamic environment ieee transaction multimedia 2021 yang gengshan ramanan deva learning segment rigid motion two frame cvpr 2021 project page thomas hugues et al learning spatiotemporal occupancy grid map lifelong navigation dynamic scene code jung dongki et al dnd dense depth estimation crowded dynamic indoor scene iccv 2021 code video luiten jonathon et al track reconstruct reconstruct track ralicra 2020 code video reconstruct grinvald margarita et al tsdf multiobject formulation dynamic object tracking reconstruction code video wang chiehchih et al simultaneous localization mapping moving object tracking international journal robotics research 2007 ran teng et al rsslam robust semantic slam dynamic environment based rgbd sensor xu hua et al odslam realtime localization mapping dynamic environment multisensor fusion icarm 2020 wimbauer felix et al monorec semisupervised dense reconstruction dynamic environment single moving camera cvpr 2021 project page code video video liu yu et al dynamic rgbd slam based static probability observation number ieee transaction instrumentation measurement vol 70 2021 pp 111 ieee xplore p li qin shen stereo visionbased semantic 3d object egomotion tracking autonomous driving arxiv 2018 g b nair et al multiobject monocular slam dynamic environment iv2020 runz l agapito cofusion realtime segmentation tracking fusion multiple object 2017 ieee international conference robotics automation icra may 2017 pp 44714478 code iros 2022twistslam constrained slam dynamic environment s3lam application 3d vsg longterm semantic scene change prediction 3d variable scene graph 2022 code cubeslam monocular 3d object slam ieee transaction robotics 2019 yang scherer pdf code video vision salasmoreno renato f et al slam simultaneous localisation mapping level object cvpr 2013 code video nicholson lachlan et al quadricslam dual quadric object detection landmark objectoriented slam ral2018 project page code wu yanmin et al eaoslam monocular semidense object slam based ensemble data association 2020 ieeersj international conference intelligent robot system iros oct 2020 pp 496673 arxivorg project page code h osman n darwish bayoumi loopnet focus detecting loop closure dynamic scene ieee robotics automation letter pp 11 2022 doi 101109lra20223142901 codevideo n finean l petrovic w merkt markovic havoutis motion planning dynamic environment using contextaware human trajectory prediction arxiv220105058 c jan 2022 code iros 2022extrinsic camera calibration moving person iros 2022acefusion accelerated energyefficient semantic 3d reconstruction dynamic scene iros 2022efficient 2d lidarbased map updating longterm operation dynamic environment iros 2022detecting invalid map merges lifelong slam iros 2022probabilistic object map longterm robot localization iros 2022roll longterm robust lidarbased localization temporary mapping changing environment researcher tbd,"[('et', 'al'), ('dynamic', 'environment')]"
rbdl/rbdl,C++,rbdl rigid body dynamic library copyright c 20182022 martin felis martinfysxorg felix richter felixrichterinformatikuniheidelbergde introduction rbdl highly efficient c library contains essential rigid body dynamic algorithm articulated body algorithm aba forward dynamic recursive newtoneuler algorithm rnea inverse dynamic composite rigid body algorithm crba efficient computation joint space inertia matrix contains code jacobians forward inverse kinematics handling external constraint contact collision closedloop model code wa originally developed martin felis martinfysxorg research group optimization robotics biomechanics orb interdisciplinary center scientific computing iwr institute computer engineering heidelberg university code closely follows notation used roy featherstone book rigid body dynamic algorithm documentation documentation contained code extracted tool doxygen create documentation simply run doxygen doxyfile generate documentation subdirectory dochtml main page located dochtmlindexhtml online version generated documentation found vcpkg package manager window linux mac 082021 rbdl part microsofts vcpkg tool manage c dependency major operating system luamodel urdfmodel addon installed via vcpkg well addons may added future well install vcpkg making local clone github repo run vcpkgbootstrapper script set detailed installation instruction see install vcpkg integrate vcpkg visual studio visual studio code development environment see integrate vcpkg use vcpkg install update library see manage library vcpkg information vcpkg command see vcpkg commandline reference building rbdl source official rbdl git repository cloned see git client make sure submodules correctly downloaded clone repository recursively git clone recursive upgrading older version rbdl convenience script upgrade newest rbdl repository version upgradesh pull latest commits master also check correct version sub repository manual upgrading requires following git pull origin master git submodule update init building installation linux rbdl prior installation update apt system open terminal type sudo apt update sudo apt upgrade install git sudo apt install gitcore install cmake sudo apt install cmake install eigen3 rbdl us eigen3 efficient computation sudo apt install libeigen3dev install c compiler choice compiler large effect performance consider evaluating different compiler clang best performance sudo aptget install buildessential install cmakecurses optional planning taking advantage many addons build option recommend use cmakecurses make build configuration process faster le prone error sudo apt install cmakecursesgui install catch2 optional install catch2 want run rbdl test code moment linux distribution catch2 repository yet recommended install approach build source git clone branch v2x cd catch2 cmake bbuild h dbuildtestingoff sudo cmake build build target install build rbdl using cmake compile library separate directory release mode use mkdir rbdlbuild cd rbdlbuild cmake cmakebuildtyperelease rbdl make installed cmakecursesgui see available build option running cmakecurses mkdir rbdlbuild cd rbdlbuild ccmake rbdl point see full list build option rbdl recommend build run rbdl test code least building rbdl rbdlbuildtests runautomatictests linux rbdl documentation install doxygen sudo apt install doxygen build doxygen open terminal rbdl source directory type doxygen doxyfile open file dochtmlindexhtml webbrowser linux rbdl example install boost optional boost needed run many example simulation come rbdl sudo apt install libboostalldev linux rbdl addon dependency luamodel addon like load model file written lua rbdl without addon need build model programmatically read using urdf addon install lua51 sudo apt install lua51 sudo apt install liblua510dev build rbdl rbdlbuildaddonluamodel urdf addon like load model file written urdf rbdl addon us urdfparser library included submodule need cloned repository recursively missed intialize submodules terminal within source directory fact git submodule init git submodule update build rbdl rbdlbuildaddonurdfreader muscle addon like include muscle rbdl muscle millard et al build rbdl rbdlbuildaddongeometry rbdlbuildaddonmuscle geometry addon dependency cmake automatically include millard emonds al harant mombaur k reduced muscle model planar musculoskeletal model fit simulation wholebody movement journal biomechanics 2019 apr 10 muscle addon muscle fitting option like make use muscle fitting algorithm detailed millard et al install ipopt one easier way follow instruction ipopt online documentation guide process instruction build code appear readme located ipopt folder configure rbdl cmake file flag set rbdlbuildaddongeometry rbdlbuildaddonluamodel rbdlbuildaddonmuscle rbdlbuildaddonmusclefitting set customipoptpath main ipopt directory build rbdl update bashrc file ipopt lib folder ldlibrarypath export ipopthomehomemjhmilladevipopt3128 export ldlibrarypathldlibrarypathipopthomelib march 2019 muscle fitting code ha tested ipopt3128 millard emonds al harant mombaur k reduced muscle model planar musculoskeletal model fit simulation wholebody movement journal biomechanics 2019 apr 10 window although rbdl installed window none orb member currently us window unable provide detailed instruction python binding rbdl also build experimental python wrapper work pythonand pythonto enable rbdlbuildpythonwrapper cmake option build wrapper pythonif want use pythoninstead also enable rbdlusepython2 cmake option result extra python directory build directory within install using setuppy done automatically using make install linux python wrapper dependency install python3 numpy scipy matplotlib optional rbdl accessible python interested using rbdl python instruction using ubuntu 1804 later python3 come preinstalled check python3 command shell type python3 v already python3 installed systemwide get remaining library sudo apt install cython3 python3numpy python3scipy python3matplotlib using ubuntu 1804 currently python3 please look instruction online install library system build install rbdl rbdlbuildpythonwrapper note may need sudo privilege install rbdlegginfo file usrlocallibpython directory add rbdl python path update bashrc file python find python version rbdl need add path rbdlbuildpython pythonpath done adding following line bashrc file export pythonpathpythonpathpathtotherbdlbuilddirectorypython resource learn four main way learn anything appears rbdl example folder set deepdive example accompanied detailed documentation new rbdl start first also set minimalistic example example cover basic reasonably well currently many advanced item quaternion joint customjoints customconstraints musclefitting example doxygen documentation doxygen method component developed recently covered great detail eg millard2016torquemuscle class muscle addon doxygen well established method sparsely documented test code minimalistic example every command modeling component found test code eg rbdltests addonsgeometrytests addonsmuscletests etc specific command easily found using text editor search entire directory eg sublime text text file keyword literature addition featherstone text felis paper number exciting method modeling tool included rbdl appropriate literature reference mentioned doxygen method question citation overview theoretical implementation detail ha published ml auton robot 2017 41 495 cite rbdl academic research use following bibtex entry articlefelis2016 authorfelis martin l titlerbdl efficient rigidbody dynamic library using recursive algorithm journalautonomous robot year2016 pages117 issn15737527 doi101007s1051401695740 url licensing library published permissive zlib free software license allow use software wherever need full license text zlib license rbdl rigid body dynamic library copyright c 20112020 martin felis martinfysxorg software provided asis without express implied warranty event author held liable damage arising use software permission granted anyone use software purpose including commercial application alter redistribute freely subject following restriction origin software must misrepresented must claim wrote original software use software product acknowledgment product documentation would appreciated required altered source version must plainly marked must misrepresented original software notice may removed altered source distribution acknowledgement work library wa originally funded heidelberg graduate school mathematical computational method science hg european fp7 project echord grant number 231143 koroibot grant number 611909 work geometry muscle addons wa completed matthew millard matthewmillardinspounistuttgartde financial support deutsche forschungs gemeinschaft grant mi 210911 european commission within h2020 project spexor ga 687662 gratefully acknowledged,"[('sudo', 'apt'), ('apt', 'install')]"
PRBonn/kiss-icp,Python,kissicp readme support 28 number year 2023 codeurl contributing envision kissicp communitydriven project love see project growing thanks contribution community would love see face list open pull request sh git clone colcon build contributing envision kissicp communitydriven project love see project growing thanks contribution community would love see face list open pull request 1issicp communitydriven project love see project growing thanks contribution community would love see face list open pull request sh cd catkinws git clone catkin build detailed instruction wrapper please visit readme citation use library academic work please cite original paper bibtex articlevizzo2023ral author vizzo ignacio guadagnino tiziano mersch benedikt wiesmann louis behley jens stachniss cyrill title kissicp defense pointtopoint icp simple accurate robust registration done right way journal ieee robotics automation letter ral page 10291036 doi 101109lra20233236571 volume number year 2023 codeurl contributing envision kissicp communitydriven project love see project growing thanks contribution community would love see face list open pull request href img src,"[('love', 'see'), ('communitydriven', 'project')]"
PRBonn/bonnetal,Python,bonnetal build status example semantic segmentation people v background using one included realtime architecture running 100fps andres milioto etal university bonn early 2018 released bonnet realtime robotics oriented semantic segmentation framework using convolutional neural network cnns bonnet provides easy pipeline add architecture datasets semantic segmentation order train deploy cnns robot contains full training pipeline python using tensorflow opencv also c apps deploy cnn standalone c library made way allows add backends tensorrt back research wa field semantic segmentation wa framework wa therefore tailored specifically since found way make thing even awesome allowing suite task like classification detection instance semantic segmentation feature extraction counting etc hence new name new framework bonnetal reflects nothing old bonnet hopefully explict etal also spawn collaboration many pull request smile also switched pytorch allow easier mixing backbone decoder head different task still comfortable semantic segmentation andor fan tensorflow still find original bonnet otherwise keep reading try explain bonnetal rule disclaimer currently bringing functionality previously closedsource framework patient taskweights placeholder send email ask schedule particular part need description code provides framework mixmatch popular imagenettrained backbone different decoder achieve different cnnenabled task pretrained imagenet weight used get downloaded default condition met backbone included far resnet 18 resnet 34 resnet 50 resnet 101 resnet 152 darknet 53 darknet 21 erfnet mobilenetsv2 main reason lack variety backbone far imagenet pretraining take pretty resource intensive want new backbone implemented talk share resource pretrain smiley pr welcome wink task included fullimage classification train deploy semantic segmentation train deploy coming patience since development bit stagnant code like original bonnet separated training part developed python using pytorch deploymentinference part fully written c contains code run robot either using standalone docker nvidiadocker container provided run full framework dependency check well continuous integration check instruction run container docker training train contains python code easily mix match backbone decoder order train different image recognition task also contains helper script task converting graph onnx inference getting image statistic normalization class statistic dataset inference test accuracy assessment etc etc deployment deploy contains c code deployment edge every task ha library namespace every package catkin package therefore task hascatkin package lib package contains inference file library standalone package show use library linked standalone c application package contains node handler node use library sensor data messagepassing optionally msg package defines message required specific task required inference done either generating pytorch traced model python interface infered libtorch library gpu cpu generating onnx model python interface later picked tensorrt profiled individual computer looking available memory half precision capability inferer tensorrt engine notice architecture supported tensorrt cannot take responsibility implement architecture quick test work tensorrt training make life easier pretrained model imagenet pretrained weight backbone downloaded directly backbone first use never start scratch whenever use backbone task image rgb weight imagenet downloaded backbone unless specific pretrained model otherwise explicitly stated parameter currently trained model pretrained backbone resnet 18 resnet 34 resnet 50 resnet 101 resnet 152 darknet 21 darknet 53 erfnet mobilenetsv2 classification imagenet resnet50 256px resnet152 256px darknet53 256px darknet53 448px darknet21 256px darknet21 448px erfnet 256px mobilenetsv2 256px semantic segmentation person super fast jetson benchmark erfnet vga mobilenetsv2 aspp vga mobilenetsv2 aspp vga cityscape darknet21 aspp 512x1024px darknet53 aspp 512x1024px darknet53 aspp residual 512x1024px darknet53 aspp 1024x2048px mobilenetsv2 aspp 512x1024px mobilenetsv2 aspp attention 512x1024px mobilenetsv2 aspp residual 512x1024px erfnet 512x1024px erfnet 1024x2048px synthia mobilenetsv2 aspp 512px mapillary vista mobilenetsv2 aspp 512px darknet53 aspp 512px pascal voc 2012 mobilenetsv2 aspp 512px mobilenetsv2 aspp attention 512px mscoco panoptic mobilenetsv2 aspp 512px mobilenetsv2 aspp att 512px license bonnetal mit copyright 2019 andres milioto cyrill stachniss university bonn permission hereby granted free charge person obtaining copy software associated documentation file software deal software without restriction including without limitation right use copy modify merge publish distribute sublicense andor sell copy software permit person software furnished subject following condition copyright notice permission notice shall included copy substantial portion software software provided without warranty kind express implied including limited warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arising connection software use dealing software pretrained model model dataset dependent pretrained model specific dataset maintain copyright dataset imagenet link synthia link cityscape link mapillary link berkeley100k link apolloscape link person link coco link pascal link cropweed cwc link citation use framework academic work please cite original paper inproceedingsmilioto2019icra author milioto c stachniss title bonnet opensource training deployment framework semantic segmentation robotics using cnns booktitle proc ieee intl conf robotics automation icra year 2019 codeurl videourl use instance segmentation code please cite paper paper inproceedingsmilioto2019icrafiass author milioto l mandtler c stachniss title fast instance semantic segmentation exploiting local connectivity metric learning oneshot detection robotics booktitle proc ieee intl conf robotics automation icra year 2019 network either built directly top strongly based following architecture use academic work please give look paper cite think proper resnet link darknet link yolov3 link mobilenetsv2 link segnet link enet link erfnet link pspnet link deeplabv3 link useful github sync batchnorm allows train bigger net multigpu setup larger batch size batch norm diverge something represent data queueing tool nice queueing tool share gpu cpu memory resource multigpu environment pytorch backbone everything onnxtensorrt onnx graph tensorrt engine fast inference nvidiadocker docker allows also exploit nvidia gpu internal contributor present opensource commits andres milioto github university bonn linkedin researchgate google scholar ignacio vizzo github university bonn linkedin researchgate google scholar leonard mandtler linkedin jens behley github university bonn google scholar cyrill stachniss university bonn google scholar youtube acknowledgement work ha partly supported german research foundation germany excellence strategy exc2070 390732324 phenorob also thank nvidia corporation providing quadro p6000 gpu partially used develop framework,"[('mobilenetsv2', 'aspp'), ('semantic', 'segmentation')]"
BR-IDL/PaddleViT,Python,english paddlepaddle vision transformer github codefactor cla assistant github repo star stateoftheart visual transformer mlp model paddlepaddle robot paddlepaddle visual transformer paddlevit ppvit collection vision model beyond convolution model based visual transformer visual attention mlps etc paddlevit also integrates popular layer utility optimizers scheduler data augmentation trainingvalidation script paddlepaddle 21 aim reproduce wide variety stateoftheart vit mlp model full trainingvalidation procedure passionate making cutingedge cv technique easier use everyone robot paddlevit provides model tool multiple vision task classification object detection semantic segmentation gan model architecture defined standalone python module modified enable quick research experiment time pretrained weight downloaded used finetune datasets paddlevit also integrates popular tool module custimized dataset data preprocessing performance metric ddp robot paddlevit backed popular deep learning framework paddlepaddle also provide tutorial project paddle ai studio intuitive straightforward get started new user quick link paddlevit implement model architecture tool multiple vision task go following link detailed information paddlevitcls image classification paddlevitdet object detection paddlevitseg semantic segmentation paddlevitgan gans doc tutorial documentation docsexport exporte paddlevit model inference model produiction deployment also provide tutorial online course paddle aistudio chinese version feature stateoftheart stateoftheart transformer model multiple cv task stateoftheart data processing training method keep pushing forward easytouse tool easy configs model vairants modular design utiliy function tool low barrier educator practitioner unified framework model easily customizable need example model reproduce result model implementation exposed customize model file used independently quick experiment high performance ddp multiprocess trainingvalidation process run single gpu mixedprecision support amp model architecture image classification transformer vit google released paper image worth 16x16 word transformer image recognition scale alexey dosovitskiy lucas beyer alexander kolesnikov dirk weissenborn xiaohua zhai thomas unterthiner mostafa dehghani matthias minderer georg heigold sylvain gelly jakob uszkoreit neil houlsby deit facebook sorbonne released paper training dataefficient image transformer distillation attention hugo touvron matthieu cord matthijs douze francisco massa alexandre sablayrolles herve jegou swin transformer microsoft released paper swin transformer hierarchical vision transformer using shifted window ze liu yutong lin yue cao han hu yixuan wei zheng zhang stephen lin baining guo volo sea ai lab nu released paper volo vision outlooker visual recognition li yuan qibin hou zihang jiang jiashi feng shuicheng yan cswin transformer ustc microsoft released paper cswin transformer general vision transformer backbone crossshaped window xiaoyi dong jianmin bao dongdong chen weiming zhang nenghai yu lu yuan dong chen baining guo cait facebook sorbonne released paper going deeper image transformer hugo touvron matthieu cord alexandre sablayrolles gabriel synnaeve herve jegou pvtv2 njuhkunjustiiaisensetime released paper pvtv2 improved baseline pyramid vision transformer wenhai wang enze xie xiang li dengping fan kaitao song ding liang tong lu ping luo ling shao shuffle transformer tencent released paper shuffle transformer rethinking spatial shuffle vision transformer zilong huang youcheng ben guozhong luo pei cheng gang yu bin fu t2tvit nu yitu released paper tokenstotoken vit training vision transformer scratch imagenet li yuan yunpeng chen tao wang weihao yu yujun shi zihang jiang francis eh tay jiashi feng shuicheng yan crossvit ibm released paper crossvit crossattention multiscale vision transformer image classification chunfu chen quanfu fan rameswar panda beit microsoft research released paper beit bert pretraining image transformer hangbo bao li dong furu wei focal transformer microsoft released paper focal selfattention localglobal interaction vision transformer jianwei yang chunyuan li pengchuan zhang xiyang dai bin xiao lu yuan jianfeng gao mobilevit apple released paper mobilevit lightweight generalpurpose mobilefriendly vision transformer sachin mehta mohammad rastegari vip national university singapore released vision permutator permutable mlplike architecture visual recognition qibin hou zihang jiang li yuan mingming cheng shuicheng yan jiashi feng xcit facebookinriasorbonne released paper xcit crosscovariance image transformer alaaeldin elnouby hugo touvron mathilde caron piotr bojanowski matthijs douze armand joulin ivan laptev natalia neverova gabriel synnaeve jakob verbeek herve jegou pit naversogan university released paper rethinking spatial dimension vision transformer byeongho heo sangdoo yun dongyoon han sanghyuk chun junsuk choe seong joon oh halonet google released paper scaling local selfattention parameter efficient visual backbone ashish vaswani prajit ramachandran aravind srinivas niki parmar blake hechtman jonathon shlens poolformer sea ai labnus released paper metaformer actually need vision weihao yu mi luo pan zhou chenyang si yichen zhou xinchao wang jiashi feng shuicheng yan botnet uc berkeleygoogle released paper bottleneck transformer visual recognition aravind srinivas tsungyi lin niki parmar jonathon shlens pieter abbeel ashish vaswani cvt mcgillmicrosoft released paper cvt introducing convolution vision transformer haiping wu bin xiao noel codella mengchen liu xiyang dai lu yuan lei zhang hvt monash university released paper scalable vision transformer hierarchical pooling zizheng pan bohan zhuang jing liu haoyu jianfei cai topformer husttencentfudanzju released paper topformer token pyramid transformer mobile semantic segmentation wenqiang zhang zilong huang guozhong luo tao chen xinggang wang wenyu liu gang yu chunhua shen convnext fairucberkeley released paper convnet 2020s zhuang liu hanzi mao chaoyuan wu christoph feichtenhofer trevor darrell saining xie coat ucsd released paper coscale convattentional image transformer weijian xu yifan xu tyler chang zhuowen tu rest nju released paper rest efficient transformer visual recognition qinglong zhang yubin yang restv2 nju released paper rest v2 simpler faster stronger qinglong zhang yubin yang image classification mlp others mlpmixer google released paper mlpmixer allmlp architecture vision ilya tolstikhin neil houlsby alexander kolesnikov lucas beyer xiaohua zhai thomas unterthiner jessica yung andreas steiner daniel keysers jakob uszkoreit mario lucic alexey dosovitskiy resmlp facebooksorbonneinriavaleo released paper resmlp feedforward network image classification dataefficient training hugo touvron piotr bojanowski mathilde caron matthieu cord alaaeldin elnouby edouard grave gautier izacard armand joulin gabriel synnaeve jakob verbeek herve jegou gmlp google released paper pay attention mlps hanxiao liu zihang dai david r quoc v le ff oxford released paper even need attention stack feedforward layer doe surprisingly well imagenet luke melaskyriazi repmlp bnristtsinghuamegviiaberystwyth released paper repmlp reparameterizing convolution fullyconnected layer image recognition xiaohan ding chunlong xia xiangyu zhang xiaojie chu jungong han guiguang ding cyclemlp hkusensetime released paper cyclemlp mlplike architecture dense prediction shoufa chen enze xie chongjian ge ding liang ping luo convmixer anonymous released patch need anonymous convmlp uouiucpair released convmlp hierarchical convolutional mlps vision jiachen li ali hassani steven walton humphrey shi replknet tsinghuamegviiaberystwyth released scaling kernel 31x31 revisiting large kernel design cnns xiaohan ding xiangyu zhang yizhuang zhou jungong han guiguang ding jian sun mobileone apple released improved one millisecond mobile backbone pavan kumar anasosalu vasu james gabriel jeff zhu oncel tuzel anurag ranjan detection detr facebook released paper endtoend object detection transformer nicolas carion francisco massa gabriel synnaeve nicolas usunier alexander kirillov sergey zagoruyko swin transformer microsoft released paper swin transformer hierarchical vision transformer using shifted window ze liu yutong lin yue cao han hu yixuan wei zheng zhang stephen lin baining guo pvtv2 njuhkunjustiiaisensetime released paper pvtv2 improved baseline pyramid vision transformer wenhai wang enze xie xiang li dengping fan kaitao song ding liang tong lu ping luo ling shao coming soon focal transformer microsoft released paper focal selfattention localglobal interaction vision transformer jianwei yang chunyuan li pengchuan zhang xiyang dai bin xiao lu yuan jianfeng gao updetr tencent released paper updetr unsupervised pretraining object detection transformer zhigang dai bolun cai yugeng lin junying chen semantic segmentation setr fudanoxfordsurreytencentfacebook released paper rethinking semantic segmentation sequencetosequence perspective transformer sixiao zheng jiachen lu hengshuang zhao xiatian zhu zekun luo yabiao wang yanwei fu jianfeng feng tao xiang philip h torr li zhang dpt intel released paper vision transformer dense prediction rene ranftl alexey bochkovskiy vladlen koltun swin transformer microsoft released paper swin transformer hierarchical vision transformer using shifted window ze liu yutong lin yue cao han hu yixuan wei zheng zhang stephen lin baining guo segmenter inria realeased paper segmenter transformer semantic segmentation robin strudel ricardo garcia ivan laptev cordelia schmid trans2seg hkusensetimenju released paper segmenting transparent object wild transformer enze xie wenjia wang wenhai wang peize sun hang xu ding liang ping luo segformer hkunjunvidiacaltech released paper segformer simple efficient design semantic segmentation transformer enze xie wenhai wang zhiding yu anima anandkumar jose alvarez ping luo cswin transformer ustc microsoft released paper cswin transformer general vision transformer backbone crossshaped window topformer husttencentfudanzju released paper topformer token pyramid transformer mobile semantic segmentation coming soon ftn baidu released paper fully transformer network semantic image segmentation sitong wu tianyi wu fangjian lin shengwei tian guodong guo shuffle transformer tencent released paper shuffle transformer rethinking spatial shuffle vision transformer zilong huang youcheng ben guozhong luo pei cheng gang yu bin fu focal transformer microsoft released paper focal selfattention localglobal interaction vision transformer jianwei yang chunyuan li pengchuan zhang xiyang dai bin xiao lu yuan jianfeng gao xiaoyi dong jianmin bao dongdong chen weiming zhang nenghai yu lu yuan dong chen baining guo gan transgan seoul national university nuua released paper transgan two pure transformer make one strong gan scale yifan jiang shiyu chang zhangyang wang styleformer facebook sorbonne released paper styleformer transformer based generative adversarial network style vector jeeseung park younggeun kim coming soon vitgan ucsdgoogle released paper vitgan training gans vision transformer kwonjoon lee huiwen chang lu jiang han zhang zhuowen tu ce liu installation prerequistites linuxmacoswindows python 3637 paddlepaddle 210 cuda102 note recommended install latest version paddlepaddle avoid cuda error paddlevit training paddlepaddle please refer link stable version installation link develop version installation installation create conda virtual environment activate shell conda create n paddlevit python37 conda activate paddlevit install paddlepaddle following official instruction eg shell conda install paddlepaddlegpu212 cudatoolkit102 channel note please change paddlepaddle version cuda version accordingly environment install dependency package general dependency pip install yacs pyyaml package segmentation pip install cityscapesscripts install detail package shell git clone cd detailapipythonapi make make install package gan pip install lmdb clone project github git clone result model zoo image classification model acc1 acc5 params flop image size crop pct interp link vitbasepatch32224 8068 9561 882m 44g 224 0875 bicubic google vitbasepatch32384 8335 9684 882m 127g 384 10 bicubic google vitbasepatch16224 8458 9730 864m 170g 224 0875 bicubic google vitbasepatch16384 8599 9800 864m 498g 384 10 bicubic google vitlargepatch16224 8581 9782 3041m 599g 224 0875 bicubic google vitlargepatch16384 8708 9830 3041m 1759g 384 10 bicubic google vitlargepatch32384 8151 9609 3065m 444g 384 10 bicubic google swint224 8137 9554 283m 44g 224 09 bicubic google swins224 8321 9632 496m 86g 224 09 bicubic google swinb224 8360 9646 877m 153g 224 09 bicubic google swinb384 8448 9689 877m 455g 384 10 bicubic google swinb22422kto1k 8527 9756 877m 153g 224 09 bicubic google swinb38422kto1k 8643 9807 877m 455g 384 10 bicubic google swinl22422kto1k 8632 9790 1964m 343g 224 09 bicubic google swinl38422kto1k 8714 9823 1964m 1009g 384 10 bicubic google deittinydistilled224 7452 9190 59m 11g 224 0875 bicubic google deitsmalldistilled224 8117 9541 224m 43g 224 0875 bicubic google deitbasedistilled224 8332 9649 872m 170g 224 0875 bicubic google deitbasedistilled384 8543 9733 872m 499g 384 10 bicubic google volod1224 8412 9678 266m 66g 224 10 bicubic google volod1384 8524 9721 266m 195g 384 10 bicubic google volod2224 8511 9719 586m 137g 224 10 bicubic google volod2384 8604 9757 586m 407g 384 10 bicubic google volod3224 8541 9726 862m 198g 224 10 bicubic google volod3448 8650 9771 862m 803g 448 10 bicubic google volod4224 8589 9754 1928m 429g 224 10 bicubic google volod4448 8670 9785 1928m 1725g 448 10 bicubic google volod5224 8608 9758 2953m 706g 224 10 bicubic google volod5448 8692 9788 2953m 2838g 448 10 bicubic google volod5512 8705 9797 2953m 3713g 512 115 bicubic google cswintiny224 8281 9630 223m 42g 224 09 bicubic google cswinsmall224 8360 9658 346m 65g 224 09 bicubic google cswinbase224 8423 9691 774m 146g 224 09 bicubic google cswinbase384 8551 9748 774m 431g 384 10 bicubic google cswinlarge224 8652 9799 1733m 325g 224 09 bicubic google cswinlarge384 8749 9835 1733m 961g 384 10 bicubic google caitxxs24224 7838 9432 119m 22g 224 10 bicubic google caitxxs36224 7975 9488 172m 331g 224 10 bicubic google caitxxs24384 8097 9564 119m 68g 384 10 bicubic google caitxxs36384 8220 9615 172m 101g 384 10 bicubic google caits24224 8345 9657 468m 87g 224 10 bicubic google caitxs24384 8406 9689 265m 151g 384 10 bicubic google caits24384 8505 9734 468m 265g 384 10 bicubic google caits36384 8545 9748 681m 395g 384 10 bicubic google caitm36384 8606 9773 2707m 1562g 384 10 bicubic google caitm48448 8649 9775 3558m 2873g 448 10 bicubic google pvtv2b0 7047 9016 37m 06g 224 0875 bicubic google pvtv2b1 7870 9449 140m 21g 224 0875 bicubic google pvtv2b2 8202 9599 254m 40g 224 0875 bicubic google pvtv2b2linear 8206 9604 226m 39g 224 0875 bicubic google pvtv2b3 8314 9647 452m 68g 224 0875 bicubic google pvtv2b4 8361 9669 626m 100g 224 0875 bicubic google pvtv2b5 8377 9661 820m 115g 224 0875 bicubic google shufflevittiny 8239 9605 285m 46g 224 0875 bicubic google shufflevitsmall 8353 9657 501m 88g 224 0875 bicubic google shufflevitbase 8395 9691 884m 155g 224 0875 bicubic google t2tvit7 7168 9089 43m 10g 224 09 bicubic google t2tvit10 7515 9280 58m 13g 224 09 bicubic google t2tvit12 7648 9349 69m 15g 224 09 bicubic google t2tvit14 8150 9567 215m 44g 224 09 bicubic google t2tvit19 8193 9574 391m 78g 224 09 bicubic google t2tvit24 8228 9589 640m 128g 224 09 bicubic google t2tvitt14 8169 9585 215m 44g 224 09 bicubic google t2tvitt19 8244 9608 391m 79g 224 09 bicubic google t2tvitt24 8255 9607 640m 129g 224 09 bicubic google t2tvit14384 8334 9650 215m 130g 384 10 bicubic google crossvittiny224 7320 9190 69m 13g 224 0875 bicubic google crossvitsmall224 8101 9533 267m 52g 224 0875 bicubic google crossvitbase224 8212 9587 1047m 202g 224 0875 bicubic google crossvit9224 7378 9193 85m 16g 224 0875 bicubic google crossvit15224 8151 9572 274m 52g 224 0875 bicubic google crossvit18224 8229 9600 431m 83g 224 0875 bicubic google crossvit9dagger224 7692 9361 87m 17g 224 0875 bicubic google crossvit15dagger224 8223 9593 281m 56g 224 0875 bicubic google crossvit18dagger224 8251 9603 441m 87g 224 0875 bicubic google crossvit15dagger384 8375 9675 281m 164g 384 10 bicubic google crossvit18dagger384 8417 9682 441m 258g 384 10 bicubic google beitbasepatch16224pt22k 8521 9766 87m 127g 224 09 bicubic google beitbasepatch16384pt22k 8681 9814 87m 373g 384 10 bicubic google beitlargepatch16224pt22k 8748 9830 304m 450g 224 09 bicubic google beitlargepatch16384pt22k 8840 9860 304m 1317g 384 10 bicubic google beitlargepatch16512pt22k 8860 9866 304m 2340g 512 10 bicubic google focalt 8203 9586 289m 49g 224 0875 bicubic google focalt use conv 8270 9614 308m 49g 224 0875 bicubic google focals 8355 9629 511m 94g 224 0875 bicubic google focals use conv 8385 9647 531m 94g 224 0875 bicubic google focalb 8398 9648 898m 164g 224 0875 bicubic google focalb use conv 8418 9661 933m 164g 224 0875 bicubic google mobilevitxxs 7031 8968 132m 044g 256 10 bicubic google mobilevitxs 7447 9202 233m 095g 256 10 bicubic google mobilevits 7674 9308 559m 188g 256 10 bicubic google mobilevits dag 7783 9383 559m 188g 256 10 bicubic google vips7 8150 9576 251m 70g 224 0875 bicubic google vipm7 8275 9605 553m 164g 224 0875 bicubic google vipl7 8318 9637 878m 245g 224 0875 bicubic google xcitnano12p16224dist 7232 9086 06g 31m 224 10 bicubic google xcitnano12p16384dist 7546 9270 16g 31m 384 10 bicubic google xcitlarge24p16224dist 8492 9713 359g 1891m 224 10 bicubic google xcitlarge24p16384dist 8576 9754 1055g 1891m 384 10 bicubic google xcitnano12p8224dist 7633 9310 22g 30m 224 10 bicubic google xcitnano12p8384dist 7782 9404 63g 30m 384 10 bicubic google xcitlarge24p8224dist 8540 9740 1414g 1889m 224 10 bicubic google xcitlarge24p8384dist 8599 9769 4155g 1889m 384 10 bicubic google pitti 7291 9140 48m 05g 224 09 bicubic google pittidistill 7454 9210 51m 05g 224 09 bicubic google pitxs 7818 9416 105m 11g 224 09 bicubic google pitxsdistill 7931 9436 109m 11g 224 09 bicubic google pit 8108 9533 234m 24g 224 09 bicubic google pitsdistill 8199 9579 240m 25g 224 09 bicubic google pitb 8244 9571 735m 106g 224 09 bicubic google pitbdistill 8414 9686 745m 107g 224 09 bicubic google halonet26t 7910 9431 125m 32g 256 095 bicubic google halonet50ts 8165 9561 228m 51g 256 094 bicubic google poolformers12 7724 9351 119m 18g 224 09 bicubic google poolformers24 8033 9505 213m 34g 224 09 bicubic google poolformers36 8143 9545 308m 50g 224 09 bicubic google poolformerm36 8211 9569 561m 89g 224 095 bicubic google poolformerm48 8246 9596 734m 118g 224 095 bicubic google botnet50 7738 9356 209m 53g 224 0875 bicubic google cvt13224 8159 9567 20m 45g 224 0875 bicubic google cvt21224 8246 9600 32m 71g 224 0875 bicubic google cvt13384 8300 9636 20m 163g 384 10 bicubic google cvt21384 8327 9616 32m 249g 384 10 bicubic google cvt1338422k 8326 9709 20m 163g 384 10 bicubic google cvt2138422k 8491 9762 32m 249g 384 10 bicubic google cvtw2438422k 8758 9847 277m 1932g 384 10 bicubic google hvtti1 6945 8928 57m 06g 224 0875 bicubic google hvts0 8030 9515 220m 46g 224 0875 bicubic google hvts1 7806 9384 221m 24g 224 0875 bicubic google hvts2 7741 9348 221m 19g 224 0875 bicubic google hvts3 7630 9288 221m 16g 224 0875 bicubic google hvts4 7521 9234 221m 16g 224 0875 bicubic google mlpmixerb16224 7660 9223 600m 127g 224 0875 bicubic google mlpmixerl16224 7206 8767 2082m 449g 224 0875 bicubic google resmlp24224 7938 9455 300m 60g 224 0875 bicubic google resmlp36224 7977 9489 447m 90g 224 0875 bicubic google resmlpbig24224 8104 9502 1291m 1007g 224 0875 bicubic google resmlp12distilled224 7795 9356 153m 30g 224 0875 bicubic google resmlp24distilled224 8076 9522 300m 60g 224 0875 bicubic google resmlp36distilled224 8115 9548 447m 90g 224 0875 bicubic google resmlpbig24distilled224 8359 9665 1291m 1007g 224 0875 bicubic google resmlpbig2422k224 8440 9711 1291m 1007g 224 0875 bicubic google gmlps16224 7964 9463 194m 45g 224 0875 bicubic google ffonlytiny lineartiny 6128 8406 224 0875 bicubic google ffonlybase linearbase 7482 9171 224 0875 bicubic google repmlpres50light224 7701 9346 871m 33g 224 0875 bicubic google cyclemlpb1 7885 9460 151m 224 09 bicubic google cyclemlpb2 8158 9581 268m 224 09 bicubic google cyclemlpb3 8242 9607 383m 224 09 bicubic google cyclemlpb4 8296 9633 518m 224 0875 bicubic google cyclemlpb5 8325 9644 757m 224 0875 bicubic google convmixer102420 7694 9335 245m 95g 224 096 bicubic google convmixer76832 8016 9508 212m 208g 224 096 bicubic google convmixer153620 8137 9562 518m 724g 224 096 bicubic google convmlps 7676 9340 90m 24g 224 0875 bicubic google convmlpm 7903 9453 174m 40g 224 0875 bicubic google convmlpl 8015 9500 427m 100g 224 0875 bicubic google topformertiny 6598 8732 15m 013g 224 0875 bicubic google topformersmall 7244 9117 31m 024g 224 0875 bicubic google topformerbase 7525 9267 51m 037g 224 0875 bicubic google object detection model backbone boxmap model detr resnet50 420 google detr resnet101 435 google mask rcnn swint 1x 437 google mask rcnn swint 3x 460 google mask rcnn swins 3x 484 google mask rcnn pvtv2b0 383 google mask rcnn pvtv2b1 418 google mask rcnn pvtv2b2 452 google mask rcnn pvtv2b2linear 441 google mask rcnn pvtv2b3 469 google mask rcnn pvtv2b4 475 google mask rcnn pvtv2b5 474 google semantic segmentation pascal context model backbone batchsize miou miou msflip backbonecheckpoint modelcheckpoint configfile setrnaive vitlarge 16 5206 5257 google google config setrpup vitlarge 16 5390 5453 google google config setrmla vitlarge5439 5516 google google config setrmla vitlarge 16 5501 5587 google google config cityscape model backbone batchsize iteration miou miou msflip backbonecheckpoint modelcheckpoint configfile setrnaive vitlarge40k 7671 7903 google google config setrnaive vitlarge80k 7731 7943 google google config setrpup vitlarge40k 7792 7963 google google config setrpup vitlarge80k 7881 8043 google baidu config setrmla vitlarge40k 7670 7896 google baidu config setrmla vitlarge80k 7726 7927 google baidu config ade20k model backbone batchsize iteration miou miou msflip backbonecheckpoint modelcheckpoint configfile setrnaive vitlarge 16 160k 4757 4812 google baidu config setrpup vitlarge 16 160k 4912 4951 google baidu config setrmla vitlarge160k 4780 4934 google baidu config dpt vitlarge 16 160k 4721 google baidu config segmenter vittiny 16 160k 3845 todo baidu config segmenter vitsmall 16 160k 4607 todo baidu config segmenter vitbase 16 160k 4908 todo baidu config segmenter vitlarge 16 160k 5182 todo baidu config segmenterlinear deitbase 16 160k 4734 todo baidu config segmenter deitbase 16 160k 4927 todo baidu config segformer mitb0 16 160k 3837 todo baidu config segformer mitb1 16 160k 4220 todo baidu config segformer mitb2 16 160k 4638 todo baidu config segformer mitb3 16 160k 4835 todo baidu config segformer mitb4 16 160k 4901 todo baidu config segformer mitb5 16 160k 4973 todo baidu config upernet swintiny 16 160k 4490 4537 baidu config upernet swinsmall 16 160k 4788 4890 baidu config upernet swinbase 16 160k 4859 4904 baidu config upernet cswintiny 16 160k 4946 baidu baidu config upernet cswinsmall 16 160k 5088 baidu baidu config upernet cswinbase 16 160k 5064 baidu baidu config topformer topformerbase 16 160k 383 google google config topformer topformerbase 32 160k 392 google google config topformer topformersmall 16 160k 365 google google config topformer topformersmall 32 160k 370 google google config topformer topformertiny 16 160k 336 google google config topformer topformertiny 32 160k 346 google google config topformer topformertiny 16 160k 325 google google config topformer topformertiny 32 160k 334 google google config trans2segmedium resnet50c 32 160k 3681 google google config trans10kv2 model backbone batchsize iteration miou miou msflip backbonecheckpoint modelcheckpoint configfile trans2segmedium resnet50c 16 16k 7597 google google config gan model fid image size croppct interpolation model styleformercifar10 273 32 10 lanczos google styleformerstl10 1565 48 10 lanczos google styleformerceleba 332 64 10 lanczos google styleformerlsun 968 128 10 lanczos google result evaluated cifar10 stl10 celeba lsunchurch dataset using fid50kfull metric quick demo image classification use model pretrained weight go specific subfolder eg imageclassificationvit download pdparam weight file change related file path following python script model config file located configs assume downloaded weight file stored vitbasepatch16224pdparams use vitbasepatch16224 model python python config import getconfig visualtransformer import buildvit buildmodel config file configs config getconfig configsvitbasepatch16224yaml build model model buildmodelconfig load pretrained weight modelstatedict paddleload vitbasepatch16224pdparams modelsetdictmodelstatedict robot see readme file model folder detailed usage evaluation evaluate vit model performance imagenet2012 single gpu run following script using command line shell sh runevalsh shell cudavisibledevices0 python mainsinglegpupy cfgconfigsvitbasepatch16224yaml datasetimagenet2012 batchsize16 datapathpathtodatasetimagenetval eval pretrainedpathtopretrainedmodelvitbasepatch16224 pdparams needed run evaluation using multigpus shell sh runevalmultish shell cudavisibledevices0123 python mainmultigpupy cfgconfigsvitbasepatch16224yaml datasetimagenet2012 batchsize16 datapathpathtodatasetimagenetval eval pretrainedpathtopretrainedmodelvitbasepatch16224 pdparams needed training train vit model imagenet2012 single gpu run following script using command line shell sh runtrainsh shell cudavisibledevices0 python mainsinglegpupy cfgconfigsvitbasepatch16224yaml datasetimagenet2012 batchsize32 datapathpathtodatasetimagenettrain run training using multigpus shell sh runtrainmultish shell cudavisibledevices0123 python mainmultigpupy cfgconfigsvitbasepatch16224yaml datasetimagenet2012 batchsize16 datapathpathtodatasetimagenettrain contributing encourage appreciate contribution paddlevit project please refer workflow work style contributingmd license repo apache20 license contact please raise issue github,"[('bicubic', 'google'), ('224', '0875')]"
moonglow/pcan_cantact,Other,achtung read first copyright issue xcan firmware stm32f042 based board build workflow target hardware cantact opensource usbcan adapter project make cantact16 canable opensource usbcan adapter based cantact project make canable entree opensource usbc adapter based canable project make entree ollie opensource usbcan adapter isolated usb make ollie stm32f042 based board external internal osc toolchain gnu arm embedded toolchain license wtfpl,"[('opensource', 'usbcan'), ('usbcan', 'adapter')]"
url-kaist/UV-SLAM,C++,uvslam official page uvslam unconstrained linebased slam using vanishing point structural mapping published ieee ral icra 22 presentation option detail please refer journal arxiv video alvio uvslam img src img src result mapping result mh05difficult euroc datasets mapping result euroc datasets available alvio previous work uvslam img src img src img src installationprerequisites ubuntu 1804 melodic opencv 320 341 cere solver build cd yourworkspacesrc git clone recursive cd catkinmake source yourworkspacedevelsetupbashtrouble shooting installed vinsmono remove common package example benchmarkpublisher cameramodel etc run euroc datasets download euroc mav dataset open three terminal launch vinsestimator rviz play bag file respectively roslaunch uvslam euroclaunch roslaunch uvslam vinsrvizlaunch rosbag play dataset citation use algorithm academic context please cite following publication articlelim2022uv titleuvslam unconstrained linebased slam using vanishing point structural mapping authorlim hyunjun jeon jinwoo myung hyun journalieee robotics automation letter year2022 publisherieee volume7 number2 pages15181525 doi101109lra20223140816 inproceedingslim2021avoiding titleavoiding degeneracy monocular visual slam point line feature authorlim hyunjun kim yeeun jung kwangik hu sumin myung hyun booktitleproc ieee international conference robotics automation icra pages1167511681 year2021 acknowledgement use vinsmono baseline code thanks dr qin tong prof shen etc much line feature extraction use elsed vanishing point extraction use jlinkage 2line exhaustive searching method work wa financially supported part institute information communication technology planning evaluation iitp grant funded korea governmentmsit 2021000230 development realvirtual environmental analysis based adaptive interaction technology part defense challengeable future technology program agency defense development republic korea student supported korea ministry land infrastructure transport molit innovative talent education program smart city bk21 four licence source code released gplv3 license still working improving code reliability technical issue please contact hyunjun lim tp02134kaistackr,"[('img', 'src'), ('vanishing', 'point')]"
ros-planning/robot_pose_ekf,C++,robotposeekf build status,"[('robotposeekf', 'build'), ('build', 'status')]"
jedeschaud/ct_icp,C++,repository implement slam cticp see article lightweight precise versatile pure lidar odometry code run also independent library using script provide integrated python project pylidarslam give access datasets pylidarslam requires installation python binding cticp see news 27072022 new release increased support introduce new release significant change code guarantee result article branch though branch globally slam replicate result dataset see release icra2022 installation requirement compiler gcc 75 clang 801 cmake 314 tested compiler ubuntu 1804 gcc 75 ubuntu 1804 clang 801 stepclone directory bash git clone cd cticp stepsuperbuild cticp us kitware superbuild build external dependency either install external dependency use script install dependency bash mkdir cmakebuildsuperbuild cd cmakebuildsuperbuild creates cmake folder cmake superbuildconfigure step cmake build config release build step downloads install dependency add dwithviz3don install gui want build visualization forget add dwithviz3don everything worked directory install created root superbuildimportcmake file stepbuild install cticp library bash inside main directory mkdir cmakebuildrelease cd cmakebuildrelease create build directory cmake dcmakebuildtypereleaseconfigure desired option specify argument add dwithviz3don install gui cmake build target install config release parallel 12 build install project want build visualization forget add dwithviz3don everything worked fine cticp subdirectory appear superbuild directory use config file located superbuildinstalldircticplibcmake load library cmake project use specified executables stepros build wrapping cticp first build install cticp library see stepsand set cmake argument dwithroson configure stepof superbuild step install roscore library install shared library named roscore cticpinstalldircticplib bash cd rosroscore mkdir cmakebuildrelease cd cmakebuildrelease create build directory cmake dcmakebuildtypereleaseconfigure desired option specify argument dargnameargvalue cmake build target install config release parallel 12 build install roscore library make symbolic link directory cticpodometry slamroscore project src directory catkin workspace bash cd pathtoyourcatkinworkspacesrc move catkin workspace src directory ln pathtocticpgitprojectroscatkinwscticpodometry cticpodometry make symbolic link catkinws folder ln pathtocticpgitprojectroscatkinwsslamroscore slamroscore make symbolic link catkinws folder cd move back root catkin workspace catkinmake dsuperbuildinstalldirpathtosuperbuildinstalldir installation successful sourcing workspace devel directory able launch node installed wrapping defines following node cticpdatasetnode node publishes pointclouds cticp different datasets read disk cticpodometrynode main odometry node running cticp odometry roslaunch cticpodometry launchslamdatasetlaunch datasetpathpathtodatasetroot datasetdatasetname sequencesequencename install datasets cticp datasets article datasets publicly available folder protected following password npm3d dataset zip archive containing ply scan file relative timestamps point frame available ground truth pose install dataset simply download extract archive disk datasets redistribution existing copyrighted datasets offer convenient repackaging datasets dataset available following creative common attributionnoncommercialsharealike licence kitti see evalodometryphp popular benchmark odometry evaluation sensor velodyne hdl64 frame motioncompensated relativetimestamps continuoustime aspect cticp work dataset contains 21 sequence 40k frame 11 ground truth kittiraw see evalodometryphp dataset kitti without motioncompensation thus meaningful timestamps raw data sequence 03 available kitti360 see kitti360 successor kitti contains longer sequence timestamped point cloud sensor also velodyne hdl64 permissive license nclt see nclt velodyne hdl32 mounted segway 27 long sequence campus michigan university long challenging motion abrupt orientation change note dataset directly download velodyne link eg 20120108veltar code directly read velodynehitsbin file kitticarla see cite kitticarlasequences 5000 frame generated using carla simulator imitates kitti sensor configuration 64 channel rotating lidar simulated motion abrupt rotation parisluco published work cticp cf cite u single sequence taken around luxembourg garden hdl32 numerous dynamic object download rosbags run slam give list datasets worked rosbags propose roslaunch file urbanloco road dataset localization urban scene hilti benchmark precision mapping construction site subt subterrean datasets acquired context darpa subterrean challenge bu army research laboratory subt subterrean datasets acquired context darpa subterrean challenge bu army research laboratory newer college dataset large dataset handheld sensor acquired oxford datasets hesitate look awesome list list slam datasets running slam option using script cticp datasets installation cticp went fine executable located cticpinstalldirbinrunodometry executable run config file command runodometry c pathtoconfigfile see configodometrydrivingconfigyaml example format config file expect cticp wa installed viz3d slam run along gui otherwise trajectory metric saved disk regularly option ii using slam library installation also use cticp slamcore library located cticpinstalldirlib instance cmake project cmake config file library located cticpinstalldirlibcmake see example commandcmdrunodometrycpp commandodometryrunnerh example use custom datasets datasets defined library expected layout data see dataseth datasetcpp extend cticpadatasetsequence define custom datasets option iii using completing installation use launch file defined roscatkinwscticpodometrylaunch rosbag launch odometry eg roslaunch cticpodometry urbanlococallaunch rosbagpathtourbanlocorootca20190828190411bluralignbag citation use work research project please consider citing miscdellenbach2021cticp titlecticp realtime elastic lidar odometry loop closure authorpierre dellenbach jeanemmanuel deschaud bastien jacquet francois goulette year2021 eprint210912979 archiveprefixarxiv primaryclasscsro todos x write packaging v01 x update readmemd x add integration performance test synthetic data improve packaging robust real time datasets fix binding broken add testsautomatic build github ci add wiki documentation code,"[('add', 'dwithviz3don'), ('config', 'file')]"
Lionelsy/Conference-Accepted-Paper-List,Other,conference accepted paper list dblp aminer highly recommended utilize dblp aminer search quick link conference submission notification 2024 2023 2022 2021 2020 ijcai january april kdd february may cikm may august aaai aug november october january icml january may neurips may september iclr october january iros march june icra september january ijcai official collection year official website paper list deadline notification 2024 2023 website link 20230118 20230419 2022 link 20220114 20220420 2021 link 2020 link 2019 link 2018 link 2017 link 2016 link 2015 link kdd year official website paper list deadline notification 2024 2023 website link 20230202 20230516 2022 website link 20220210 20220519 2021 link 2020 link 2019 link 2018 link 2017 link cikm year official website paper list deadline notification 2024 2023 website link 20230526 20230804 2022 website link 2021 link 2020 link aaai year official website paper list deadline notification 2024 website 20230815 20231109 2023 website link 20220815 2022 link 2021 link 2020 link 2019 link 2018 link 2017 link 2016 link 2015 link www thewebconf year official website paper list deadline notification 2024 website 20231005 20240201 2023 website link 20221013 20230125 2022 link 20211021 20220113 2021 link 2020 link 2019 link 2018 link 2017 link icml year official website paper list deadline notification 2024 website 2023 website link 20230126 20230424 2022 website link 2021 website link 2020 website link 2019 website link neurips official collection year official website paper list deadline notification 2024 2023 website link 20230517 20230921 2022 website link 20220519 20220914 2021 link 2020 link 2019 link 2018 link iclr year official website paper list deadline notification 2024 website 20230921 20240115 2023 website link 20220928 20230121 2022 website link 2021 website link 2020 website link iros official collection year official website paper list deadline notification 2024 2023 website 20230301 20230630 2022 website link 20220301 20220630 2021 link 2020 link 2019 link 2018 link icra official collection year official website paper list deadline notification 2024 website 20230915 20231221 2023 website link 20220922 20230131 2022 link 2021 link 2020 link 2019 link 2018 link,"[('website', 'link'), ('paper', 'list')]"
pantor/frankx,C++,highlevel motion library franka emika robot frankx highlevel motion library c python franka emika robot add python wrapper around libfranka replacing necessary realtime programming higherlevel motion command frankx focus making realtime trajectory generation easy allows robot react unforeseen event installation start using frankx python libfranka 090 install via bash pip install frankx frankx based libfranka eigen transformation calculation pybind11 python binding frankx us ruckig community version online trajectory generation otg franka quite sensitive acceleration discontinuity requires constrained jerk motion installing dependency exact version found build install frankx via bash git clone recursesubmodules gitgithubcompantorfrankxgit cd frankx mkdir p build cd build cmake dbuildtyperelease make make install use frankx also include subproject parent cmake via addsubdirectoryfrankx targetlinklibrariestarget libfrankx need python module install frankx via bash pip install make sure built library found python adapting python path using docker use frankx within docker supplied dockerfile currently need build bash git clone cd frankx docker build pantorfrankx buildarg libfrankaversion070 f dockerdockerfile use another version libfranka default v070 simply change build argument run container simply bash docker run rm networkhost privileged pantorfrankx container requires access host machine network elevated user right allow docker user set rt capability process run within tutorial frankx come c python api differ regarding realtime capability introduce language next c project include include frankxfrankxhpp link library python import frankx first example four line code needed simple robotic motion cpp include using namespace frankx connect robot fci ip address robot robot1721602 reduce velocity acceleration robot robotsetdynamicrel005 move endeffector 20cm positive xdirection auto motion linearrelativemotionaffine02 00 00 finally move robot robotmovemotion corresponding program python py frankx import affine linearrelativemotion robot robot robot1721602 robotsetdynamicrel005 motion linearrelativemotionaffine02 00 00 robotmovemotion furthermore introduce method geometric calculation moving robot according different motion type implement realtime reaction changing waypoints real time well controlling gripper geometry frankxaffine thin wrapper around eigenaffine3d used cartesian pose frame transformation frankx simplifies usage euler angle default zyxconvention cpp initiliaze transformation x z a00 b00 c00 translation affine ztranslation affine00 00 05 define rotation transformation using x z b c parameter list affine zrotation affine00 00 00 mpi00 00 make use wonderful eigen library auto combinedtransformation ztranslation zrotation get euler angle b c vector representation eigenvector3d eulerangles combinedtransformationangles get vector representation x z b c affine transformation frankxvector6d pose combinedtransformationvector case distance rotation rad additionally several helper function conversion eigen libfranka stdarray object python translates py ztranslation affine00 00 05 zrotation affine00 00 00 mathpi00 00 combinedtransformation ztranslation zrotation two numpy array eulerangles combinedtransformationangles pose combinedtransformationvector trajectory generation work euler space please make sure continuous euler angle around working point adapt setting flange endeffector transformation via setee robot wrapped libfanka api including robotstate errormessage python moreover added method adapt dynamic robot motion rel name denotes factor maximum constraint robot py robot robot1721602 recover error robotrecoverfromerrors set velocity acceleration jerk toof maximum robotsetdynamicrel005 alternatively define constraint individually robotvelocityrel 02 robotaccelerationrel 01 robotjerkrel 001 get current pose currentpose robotcurrentpose motion type frankx defines five different motion type python use follows py pointtopoint motion joint space m1 jointmotion181194 117910 175710 21416 114336 163304 043217 linear motion cartesian space m2 linearmotionaffine02 04 03 mathpi00 00 m3 linearmotionaffine02 04 03 mathpi00 00 elbow17 target elbow angle linear motion cartesian space relative initial position m4 linearrelativemotionaffine00 01 00 complex motion defining multiple waypoints m5 waypointmotion waypointaffine02 04 02 03 02 01 following waypoint relative prior one waypointaffine00 01 00 waypointreferencetyperelative hold position m6 positionhold50 real robot moved applying motion robot using move py robotmovem1 robotmovem2 use given frame relative end effector cameraframe affine01 00 01 robotmovecameraframe m3 change dynamic motion use motiondata data motiondata02 using dynamicrel 02 eventually multiplied robotdynamicrel robotmovem4 data using motiondata adapt dynamic velocity acceleration jerk specific motion py datavelocityrel 10 datajerkrel 02 realtime reaction adding reaction motion data robot react unforeseen event python api define condition using comparison robot value given threshold threshold exceeded reaction fire following comparison currently implemented py reactionmotion linearrelativemotionaffine00 00 001 move 1cm stop motion overall force greater 30n d1 motiondatawithreactionreactionmeasureforcexyznorm 300 apply reaction motion force negative zdirection greater 10n d2 motiondatawithreactionreactionmeasureforcez 100 reactionmotion stop motion duration 30 d3 motiondatawithreactionreactionmeasuretime 300 robotmovem2 d2 check reaction wa triggered d2hasfired robotrecoverfromerrors print force exceeded 10n reaction ha fired neglected furthermore c additionally use lambda define complex behaviour cpp stop motion force 10n auto data motiondata withreaction measureforcexyznorm 100 n withreaction return statecurrenterrorsselfcollisionavoidanceviolation hold position 5 robotmovepositionhold50 data eg combined positionhold robot continues program pushing end effector realtime waypoint motion robot move background thread change waypoints realtime cpp robotmoveasyncmotionhold wait key input user stdcinget motionholdsetnextwaypointwaypointaffine00 00 01 waypointreferencetyperelative gripper frankxgripper class default gripper force gripper speed set additionally libfranka command following helper method used cpp auto gripper gripper1721602 default value grippergripperspeed 002 grippergripperforce 200 n preshape gripper grasp use given speed grippermove500 mm grasp object unknown width isgrasping gripperclamp something isgrasping gripperisgrasping release object move given distance isgrasping gripperrelease500 python api straightforward gripper class kinematics frankx includes rudimentary nonrealtimecapable forward inverse kinematics py initial joint configuration q 145549 115401 150061 230909 13141 19391 002815 calculate forward kinematics x affinekinematicsforwardq print current end effector position x define new target position xnew affinex01 y00 z00 x franka hasdofs remaining null space nullspace nullspacehandling2 14 set elbow joint 14 inverse kinematic target initial joint angle null space configuration qnew kinematicsinversexnewvector q nullspace print new position xnew print new joint qnew documentation autogenerated documentation found moreover multiple example c python example directory add detailed documentation frankx reach v10 development frankx written c17 python37 currently tested following version eigen v337 libfranka v090 pybind11 v291 catch2 v213 testing license noncommercial application software licensed lgpl v30 want use frankx within commercial application different license please contact u individual agreement,"[('00', '00'), ('affine00', '00')]"
fkromer/awesome-robotframework,Python,awesome robot framework awesome license cc byncsa 40 build status curated list awesome robot framework resource library deprecation notice repository process beeing handed robotframework organization feel free checkout repo fork content library tool resource training user library standard library builtin contains generic often needed keywords imported automatically thus always available collection contains keywords handling list dictionary datetime support creating verifying date time value well calculation dialog support pausing test execution getting input user operatingsystem enables performing various operating system related task process support executing process system screenshot provides keywords capture store screenshots desktop string library manipulating string verifying content telnet support connecting telnet server executing command opened connection xml library verifying modifying xml document mid level framework library android library keyword documentation library android automation need us calabash android internally anywherelibrary library testing singlepage apps spa us selenium webdriver appium internally appium library library android iostesting us appium internally djangolibrary library django python web framework drupal library library targeting drupal site built top selenium2library eclipse library library testing eclipse rcp application using swt widget imagehorizonlibrary keyword documentation crossplatform pure python library gui automation based image recognition io library library io automation need us calabash io server internally page object library library make possible use page object pattern testing web page swing library keyword documentation library testing java application swing gui white library wrap white framework automating window gui technology win32 winforms wpf swt applitools robot framework visual verification test library using applitools eye utilizes appiumlibrary orand seleniumlibrary low level driver library angularjs library angularjs extention library robotframework selenium2library archive library library handling zip tararchives autoit library window gui testing library us autoit freeware tool driver database library java javabased library database testing usable jython database library python python based library database testing work python interpreter including jython diff library library diff two file together excel library library provides keywords allow opening reading writing saving excel file ftp library library make possible test use ftp server using robot framework keywords http request java library http level testing using apache http client http request livetest library http level testing using livetest tool internally http request request library http level testing using request internally imap library library test imap email validation task json schema library json schema validation library robot framework mongodb library library interacting mongodb using pymongo mqtt library library provides keywords testing mqtt broker ncclientlibrary keyword documentation robotframework netconf wrapper library ncclient rammbock generic network protocol test library offer easy way specify network packet inspect result sent received packet restinstance robot framework test library restful json apis suds library keyword documentation library functional testing soapbased web service suds dynamic soap 11 client unix filesystem library unix filesystem testing robot framework debug library debug library robot framework robotframeworkadvancedlogging create additional log robotframeworkapachetomcat manage apache tomcat server robotframeworkaws keywords interacting aws service test suite robotframeworkbrowser automate browser using playwright robotframeworkcassandracqllibrary execute cql statement cassandra database robotframeworkconfluentkafkalibrary wrapper confluentkafkapython robotframeworkcouchdbaselibrary work couchbase robotframeworkcouchbasemanager manage couchbase server robotframeworkdatabaselib database lib based sqlalchemy robotframeworkdatatimetz datetime locale time zone robotframeworkdepnendencylibrary declare dependency robot framework test robotframeworkdocker work docker docker compose robotframeworkexcel10library basic control excel10 xlsx file robotframeworkexcellib work excel document robotframeworkeyeslibrary automate visual software testing robotframework client http server service make rest api testing easy robotframeworkipmilibrary test ipmi device robotframeworkjenkins jenkins interaction robotframeworkjsonvalidator json validation based jsonschema jsonpath jsonselect robotframeworkkeepasslibrary work keepass database robotframeworkkicadlibrary validate kicad design robotframeworkopenstflibrary openstf utility library robotframeworkoracledb work oracle database robotframeworkpabot run test parallel robotframeworkpostgresqldb work postgressql database robotframeworkrabbitmq work rabbitmq robotframeworkreact work reactjs based web application robotframeworkremotetransfer transfer screenshots remoteserver local machine robotframeworkrequestschecker check http response status code robotframeworkrequestslogging log http request response robotframeworkscreencaplibrary take screenshots video robotframeworkseleniumlibrary web testing based selenium robotframeworkseleniumscreenshots capture annotated screenshots seleniumlibrary robotframeworkseleniumtestability provides either manual automatic waiting asyncronous event within sut robotframeworksnmplibrary work snmp robotframeworksshlibrary test library ssh sftp robotframeworksshtunnellibrary connect remote host using ssh local forwarding robotframeworkstringformat string formatting robotframeworkstublibrary http need robotframeworktarantoollibrary work tarantool db robotframeworktestrail listener prerun modifier working testrail robotframeworkwebpack control webpack dev server robotframeworkwebsockerclient wrapper websocketclient module robotframeworkzookeepermanager manage apache zookeeper robotframeworkxvfb interact xvfb robotframeworkzoomba collection testing library spanning gui restsoap api window desktop automation winregistry work window registry robotframeworkopenafslibrary test library openafs distributed filesystem remote library example remotekeywordlibrary example remote server keywords library implementation java featured blog post written thomas jasper robotframeworkscalaremotelibrary example remote server keywords library implementation scala based blog post written thomas jasper tool builtin tool dbbot dbbot tool serialize robot framework test run result sqlite database rebot tool generating log report based xml output combining multiple output together robomachine modelbased testing robot framework libdoc tool generating keyword documentation test library resource file pabot parallel executor robot framework test case testdoc generates high level html documentation based robot framework test case tidy tool cleaning changing format robot framework test data file remote interface introduction remote interface list available remote server rfhub2 tool collecting browsing sharing documentation existing keywords written robotframework python build jenkins plugin plugin collect publish robot framework test result jenkins robotcorder chrome plugin record session robot framework maven plugin maven plugin using robot framework ant task ant task running robot framework test docker dockerrobotframework robot framework firefox chrome docker robotframeworkdistbot distribute test multiple machinesdocker container editor atom atom language robot framework robot framework syntax highlighting atom autocomplete robot framework robot framework autocomplete atom hyperclick robot framework robot framework hyperclick provider atom jupyter robotkernel robotframework kernel jupyter notebook xeusrobot jupyter kernel robot framework based native implementation jupyter protocol xeus vscode extension robotf extension robot framework intellisense ides robotframeworkworkbench collection tool working robotframework test suite resource file integration allurerobotframework robot framework integration allure robotframeworkrptools listener visitor module integration reportportal robotmk robot framework integration open source monitoring solution checkmk moleculerobotframework ansible molecule plugin running molecule test robot framework verification robot framework lint linter robot framework plain text file robocop static code analysis tool robot framework use latest robot api many builtin rule easily configured switched dashboard robotframeworkmetrics dashboard view execution result personal assistant robotframeworktestassistant use conversational ai test assistant control robot framework test suite rpa task voice text command performance rfswarm performance testing robotframework historic robotframeworkhistoric library capture generate historical report robot framework executor robotframeworkexecutor gui application run robot framework test feature like parellel execution batch monitor execution monitor historical stats downloads batchexecutionhistorical data csv bookmark test case etc resource robocon 2020 playlist robocon 2019 welcome back new since robocon 2018 start open source rpa movement evolution robot framework user decade seleniumlibrary browser ui automation robotframework embedded software testing renat network testing plugin based robot framework robot framework patient monitor test automation ge healthcare finland practical experience evaluating software testing tool robot jupyter future authoring test task dynamically scalable test environment top kubernetes dynamic generation model based testcases using listener interface versionlightning talk robotframeworkwhitelibrary lightning talk ii lightning talk iii devsecops embedded system lightning talk iv testing complext graphical application game robotframework lightning talk v robot framework testing cloud lightning talk vi robot framework automation turning test result big data robocon 2018 get go next naked truth successful test automation journey mega robot project expect robot framework plone cm project importance open source community towards contract based api testing new rest json test library extending seleniumlibrary 30 design pattern efficient multiplatform parallel test execution pabot official doc robot framework introduction quickstart guide user guide write good test case book robot framework test automation heavydollarsign moocs robot framework test automation leveludemy heavydollarsign robot framework test automation leveludemy heavydollarsign robot framework test automation saucelabs integration udemy heavydollarsign robot framework jenkins ci git version control udemy heavydollarsign thesis datadriven keyworddriven test automation framework master thesis pekka laukkanen web application test automation robot framework bachelor thesis jani luostarinen shared code repository marketsquare community run collection repository robot framework originally featured robocon 2020 lightning talk presented edward manlove training facetoface testautomatisierung mit dem robot framework intensivtraining codecentric heavydollarsign test automation using robot framework tesena heavydollarsign scripting robot framework utilizing python heavydollarsign live robot framework online training prezi heavydollarsign robot framework certification training sulekha heavydollarsign repo robot framework cookbook user abb robotics agile robotics ag kuka ag,"[('robot', 'framework'), ('framework', 'test')]"
avisingh599/reward-learning-rl,Python,rewardlearningrl repository official implementation following paper endtoend robotic reinforcement learning without reward engineering avi singh larry yang kristian hartikainen chelsea finn sergey levine robotics science system 2019 website video arxiv visual draping visual pushing visual bookshelf visual door opening visual pusher visual picker propose method endtoend learning robotic skill real world using deep reinforcement learning learn policy directly pixel observation without handengineered taskspecific reward function instead learn reward task small number userprovided goal example around 80 followed modest number active query around 2575 implementation based softlearning getting started prerequisite environment run either locally using conda inside docker container conda installation need conda installed docker installation need docker docker compose installed also environment currently require mujoco license conda installation download install mujoco 150 mujoco website assume mujoco file extracted default location mujocomjpro150 copy mujoco license key mjkeytxt mujocomjkeytxt clone rewardlearningrl git clone rewardlearningpath create activate conda environment install softlearning enable command line interface cd rewardlearningpath conda env create f environmentyml conda activate softlearning pip install e rewardlearningpath environment ready run see example section example train simulate agent finally deactivate remove conda environment conda deactivate conda remove name softlearning docker installation dockercompose build image run container export mjkeycat mujocomjkeytxt dockercompose f dockerdockercomposedevgpuyml forcerecreate access container typical docker exec ie docker exec softlearning bash see example section example train simulate agent finally clean docker setup dockercompose f dockerdockercomposedevgpuyml rmi volume example training agent softlearning runexamplelocal examplesclassifierrl ngoalexamples 10 taskimage48sawyerdoorpullhookenvv0 algorithm viceraq numsamples nepochs 300 activequeryfrequency 10 task used paper image48sawyerpushforwardenvv0 image48sawyerdoorpullhookenvv0 image48sawyerpickandplace3denvv0 algorithm experiment viceraq vice raq sacclassifier sac numsamples flag specifies number random seed launched result paper averaged across five random seed hyperparameters stored examplesclassifierrlvariantspy examplesclassifierrlmain contains several different environment information agent configuration run script help flag python examplesclassifierrlmainpy help version history v01 version contains code reproduce result singh et al r 2019 citation codebase help academic research encouraged cite paper example bibtex articlesingh2019 titleendtoend robotic reinforcement learning without reward engineering authoravi singh larry yang kristian hartikainen chelsea finn sergey levine journalrobotics science system year2019 mainly use vice algorithm implemented also cite articlefu2018 titlevariational inverse control event general framework datadriven reward definition authorjustin fu avi singh dibya ghosh larry yang sergey levine journalneural information processing system year2018,"[('reinforcement', 'learning'), ('larry', 'yang')]"
visose/Robots,Other,failtoloadreadme,[]
wangcongrobot/awesome-isaac-gym,Other,awesome nvidia isaac gym collect related resource nvidia isaac gym news physxnvidia physxsdk 02072022 isaac gym preview130 available 23032022 gtc2022 isaac gym next generation highperformance reinforcement learning omniverse 29102021 isaac gym previewis available nvidia isaac sim omniverse available open beta 21062021 isaac gym isaac gym endtoend gpuaccelerated reinforcement learning official resource omniisaacgymenvs isaac gym isaac sdk isaac gym forum isaac sim gtc 2021 simtoreal isaac sim video toturials training jetbot nvidia isaac sim training nvidia jetbot avoid collision using nvidia isaac sim introducing nvidia isaac gym endtoend reinforcement learning robotics accelerating robotics simulation nvidia omniverse isaac sim developing robotics application python nvidia isaac sdk building intelligent robot dog nvidia isaac sdk youtube video nvidiaomniverse gtc isaac gym omniverse high performance reinforcement learning evolved a31118 learning challenging task quadrupedal robot simulation reality a31308 simtoreal isaac sim isaac gym endtoend gpuaccelerated reinforcement learning bridging sim2real gap simulation tuning training deep learning robotic perception model reinforcement learning intralogistics soft actor critic maple navigation warehouse building robotics application using nvidia isaac sdk nvidia isaac sim amazing robot model task simulated isaac sim 20201 building robotics application using nvidia isaac sdk simtoreal isaac sim omniverse view 20212 application tour isaac sim introduction live demo nvidia ondemand isaac sim paper manipulation rlafford official implementation rlafford endtoend affordance learning reinforcement learning icra 2023 mvp masked visual pretraining robotics rss2022 factory fast contact robotic assembly paper project code siggraph2022 ase largescale reusable adversarial skill embeddings physically simulated character paper project code arxiv2021 datadriven operational space control adaptative robust robot manipulation project paper code rss2021dosim dosim workshop deformable object simulation robotics link icra2021 causal reasoning simulationfor structure transfer learning robot manipulation policy paper project rss2021 dosim workshop defgraspsim simulationbased grasping 3d deformable object paper project video code arxiv2021 searchbased task planning learned skill effect model lifelong robotic manipulation paper project 2021 deformationaware datadriven grasp synthesis paper 2021 transferring dexterous manipulation gpu simulation remote realworld trifinger project paper code icra2021 inhand object pose tracking via contact feedback gpuaccelerated robotic simulation paper project iros2021 reactive long horizon task execution via visual skill precondition model paper video corl2021 storm integrated framework fast jointspace modelpredictive control reactive manipulation paper project code icra2021 simtoreal robotic tactile sensing via physicsbased simulation learned latent projection paper 2021 deformernet deep learning approach 3d deformable object manipulation paper rss2021vlrr simple method complex inhand manipulation paper project localization corl2021 learning walk minute using massively parallel deep reinforcement learning paper openreview code project icra2021 dynamic randomization revisiteda case study quadrupedal locomotion project paper video 2021 glide generalizable quadrupedal locomotion diverse environment centroidal model project paper corl2020 learning contactadaptive controller robust efficient legged locomotion paper video project blog ral2021 learning state representation navigation cluttered dynamic environment paper corl2020 learning compose hierarchical objectcentric controller robotic manipulation paper project others arxiv2021 bayessimig scalable parameter inference adaptive domain randomization isaac gym paper code 2021 articulated object interaction unknown scene wholebody mobile manipulation paper video project neurips2021 isaac gym high performance gpubased physic simulation robot learning project paper openreview rss2020 learning active taskoriented exploration policy bridging simtoreal gap paper project icra2019 closing simtoreal loop adapting simulation randomization real world experience paper video project corl2018 gpuaccelerated robotics simulation distributed reinforcement learning paper project rl library rl library support training isaac gym vrkitchen20indoorkit omniverse indoorkit extension rlgames rl algorithm isaac gym elegantrl skrl paper related github repos isaacgymenvs isaacgymhammering isaacgymutils developed cmu intelligent autonomous manipulation lab isaacgymsandbox thormang3gogoroppo steeringbased control twowheeled vehicle using rlppo nvidia isaac gym dvrkissacgym link dvrkshapeservoing codebasethesis bittleurdf scenecollisionnet td3 applied bittle robot isaac sim isaacmanipularl deep reinforcement learning framework manipulator based nvidia isaacgym additional add sac2019 reinforcement learning demonstration algorithm leggedgymisaac minimalisaacgym dexteroushands library provides dual dexterous hand manipulation task isaac gym safe multiagent isaac gym benchmark safe multiagent isaac gym benchmark safe multiagent reinforcement learning research bezisaacgym isaac gym reinforcement learning environment humanoid robot bez bimanualofflinerl isaacrovermarsgym isaacrover20 rapid locomotion walktheseways go1 simtoreal locomotion starter kit walktheseways a1 simtoreal locomotion starter kit shifu lightweight isaac gym environment builder robot dofbot reacher dofbot reacher reinforcement learning sim2real environment omniverse isaac gymsim ur10reacher ur10 reacher reinforcement learning sim2real environment omniverse isaac gymsim minimalisaacgym minimal example isaac gym dqn ppo timechamber massively parallel large scale selfplay framework rofunc full process python package robot learning demonstration rlmpclocomotion deep rl mpc control quadruped robot locomotion tutorial video rss2021 workshop isaac gym partintroduction getting started isaac gym partenvironments training tip isaac gym part 3a academic lab university toronto isaac gym part 3b academic lab imlab isaac gym part 3c academic lab stanford university isaac gym part 3d academic lab softbody simulation isaac gym part 3e academic lab eth zurich isaac gym partnew frontier endtoend gpu accelerated reinforcement learning video import robot isaac sim nvidia omniverse youtube nvidia omniverse basic demo nvidia isaac simulator partbasic demo nvidia isaac simulator partintroduction live demo isaac sim community stream point cloud material graph explore latest omniverse create 20213 robot autonomy digital twin isaac sim simulate real robot journey trying find high quality physic simulator robot dogquadruped using petoi bittle case teaching robot walk w reinforcement learning robot sim adventure video part two covering attempt get reinforcement learning work bittle robot isaac sim robot dog learns walk bittle reinforcement learning p3 progress using reinforcement learning train robot dogsquadrupeds walk blog brief introduction nvidia omniverse,"[('isaac', 'gym'), ('reinforcement', 'learning')]"
cogsys-tuebingen/gerona,C++,gerona generic robot navigation continuousintegration project contains set package provide navigation suite including path planning given map controlling robot follow path obstacle avoidance driving package build goal get modular easily extensible framework new module eg kinematic model new robot new obstacle avoidance algorithm etc added minimal effort following video demonstrates various supported robot kinematics gerona generic robot navigation video installation first install dependency example workspace root directory cd src git clone git clone cd rosdep install frompaths r src either use catkinmake catkinmakeisolated catkin build build software quick start really quick quick start guide detailed explanation see send goal node start complete navigation project well node slam obstacle detection using 2d laser simply run roslaunch navigationlaunch navigationlaunch everything set node connect navigatetogoal action server send goal set goal manually using rviz want set goal pose manually using rviz eg testing demonstration purpose run roslaunch navigationlaunch rvizcontrolledlaunch select robot controllermodel default controller carlike robot used ackermannpurepursuit change simply set environment variable robotcontroller name contproller want use example use omnidrive orthexp controller export robotcontrolleromniorthexp roslaunch navigationlaunch navigationlaunch controller also set via parameter rosparam set pathfollowercontrollertype omniorthexp information please take look example launch file customize parameter launch file information please refer wiki,"[('roslaunch', 'navigationlaunch'), ('gerona', 'generic')]"
protontypes/awesome-robotic-tooling,Other,awesome robotic tooling awesome curated list tooling professional robotic development c python touch autonomous driving aerospace stop reinventing wheel need know wheel list attempt show variety open free tool software hardware development useful professional robotic development contribution necessary keep list alive increase quality expand read origin participate contribution guide related blog post new project entry tweet protontypes join chat content communication coordination documentation presentation requirement safety architecture design framework stack development environment code run template build deploy unit integration test lint format debugging tracing version control simulation electronics mechanic sensor processing calibration transformation perception pipeline machine learning parallel processing image processing radar processing lidar point cloud processing localization state estimation simultaneous localization mapping lidar visual vector map prediction behavior decision planning control user interaction graphical user interface acoustic user interface command line interface data visualization mission control annotation point cloud rviz operation system monitoring database record network distributed file system server infrastructure high performance computing embedded operation system realtime kernel network middleware ethernet wireless networking controller area network sensor acuator interface security datasets communication coordination agile development manifesto agile software development gitflow make parallel development easy isolating new development finished work deepl online translator outperforms google microsoft facebook taiga agile projectmanagment tool kanboard minimalistic kanban board kanban free open source selfhosted kanban board gitlab issue gitlab simple selfhosted gitlab server docker gogs build simple stable extensible selfhosted git service setup painless way wekan meteor based kanban board jira api python library rest api jira taiga api python library rest api taiga chronostimetracker desktop client jira track time upload worklogs without hassle grge grge daemon command line utility augmenting gitlab gitlabtriage gitlab issue merge request triage automated helpy modern open source helpdesk customer support application onlyoffice free open source collaborative system developed manage document project customer relationship email correspondence one place discourse platform community discussion free open simple gerrit code review project management tool git based project jitsimeet secure simple scalable video conference use standalone app embed web application mattermost open source private cloud slackalternative openproject leading open source project management software leantime leantime lean project management system innovator gitter gitter chat networking platform help manage grow connect community messaging content discovery documentation presentation typora minimalist markdown editor markor simple markdown editor android device pandoc universal markup converter yaspeller command line tool spell checking readthedocs build local readthedocs server doxygen doxygen de facto standard tool generating documentation annotated c source sphinx tool make easy create intelligent beautiful documentation python project wordtomarkdown ruby gem liberate content microsoft word document paperless index archive scanned paper document carbon share beautiful image source code undraw free professional business svgs easy customize asciinema let easily record terminal session replay terminal well web browser inkscape inkscape professional vector graphic editor linux window macos revealhugo hugo theme revealjs make authoring customization breeze turn properlyformatted hugo content html presentation hugowebslides hugo template create webslides presentation using markdown jupyter2slides cloud native presentation slide jupyter notebook revealjs patat terminalbased presentation using pandoc githubchangeloggenerator automatically generate change log tag issue label pull request github gitlabreleasenotegenerator gitlab release note generator generates release note latest tag ocrmypdf add ocr text layer scanned pdf file allowing searched papermill tool parameterizing executing analyzing jupyter notebook docsy example documentation site using docsy hugo theme actionshugo deploy website based hugo github page overleaf opensource online realtime collaborative latex editor landslide generate html5 slideshows markdown rest textile libreofficeimpresstemplates freelylicensed libreoffice impress template opensourcedesign community resource free design logo creation olive free nonlinear video editor aiming provide fullyfeatured alternative highend professional video editing software buku browserindependent bookmark manager swiftlatex wysiwyg browserbased latex editor relaxed allows complex pdf layout defined cs javascript writing content friendly minimal syntax close markdown latex foam foam personal knowledge management sharing system inspired roam research built visual studio code github codimd open source online realtime collaborate team documentation markdown jupyterbook build interactive publicationquality document jupyter notebook invoicenet deep neural network extract intelligent information invoice document tesseract open source ocr engine mkdocs fast simple downright gorgeous static site generator geared towards building project documentation plotneuralnet latex code drawing neural network report presentation excalidraw virtual whiteboard sketching handdrawn like diagram svgrepo download free svg vector commercial use gollum simple gitpowered wiki sweet api local frontend ganttlab easy use fully functional gantt chart gitlab github zotero free easytouse tool help collect organize cite share research source requirement safety awesomesafetycritical list resource programming practice writing safetycritical software openautonomoussafety oas fully opensource library voyage safety process testing procedure designed supplement existing safety program selfdriving car startup across world carndfunctionalsafetyproject create functional safety document udacity project automated valet parking safety document created support safe testing automated valet parking function using streetdrone test vehicle car park safenumerics replacement standard numeric type throw exception error air vehicle c development coding standard provide direction guidance c programmer enable employ good programming style proven programming practice leading safe reliable testable maintainable code autosar coding standard guideline use c14 language critical safetyrelated system wmodel lean scaled agility engineering ford applied agile vmodel method vector used safety related project management doorstop requirement management using version control capella comprehensive extensible fieldproven mbse tool method successfully design system architecture robmosys robmosys envisions integrated approach built top current codecentric robotic platform applying modeldriven method tool papyrus robotics graphical editing tool robotic application complies robmosys approach fossology toolkit run license copyright export control scan command line scenarioarchitect scenario architect basic python tool generate import export short scene snapshot architecture design guideline architect rosbased system yed powerful desktop application used quickly effectively generate highquality diagram yedpy generates graphml opened yed plantuml web application generate uml diagram onthefly live documentation rqtgraph provides gui plugin visualizing computation graph rqtlaunchtree rqt plugin hierarchical launchfile configuration introspection cppdependencies tool check c include dependency dependency graph created dot format pydeps python module dependency graph aztarna footprinting tool robot drawio free online diagram software making flowchart process diagram org chart uml er network diagram vscodedrawio extension integrates drawio v code architecturedecisionrecord document capture important architectural decision made along context consequence framework stack robot operating system provides library tool help software developer create robot application awesomeros2 curated list awesome robot operating system version 20 rosresources library autowareauto autowareauto applies bestinclass software engineering autonomous driving autowareai autowareai world first allinone opensource software autonomous driving technology openpilot open source adaptive cruise control acc lane keeping assist system lkas apollo high performance flexible architecture accelerates development testing deployment autonomous vehicle pythonrobotics python code collection robotics algorithm especially autonomous navigation stanford self driving car code stanford code car entered darpa grand challenge astrobee astrobee freeflying robot designed operate payload inside international space station carmaplatform enables cooperative automated driving plugin automotive grade linux automotive grade linux collaborative open source project bringing together automaker supplier technology company accelerate development adoption fully open software stack connected car px4 open source flight control software drone unmanned vehicle kubos opensource software stack satellite modvehicledynamicscontrol tum roborace team software stack path tracking control velocity control curvature control state estimation aslan open source selfdriving software low speed environment opensourcerover buildityourself 6wheel rover based rover mar jpl pybotics opensource peerreviewed python toolbox robot kinematics calibration makani contains working makani flight simulator controller autopilot visualizer command center flight monitoring tool mirrobot community project use mir robot compas robotic fabrication package compas framework jderobot academy jderobot academy open source collection exercise learn robotics practical way clover rosbased framework rpi image control px4powered drone ardupilot open source control software autonomous vehicle coptersplanesroversboatssubmersibles f prime componentdriven framework enables rapid development deployment spaceflight embedded software application development environment code run vimros vim plugin development visual studio code code editor editbuilddebug cycle atom hackable text editor 21st century teletype share workspace team member collaborate code real time atom sublime sophisticated text editor code markup prose adecli ade development environment ade us docker gitlab manage environment per project development tool optional volume image recipewizard dockerfile generator running opengl glx application nvidiadocker2 cuda gazebo remote headless server system jupyter jupyter widget helper robot operating system rosrqtplugin qt creator plugin python xeuscling jupyter kernel c programming language ides page collect experience advice using integrated development environment ides tabnine alllanguage autocompleter kite use machine learning give useful code completion python jedi autocompletion static analysis library python roslibpy python bridge library allows use python ironpython interact opensource robotic middleware pybind11 seamless operability c11 python sourcetrail free opensource crossplatform source explorer rebound commandline tool instantly fetch stack overflow result exception thrown mybinder open notebook executable environment making code immediately reproducible anyone anywhere rosonwindows experimental release ros1 window liveshare realtime collaborative development comfort favorite tool cocalc collaborative calculation cloud easyclangcomplete robust cc code completion sublime textvscoderos visual studio code extension robot operating system development awesomehpp curated list awesome headeronly c library gitpod open source developer platform automates provisioning readytocode development environment template template node standardization c launch template create launch file larger project bash bash scripting template incorporating best practice several useful function urdf example create unified robot description format urdf different kind robot python style guide followed writing python code docker dockerfile minimalade project show minimal example create custom base image v code ros2 workspace template template using vscode ide ros2 development build deploy qemuuserstatic enable execution different multiarchitecture container qemu binfmtmisc cross compile roson qnx introduces cross compile roson qnx bloom release automation tool make releasing catkin package easier superflore extended platform release manager robot operating system catkintools command line tool working catkin industrialci easy continuous integration repository repository rosgitlabci contains helper script instruction use continuous integration ci project hosted gitlab instance gitlabrunner run test sends result gitlab colconcore command line tool improve workflow building testing using multiple software package gitlabrelease simple python3 script upload file ci current project release tag clang compiler frontend c family language c c objectivec objectivec built part llvm compiler infrastructure project catkinvirtualenv bundle python requirement catkin package via virtualenv pyenv simple python version management aptly debian repository management tool crosscompile asset used ros2 crosscompilation dockerimages official docker image maintained osrf ros2 gazebo robotupstart present suite script assist launching background process ubuntu linux pc robotsystemd unit managing startup shutdown roscore roslaunch ryoiso modern iso builder streamlines process deploying complete robot operating system yaml config file networkautoconfig automatic configuration networking use case without impacting usage require manual configuration rosbuild build farm cro single thread pure c implementation framework unit integration test setupros action set rosenvironment use github action unittesting page lay rationale best practice policy writing running unit test integration test googletest google c test framework pytest pytest framework make easy write small test yet scale support complex functional testing doctest fastest featurerich c11141720 singleheader testing framework unit test tdd osrftestingtoolscpp contains testing tool c used osrf project codecoverage package run coverage testing actionrosci github action build test rospackages using colcon lint format actionroslint github action run linters rospackages cppcheck static analysis cc code hadolint dockerfile linter validate inline bash written haskell shellcheck static analysis tool shell script catkinlint check package configuration catkin build system pylint pylint python static code analysis tool look programming error help enforcing coding standard sniff code smell offer simple refactoring suggestion black uncompromising python code formatter pydocstyle static analysis tool checking compliance python docstring convention haros static analysis application code pydantic data parsing validation using python type hint debugging tracing heaptrack trace memory allocation annotates event stack trace ros2tracing tracing tool roslinuxperf various linux performance material lptrace let see realtime function python program running pyrecheck performant typechecking python flamegraph visualize profiled code gpuvis gpu trace visualizer sanitizer addresssanitizer threadsanitizer memorysanitizer cppinsights c insight see source code eye compiler inspect inspect module provides function learning live object including module class instance function method roslaunch node valgrind gdb debugging roscpp node launching roslaunch may wish launch node debugging program like gdb valgrind instead pyperformance python performance benchmark suite qira qira competitor strace gdb gdbfrontend gdbfrontend easy flexible extensionable gui debugger lttng open source software toolkit use simultaneously trace linux kernel user application user library ros2performance allows easily create arbitrary ros2 system measure performance bcc tool bpfbased linux io analysis networking monitoring tracy real time nanosecond resolution remote telemetry frame profiler game application bpftrace highlevel tracing language linux ebpf pudb fullscreen console debugger python backwardcpp beautiful stack trace pretty printer c gdbdashboard gdb dashboard standalone gdbinit file written using python api enables modular interface showing relevant information program debugged hotspot linux perf gui performance analysis memoryprofiler python module monitoring memory consumption process well linebyline analysis memory consumption python program ros1fuzzer fuzzer aim help developer researcher find bug vulnerability node performing fuzz test topic target node process vscodedebugvisualizer extension v code visualizes data debugging actiontmate debug github action via ssh using tmate get access runner system libstatisticscollector roslibrary providing class collect measurement calculate statistic across systemmetricscollector lightweight realtime system metric collector ros2 system version control gitfuzzy cli interface git relies heavily fzf meld meld visual diff merge tool help compare file directory version controlled project tig textmode interface git gitg graphical user interface git gitcola highly caffeinated git gui pythongitlab python package providing access gitlab server api bfgrepocleaner remove large troublesome blob like gitfilterbranch doe faster nbdime tool diffing merging jupyter notebook semanticrelease fully automated version management package publishing gosemrelgitab automate version management gitlab gitrepo gitrepo help manage many git repository doe uploads revision control system automates part development workflow dive tool exploring layer docker image dvc management versioning datasets machine learning model learngitbranching git repository visualizer sandbox series educational tutorial challenge gitfs mount remote repository branch locally subsequent change made file automatically committed remote gitsecret encrypts file permitted user public key allowing user trust access encrypted data using pgp secret key gitsweep commandline tool help clean git branch merged master lazygit simple terminal ui git command written go gocui library glab opensource gitlab command line tool simulation ai2thor python framework unity backend providing interaction navigation manipulation support household based robotic agent consisting 200 custom scene 1500 custom annotated object 200 action drake drake aim simulate even complex dynamic robot webots webots open source robot simulator compatible among others ros2 lgsv lg electronics america rd center ha developed hdrp unitybased multirobot simulator autonomous vehicle developer carla opensource simulator autonomous driving research awesomecarla curated list awesome carla tutorial blog related project rosbridge bridge carla simulator scenariorunner traffic scenario definition execution engine deepdive endtoend simulation selfdriving car uuvsimulator gazeboros package underwater robotics simulation airsim open source simulator autonomous vehicle built unreal engine selfdrivingcarsim selfdriving car simulator built unity rosintegration unreal engine plugin enable support gymgazebo openai gym extension using gazebo known gymgazebo gympybulletdrones pybulletbased gym environment single multiagent reinforcement learning quadcopter control safecontrolgym pybulletbased cartpole quadrotor environmentswith casadi symbolic dynamic constraintsfor safe robust learningbased control highwayenv collection environment autonomous driving tactical decisionmaking task vrep interface bridge vrep simulator cardemo simulation prius gazebowith sensor data published using kinetic sumo eclipse sumo open source highly portable microscopic continuous road traffic simulation package designed handle large road network opensimulationinterface generic interface environmental perception automated driving function virtual scenario esim open event camera simulator menge crowd simulation framework pedsimros pedestrian simulator powered social force model gazebo opencrg open file format open source tool detailed description creation evaluation road surface esmini basic openscenario player openscenegraph open source high performance 3d graphic toolkit used application developer field visual simulation game virtual reality scientific visualization modelling morse academic robotic simulator based blender game engine bullet physic engine rosintegrationvision support rosenabled rgbd data acquisition unreal engine project fetchgazebo contains gazebo simulation fetch robotics fetch freight research edition robot rotorssimulator provides multirotor model flow computational framework deep rl control experiment traffic microsimulation gnssinssim gnss inertial navigation sensor fusion simulator motion trajectory generator sensor model navigation ignition robotics test control strategy safety take advantage simulation continuous integration test simulation asset subt collection contains simulation asset subt challenge virtual competition gazebo gazeborosmotors contains currently two motor plugins gazebo one ideal speed controller one without controller model dc motor map2gazebo package creating gazebo environment 2d map simvehicledynamics vehicle dynamic simulation software tum roborace team gymcarla openai gym wrapper carla simulator simbody highperformance c multibody dynamicsphysics library simulating articulated biomechanical mechanical system like vehicle robot human skeleton gazebomodels repository hold gazebo model database pylot autonomous driving platform running carla simulator flightmare flightmare composed two main component configurable rendering engine built unity flexible physic engine dynamic simulation champ package champ quadruped controller rexgym openai gym environment opensource quadruped robot spotmicro trick developed nasa johnson space center powerful simulation development framework enables user build application phase space vehicle development usvsimlsa unmanned surface vehicle simulation gazebo water current wind 42 simulation spacecraft attitude control system analysis design completestreetrule scenario oriented design tool intended enable user quickly create procedurally generated multimodal street arcgis cityengine autocore simulation provides test environment autoware still early development content may changed update fieldsignition generate random crop field ignition gazebo unityroboticshub central repository tool tutorial resource documentation robotic simulation unity bluesky goal bluesky provide everybody want visualize analyze simulate air traffic tool without restriction license limitation cloe empowers developer automateddriving software component providing unified interface closedloop simulation dynamiclogisticswarehouse gazebo simulation dynamic environment warehouse opencda generalized framework prototyping fullstack cooperative driving automation application carlasumo electronics mechanic hrim information model robot hardware urdf repository unified robot description format urdf parsing code phobos addon blender allowing create urdf sdf smurf robot model wysiwyg environment urdfviz visualize urdfxacro file urdf viewer work windowsmacoslinux solidworksurdfexporter solidworks urdf exporter freecad 3d parametric modeler kicad cross platform open source electronics design automation suite pcbdraw convert kicad board nice looking 2d drawing suitable pinout diagram kicad3rdpartytools tool made others augment kicad pcb eda suite pandapower easy use open source tool power system modeling analysis optimization high degree automation librepcb powerful innovative intuitive eda tool everyone openscad software creating solid 3d cad model ngspice open source spice simulator electric electronic circuit gnsssdr gnsssdr provides interface wide range radio frequency frontends raw sample file format generates processing output standard format riscv free open risc instruction set architecture urdfpy simple easytouse library loading manipulating saving visualizing urdf file fmpy simulate functional mockup unit fmus python fmikitsimulink import export functional mockup unit simulink oemofsolph modular open source framework model energy supply system nasa3dresources find growing collection 3d model texture image inside nasa suave aircraft design toolbox opem opensource pemfc simulation tool opem modeling tool evaluating performance proton exchange membrane fuel cell pvlibpython community supported tool provides set function class simulating performance photovoltaic energy system wireviz tool easily documenting cable wiring harness connector pinouts horizon eda electronic design automation package supporting integrated endtoend workflow printed circuit board design including part management schematic entry tigl tigl geometry library used computation processing aircraft geometry stored inside cpacs file foxbms free open flexible development environment design battery management system cadcad python package assist process designing testing validating complex system simulation support monte carlo method ab testing parameter sweeping openmdao opensource framework efficient multidisciplinary optimization odrive aim make possible use inexpensive brushless motor high performance robotics project opentirepython opensource mathematical tire modelling library inkscape ray optic extension inkscape make easier draw optical diagram openaerostruct lightweight tool performs aerostructural optimization using openmdao sensor processing calibration transformation tf2 transform library let user keep track multiple coordinate frame time trip inverse kinematics library serial robot parallel robot hybrid lidaralign simple method finding extrinsic calibration 3d lidar 6dof pose sensor kalibr kalibr visualinertial calibration toolbox calibnet selfsupervised extrinsic calibration using 3d spatial transformer network lidarcameracalibration package find rigidbody transformation lidar camera ilcc reflectance intensity assisted automatic accurate extrinsic calibration 3d lidar easyhandeye simple straighforward library handeye calibration imuutils package tool analyze imu performance kalibrallan imu allan standard deviation chart use kalibr inertial kalman filter pyquaternion fullfeatured python module representing using quaternion robotcalibration package offer calibration number parameter robot 3d camera intrinsics extrinsics joint angle offset robot frame offset multisensorcalibration contains calibration tool calibrate sensor setup consisting lidar radar camera lidartag realtime fiducial tag using point cloud lidar data multicamcalibration extrinsic intrinsic calbration camera ikpy inverse kinematics library aiming performance modularity livoxcameralidarcalibration calibrate extrinsic parameter livox lidar camera lidarcameracalibration camera lidar calibration using opencv pcl e2calib contains code implement video reconstruction event data calibration perception pipeline sarosperceptionkitti package perception sensor processing detection tracking evaluation kitti vision benchmark suite multipleobjecttrackinglidar c implementation detect track classify multiple object using lidar scan point cloud cadrlros package dynamic obstacle avoidance ground robot trained deep rl augmentedautoencoder rgbbased pipeline object detection 6d pose estimation jskrecognition stack perception package used jsk lab gibsonenv gibson environment realworld perception embodied agent morefusion multiobject reasoning 6d pose estimation volumetric fusion se3tracknet package 6d pose tracking dynamic object object cad model available machine learning dlib toolkit making real world machine learning data analysis application c fastai fastai library simplifies training fast accurate neural net using modern best practice tpot python automated machine learning tool optimizes machine learning pipeline using genetic programming deap distributed evolutionary algorithm python gym toolkit developing comparing reinforcement learning algorithm tensorflowroscpp package allows tensorflow inference c without need compile tf tensorflow federated tensorflow federated tff opensource framework machine learning computation decentralized data finn fast scalable quantized neural network inference fpgas neuropod neuropod library provides uniform interface run deep learning model multiple framework c python leelazero fairly faithful reimplementation system described alpha go zero paper mastering game go without human knowledge trax library deep learning focus sequence model reinforcement learning mlflow platform streamline machine learning development including tracking experiment packaging code reproducible run sharing deploying model netron visualizer neural network deep learning machine learning model mnn blazing fast lightweight deep learning framework battletested businesscritical use case alibaba tensorforce opensource deep reinforcement learning framework emphasis modularized flexible library design straightforward usability application research practice dopamine research framework fast prototyping reinforcement learning algorithm catalyst wa developed focus reproducibility fast experimentation codeideas reusing ray fast simple framework building running distributed application tfagents reliable scalable easy use tensorflow library contextual bandit reinforcement learning reagent open source endtoend platform applied reinforcement learning rl developed used facebook awesomemobilemachinelearning curated list awesome mobile machine learning resource io android edge device cnnexplainer learning convolutional neural network interactive visualization modelzoo collection machinelearned model use autonomous driving application nnstreamerros set gstreamer plugins example allow gstreamer developer adopt neural network model easily efficiently neural network developer manage neural network pipeline filter easily efficiently parallel processing dask parallel computing task scheduling python cupy numpylike api accelerated cuda thrust c parallel programming library resembles c standard library arrayfire general purpose gpu library openmp application programming interface support multiplatform shared memory multiprocessing programming c c fortran vexcl vexcl c vector expression template library openclcudaopenmp pynq opensource project xilinx make easy design embedded system zynq programmable system chip numba numpy aware dynamic python compiler using llvm tensorrt c library high performance inference nvidia gpus deep learning accelerator libcudacxx provides heterogeneous implementation c standard library used cpu gpu code image processing cvpretrainedmodel collection computer vision pretrained model imagepipeline fill gap getting raw image camera driver higherlevel vision processing gstreamer pipelinebased multimedia framework link together wide variety medium processing system complete complex workflow ros2openvinotoolkit provides rosadaptered runtime framework neural network quickly deploys application solution vision inference visionvisp wrap visp moving edge tracker provided visp visual servoing library package apriltagros wrapper apriltagvisual fiducial detector deepobjectpose deep object pose estimation detectandtrack detectandtrack efficient pose sfmlearner unsupervised learning framework depth egomotion estimation imgaug image augmentation machine learning experiment visionopencv package interfacing opencv library programming function real time computer vision darknetros yolo realtime object detection rosncnn yolact yolo among thing ncnn inference engine tfposeestimation deep pose estimation implemented using tensorflow custom architecture fast inference findobject simple qt interface try opencv implementation sift surf fast brief feature detector descriptor yolact simple fully convolutional model realtime instance segmentation kimerasemantics realtime 3d semantic reconstruction 2d data detectron2 nextgeneration research platform object detection segmentation openvx enables performance poweroptimized computer vision processing especially important embedded realtime use case 3dvehicletracking official implementation joint monocular 3d vehicle detection tracking pysot goal pysot provide highquality highperformance codebase visual tracking research semanticslam real time semantic slam hand held rgbd camera kittiscanunfolding propose kitti scan unfolding paper scanbased semantic segmentation lidar point cloud experimental study packnetsfm official pytorch implementation selfsupervised monocular depth estimation method invented ml team toyota research institute tri ab3dmot work proposes simple yet accurate realtime baseline 3d multiobject tracking system monoloco official implementation monoloco monocular 3d pedestrian localization uncertainty estimation pytorch polyyolo build original idea yolov3 remove two weakness large amount rewritten label inefficient distribution anchor satelliteimagedeeplearning resource deep learning satellite aerial imagery robosat semantic segmentation aerial satellite imagery bigtransfer model general visual representation learning created google research lednet lightweight encoderdecoder network realtime semantic segmentation torchseg project aim providing fast modular reference implementation semantic segmentation model using pytorch simpledet simple versatile framework object detection instance recognition meshroom meshroom free opensource 3d reconstruction software based alicevision photogrammetric computer vision framework easyocr readytouse optical character recognition ocr 40 language supported including chinese japanese korean thai pytracking general python framework visual object tracking video object segmentation based pytorch rosdeeplearning deep learning inference node support nvidia jetson tx1tx2xavier tensorrt hyperpose hyperpose flexible library realtime human pose estimation fawkes privacy preserving tool facial recognition system anonymizer anonymizer obfuscate face license plate opendatacam save surveyed metadata particular path object moved number counted object certain point cam2bev flownet2pytorch pytorch implementation flownet 20 evolution optical flow estimation deep network simd c image processing machine learning library using simd sse sse2 sse3 ssse3 sse41 sse42 avx avx2 avx512 vmxaltivec vsxpower7 neon arm alicevision photogrammetric computer vision framework provides 3d reconstruction camera tracking algorithm satpy python library reading manipulating meteorological remote sensing data writing various image data file format eolearn collection open source python package developed seamlessly access process spatiotemporal image sequence acquired satellite fleet timely automatic manner libvips fast image processing library low memory need radar processing pyrosar framework largescale sar satellite data processing cameraradarfusionnet tum roborace team software stack path tracking control velocity control curvature control state estimation lidar point cloud processing cilantro lean c library working point cloud data open3d open3d modern library 3d data processing squeezeseg implementation squeezeseg convolutional neural network lidar point clout segmentation pointcloudio node read write point cloud file eg ply vtk pythonpcl python binding pointcloud library libpointmatcher iterative closest point library 2d3d mapping robotics depthclustering fast robust clustering point cloud generated velodyne sensor lidarbonnetal semantic instance segmentation lidar point cloud autonomous driving csf lidar point cloud ground filtering segmentation bare earth extraction method based cloth simulation robotbodyfilter highly configurable laserscanpointcloud2 filter allows dynamically remove 3d body robot measurement gridmap universal grid map library mobile robotic mapping elevationmapping robotcentric elevation mapping rough terrain navigation rangenetlib contains simple usage explanation rangenet inference work tensorrt c interface pointcloudtolaserscan convert 3d point cloud 2d laser scan octomap efficient probabilistic 3d mapping framework based octrees pptk point processing toolkit heremaps gpuvoxels gpuvoxels cuda based library allows high resolution volumetric collision detection animated 3d model live pointclouds 3d sensor kind spatiotemporalvoxellayer new voxel layer leveraging modern 3d graphic tool modernize navigation environmental representation lastools awardwinning software efficient lidar processing pcdet general pytorchbased codebase 3d object detection point cloud pdal c bsd library translating manipulating point cloud data potreeconverter build potree octree la laz binary ply xyz ptx file fastgicp collection gicpbased fast point cloud registration algorithm ndtomp multithreaded sse friendly ndt algorithm laserlineextraction package extract line segment laserscan message goicp implementation goicp algorithm globally optimal 3d pointset registration pointcnn simple general framework feature learning point cloud segmenterslib lidar segmenters library segmentationbased detection motionnet joint perception motion prediction autonomous driving based bird eye view map polarseg improved grid representation online lidar point cloud semantic segmentation traversabilitymapping take point cloud velodyne vlp16 lidar output traversability map autonomous navigation realtime lidarsuperresolution simulationbased lidar superresolution ground vehicle cupoch library implement rapid 3d data processing robotics computation using cuda linefitgroundsegmentation implementation ground segmentation algorithm draco library compressing decompressing 3d geometric mesh point cloud votenet deep hough voting 3d object detection point cloud lidarundistortion provides lidar motion undistortion based external 6dof pose estimation input superpointgraph largescale point cloud semantic segmentation superpoint graph randlanet efficient semantic segmentation largescale point cloud det3d first 3d object detection toolbox provides box implementation many 3d object detection algorithm pointpillars second pixor overlapnet modified siamese network predicts overlap relative yaw angle pair range image generated 3d lidar scan mp2picp repertory multi primitivetoprimitive mp2p icp algorithm c openpcdet toolbox lidarbased 3d object detection torchpoints3d pytorch framework deep learning point cloud polyfit polygonal surface reconstruction point cloud mmdetection3d nextgeneration platform general 3d object detection gpd take point cloud input produce pose estimate viable grasp output salsanext uncertaintyaware semantic segmentation lidar point cloud autonomous driving superfastaccurate3dobjectdetection super fast accurate 3d object detection based 3d lidar point cloud pytorch implementation kaolin pytorch library accelerating 3d deep learning research camvox lowcost slam system based camera livox lidar sassd structure aware singlestage 3d object detection point cloud cudapcl accelerating lidar robotics nvidia cudabased pcl urbanroadfilter realtime lidarbased urban road sidewalk detection autonomous vehicle removert remove revert static map construction wild dynamic point removing tool constructing static map kissicp lidar odometry pipeline work case without tunning parameter localization state estimation evo python package evaluation odometry slam robotlocalization package nonlinear state estimation node fuse general architecture performing sensor fusion live robot geographiclib c library geographic projection ntripbrowser python api browsing ntrip networked transport rtcm via internet protocol imutools imurelated filter visualizer rtklib version rtklib optimized single dual frequency low cost gps receiver especially ublox receiver glab performs precise modeling gnss observables pseudorange carrier phase centimetre level allowing standalone gps positioning ppp sba dgnss aiimudr contains code novel accurate method dead reckoning wheeled vehicle based imu kalmanandbayesianfiltersinpython kalman filter book using jupyter notebook mcl3dl node perform probabilistic 3d6dof localization system mobile robot 3d lidar se2lam onse2 localization mapping ground vehicle fusing odometry vision mmwavelocalizationlearning mlbased positioning method mmwave transmission high accuracy energy efficiency dynamicrobotlocalization package offersdof anddof localization using pcl allows dynamic map update using octomap eagleye opensource software vehicle localization utilizing gnss imu pythonsgp4 python version sgp4 satellite position library proj cartographic projection coordinate transformation library rpgtrajectoryevaluation implement common used trajectory evaluation method visualinertial odometry pymap3d purepython numpy optional 3d coordinate conversion geospace ecef enu eci librsf robust sensor fusion library online localization simultaneous localization mapping lidar kissicp lidar odometry pipeline work case without tunning parameter loamvelodyne laser odometry mapping loam realtime method state estimation mapping using 3d lidar liomapping implementation tightly coupled 3d lidar inertial odometry mapping liomapping aloam advanced implementation loam fast loam fast optimized lidar odometry mapping liosam tightlycoupled lidar inertial odometry via smoothing mapping cartographerros provides integration cartographer loamlivox robust lidar odometry mapping loam package livoxlidar staticmapping use lidar map static world semanticsuma semantic mapping using surfel mapping semantic segmentation slamtoolbox slam toolbox lifelong mapping localization potentially massive map maplab open visualinertial mapping framework hdlgraphslam open source package realtime 6dof slam using 3d lidar interactiveslam contrast existing automatic slam package minimal human effort legoloam lightweight groundoptimized lidar odometry mapping variable terrain pyslam contains monocular visual odometry vo pipeline python kitware slam lidaronly visual slam developped kitware well paraview wrapping easier use horizonhighwayslam robust low drift real time highway slam package suitable livox horizon lidar mola modular system localization mapping dh3d deep hierarchical 3d descriptor robust largescale 6dof relocalization lama lama c11 software library robotic localization mapping scan context global lidar descriptor place recognition longterm localization mloam robust odometry mapping multilidar system online extrinsic calibration visual orbslam2ros implementation orbslam2 orbslammapsavingextension extension map orbfeatures saved disk reference future run along track dso direct sparse odometry viso2 wrapper libviso2 library visual odometry xivo x inertialaided visual odometry rovio robust visual inertial odometry framework lsdslam largescale direct monocular slam realtime monocular slam cubeslam orb slam monocular 3d object detection slam package cubeslam orb slam vinsfusion robust versatile multisensor visualinertial state estimator openvslam openvslam versatile visual slam framework basalt visualinertial mapping nonlinear factor recovery kimera c library realtime metricsemantic simultaneous localization mapping us camera image inertial data build semantically annotated 3d mesh environment tagslam rosbased package simultaneous localization mapping using apriltag fiducial marker larvio lightweight accurate robust monocular visual inertial odometry based multistate constraint kalman filter fiducials simultaneous localization mapping using fiducial marker openvins open source platform visualinertial navigation research orbslam3 orbslam3 accurate opensource library visual visualinertial multimap slam atlas endtoend 3d scene reconstruction posed image vilib library focus frontend vio pipeline cuda hloc modular toolbox stateoftheart 6dof visual localization implement hierarchical localization leveraging image retrieval feature matching fast accurate scalable esvo novel pipeline realtime visual odometry using stereo eventbased camera gradslam open source differentiable dense slam library pytorch vector map opendrive open file format logical description road network mapsmodelsimporter blender addon import model google map lanelet2 map handling framework automated driving barefoot online offline map matching used standalone cloud id easytouse openstreetmap editor javascript rapid enhanced version id mapping ai created facebook segmap map representation based 3d segment mapbox javascript library interactive customizable vector map web osrmbackend open source routing machine c backend assuremapingtools desktop based tool viewing editing saving road network map autonomous vehicle platform autoware geopandas project add support geographic data panda object maptoolbox plugins make autoware vector map unity imageryindex index aerial satellite imagery useful mapping mapillarytools library processing uploading image mapillary mapnik combine pixelperfect image output lightningfast cartographic algorithm expose interface c python node gdal gdal open source xmit licensed translator library raster vector geospatial data format grass grass gi free open source geographic information system gi 3dtiles specification streaming massive heterogeneous 3d geospatial datasets osmnx python street network retrieve model analyze visualize street network spatial data openstreetmap prediction awesomeinteractionawaretrajectoryprediction selection stateoftheart research material trajectory prediction sgan socially acceptable trajectory generative adversarial network behavior decision groot graphical editor create behaviortrees compliant behaviortreecpp behaviortreecpp behavior tree library c rafcon us hierarchical state machine featuring concurrent state execution represent robot program rosplan generic framework task planning system adrsslib library implementing responsibility sensitive safety model r autonomous vehicle flexbe graphical editor hierarchical state machine based smach stsbtlibrary library provides functionality set behavior tree logic using defined tree structure like fallback sequence parallel node smacc eventdriven asynchronous behavioral state machine library realtime robotic operating system application written c pytreesros behaviour tree utility extend pytrees use planning control pacmod designed allow user control vehicle pacmod drivebywire system mpcc model predictive contouring controller autonomous racing rrt c rrt rapidlyexploring random tree implementation hypridastartrailer path planning algorithm based hybrid trailer truck pathplanner hybrid path planner kth research concept vehicle openstreetmap package working open street map geographic information open source car control assemblage software hardware design enable computer control modern car order facilitate development autonomous vehicle technology fastrack implementation fast safe tracking fastrack commonroad composable benchmark motion planning road trafficeditor graphical editor robot traffic flow steeringfunctions contains c library implement steering function carlike robot limited turning radius moveit easytouse robotics manipulation platform developing application evaluating design building integrated product flexiblecollisionlibrary library performing three type proximity query pair geometric model composed triangle aikido artificial intelligence kinematics dynamic optimization casadi symbolic framework numeric optimization implementing automatic differentiation forward reverse mode sparse matrixvalued computational graph acado toolkit software environment algorithm collection automatic control dynamic optimization controltoolbox efficient c library control estimation optimization motion planning robotics crowdnav crowdaware robot navigation attentionbased deep reinforcement learning ompl consists many stateoftheart samplingbased motion planning algorithm openrave open robotics automation virtual environment environment testing developing deploying robotics motion planning algorithm teblocalplanner optimal trajectory planner considering distinctive topology mobile robot based timedelasticbands pinocchio fast flexible implementation rigid body dynamic algorithm analytical derivative rmfcore rmfcore package provide centralized function robotics middleware framework rmf open solver fast accurate embedded optimization nextgeneration robotics autonomous system autogenujupyter project provides continuationgmres method cgmres method based solver nonlinear model predictive control nmpc automatic code generator nmpc globalracetrajectoryoptimization repository contains multiple approach generating global racetrajectories toppra library computing timeoptimal path parametrization robot subject kinematic dynamic constraint tinyspline tinyspline small yet powerful library interpolating transforming querying arbitrary nurbs bsplines bezier curve dual quaternion python package dual quaternion slerp mb planner aerial vehicle planner tight space used darpa subt challenge ilqr iterative linear quadratic regulator autodifferentiatiable dynamic model egoplanner lightweight gradientbased local planner without esdf construction significantly reduces computation time compared stateoftheart method pykep scientific library providing basic tool research interplanetary trajectory design amtraj alternating minimization based trajectory generation quadrotor aggressive flight graphbasedlocaltrajectoryplanner wa used real race vehicle roborace season alpha achieved speed 200kmh se2navigation pure pursuit controller reedsshepp sampling based planner navigation se2 space ruckig instantaneous motion generation realtime jerkconstrained timeoptimal user interaction graphical user interface imgui designed enable fast iteration empower programmer create content creation tool visualization debug tool qtpy provides uniform layer support pyqt5 pyside2 pyqt4 pyside single codebase mir mir set library building wayland based shell rqt qtbased framework gui development consists three partsmetapackages cage cage wayland kiosk kiosk run single maximized application chilipie easytouse raspberry pi image booting directly fullscreen chrome pencil tool making diagram gui prototyping everyone use dynamicreconfigure focus dynamicreconfigure providing standard way expose subset node parameter external reconfiguration ddynamicreconfigure allows modifying parameter node using dynamicreconfigure framework without write cfg file element lightweight finegrained resolution independent modular gui library nanogui minimalistic crossplatform widget library opengl 3x higher acoustic user interface pyo python module written c containing class wide variety audio signal processing type rhasspy rhasspy pronounced rahspee offline multilingual voice assistant toolkit inspired jasper work well home assistant hassio nodered mycroftcore mycroft hackable open source voice assistant ddsp library differentiable version common dsp function synthesizer waveshapers filter noisetorch creates virtual microphone suppresses noise application deepspeech open source speechtotext engine using model trained machine learning technique based baidu deep speech research paper waveglow flowbased generative network speech synthesis tt deep learning toolkit texttospeech battletested research production command line interface theartofcommandline master command line one page dotfiles cornerman powerful zsh vim dotfiles dotbot tool bootstrap dotfiles prompthjem beautiful zsh prompt ag codesearching tool similar ack faster fzf commandline fuzzy finder pkgtop interactive package manager resource monitor designed gnulinux asciimatics cross platform package curseslike operation plus higher level apis widget create text uis ascii art animation gocui minimalist go package aimed creating console user interface terminalimageviewer small c program display image modern terminal using rgb ansi code unicode block graphic character rosshow visualize topic inside terminal unicodeascii art pythonprompttoolkit library building powerful interactive command line application python guake dropdown terminal gnome wemux multiuser tmux made easy tmuxp session manager built libtmux mapscii world map renderer console terminator goal project produce useful tool arranging terminal bat cat1 clone wing fx commandline tool terminal json viewer tmate instant terminal sharing data visualization mission control xdot interactive viewer graph written graphviz dot language guacamole clientless remote desktop gateway support standard protocol like vnc rdp ssh ros3djs 3d visualization library use javascript library webviz webbased visualization library like rviz plotlypy opensource interactive graphing library python plotjuggler timeseries visualization tool deserve bokeh interactive data visualization browser python voila jupyter notebook standalone web application dashboard pangolin pangolin lightweight portable rapid development library managing opengl display interaction abstracting video input rqtbag provides gui plugin displaying replaying bag file keplergl keplergl powerful open source geospatial analysis tool largescale data set qgisros access bagged live topic data highly featured gi environment openmct web based mission control framework webvideoserver http streaming image topic multiple format rvizweb provides convenient way building launching web application feature similar rviz marvros mavlink gateway proxy ground control station octave provides convenient command line interface solving linear nonlinear problem numerically performing numerical experiment using language mostly compatible matlab streetscapegl streetscapegl toolkit visualizing autonomous robotics data xviz protocol urdfloaders urdf loader unity threejs example athlete urdf file obsstudio free open source software live streaming screen recording k3dtools jupyter notebook extension 3d visualization pyqtgraph fast data visualization gui tool scientific engineering application ipygany 3d scientific visualization jupyter notebook foxglove studio web desktop app robotics visualization debugging actively maintained fork webviz rosmobile visualization controlling application android annotation labelbox fastest way annotate data build ship artificial intelligence application pixelannotationtool annotate quickly image labelimg graphical image annotation tool label object bounding box image cvat powerful efficient computer vision annotation tool cvat pointlabeler tool labeling single point cloud stream point cloud labelstudio label studio multitype data labeling annotation tool standardized output format napari fast interactive multidimensional image viewer python semanticsegmentationeditor web based labeling tool creating ai training data set 2d 3d 3dbat 3d bounding box annotation tool point cloud image labeling labelme image polygonal annotation python polygon rectangle circle line point imagelevel flag annotation universaldatatool collaborate label type data image text document easy web interface desktop app bmwlabeltoollite provides easy use labeling tool stateoftheart deep learning training purpose 3dannotationtool lightweight tool annotate point cloud bounding box rectangle keypoints point cloud cloudcompare cloudcompare 3d point cloud triangular mesh processing software potree webgl point cloud viewer large datasets pointcloudviewer make viewing massive point cloud easy convenient lidarview performs realtime visualization easy processing live captured 3d lidar data lidar sensor veloview performs realtime visualization live captured 3d lidar data velodyne hdl sensor entwine data organization library massive point cloud designed conquer datasets trillion point well desktopscale point cloud polyscope c python viewer 3d data like mesh point cloud pcx point cloud importer renderer unity immersivepoints webapplication virtual reality device explore 3d data natural way possible rviz mapviz modular visualization tool 2d data rvizcinematographer easy use tool create edit trajectory rviz camera rvizsatellite display internet satellite imagery rviz rvizvisualtools c api wrapper displaying shape mesh rviz xpp visualization motionplans legged robot rviz stereo 3d stereo rendering display different view eye scene appears depth jskvisualization jsk visualization package rviz rqt moveitvisualtools helper function displaying debugging moveit data rviz via published marker operation system monitoring rosmon node launcher monitoring daemon multimasterfkie guibased management environment useful manage roslaunch configuration control running node collectd small daemon collect system information periodically provides mechanism store monitor value variety way lnav enhanced log file viewer take advantage semantic information gleaned file viewed timestamps log level htop interactive textmode process viewer unix system aim better top atop system process monitor linux logging replay function psutil crossplatform lib process system monitoring python gputil python module getting gpu status nvida gpus using nvidiasmi programmically python gpustat simple commandline utility querying monitoring gpu status nvtop nvidia gpus htop like monitoring tool shellhub shellhub modern ssh server remotely accessing linux device via command line using ssh client webbased user interface designed alternative sshd think shellhub centralized ssh edge cloud computing sshwifty sshwifty ssh telnet connector made web spdlog fast headeronlycompiled c logging library ctop toplike interface container metric ntop webbased traffic security network traffic monitoring jupyterlabnvdashboard jupyterlab extension displaying dashboard gpu usage database record ncdu ncdu disk usage analyzer ncurses interface borg deduplicating archiver compression authenticated encryption bagdatabase server catalog bag file provides webbased ui accessing marvrobotics marv robotics powerful extensible data management platform kitti2bag convert kitti dataset bag file easy way pykitti python tool working kitti data rosbageditor create rosbag given one using simple gui nextcloud nextcloud suite clientserver software creating using file hosting service rostypeintrospection deserialize message unknown compilation time syncthing continuous file synchronization program rqtbagexporter qt gui export bag topic file csv andor video xviz protocol realtime transfer visualization autonomy data kittitorosbag dataset tool working kitti dataset raw data converting bag also allows library direct access pose velodyne scan image rosnumpy tool converting message numpy array kittiros rosbased player replay kitti dataset duckdb embeddable sql olap database management system network distributed file system sshfs file system based ssh file transfer protocol moosefs scalable distributed storage system ceph distributed object block file storage platform nfs distributed file system protocol originally developed sun microsystems ansiblerolenfs installs nfs utility redhatcentos debianubuntu server infrastructure high performance computing mass selfservice remote installation window centos esxi ubuntu real server turn data centre bare metal cloud polyaxon platform reproducing managing whole life cycle machine learning deep learning application localstack fully functional local aws cloud stack develop test cloud serverless apps offline nvidiadocker build run docker container leveraging nvidia gpus kubeflow machine learning toolkit kubernetes logpilot collect log docker container traefik cloud native edge router graylog2server free open source log management ansible ansible radically simple automation platform make application system easier deploy pyinfra used adhoc command execution service deployment configuration management dockerpy python library docker engine api novnc vnc client using html5 slurm slurm highly scalable workload manager jupyterhub multiuser server jupyter notebook portainer making docker management easy enroot simple yet powerful tool turn traditional containeros image unprivileged sandbox dockerfirefox run docker container firefox novnc remote access headless server luigi python module help build complex pipeline batch job handle dependency resolution workflow management visualization etc also come hadoop support built tritoninferenceserver nvidia triton inference server provides cloud inferencing solution optimized nvidia gpus cudf provides pandaslike api familiar data engineer data scientist use easily accelerate workflow without going detail cuda programming embedded operation system vxworks7ros2build build system automate build vxworksand ros2 yocto produce tool process enable creation linux distribution embedded software independent underlying architecture embedded hardware automotive graded linux collaborative open source project bringing together automaker supplier technology company build linuxbased open software platform automotive application serve de facto industry standard bitbake generic task execution engine allows shell python task run efficiently parallel working within complex intertask dependency constraint jailhouse jailhouse partitioning hypervisor based linux xen opensource gpl type1 baremetal hypervisor qemu generic open source machine emulator virtualizer qemuxilinx fork quick emulator qemu improved support modelling xilinx platform rosserial client library small embedded device arduino metaros openembedded layer application metabalena run docker container embedded device microros nvidiacontainerruntime nvidia container runtime gpu aware container runtime compatible open container initiative oci specification used docker crio popular container technologie fusesoc package manager build abstraction tool fpgaasic development jetsoneasy automatically script setup configure nvidia jetson dockerjetpacksdk allows usage nvidia jetpack sdk within docker container download flashing install pressed provides way set answer question asked installation process debian without manually enter answer installation running jetsonstats package monitoring control nvidia jetson xavier nx nano agx xavier tx1 tx2 work nvidia jetson ecosystem rosjetsonstats jetsonstats wrapper status nvidia jetson diagnostic message opencr opensource control module acrnhypervisor defines device hypervisor reference stack architecture running multiple software subsystem managed securely consolidated system mean virtual machine manager jetsoncontainers machine learning container jetson jetpack 44 realtime kernel elisa project make easier company build certify linuxbased safetycritical application system whose failure could result loss human life significant property damage environmental damage preemptrt kernel patch aim preemptrt kernel patch minimize amount kernel code nonpreemptible network middleware performancetest tool test performance pubsub based communication framework realtimesupport minimal realtime testing utility measuring jitter latency ros1bridge rospackage provides bidirectional communication rosand rosfastrtps protocol provides publishersubscriber communication unreliable transport udp defined maintained object management group omg consortium protobuf google data interchange format opensplice vortex opensplice community edition cyclonedds eclipse cyclone dd performant robust opensource dd implementation iceoryx ipc middleware posixbased system rosbridgesuite provides json interface allowing client send json publish subscribe topic call service ros2arduino library help arduino board communicate ros2 using xrcedds ecal enhanced communication abstraction layer ecal middleware enables scalable high performance interprocess communication single computer node different node computer network autosaradaptive implementation autosar adaptive platform based r1911 ocpp open charge point protocol ocpp network protocol communication electric vehicle charger central backoffice system microros arduino experimental microros library baremetal project based arduino ide arduino cli mqttbridge provides functionality bridge mqtt bidirectional ethernet wireless networking soes soes ethercat slave stack written c netplan simply create yaml description required network interface configured airalab aira reference robonomics network client rosenabled cyberphysical system rdbox rdbox infrastructure robot rosethercat reimplementation main loop pr2ethercat without dependency pr2 software wavemon ncursesbased monitoring application wireless network device wireless making info wireless network available ptpd ptp daemon ptpd implementation precision time protocol ptp versionas defined ieee std 15882008 ptp provides precise time coordination ethernet lan connected computer iperf tcp udp sctp network bandwidth measurement tool tcpreplay pcap editing replay tool nethogs group bandwidth process pyshark python wrapper tshark allowing python packet parsing using wireshark dissectors pingtop ping multiple server show result toplike terminal ui termshark terminal ui tshark inspired wireshark udpreplay replay udp packet pcap file openwifi linux mac80211 compatible fullstack ieee80211wifi design based software defined radio controller area network awesome curated list awesome bus tool hardware resource androbd android obd diagnostics elm327 adapter ddt4all ddt4all tool create ecu parameter screen connect network cheap elm327 interface cabana visualizer dbc maker opendbc project democratize access decoder ring car libuavcan open lightweight protocol designed reliable communication aerospace robotic application robust vehicular network bus pythoncan package provides controller area network support python developer canopennode internationally standardized en 503254 cia301 canbased higherlayer protocol embedded control system pythonudsoncan python implementation uds iso14229 standard udsc unified diagnostics service uds obdii board diagnostics vehicle c library cantools bus tool pythoncandevstudio candevstudio aim costeffective replacement simulation software work variety hardware interface canutils linuxcan socketcan user space application roscanopen canopen driver framework decanstructor definitive analysis tool kvaserinterface package wa developed standardized way access kvaser device canmatrix converting database format arxml dbc dbf kcd autosar set python module working autosar xml file canopen python implementation canopen standard aim project support common part cia 301 standard pythonic interface savvycan qt5 based cross platform tool used load save capture canbus frame openvehiclemonitoringsystem3 system provides live monitoring vehicle metric like state charge temperature tyre pressure diagnostic fault condition sensor acuator interface teslaapi provides functionality monitor control model future tesla vehicle remotely flirpy python library interact flir thermal imaging camera image nerianstereo node nerian scenescan sp1 stereo vision sensor pymmw timmwaverospkg ti mmwave radar driver sensor fusion hybrid pacmod3 node designed allow user control vehicle pacmod drivebywire system board revisionros2intelrealsense package using intel realsense camera d400 series ros2 sickscan stack provides ros2 driver sick tim series laser scanner ousterexample sample code connecting configuring os1 reading visualizing data interfacing ros2ousterdrivers implementation ros2 driver ouster os1 3d lidar livoxrosdriver new package specially used connect lidar product produced livox velodyne collection package supporting velodyne high definition 3d lidar ublox provides support ublox gps receiver crazyflieros driver bitcraze crazyflie pointgreycameradriver driver pt grey camera based official flycapture2 sdk novatelgpsdriver driver novatel gps gnss receiver pylonroscamera official pylon driver basler gige vision usb3 vision camera ethzpiksiros contains python driver tool launch file wikis use piksi real time kinematic rtk gps device sicksafetyscanners driver read raw data sick safety scanner publishes data laserscan msg boschimudriver driver sensor imu bosch bno055 wa implemented uart communication interface correct sensor mode selected oxfordgpseth ethernet interface oxts gps receiver using ncom packet structure ifm3d library utility working ifm pmdbased 3d tof camera ceptonsdkredist provides support cepton lidar jetsoncsicam package making simple use csi camera nvidia jetson tk1 tx1 tx2 rosastracamera driver orbbec 3d camera spotros driver spot blickfeldscannerlib crossplatform library communicate lidar device blickfeld gmbh taulidarcamera hostside api building application tau lidar camera security owaspthreatdragondesktop threat dragon free opensource crossplatform threat modeling application including system diagramming rule engine autogenerate threatsmitigations launchrossandbox define launch file running node restrained environment docker container separate user account limited privilege wolfssl small fast portable implementation tlsssl embedded device cloud canalyzat0r security analysis toolkit proprietary car protocol rsf robot security framework rsf standardized methodology perform security assessment robotics howtosecurealinuxserver evolving howto guide securing linux server lynis security auditing tool linux macos unixbased system assist compliance testing hipaaiso27001pci ds system hardening openvpn open source vpn daemon openfortivpn client pppssl vpn tunnel service compatible fortinet vpns wireguard wireguard novel vpn run inside linux kernel utilizes stateoftheart cryptography sshauditor scan weak ssh password network vulscan advanced vulnerability scanning nmap nse nmapvulners nse script based vulnerscom api brutespray automatically attempt default cred found service fail2ban daemon ban host cause multiple authentication error dependencycheck software composition analysis utility detects publicly disclosed vulnerability application dependency firejail suid sandbox program reduces risk security breach restricting running environment untrusted application using linux namespaces seccompbpf linux capability rvd robot vulnerability database communitycontributed archive robot vulnerability weakness ros2ddssecurity adding security enhancement defining service plugin interface spi architecture set builtin implementation spis security model enforced spis securityenhanced linux linux kernel security module provides mechanism supporting access control security policy including mandatory access control mac opentitan make silicon root trust design implementation transparent trustworthy secure enterprise platform provider chip manufacturer opentitan administered lowrisc cic collaborative project produce high quality open ip instantiation fullfeatured product bandit tool designed find common security issue python code hardening quick way make ubuntu server bit secure passbolt passbolt free open source password manager allows team member store share credential securely gopass password manager command line written go pas standard unix password manager vault tool securely accessing secret secret anything want tightly control access api key password certificate legion open source easytouse superextensible semiautomated network penetration testing framework aid discovery reconnaissance exploitation information system openscap oscap program command line tool allows user load scan validate edit export scap document datasets paper code thousand machine learning datasets provided paper code kitti360 largescale dataset contains 320k image 100k laser scan driving distance 737km waymoros package connect waymo open dataset waymoopendataset waymo open dataset comprised highresolution sensor data collected waymo selfdriving car wide variety condition ford autonomous vehicle dataset ford present challenging multiagent seasonal dataset collected fleet ford autonomous vehicle different day time awesomeroboticsdatasets collection useful datasets robotics computer vision nuscenesdevkit devkit nuscenes dataset datasetapi repo toolkit apolloscape dataset cvpr 2019 workshop autonomous driving challenge eccv 2018 challenge utbmrobocardataset eu longterm dataset multiple sensor autonomous driving dbnet largescale dataset driving behavior learning argoverseapi official github repository argoverse dataset ddad new autonomous driving benchmark tri toyota research institute long range 250m dense depth estimation challenging diverse urban condition pandasetdevkit public largescale dataset autonomous driving provided hesai scale a2d2toros utility converting a2d2 data set bag awesomesatelliteimagerydatasets list satellite image training datasets annotation computer vision deep learning sentinelsat search download copernicus sentinel satellite image adasdatasetform thermal dataset algorithm training h3d h3d large scale fullsurround 3d multiobject detection tracking dataset honda mapillary vista dataset diverse streetlevel imagery dataset pixelaccurate instancespecific human annotation understanding street scene around world tensorflow datasets tensorflow datasets provides many public datasets tfdatadatasets racetrackdatabase contains center line x ycoordinates track width race line 20 race track mainly f1 dtm world blenderproc procedural blender pipeline photorealistic training image generation atlatec sample map data 3d map autonomous driving simulation created nothing two camera gps downtown san francisco lyft leveldataset levelis developing selfdriving system lyft network collecting processing data autonomous fleet sharing holicity cityscale data platform learning holistic 3d structure utd19 largest multicity traffic dataset publically available astyx hires2019 dataset automotive radar dataset deep learning based 3d object detection objectron collection short objectcentric video clip accompanied ar session metadata includes camera pose sparse pointclouds characterization planar surface surrounding environment dataset largescale autonomous driving dataset 2d3d object annotation footnote thanks team xpp creating awesome gif use,"[('open', 'source'), ('point', 'cloud')]"
sphero-inc/sphero.js,Other,deprecated spherojs wa official orbotix javascript sdk module programmatically control sphero robot manufactured mid2016 repo longer supported maintained build status code climate test coverage new sdks produced sphero rvr usage initialize connect bb8 ollie javascript var sphero requiresphero bb8 spherof3f26d557109 change ble address accordingly bb8connectfunction roll bb8 random direction changing direction every second setintervalfunction var direction mathfloormathrandom 360 bb8roll150 direction 1000 initialize connect sphero 1020 sprk change port match connection javascript var sphero requiresphero orb spherodevrfcomm0 change port accordingly orbconnectfunction sphero connected cool stuff connected give sphero command receive notification builtin sensor javascript orbconnectfunction roll sphero forward orbroll150 turn sphero green orbcolorgreen sphero tell detect collision orbdetectcollisions sphero detects collision turn red second back green orboncollision functiondata consolelogcollision detected consolelog data data orbcolorred settimeoutfunction orbcolorgreen 100 also use promisesa interface code instead callbackbased api javascript orbconnectthenfunction return orbroll155thenfunction return orbcolorgreen thenorbdetectcollisions orboncollision functiondata consolelogcollision detected consolelog data data orbcolorred delay100 thenfunction return orbcolorgreen example check example dir javascript sdk documentation sphero developer portal running example forget pas port env variable like portyourport node examplejs installation bb8 ollie bb8 ollie use bluetooth low energy le interface also known bluetooth smart bluetooth 4041 must hardware adapter support bluetooth 4x standard connect computer bb8 ollie run following command npm install sphero noble use spherojs bb8 ollie must also install nodejs noble module sandeepmistry installation sphero 1020 sprk sphero 1020 sprk use bluetooth classic interface also known bluetooth 2030 run following command npm install sphero serialport use spherojs sphero sprk must also install nodejs serialport module voodootikigod connecting bb8ollie x connect bb8 ollie first need determine uuid noble installed use advertisementdiscoveryjs program determine device uuid node nodemodulesnobleexamplesadvertisementdiscoveryjs peripheral discovered 944f561f8cf441f3b5405ed48f5c63cf address unknown unknown connectable true rssi 73 hello local name bb131d interest following advertised service manufacturer data 3330 tx power level 18 output device uuid 944f561f8cf441f3b5405ed48f5c63cf use value connect bb8 ollie linux ubuntu connect bb8 ollie first need determine mac address noble installed use advertisementdiscoveryjs program determine device address node nodemodulesnobleexamplesadvertisementdiscoveryjs peripheral discovered f3f26d557108 address f3f26d557108 random connectable true rssi 37 hello local name bb7108 interest following advertised service 22bb746f2ba075542d6f726568705327 manufacturer data 3330 tx power level output device address f3f26d557108 alternately f3f26d557108 use value connect bb8 ollie window connect bb8 ollie need running window 81 instruction coming soon connecting spherosprk x connect sphero 1020 sprk first need pair pair device x open bluetooth setting system preference bluetooth menu locate sphero device list click pair button pair computer successfully paired sphero open terminal go dev folder locate serial device connection use l dev grep ttysphero newly paired sphero look something like ttyspherorgbampspp note device likely different depending preset color code three color sphero cycle first turn previous example sphero red green blue rgb color code sphero port devttyspheroxxxxxxxxx linux ubuntu connect sphero 1020 sprk first need pair make thing easy install blueman bluetooth manager ubuntu pretty easy open ubuntu software center type program name install installation complete open program search device make sure sphero flashing color code sphero appears list device select click setup follow instruction connect disconnect sphero serialport interface right clicking inside blueman list device selecting rnspp disconnect respectively ha setup added permanently list make sure notice serialport address blueman display sphero connects one used code serialport address displayed sphero look something like devrfcomm0 might need add udev rule order properly set permission program able access bluetooth interface example cat etcudevrulesd55rfcommrules kernelrfcomm09 namek groupdialout udev rule allow user member dialout group access port added connecting running rfcomm command note running rfcomm command create port may require running sudo receiving error cannot open devrfcomm0 try running program using sudo window connect sphero 1020 sprk first need pair locate bluetooth icon taskbar inside system task tray button follow necessary step pair sphero successfully paired sphero two option available check see serialport corresponds sphero connected first option right click bluetooth icon task bar use pair click open setting setting window appears navigate com port tab see list port list sphero sphero listed one port take note one ha rnspp name use one connect list look something similar port direction name com3 outgoing spherorpb rnspp com4 incoming spherorpb case use serialport com3 second option identify port number click start button type device manager program appears list open navigate tree device port see list com port ie com3 com4 port list select one belongs sphero sphero name listed port list either try one one use first method identify port belongs sphero port address look something like com2 com3 com4 error handling circumstance spherojs attempt gracefully recover bad incomplete packet might received back connected wireless device wish handle error must set emitpacketerrors option true shown example var sphero requiresphero orb spherodevrfcomm0 emitpacketerrors true orbconnectfunction sphero connected cool stuff orbonerror functionerr data something err ignore compatibility spherojs module currently compatible nodejs version 010x thru 5x order install nodejs 5x need g v48 higher development use npm install install development dependency well noble serialport npm install noble serialport also need install grunt running npm install g gruntcli run test grunt test use grunt lint run eslint lib speclib grunt command run task license copyright c 20152016 orbotix licensed mit license detail see license file,"[('bb8', 'ollie'), ('connect', 'bb8')]"
clvrai/furniture,Python,ikea furniture assembly environment longhorizon complex manipulation task youngwoon lee edward hu joseph j lim usc clvr lab environment website arxiv paper sawyer baxter cursor jaco panda announcing launch ikea furniture assembly environment firstofitskind benchmark testing accelerating automation physical assembly process agent sawyer baxter cursor required move align connect furniture part sequentially task completed part connected ikea furniture assembly environment provides comprehensive modeling furniture assembly task 60 furniture model configurable randomized background lighting texture realistic robot simulation baxter sawyer jaco panda gym interface easy rl training reinforcement learning imitation learning benchmark teleopration 3d mousevr controller directory structure repository doc detail documentation furniture config configuration file environment env envrionment code ikea furniture assembly environment util utility code demomanualpy script testing environment keyboard control furnitureunity unity code ikea furniture assembly environment excluded repo due size file instead download prebuilt unity app method reinforcement learning imitation learning code updated sooninstallation prerequisite ubuntu 1804 macos catalina windows10 python 37 pybullet may work python 38 higher mujoco 20 unity 2018423f1 install using unity hub installation bash git clone cd furniture pip install e see docsinstallationmd detailed instruction troubleshooting headless server make sure run virtual display use virtualdisplay specify display number egor1 human control use wasdqe key moving ijkluo key rotating endeffector agent space enter closing opening gripper respectively c key connect two aligned part bash python furnituredemomanualgym interface gym interface ikea furniture assembly environment also provided environment parameter furniture background episode length specified via parameter see register function furnitureenvinitpy py import gym import furniture make environment env gymmake ikeasawyerv0 furniturenametablelack0825 done false reset environment observation envreset done simulate environment observation reward done info envstepenvactionspacesample demonstration generation provide demonstration generation script 10 furniture model bash python furnitureenvfurnituresawyergen furniturename tablelack0825 startcountndemos 100benchmarking provide example command tablelack0825 simply change furniture name test furniture model evaluation add istrain false numeval 50 training command il training bc bash python run algo bc runprefix bctablelack0825 env ikeasawyerdensev0 furniturename tablelack0825 demopath demossawyertablelack0825 gail bash mpirun np 32 python run algo gail runprefix gailtablelack0825 env ikeasawyerdensev0 furniturename tablelack0825 demopath demossawyertablelack0825 gail ppo bash mpirun np 32 python run algo gail runprefix gailppotablelack0825 env ikeasawyerdensev0 furniturename tablelack0825 demopath demossawyertablelack0825 gailenvreward 05 rl training sac bash python run algo sac runprefix sactablelack0825 env ikeasawyerdensev0 furniturename tabledockstra0279 ppo bash mpirun np 32 python run algo ppo runprefix ppotablelack0825 env ikeasawyerdensev0 furniturename tabledockstra0279 documentation see documentation installation configuration detail reference mujoco environment developed based robosuite unity implementation doorgymunity used robosuite environment mujocounity plugin doorgymunity citation inproceedingslee2021ikea titleikea furniture assembly environment longhorizon complex manipulation task authorlee youngwoon hu edward lim joseph j booktitleieee international conference robotics automation icra year2021 url contributor thank alex yin zhengyu yang contribution would like thank everyone ha helped ikea furniture assembly environment way,"[('furniture', 'assembly'), ('assembly', 'environment')]"
rst-tu-dortmund/teb_local_planner,C++,teblocalplanner package teblocalplanner package implement plugin baselocalplanner 2d navigation stack underlying method called timed elastic band locally optimizes robot trajectory respect trajectory execution time separation obstacle compliance kinodynamic constraint runtime refer information tutorial build status melodicdevel branch buildfarm melodic melodic status citing software since lot time effort ha gone development please cite least one following publication using planner research c rosmann f hoffmann bertram integrated online trajectory planning optimization distinctive topology robotics autonomous system vol 88 2017 pp 142153 c rosmann w feiten wosch f hoffmann bertram trajectory modification considering dynamic constraint autonomous robot proc 7th german conference robotics germany munich may 2012 pp 7479 c rosmann w feiten wosch f hoffmann bertram efficient trajectory optimization using sparse model proc ieee european conference mobile robot spain barcelona sept 2013 pp 138143 c rosmann f hoffmann bertram planning multiple robot trajectory distinctive topology proc ieee european conference mobile robot uk lincoln sept 2015 c rosmann f hoffmann bertram kinodynamic trajectory optimization control carlike robot ieeersj international conference intelligent robot system iros vancouver bc canada sept 2017 video left following video present feature package show example simulation real robot situation spoken explanation included audio track video right one demonstrates feature introduced version 02 supporting carlike robot costmap conversion please watch left one first license teblocalplanner package licensed bsd license depends package listed packagexml also bsd licensed thirdparty dependency included licensed different term eigen mpl2 license libg2o g2o licensed bsd enabled csparseextension licensed lgpl3 csparse included part suitesparse collection boost boost software license package included distributed hope useful without warranty without even implied warranty merchantability fitness particular purpose see license detail requirement install dependency listed packagexml cmakeliststxt file using rosdep rosdep install teblocalplanner,"[('c', 'rosmann'), ('f', 'hoffmann')]"
A9T9/RPA,Other,uivision rpa modern robotic process automation plus selenium ide question suggestion meet u uivision rpa user forum every user benefit question answer provided forum would ask post question rpa forum first public forum appropriate question forum monitored active user tech support developer would like concentrate discussion one place install uivision rpa uivision rpa chrome firefox modern crossplatform rpa software macos linux window includes selenium ide web macro recorder find latest version always chrome firefox store use completely free private commercial purpose uivision rpa google chrome webstore uivision rpa firefox webstore uivision rpa microsoft edge webstore uivision rpa plus selenium ide homepage list supported selenium ide command building chrome edge firefox extension use node v12161 npm v6134 building extension required want use install uivision rpa directly chrome edge firefox store easiest recommended way using uivision rpa software older version found rpa software archive besides general piece information browser extension written javascript thus opensource technical sense nature strict opensource security approach make uivision rpa secure robotic process automation rpa solution market set break point debug extension right browser thus github repo required debugging source code inspection work link show screenshot uivision rpa software installed chrome store debugged inspected directly web browser course developer also build directly source code command line npm npm run build buildff firefox done readytouse extension code appears dist directory chrome distff directory firefox need latest source code version please note use internal source code repository daily development work latest source code snapshot always requested directly development team please contact u team uivision looking forward talking course want join development welcome,"[('uivision', 'rpa'), ('source', 'code')]"
rpng/open_vins,C++,openvins rosworkflow rosworkflow free workflow welcome openvins project openvins project house core computer vision code along stateofthe art filterbased visualinertial estimator core filter extended kalman filter fuse inertial information sparse visual feature track visual feature track fused leveraging multistate constraint kalman filter msckf sliding window formulation allows 3d feature update state estimate without directly estimating feature state filter inspired graphbased optimization system included filter ha modularity allowing convenient covariance management proper typebased state system please take look feature list full detail system support github project page documentation getting started guide publication reference news event may 11 2023 inertial intrinsic support released part v27 along bug fix improvement stereo klt tracking please check release page detail april 15 2023 minor update v263 support incremental feature triangulation active feature downstream application faster zerovelocity update small bug fix example realsense configuration cached fast state prediction please check release page detail april2023 released monocular planeaided vins termed ovplane leverage openvins project support released indoor ar table dataset july 14 2022 improved feature extraction logic 100hz tracking bug fix updated script see v261 pr259 v262 pr264 march 14 2022 initial dynamic initialization open sourcing asynchronous subscription inertial reading publishing odometry support lower frequency feature tracking see v26 pr232 detail december 13 2021 new yaml configuration system ros2 support docker image robust static initialization based disparity internal logging system reduce verbosity image transport publisher dynamic number feature support small fix see v25 pr209 detail july 19 2021 camera class masking support alignment utility small fix see v24 pr117 detail december2020 released improved memory management active feature pointcloud publishing limiting number feature update bound compute small fix see v23 pr117 detail november 18 2020 released groundtruth generation utility package vicon2gt enable creation groundtruth trajectory motion capture room evaulating vio method july2020 released zero velocity update vehicle application direct initialization standing still see pr79 detail may 18 2020 released secondary pose graph example repository ovsecondary based vinsfusion openvins publishes marginalized feature track feature 3d position first camera intrinsics extrinsics see pr66 detail discussion april2020 released v20 update codebase key refactoring rosfree building improved dataset support single inverse depth feature representation please check release page detail january 21 2020 paper ha accepted presentation icra 2020 look forward seeing everybody also added link video system running different datasets october 23 2019 openvins placed first iros 2019 fpv drone racing vio competition giving short presentation workshop 1245pm macau november 8th october2019 presenting visualinertial navigation challenge application workshop iros 2019 submitted workshop paper found link august 21 2019 open sourced ovmaplab interfacing openvins maplab library august 15 2019 initial release openvins repository documentation website project feature sliding window visualinertial msckf modular covariance type system comprehensive documentation derivation extendable visualinertial simulator manifold se3 bspline arbitrary number camera arbitrary sensor rate automatic feature generation five different feature representation global xyz global inverse depth anchored xyz anchored inverse depth anchored msckf inverse depth anchored single inverse depth calibration sensor intrinsics extrinsics camera imu transform camera imu time offset camera intrinsics inertial intrinsics including gsensitivity environmental slam feature opencv aruco tag slam feature sparse feature slam feature visual tracking support monocular camera stereo camera synchronized binocular camera synchronized klt descriptor based masked tracking static dynamic state initialization zero velocity detection update box evaluation eurocmav tumvi uzhfpv kaist urban vio datasets extensive evaluation suite ate rpe nees rmse etc codebase extension ovplane realtime monocular visualinertial odometry vio system leverage environmental plane core present efficient robust monocularbased plane detection algorithm doe require additional sensing modality stereo depth camera neural network plane detection tracking algorithm enables realtime regularization point feature environmental plane either maintained state vector longlived plane marginalized efficiency planar regularity applied instate slam outofstate msckf point feature enabling longterm pointtoplane loopclosures due large spacial volume plane vicon2gt utility wa created generate groundtruth trajectory using motion capture system eg vicon optitrack use evaluating visualinertial estimation system specifically calculate inertial imu state full 15 dof camera frequency rate generate groundtruth trajectory similar provided eurocmav datasets performs fusion inertial motion capture information estimate unknown spacialtemporal calibration two sensor ovmaplab codebase contains interface wrapper exporting visualinertial run openvins vimap structure taken maplab state estimate raw image appended vimap openvins run dataset completion dataset feature reextract triangulate maplab feature system used merge multisession map perform batch optimization first running data openvins example provided along helper script export trajectory standard groundtruth format ovsecondary example secondary thread provides loop closure loosely coupled manner openvins modification code originally developed hkust aerial robotics group found vinsfusion repository stress loosely coupled method thus information returned estimator improve underlying openvins odometry codebase ha modified key area including exposing loop closure parameter subscribing camera intrinsics simplifying configuration topic need supplied tweak loop closure detection improve frequency demo video href href href href href href href href href credit licensing code wa written robot perception navigation group rpng university delaware issue code please open issue github page relevant implementation detail reference researcher leveraged compared work please cite following txt conferencegeneva2020icra title openvins research platform visualinertial estimation author patrick geneva kevin eckenhoff woosik lee yulin yang guoquan huang booktitle proc ieee international conference robotics automation year 2020 address paris france url url codebase documentation licensed gnu general public license v3 gpl3 must preserve copyright license notice derivative work make available complete source code modification license see,"[('href', 'href'), ('inverse', 'depth')]"
Improbable-AI/walk-these-ways,Python,go1 simtoreal locomotion starter kit table content overview system requirement training model installation environment model configuration training logging analyzing policy deploying model installing deployment utility running controller rc configuration deploying custom model deployment logging analyzing realworld performance debugging common error overview repository provides implementation paper walk way tuning robot control generalization multiplicity behavior gabriel b margolis pulkit agrawal conference robot learning 2022 project page use repository work consider citing articlemargolis2022walktheseways titlewalk way tuning robot control generalization multiplicity behavior authormargolis gabriel b agrawal pulkit journalconference robot learning year2022 environment build legged gym environment nikita rudin robotic system lab eth zurich paper isaac gym simulator nvidia paper training code build rslrl repository also nikita rudin robotic system lab eth zurich redistributed code retains original license initial release provides following feature train reinforcement learning policy go1 robot using ppo isaacgym domain randomization multiplicity behavior mob evaluate pretrained mob policy simulation deploy learned policy go1 using unitreeleggedsdk system requirement simulated training evaluation isaac gym requires nvidia gpu train default configuration recommend gpu least 10gb vram code run smaller gpu decrease number parallel environment cfgenvnumenvs however training slower fewer environment hardware deployment provide deployment code unitree go1 edu robot relatively lowcost commercially available quadruped purchased need edu version robot run customize locomotion controller training model installation install pytorch 110 cuda113 bash pip3 install torch1100cu113 torchvision0111cu113 torchaudio0100cu113 f install isaac gym download install isaac gym previewfrom unzip file via bash tar xf isaacgympreview4packagetargz install python package bash cd isaacgympython pip install e verify installation try running example bash python examples1080ballsofsolitudepyfor troubleshooting check doc isaacgymdocsindexhtml install go1gym package repository run pip install e verifying installation everything installed correctly able run test script bash python scriptstestpy script print simulating step gui default turn set headlessfalse testpy main function call environment model configuration code structure main environment simulating legged robot leggedrobotpy default configuration parameter including reward weighting defined leggedrobotconfigpycfg three script script directory bash script initpy playpy testpy trainpy run testpy script verify environment setup run installed gym environment correctly train agent run trainpy evaluate pretrained agent run playpy provie pretrained agent checkpoint runspretrainv0 directory training logging train go1 controller walk way run bash python scriptstrainpy initializing simulator script print list metric every ten training iteration training default configuration requires 12gb gpu memory le memory available still train reducing number parallel environment used simulation default cfgenvnumenvs 4000 visualize training progress first start mldash frontend app bash python mldashapp start mldash backend server running command parent directory run folder bash python mldashserver finally use web browser go app ip default localhost3001 create new profile credential username run api server ip default localhost8081 access token blank clicking profile yield dashboard interface visualizing training run analyzing policy evaluate recently trained model run bash python scriptsplaypy robot commanded run forward 3ms forseconds completing simulation script plot robot velocity joint angle gui default doe appear working docker make sure forgotten run bash dockervisualizeaccessbash deploying model safety recommendation user advised follow unitree recommendation safety using go1 lowlevel control mode mean hanging robot keeping away people obstacle practice main safety consideration found important ha plug anything robot back ethernet cable usb initial calibration testing new policy hurt robot case fall code implement safety layer unitree unitreeleggedsdk powerprotect levelthis cut power motor joint torque high could happen sometimes fast running research code use risk take responsibility damage installing deployment utility first step connect development machine robot using ethernet ping robot verify connection ping 19216812315 return x packet transmitted x receivedpacket loss confirmed robot connected run following command computer transfer file robot first time run script download transfer zipped docker image development robot deploymentimagetar file quite large 35gb need downloaded transferred cd go1gymdeployscripts sendtounitreesh next log onto robot onboard computer install docker environment enter onboard computer command ssh unitree19216812315 run following command robot onboard computer chmod x installerinstalldeploymentcodesh cd go1gymgo1gymdeployscripts sudo installerinstalldeploymentcodesh installer automatically unzip install docker image containing deployment environment running controller place robot damping mode control sequence l2a l2b l1l2start robot sit ground joint move freely ssh unitree19216812315 run following two command start controller operate robot lowlevel control mode make sure go1 hung first cd go1gymgo1gymdeployautostart startunitreesdksh second cd go1gymgo1gymdeploydocker sudo make autostart robot wait press r2 calibrate wait second press r2 running control loop rc mapping rc mapping depicted deploying custom model training custom model saved run folder note relative location custom model train folder default policy gaitconditionedagilitypretrainv0train denote pdir play custom model simulation first replace line label pdir deploy robot replace line label pdir rerun sendtounitreesh script update file robot logging debugging coming soon analyzing realworld performance coming soon debugging common error bug solution first report disk space run disk space cd go1gymgo1gymdeployinstaller installdeploymentcodesh consider changing script use 19216812313 instead least go1 edu withjetson nano required disk space copy tar extract image 19216812313 alternatively consider deploying external pc lcmposition syntax error deploying sudo startunitreesdksh external pcnuc get following error lcmpositionsyntax error word unexpected expecting likely lcmposition ha compiled arm aarch64 run jetson please recompile architectureexternal pc nuc using,"[('bash', 'python'), ('custom', 'model')]"
OpnTec/fashionmaker,Other,pattern making program author roman telezhynskyi copyright c 20132019 valentina project valentina web page wiki valentina main repository forum ppa ubuntu develop help translate valentina valentina crossplatform patternmaking program allows designer create model pattern clothing software allows pattern creation using either standard sizing table individual set measurement blend new technology traditional method create unique pattern making tool compiling valentina prerequisite qt 540 later unix development package needed mercurial working repository unix g 48 clang 34 xpdf package tool pdftops window mingw xpdf open source viewer portable document format pdf file website put tool pdftopsexe directory valentina binary file installed toolchains match one qt wa compiled build valentina cd sourcedirectorybuild qmake valentinapro r confignodebugsymbols confignoccache make mingw32make nmake jom depending platform note platform eg fedora qttools come qmakeqt5 etc case install qtchooser wrapper resolve qt version respect qtselect run export qtselect5 prior qmake come along using qmakeqt5 notein order build use valentina path environment variable need extended path locate qmake moc qt tool done adding cqtversionbin path variable newer version window path extended control panelsystemadvancedenvironment variable menu may also need ensure location compiler build tool listed path variable depend choice software development environment unix system default prefix command make install usr using another prefix build qmake command qmake prefixusrlocal prefixlibusrlibi386linuxgnu valentinapro r confignodebugsymbols confignoccache usrlocal new prefix installation binary file usrlibi386linuxgnu new prefix install library licensing valentina free software redistribute andor modify term gnu general public license published free software foundation either versionof license option later version valentina distributed hope useful without warranty without even implied warranty merchantability fitness particular purpose see gnu general public license detail see licensegpltxt file information component released qmuparser bsd license vpropertyexplorer lgplv21 license,"[('pattern', 'making'), ('binary', 'file')]"
strasdat/Sophus,C++,githubcicpp window appveyor githubcisympy cicov sophus overview c implementation lie group commonly used 2d 3d geometric problem ie computer vision robotics application among others package includes special orthogonal group so2 so3 present rotation 2d 3d well special euclidean group se2 se3 represent rigid body transformation ie rotation translation 2d 3d api documentation cross platform support sophus compiles clang gcc linux x well msvc window specific compiler operating system version supported one used continuous integration ci see githubci appveyor detail however work minor modification many modern configuration long support c14 cmake eigen 33x optionally fmt fmt dependency eliminated passing dusebasicloggingon cmake configuring sophus githubci appveyor image appveyor cicov image cicov githubcicpp image githubcicpp githubcisympy image githubcisympy,"[('2d', '3d'), ('githubci', 'appveyor')]"
pantor/ruckig,C++,ruckig instantaneous motion generation robot machine ruckig generates trajectory onthefly allowing robot machine react instantaneously sensor input ruckig calculates trajectory target waypoint position velocity acceleration starting initial state limited velocity acceleration jerk constraint besides target state ruckig allows define intermediate position waypoint following statetostate motion ruckig guarantee timeoptimal solution intermediate waypoints ruckig calculates path time parametrization jointly resulting significantly faster trajectory compared traditional method information found ruckigcom corresponding paper jerklimited realtime trajectory generation arbitrary target state accepted robotics science system r 2021 conference installation ruckig ha dependency except testing build ruckig using cmake run bash mkdir p build cd build cmake dcmakebuildtyperelease make install ruckig systemwide directory either use sudo make install install debian package using cpack running bash cpack sudo dpkg ruckigdeb example using ruckig cmake project given examplescmakeliststxt however also include ruckig directory within project call addsubdirectoryruckig parent cmakeliststxt ruckig also available python module particular development debugging purpose ruckig community version installed pypi tutorial furthermore explain basic get started online generated trajectory within application also collection example guide important feature ruckig timeoptimal trajectory single degree freedom shown figure also added plot resulting trajectory example let get started trajectory profile waypointbased trajectory generation ruckig provides three main interface class ruckig inputparameter outputparameter class first need create ruckig instance number dofs template parameter control cycle eg second constructor cpp ruckig6 ruckig 0001 number dofs control cycle input type hasblocks data current state target state corresponding kinematic limit cpp inputparameter6 input number dofs inputcurrentposition 02 inputcurrentvelocity 01 inputcurrentacceleration 01 inputtargetposition 05 inputtargetvelocity 01 inputtargetacceleration 02 inputmaxvelocity 04 inputmaxacceleration 10 inputmaxjerk 40 outputparameter6 output number dofs want accelerationconstrained trajectory also omit maxjerk well current targetacceleration value given input output resource iterate trajectory discrete time step application loop must run within realtime thread control actual hardware cpp ruckigupdateinput output resultworking make use new state eg robotsetjointpositionsoutputnewposition outputpasstoinputinput forget within control loop need update current state input parameter according calculated trajectory therefore passtoinput method copy new kinematic state output current kinematic state input parameter next step current state expected precalculated trajectory ruckig calculate new trajectory based novel input trajectory ha reached target state update function return resultfinished intermediate waypoints ruckig community version support intermediate waypoints via cloud api using intermediate position underlying motion planning problem well calculation change significantly particular fundamental limitation jerklimited online trajectory generation regarding usage waypoints please find information limitation general recommend use cpp inputintermediatepositions otgfilterintermediatepositionsinputintermediatepositions 01 filter waypoints according high threshold distance setting interruptcalculationduration make sure realtime capable refining solution next control invocation note soft interruption calculation currently minimum discrete duration supported using intermediate position input parameter go detail inputparameter type ha following member cpp using vector stdarray default vector currentposition vector currentvelocity initialized zero vector currentacceleration initialized zero stdvector intermediatepositions pro version vector targetposition vector targetvelocity initialized zero vector targetacceleration initialized zero vector maxvelocity vector maxacceleration vector maxjerk initialized infinity stdoptional minvelocity given negative maximum velocity used stdoptional minacceleration given negative maximum acceleration used stdoptional minposition pro version stdoptional maxposition pro version stdarray enabled initialized true stdoptional minimumduration stdoptional interruptcalculationduration pro version controlinterface controlinterface default position interface control full kinematic state synchronization synchronization synchronization behavior multiple dofs durationdiscretization durationdiscretization whether duration discrete multiple control cycle default stdoptional perdofcontrolinterface set control interface dof individually overwrites global controlinterface stdoptional perdofsynchronization set synchronization dof individually overwrites global synchronization top current state target state constraint ruckig allows advanced setting minimum velocity acceleration specified negative number given negative maximum velocity acceleration used similar jerk limit example might useful human robot collaboration setting different velocity limit towards human switching different moving coordinate frame like picking conveyer belt overwrite global kinematic limit specify limit section two waypoints separately using eg persectionmaxvelocity dof enabled ignored calculation ruckig output trajectory constant acceleration dofs minimum duration optionally given note ruckig guarantee exact minimum duration trajectory control interface position velocity control switched easily example stop trajectory visual servoing easily implemented velocity interface different synchronization behavior ia phase time synchonization implemented phase synchronization result straightline motion trajectory duration might constrained multiple control cycle way exact state reached control loop execution refer api documentation enumeration within ruckig namespace available option input validation check ruckig able generate trajectory actual calculation step cpp ruckigvalidateinputinput checkcurrentstatewithinlimitsfalse checktargetstatewithinlimitstrue return true throw throw error detailed reason input valid also set default template parameter false via ruckigvalidateinputfalse return boolean true false two boolean argument check current target state within limit check includes typical catch jerklimited trajectory generation current state maximal velocity positive acceleration inevitable lead velocity violation future timestep general condition fulfilled absacceleration sqrt2 maxjerk maxvelocity absvelocity argument set true calculated trajectory guaranteed within kinematic limit throughout duration also note range constraint input due numerical reason see detail result type update function ruckig class return result type indicates current state algorithm either working finished trajectory ha finished error type something went wrong calculation result type compared standard integer state error code workingfinishederrorerrorinvalidinput 100 errortrajectoryduration 101 errorpositionallimits 102 errorexecutiontimecalculation 110 errorsynchronizationcalculation 111 output parameter output class includes new kinematic state overall trajectory cpp vector newposition vector newvelocity vector newacceleration trajectory trajectory current trajectory double time current autoincremented time reset toat new calculation sizet newsection index section two possibly filtered intermediate position bool didsectionchange wa new section reached last cycle bool newcalculation whether new calculation wa performed last cycle bool wascalculationinterrupted wa trajectory calculation interrupted pro version double calculationduration duration calculation last cycle moreover trajectory class ha range useful parameter method cpp double duration duration trajectory stdarray independentmindurations timeoptimal profile independent dof attimedouble time get kinematic state trajectory given time getpositionextrema return information position extremum time refer api documentation exact signature offline calculation ruckig also support offline approach calculating trajectory cpp result ruckigcalculateinput trajectory using method ruckig constructor doe need control cycle deltatime argument however given ruckig support stepping trajectory cpp ruckigupdatetrajectory output resultworking make use new state eg robotsetjointpositionsoutputnewposition starting current outputtime currently ruckig pro tracking interface following arbitrary signal position velocity acceleration jerklimitation straight forward way would pas current state ruckig target state however resulting trajectory take time catch approach always lag behind signal tracking interface solves problem predicting ahead eg constant acceleration default therefore able follow signal closely timeoptimal way might helpful general tracking robot servoing trajectory postprocessing application use tracking interface construct cpp trackig1 otg 001 control cycle set current state well kinematic constraint via cpp inputcurrentposition 00 inputcurrentvelocity 00 inputcurrentacceleration 00 inputmaxvelocity 08 inputmaxacceleration 20 inputmaxjerk 50 track signal online manner within realtime control loop cpp double tt 100 otgdeltatime auto targetstate signalt signal return position velocity acceleration auto otgupdatetargetstate input output make use smooth target motion eg outputnewposition outputpasstoinputinput please find complete example functionality also used offline manner eg entire signal known beforehand call thecpp smoothtrajectory otgcalculatetrajectorytargetstates input method trajectory given astdvector target state tracking interface available ruckig pro version dynamic number degree freedom far told ruckig number dofs template parameter know number dofs compiletime set template parameter ruckigdynamicdofs pas dofs constructor cpp ruckigdynamicdofs otg0001 inputparameterdynamicdofs inputoutputparameterdynamicdofs outputthis switch default vector stdarray dynamic stdvector type however recommend keep template parameter possible first ha performance benefit percent second convenient realtime programming due easier handling memory allocation using dynamic degree freedom make sure allocate memory vector beforehand custom vector type ruckig support custom vector type make interfacing code even easier flexible importantly switch eigen vector simply including eigen 34 later ruckig cpp include version 34 later include call constructor ruckigeigenvector parametercpp ruckig6 eigenvector otg 0001 inputparameter6 eigenvector input outputparameter6 eigenvector output every output ruckig api currentposition newposition maxjerk eigen type define completely custom vector type pas c template template parameter constructor template template parameter need fulfill range template argument methodscpp template struct minimalvector type operator const array getter type operator array setter sizet size const current size bool operatorconst minimalvector rh const equal comparison operator required combination dynamicdofs eg allocate memory void resizesizet size note thatdynamicdofscorresponds todofswe included range example using ruckig 10 eigen 11 custom vector type 12 custom type dynamic number dofs test numerical stability current test suite validates 5000000000 random trajectory well many additional edge case numerical exactness tested final position final velocity within 1e8 final acceleration within 1e10 velocity acceleration jerk limit within numerical error 1e12 absolute value suggest scale input correspond required precision system example realworld system suggest use input value instead eg mm 1e8m sufficient precise practical trajectory generation furthermore kinematic limit 1e12 maximal supported trajectory duration 7e3 note ruckig also output value outside range however guarantee correctness ruckig pro version ha additional tool increase numerical range improve reliability benchmark find ruckig twice fast reflexxes type iv statetostate motion wellsuited control cycle low 250 microsecond ruckig community version general powerful opensource alternative reflexxes type iv library fact ruckig first type v trajectory generator arbitrary target state even support directional velocity acceleration limit also faster top benchmark trajectory intermediate waypoints compare ruckig toppra stateoftheart library robotic motion planning ruckig able improve trajectory duration average around 10 path planning time parametrization calculated jointly moreover ruckig realtime capable support jerkconstraints benchmark development ruckig written c17 continuously tested ubuntulatest macoslatest windowslatest following version doctest v24 testing pybind11 v29 python wrapper still need use c11 apply small patch executing bash scriptspatchc11sh result performance drop percent moreover python module supported used ruckig used hundred research lab company opensource project worldwide including moveitfor trajectory generation coppeliasim starting version 43 fuzzy logic robotics gestalt robotics struckig port ruckig structered text st iec611313 usage plcs scanlab controlling laser frankx controlling franka emika robot arm wiredworks made simple kivy gui application many others citation articleberscheid2021jerk titlejerklimited realtime trajectory generation arbitrary target state authorberscheid lars kroger torsten journalrobotics science system xvii year2021,"[('target', 'state'), ('velocity', 'acceleration')]"
airalab/robonomics,Other,robonomics image foundation grant wave two recipient link author robonomics network developer revision 050 toc sectnums image link image status link image link image link image link implementation node rust based framework repo contains runtimes earth parachain mar parachain robonomics relay chain network readme provides information installing robonomics binary developing codebase specific guide like node see wiki robonomics platform includes set opensource package infrastructure robotics smart city industry 40 developer try node andor portal run playground robonomics crate structure robonomics followed robonomics node substratebased blockchain node robonomics network extension robonomics cli console line primitive make framework function runnable robonomics io streamoriented library support general set sensor actuator including virtual device like pubsub stdinstdout make hardware interaction easy robonomics protocol network library help build p2p communication industry 40 smart city case robonomics frame collection pallet suitable smart city industry 40 case full doc available building source ensure rust support software installed source shell curl ssf sh window download run rustupinitexe instead rustup target add wasm32unknownunknown toolchain nightly source shell case error toolchain nightlyx8664unknownlinuxgnu installed rustup toolchain install nightly also need install following package linux source shell sudo apt install cmake git clang libclangdev protobufcompiler mac source shell brew install cmake pkgconfig git llvm window powershell source shell install llvm download install pre build window binary llvm install robonomics node git source source shell cargo install force git tag v100 robonomicsnode launch full node robonomics testnet parachain source shell robonomics run local development network source shell robonomics dev building nix install nix package manager source shell curl sh run nix shell source shell git clone recursive cd robonomics nixshell run cargo run release network maintaining currently robonomics maintained developer anyone project every additional full node blockchain help sustainable fault tolerant robonomics node binary available asset could gatekeeper update release image link telemetry launch command source shell robonomics validator parachainid 1000 collatorethaccount robonomics io especially make hardware interaction easy introduce crate crate implement two kind device source device intended read data sink device intended write data approach suit pipeline paradigm well implemented robonomics cli io subcommand robonomics io robonomicsio 0251 run io action using robonomics framework usage robonomics io flag option subcommands help print message help given subcommands read read information device write write information device example sentence simple read value nova sds011 sensor followed bash robonomics io read sds011 timestamp1588090281pm2505pm1015 also possible combine io action get something useful following sentence read json value sensor publishes mysensordata topic bash robonomics io read sds011 robonomics io write pubsub mysensordata read guide wiki robotics integration course robonomics integrate opensource robotics main target robot node implement feature make robotics integration easy possible building feature install using import environment source shell source optrosmelodicsetupbash build feature source shell cd binnode cargo build release feature example available example directory curiosity rover robonomics control simple yet complete sample robonomics launch datalog function find full documentation wiki,"[('source', 'shell'), ('robonomics', 'io')]"
awesome-photogrammetry/awesome-photogrammetry,Other,repo collection awesome photogrammetry project application tool resource awesome item marked opensource software link source code item marked nonfree may cost money use feel free contribute star fork pull request recommendation suggestion welcome table content table content definition photogrammetric software structure motion sfm software calibration software least square optimization library datasets benchmark journal conference proceeding book introductory review paper course tutorial scientific conference related awesome list license acknowledgment definition definition photogrammetry according k schindler w forstner photogrammetry science technology obtaining information physical environment image focus application surveying mapping highprecision metrology aim photogrammetry provide automated semiautomated procedure engineering task emphasis specified accuracy reliability completeness information source photogrammetry k schindler w forstner 2020 computer vision reference guide 2nd edition photogrammetric software agisoft metashape process digital image generate 3d spatial data meshroom star userfriendly 3d computer vision software micmac star free opensource photogrammetric suite used variety 3d reconstruction scenario mve github star includes structure motion multiview stereo surface reconstruction opendronemap github star open source command line toolkit processing aerial drone imagery pix4d unique photogrammetry software suite mobile drone mapping pixpro professional photogrammetry everyone realitycapture stateoftheart photogrammetry software solution changing industry sure nframes software 3d reconstruction image unique performance flexibility telesculptor github star crossplatform desktop application photogrammetry trimble inpho industry leading software digital photogrammetry structure motion sfm software alicevision github star 3d computer vision framework including structurefrommotion multiview stereo surface reconstruction boofcv github star includes sfm multiview stereo android support various calibration task bundler github star sfm system unordered image collection colmap github star structurefrommotion multiview stereo openmvg github star multiple view geometry library opensfm github star structure motion library written python visualsfm gui application 3d reconstruction using sfm calibration software cameracalibration github star accurate geometric camera calibration kalibr github star multicamera visualinertial rolling shutter camera calibration toolbox mrcal github star toolkit camera calibration least square optimization library cere solver github star c library modeling solving large complicated optimization problem dliboptimization github star c toolkit provides also function solving leastsquares problem eigen c template library linear algebra variety builtin solver wrapper external solver g2o github star c framework optimizing graphbased nonlinear error function gtsam github star c library factor graph bayes network optimization towards slam vo sfm lmfit github star python package build extends many optimization method scipyoptimize scipyoptimizeleastsquares github star powerful leastsquares optimization function python symforce github star fast symbolic computation code generation nonlinear optimization robotics matlaboptimizationtoolbox toolbox local optimization including function solving least square problem datasets benchmark bundle adjustment large bundle adjustment data set five different scene 2010 hessigheim 3d h3d benchmark benchmark semantic segmentation highresolution 3d point cloud textured mesh 2021 journal isprs international journal geoinformation isprs journal photogrammetry remote sensing snif3006 open isprs journal photogrammetry remote sensing photogrammetric engineering remote sensing pers snif1425 pfg journal photogrammetry remote sensing geoinformation science snif0682 remote sensing snif1661 remote sensing environment snif2943 photogrammetric record snif1758 last update source normalized impact factor snif according 20210305 see also top cited journalsproceedings google scholar remote sensing conference proceeding isprs annals isprs archive book closerange photogrammetry 3d imaging luhmann robson kyle j boehm 2014 observation least square e mikhail 1983 photogrammetric computer vision w forstner b p wrobel 2016 photogrammetrie und fernerkundung german c heipke editor 2017 photogrammetry geometry image laser scan k kraus 2011 introductory review paper deep learning remote sensing application metaanalysis review l et al 2019 mathematical foundation photogrammetry k schindler 2014 uav 3d mapping application review f nex f remondino 2013 unmanned aerial system photogrammetry remote sensing review colomina p molina 2014 course tutorial online training photogrammetric computer vision cyrill stachniss university bonn 2021 photogrammetry cyrill stachniss university bonn 2015 photogrammetry ii cyrill stachniss university bonn 2020 scientific conference isprs conference related awesome list awesome computer vision github star awesome geospatial github star awesome lidar github star awesome open geoscience github star awesome robotics github star awesome 3d reconstruction github star awesome point cloud analysis github star photogrammetryguide github star license creative common license work licensed creative common attribution 40 international license acknowledgment icon created pixel perfect freepik,"[('github', 'star'), ('remote', 'sensing')]"
node-webot/weixin-robot,Other,weixin robot build status repo dependency nodejs robot wechat weixinrobot webot wechatmp webot wechatmp xxx yaml json doubanevent webottest faq javascript var express require express var webot require weixinrobot var app express webotset hi webotset subscribe pattern functioninfo return infois event infoparamevent subscribe handler functioninfo return webotset test pattern testi handler functioninfo next nextnull roger rule webotget subscribe name subscribe pattern functioninfo return infois event infoparamevent subscribe handler functioninfo return webotwatchapp token your1weixin2token path wechat var webot2 new webotwebot webot2set hii hello arer youui robot webot2watchapp token token2 path wechaten pathpath web 80 applisten80 node 80 nginx apache proxy applistenprocessenvport appenable trust proxy token webotcli wiki webot npm webotcli npm install webotcli g webotcli webot help menu 050 wechatmp sessionwebotwatch appuseconnectsession api api wechat api flow webot api webotset webotwaitrule webotloads info webot rule handler info session wexinrobot info j msgtype infoparam info inforaw info info tousername infosp sp mean service provider fromusername openid infouid createtime msgid id infoid msgtype infotype content infotext msgtype text picurl infoparampicurl msgtype image locationx lat infoparamlat msgtype location locationy lng infoparamlng scale infoparamscale label infoparamlabel title infoparamtitle msgtype link description infoparamdescription url infoparamurl event infoparamevent msgtype event subscribe unsubscribe click location eventkey key infoparameventkey key mediaid id infoparammediaid msgtype voice video recognition infoparamrecognition msgtype voice thumbmediaid id infoparamthumbmediaid msgtype video format infoparamformat locationx locationy recognition infotext infotext infotype msgtype location javascript uid thefromusername sp thetousername id themsgid type location param lat thelocationx lng thelocationy scale thescale label thelabel inforeply inforeply rulehandler callbak webotwatch express inforeply xml inforeply string 2048 object array javascript inforeply title url description picurl javascript inforeply title url picurl description inforeply title url picurl description title url picurl description title description musicurl hqmusicurl wifi replytype music javascript inforeply type music title music 101 musicurl hqmusicurl fun wechat enjoy robot infonoreply infonoreply true javascript webotset ignore pattern functioninfo return infois voice handler functioninfo infonoreply true return license mit license permission hereby granted free charge person obtaining copy software associated documentation file software deal software without restriction including without limitation right use copy modify merge publish distribute sublicense andor sell copy software permit person software furnished subject following condition copyright notice permission notice shall included copy substantial portion software software provided without warranty kind express implied including limited warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arising connection software use dealing software,"[('functioninfo', 'return'), ('handler', 'functioninfo')]"
moble/quaternion,Python,test status documentation status pypi version conda version mit license doi quaternion numpy python module add quaternion dtype numpy code wa originally based code martin ling wrote help mark wiebe ha rewritten idea rational work python 2x 3x fix bug greatly expands application quaternion see also purepython package quaternionic quickstart sh conda install c condaforge quaternion sh python pip install upgrade forcereinstall numpyquaternion optionally add user install second command using python environment though start dependency basic requirement code reasonably current version python numpy particular python version 38 310 routinely tested earlier python version including 27 work older version package might still work recent version package even numpy longer support python previous 38 mileage may vary also numpy version greater 1130 work test run recent release time test however certain advanced function package including squad meanrotorinintrinsicmetric integrateangularvelocity related function require scipy automatically use numba scipy standard python package scientific computation implement interface c fortran code optimization among thing need finding mean optimal rotor numba us llvm compile python code machine code accelerating many numerical function factor anywhere fromto 2000 possible run code without numba particular function anywhere fromto 400 time slower without scipy numba installed pip conda however conda specifically geared toward scientific python generally robust complicated package fact main anaconda package come numba scipy prefer smaller download size miniconda come minimal extra also run command sh conda install numpy scipy numba installation assuming use conda manage python installation currently preferred choice science engineering python install package simply sh conda install c condaforge quaternion prefer use pip instead sh python pip install upgrade forcereinstall numpyquaternion see upgrade forcereinstall option always necessary ensure pip update numpy ha refuse use conda might want install inside home directory without root privilege conda doe default anyway done adding user command sh python pip install user upgrade forcereinstall numpyquaternion note pip attempt compile code requires working c compiler finally also fully manual option downloading code changing code directory running sh python pip install upgrade forcereinstall work regardless installation method long compiler hanging around basic usage full documentation found read doc function docstrings explain relevant point following mostly purpose example python import numpy np import quaternion npquaternion1000 quaternion10q1 npquaternion1234 q2 npquaternion5678 q1 q2 quaternion60 12 30 24 nparrayq1 q2 arrayquaternion13quaternion57dtypequaternion npexpa arrayquaternion169392 078956 118434 157912 quaternion138909 256861 299671 342481 dtypequaternion note package represents quaternion scalar followed x component vector part followed followed z component accessed directly python q1w q1x q1y q1z 10 20 30 40 however work individualquaternion array better use vectorized operation likeasfloatarray following ufuncs implemented mean run fast numpy array python add subtract multiply divide log exp power negative conjugate copysign equal notequal le lessequal isnan isinf isfinite absolute quaternion component stored doubleprecision floating point number float python language float64 precise numpy language numpy array dtypequaternion accessed array double without slow memoryconsuming copying data rather view exact memory space created within microsecond regardless shape size quaternion array comparison operation follow lexicographic ordering tuples unary test isnan isinf return true would return true individual component isfinite return true would return true component real type may cast quaternion giving quaternion zero three imaginary component complex type may also cast quaternion single imaginary component becoming first imaginary component quaternion quaternion may cast real complex type several arrayconversion function also included example convert nx4 array float ndimensional array quaternion use asquatarray python import numpy np import quaternion nprandomrand7a array 093138726 046972279 018706385 086605021 070633523 069982741 093303559 061440879 079334456 065912598 00711557 046622885 088185987 09391296 073670503 027115149 049176628 056688076 013216632 033309146 011951624 086804078 077968826 037229404 033187593 053391165 08577846 018336855 q quaternionasquatarraya q array quaternion0931387262880247 0469722787598354 0187063852060487 0866050210100621 quaternion0706335233363319 069982740767353 0933035590130247 0614408786768725 quaternion0793344561317281 0659125976566815 00711557025000925 0466228847713644 quaternion0881859869074069 0939129602918467 0736705031709562 0271151494174001 quaternion0491766284854505 0566880763189927 0132166320200012 0333091463422536 quaternion0119516238634238 086804077992676 0779688263524229 0372294043850009 quaternion0331875925159073 0533911652483908 0857784598617977 0183368547490701 dtypequaternion note quaternion printed full precision unlike float see extra digit actual data identical two case convert ndimensional array quaternion nx4 array float use asfloatarraypython b quaternionasfloatarrayqs b array 093138726 046972279 018706385 086605021 070633523 069982741 093303559 061440879 079334456 065912598 00711557 046622885 088185987 09391296 073670503 027115149 049176628 056688076 013216632 033309146 011951624 086804078 077968826 037229404 033187593 053391165 08577846 018336855 also possible convert quaternion 3x3 array float representing rotation matrix array n quaternion nx3x3 array float representing n rotation matrix using asrotationmatrix fromrotationmatrix similar conversion possible rotation vector using asrotationvector fromrotationvector spherical coordinate using assphericalcoords fromsphericalcoords finally possible derive euler angle quaternion using aseulerangles create quaternion euler angle using fromeulerangles though aware euler angle basically worst thing ever1 complain function using something favorite convention please read page bug report feature request bug report feature request entirely welcome exception pull request also entirely welcome course idea code going wrong idea new feature know implement code routinely tested recent version python 38 though 310 numpy 113 test coverage necessarily complete could bug may certainly present especially higherlevel function like meanrotor acknowledgment code course hosted github opensource project hosting free wonderful feature github available including free wiki space web page hosting pull request nice interface git log etc github user hannes ovren hovren pointed error previous version code suggested nice utility function rotation matrix etc github user stijn van drongelen rhymoid contributed code make compilation work msvc github user jon long longjon ha provided elegant contribution substantially improve several tricky part code rebecca turner 9999years leo stein duetosymmetry work getting documentation onto read doc every change code automatically tested travisci service integrates beautifully github detecting commit automatically rerunning test code downloaded installed fresh time tested five different version python ensures change make code break either installation feature written test travisci also automatically build conda pip version code hosted anacondaorg pypi respectively free service opensource project like one work creating code wa supported part sherman fairchild foundation nsf grant phy1306125 ast1333129 euler angle awful euler angle pretty much worst thing ever make feel bad even supporting quaternion faster accurate basically free singularity intuitive generally easier understand work entirely without euler angle certainly absolutely never need really give mildly supported,"[('euler', 'angle'), ('upgrade', 'forcereinstall')]"
LinuxCNC/linuxcnc,Python,badge gpl2 badge lgpl linuxcnc controlling cnc machine badge translationtranslation website website install install build build documentation documentation drive milling machine lathe 3d printer laser cutter plasma cutter robot arm hexapod linuxcnc wa initiated 25 year ago evolved international project contribution globe release 29 linuxcnc also transitioned documentation use public crowd translation service weblate invite user contribute translation expect help attract practitioner project also help educating enthusiast age group automated machining disclaimer author software accept absolutely liability harm loss resulting use extremely unwise rely software alone safety machinery capable harming person must provision completely removing power motor etc person enter danger area machinery must designed comply local national safety code author software cannot take responsibility compliance badge translation badge gpl2 license software badge lgpl part license website build,"[('badge', 'gpl2'), ('badge', 'lgpl')]"
mit-acl/cadrl_ros,Python,cadrlros collision avoidance deep rl implementation dynamic obstacle avoidance algorithm trained deep rl paper everett chen j p motion planning among dynamic decisionmaking agent deep reinforcement learning ieeersj international conference intelligent robot system iros 2018 paper video bibtex inproceedingseverett18iros address madrid spain author everett michael chen yu fan jonathan p booktitle ieeersj international conference intelligent robot system iros datemodified 20181003 061808 0400 month sep title motion planning among dynamic decisionmaking agent deep reinforcement learning year 2018 url bdskurl1 dependency tensorflow required tested version 140 numpy required optional tested kinetic ubuntu 1604 fordmsgs using custom msg definition general note main contribution software networkpy file trained model parameter tensorflow checkpoint contain policy reported paper enables reasearchers easily compare future algorithm make easy understand flow code provide example scriptsga3ccadrldemoipynb form jupyter notebook used reference want edit file make sure jupyter installed tensorflow virtualenv sure work run jupyter notebook minimum working example algorithm assumes nvidiadocker installed already might work regular docker minor change git clone gitgithubcommfe7cadrlros cadrlrosdockerbuilddockersh cadrlrosdockerrundockersh start instance docker container output jupyter notebook url copy url browser navigate cadrlrosscripts open ga3ccadrldemoipynb tensorflow deps already installed docker container built notebook work note also provide implementation tested clearpath jackal ground robot node one module software required autonomous navigation among dynamic obstacle much written integrate system node written may particularly useful system provide example one might connect module test learned collision avoidance policy hardware example system likely different representation format dynamic obstacle extracted perception system straightforward replace cbclusters method another one long information make state vector policy queried recommend looking jupyter notebook first algorithm wa trained goal set 10m agent start position would necessary provide system local subgoals tested long journey short distance say open atrium probably necessary run version clone build repo dependency assume destination catkinwssrc cd catkinwssrc git clone gitgithubcommfe7cadrlros git clone gitbitbucketorgaclswarmfordmsgsgit b dev cd catkinws catkinmake connect inputsoutputs system launchcadrlnodelaunch subscribed topic pose geometrymsgsposestamped robot pose global frame velocity geometrymsgsvector3 goal geometrymsgsposestamped robot goal position global frame cluster fordmsgsclusters position velocity size agent vicinity todo plannermode safeactions peds published topic nncmdvel geometrymsgstwistt published topic marker visualization posemarker show yellow rectangle position according pose pathmarker show red trajectory according history pose goalpathmarker show blue arrow pointing toward position commanded velocitysecond future agentmarkers show orange cylinder positionssizes nearby agent todo remove otheragentsmarker othervels parameter jackalspeed robot preferred speed tested 12ms trained optimized near speed datasets mentioned paper provide datasets might useful researcher hoping train nns collision avoidance please find file dropbox folder along instruction use test case used paper posted dropbox folder contain initial position goal position preferred speed radius setting test case separated number agent randomly generated way produce reasonably interesting scenario evaluate algorithm since random may really easy boring primary code maintainer michael everett,"[('jupyter', 'notebook'), ('collision', 'avoidance')]"
Dice-Developer-Team/Dice,Other,dice qq dice robot trpg based coolqmiraixq license downloads github contributor github last commit diceqxqmiraimyqqgocq latest stable release github release github release date latest release github release github release date w4123 shiki jh123111 flandre cirno py2001 coxxs orzfly cauchydoom qq1840686745 cmakev315 gitc17 clonereporeposubmodulegit clone recursive crosscompilevcpkgbootstrapvcpkgshcrosscompilercrosscompilevcpkg cmake cc cxx vcpkgtargettriplet cmake build github release github action issue issueissue bug license dice qq dice robot trpg copyright c 20182022 w4123 shiki program free software redistribute andor modify term gnu affero general public license published free software foundation either versionof license option later version program distributed hope useful without warranty without even implied warranty merchantability fitness particular purpose see gnu affero general public license detail received copy gnu affero general public license along program see,"[('release', 'github'), ('github', 'release')]"
AndrejOrsula/drl_grasping,Python,deep reinforcement learning robotic grasping octrees project focus applying deep reinforcement learning acquire robust policy allows robot grasp diverse object compact 3d observation form octrees repository contains multiple rl environment robotic manipulation focusing robotic grasping using continuous action cartesian space environment several observation variant enable direct comparison rgb image depth map octrees task coupled simulation environment used train rl agent agent subsequently evaluated real robot integrate ros2control roscontrol via ros1bridge endtoend modelfree actorcritic algorithm tested environment td3 sac tqc sb3 pytorch implementation setup experimenting modelbased algorithm dreamerv2 original tensorflow implementation also provided however currently limited rgb image observation interoperability environment algorithm implementation possible due compatibility gym api list environment list implemented environment environment observation variant ha two alternative taskobsvx taskobsgazebovx omitted table taskobsvx implement logic environment used real robot whereas taskobsgazebovx combine logic simulation environment inside gazebo robot interchangeable part limitation eg graspplanetary task requires mobile manipulator randomize environment fully interested configuring environment first take look list parameter inside gym registrationdrlgraspingenvsinitpy individual source code graspplanetarymonoimagev0 reachcolorimagev0 graspplanetarycolorimagev0 reachdepthimagev0 graspplanetarydepthimagev0 graspplanetarydepthimagewithintensityv0 graspplanetarydepthimagewithcolorv0 reachoctreev0 graspoctreev0 graspplanetaryoctreev0 reachoctreewithintensityv0 graspoctreewithintensityv0 graspplanetaryoctreewithintensityv0 reachoctreewithcolorv0 graspoctreewithcolorv0 graspplanetaryoctreewithcolorv0 default grasp graspplanetary task utilize graspcurriculumdrlgraspingenvstaskscurriculumsgrasppy shape reward function environment difficulty domain randomization facilitate simtoreal transfer trained agent simulation environment introduce domain randomization aim improving generalization learned policy randomization accomplished via manipulationgazeboenvrandomizerdrlgraspingenvsrandomizersmanipulationpy populates virtual world enables randomizing several property reset environment randomizer configurable numerous parameter please take look source code see environment create option b local installation hardware requirement cuda gpu cudaenabled gpu required hardwareaccelerated processing octree observation everything else also functional cpu dependency ubuntu 2004 focal fossa recommended local installation linux distribution might work require dependency built source primary dependency required use project must installed system python 38 rosgalactic gazebo fortress gymignition please use andrejorsulagymignition fork order ensure compatibility default branch drlgrasping ocnn please use andrejorsulaocnn fork order ensure compatibility default branch master additional dependency either pulled via vcstool drlgraspingreposdrlgraspingrepos installed via pip pythonrequirementstxtpythonrequirementstxt rosdep building process building clone repository recursively import vcs dependency install dependency build colcon bash clone repository favourite rosworkspace git clone recursive install python requirement pip3 install r drlgraspingpythonrequirementstxt import dependency vcs import drlgraspingdrlgraspingrepos install dependency ignitionversionfortress rosdep install r rosdistro rosdistro frompaths build colcon build mergeinstall symlinkinstall cmakeargs dcmakebuildtyperelease sourcing utilizing project via local installation remember source rosworkspace bash source installlocalsetupbash enables use drlgrasping python module execution binary script example via ros2 run drlgrasping launching setup script via ros2 launch drlgrasping discoverability shared resource test random agent good starting point simulate episode using random agent action sampled defined action space also useful modifying environment let analyze consequence action resulting observation without deep learning pipeline running background get started run following example open rvizand gazebo client instance provide visual feedback bash ros2 run drlgrasping exrandomagentbash running example script underlying ros2 launch drlgrasping randomagentlaunchpy command argument always printed reference example shown desired launch command directly custom argument bash ros2 launch drlgrasping randomagentlaunchpy seed42 robotmodellunalabsummitxlgen envgraspplanetaryoctreegazebov0 checkenvfalse rendertrue enablerviztrue loglevelwarn train new agent also train agent scratch begin training run following example default headless mode used training reduce computational load bash ros2 run drlgrasping extrainbash running example script underlying ros2 launch drlgrasping trainlaunchpy command argument always printed reference example shown desired launch command directly custom argument bash ros2 launch drlgrasping trainlaunchpy seed42 robotmodelpanda envgraspoctreewithcolorgazebov0 algotqc logfolderrootdrlgraspingtrainingtraingraspoctreewithcolorgazebov0logs tensorboardlogrootdrlgraspingtrainingtraingraspoctreewithcolorgazebov0tensorboardlogs savefreq10000 savereplaybuffertrue loginterval1 evalfreq10000 evalepisodes20 enablervizfalse loglevelfatal remote visualization visualize agent training separate rvizand gazebo client instance opened docker setup command executed new drlgrasping container rosdomainid bash rviznote visualization robot model loaded using approach rviz2 ros2 pkg prefix share drlgraspingrvizdrlgraspingrviz gazebo client ign gazebo g tensorboard tensorboard log generated training directory specified tensorboardlogtensorboardlog argument open web browser using following command bash tensorboard logdir tensorboardlog experimental train dreamer v2 also try train agent using modelbased dreamer v2 algorithm begin training run following example default headless mode used training reduce computational load bash ros2 run drlgrasping extraindreamerv2bash running example script underlying ros2 launch drlgrasping traindreamerv2launchpy command argument always printed reference example shown desired launch command directly custom argument bash ros2 launch drlgrasping traindreamerv2launchpy seed42 robotmodellunalabsummitxlgen envgraspplanetarycolorimagegazebov0 logfolderrootdrlgraspingtrainingtraingraspplanetarycolorimagegazebov0logs evalfreq10000 enablervizfalse loglevelfatal evaluate new agent train agent evaluate start looking exevaluatebashexamplesexevaluatebash modified fit trained agent open rvizand gazebo client instance provide visual feedback agent performance logged printed stdout bash ros2 run drlgrasping exevaluatebash running example script underlying ros2 launch drlgrasping evaluatelaunchpy command argument always printed reference example shown desired launch command directly custom argument example select specific checkpoint loadcheckpointloadcheckpoint argument instead running final model bash ros2 launch drlgrasping evaluatelaunchpy seed77 robotmodelpanda envgraspoctreegazebov0 algotqc logfolderrootdrlgraspingtrainingtraingraspoctreegazebov0logs rewardlogrootdrlgraspingtrainingevaluategraspoctreegazebov0 stochasticfalse nepisodes200 loadbestfalse enablerviztrue loglevelwarn optimize hyperparameters default hyperparameters training agent td3 sac tqc found hyperparamshyperparams directory optuna employed autotune parameter get started run following example default headless mode used hyperparameter optimization reduce computational load bash ros2 run drlgrasping exoptimizebash running example script underlying ros2 launch drlgrasping trainlaunchpy command argument always printed reference example shown desired launch command directly custom argument bash ros2 launch drlgrasping optimizelaunchpy seed69 robotmodelpanda envgraspoctreegazebov0 algotqc logfolderrootdrlgraspingtrainingoptimizegraspoctreegazebov0logs tensorboardlogrootdrlgraspingtrainingoptimizegraspoctreegazebov0tensorboardlogs ntimesteps1000000 samplertpe prunermedian ntrials20 nstartuptrials5 nevaluations4 evalepisodes20 loginterval1 enablerviztrue loglevelfatal citation please use following citation use drlgrasping work bibtex inproceedingsorsulalearning2022 author andrej orsula simon bogh miguel olivaresmendez carol martinez title learning grasp moon 3d octree observation deep reinforcement learning year 2022 booktitle 2022 ieeersj international conference intelligent robot system iros page 41124119 doi 101109iros4761220229981661 directory structure bash drlgrasping dir primary python module project drloctree dir submodule endtoend learning 3d octree observation envs dir submodule environment control dir interface control agent model dir functional model simulation environment perception dir interface perception agent randomizers dir domain randomization simulated environment runtimes dir runtime implementation task simreal task dir implementation task utils dir environmentspecific utility used across submodule world dir minimal template world simulation environment utils dir submodule training evaluation script boilerplate using sb3 example dir example training evaluating rl agent hyperparams dir default hyperparameters training rl agent launch dir roslaunch script used interact repository pretrainedagents dir collection pretrained agent rviz dir rviz2 config visualization script dir helpful script training evaluation utility cmakeliststxt colconenabled cmake recipe packagexml rospackage metadata,"[('ros2', 'launch'), ('launch', 'drlgrasping')]"
whoenig/libMultiRobotPlanning,C++,build libmultirobotplanning libmultirobotplanning library search algorithm primarily task path planning multi robotagent system written c14 highly templated good performance come useful example following algorithm currently supported singlerobot algorithm epsilon also known focal search sipp safe interval path planning multirobot algorithm conflictbased search cbs enhanced conflictbased search ecbs conflictbased search optimal task assignment cbsta enhanced conflictbased search optimal task assignment ecbsta prioritized planning using sipp example code sipp assignment algorithm minimum sumofcost flowbased integer cost number agentstasks best next assignment series optimal solution building tested ubuntu 1604 mkdir build cd build cmake make target make build example make doc build doxygen documentation make clangformat reformat source file make clangtidy run linter static code analyzer make runtest run unittests run specific test python3 testtestnextbestassignmentpy testnextbestassignmenttest1by2 run example instance ecbs ecbs benchmark32x32obst204map32by32obst204agents10ex1yaml outputyaml w 13 python3 examplevisualizepy benchmark32x32obst204map32by32obst204agents10ex1yaml outputyaml generalized roadmaps cbs work generalized graph particular focus optional wait action eg used motion primitive well however roadmap annotation visualization step currently assume 2d euclidean embedding straightline edge python3 toolsannotateroadmappy testmapfsimple1roadmaptoannotateyaml mapfsimple1roadmapannotatedyaml cbsroadmap mapfsimple1roadmapannotatedyaml outputyaml python3 examplevisualizeroadmappy mapfsimple1roadmapannotatedyaml outputyaml,"[('conflictbased', 'search'), ('path', 'planning')]"
graspnet/graspnet-baseline,Python,graspnet baseline baseline model graspnet1billion largescale benchmark general object grasping cvpr 2020 paper dataset api doc top 50 grasp detected baseline model requirement pythonpytorch 16 open3d 08 tensorboard 23 numpy scipy pillow tqdm installation get code bash git clone cd graspnetbaseline install package via pip bash pip install r requirementstxt compile install pointnet2 operator code adapted votenet bash cd pointnet2 python setuppy install compile install knn operator code adapted pytorchknncuda bash cd knn python setuppy install install graspnetapi evaluation bash git clone cd graspnetapi pip install tolerance label generation tolerance label included original dataset need additional generation make sure downloaded orginal dataset graspnet generation code datasetgeneratetolerancelabelpy simply generate tolerance label running script datasetroot numworkers specified according setting bash cd dataset sh commandgeneratetolerancelabelsh download tolerance label google drive pan run bash mv tolerancetar dataset cd dataset tar xvf tolerancetar training testing training example shown commandtrainsh datasetroot camera logdir specified according setting use tensorboard visualize training process testing example shown commandtestsh contains inference result evaluation datasetroot camera checkpointpath dumpdir specified according setting set collisionthresh tofor fast inference pretrained weight downloaded checkpointrstar google drive baidu pan checkpointkntar google drive baidu pan checkpointrstar checkpointkntar trained using realsense data kinect data respectively demo demo program provided grasp detection visualization using rgbd image refer commanddemosh run program checkpointpath specified according setting make sure downloaded pretrained weight recommend realsense model since might transfer better output similar following example try data modifying getandprocessdata demopy refer docexampledata data preparation rgbd image camera intrinsics required inference factordepth stand scale depth value transformed meter also add workspace mask denser output result result repo report model performance singleview collision detection postprocessing evaluation set collisionthresh 001 evaluation result realsense camera seen similar novel ap ap08 ap04 ap ap08 ap04 ap ap08 ap04 paper 2756 3343 1695 2611 3418 1423 1055 1125 398 repo 4747 5590 4133 4227 5101 3540 1661 2084 830 evaluation result kinect camera seen similar novel ap ap08 ap04 ap ap08 ap04 ap ap08 ap04 paper 2988 3619 1931 2784 3319 1662 1151 1292 356 repo 4202 4991 3534 3735 4482 3040 1217 1517 551 citation please cite paper publication help research articlefang2023robust titlerobust grasping across diverse sensor quality graspnet1billion dataset authorfang haoshu gou minghao wang chenxi lu cewu journalthe international journal robotics research year2023 publishersage publication sage uk london england inproceedingsfang2020graspnet titlegraspnet1billion largescale benchmark general object grasping authorfang haoshu wang chenxi gou minghao lu cewu booktitleproceedings ieeecvf conference computer vision pattern recognitioncvpr pages1144411453 year2020 license data label code model belong graspnet team mvig sjtu freely available free noncommercial use may redistributed condition commercial query please drop email fhaoshu gmaildotcom cc lucewu sjtueducn,"[('ap', 'ap08'), ('ap08', 'ap04')]"
mahowik/BalancingWii,C++,balancingwii rev 10 autumn time keep soldering iron something cool let continue stable 10 release balancing robot based modifiedextended multiwii 23 firmware new feature fall new auto rise stand function activated via box gui also possible stand manually fall position hold activated via box gui try play return pushingkicking robot possibility controlsteer android device multiwii ezgui tool go config advanced model control new stability speed accordingly see video predefined pid simple mode newcomer set code refactorings cleaning apps new video blog enjoy donate balancingwii rev 01 hi balancing robot based modifiedextended multiwii 23 firmware video blog hardware arduino nano atmega328p mpu6050 gyroaccelerometer gy521 rc receiver cppm ppmsum output serial bluetooth module like hc05 a4988 motor driver 18 microstepping configuration see detail nema 17 stepper motor 18 buggy wheel buzzer pinout arduino nano atmega328p a0 vbatpin resistor divisor get 0v5v01023 analogue vbatpin r133k r251k ie 12v51ka0 pin33kgnd a2 buzzerpin i2c a4 sda a5 scl rc control d2 cppm ppmsum motor driver pin d5 step1 portd d6 step2 portd d7 dir1 portd d8 dir2 portb d4 enable look tail robot right motor step1 dir1 left motor step2 dir2 also see new defines added project robot setup define currentaxis pitch possible choose roll pitch axis current define invertcurrentaxis invert current axis sign ie instead turning sensor board define reversemotorsdirection reverse motor direction define maxspeed 400 500 define maxtargetangle 120 10degree 15 degree ie 150 define maxsteering 90 100 define gy521invertedbyz chinesedof mpu6050 llc invertedreversed z big thanks project multiwii favourite start robotics become love brobot enjoy,"[('balancingwii', 'rev'), ('balancing', 'robot')]"
methylDragon/ros-sensor-fusion-tutorial,Other,sensor fusion indepth stepbystep tutorial implementing sensor fusion extended kalman filter node robotlocalization basic concept like covariance kalman filter explained tutorial especially useful full endtoend implementation tutorial sensor fusion robotlocalization package yet find implementation example implementation folder fuse sensor data lot time individual navigation stack component robot application fail often together form robust whole one way extended kalman filter robotlocalization package package feature relatively simple interface help fuse configure sensor using use tutorial make sure caught good read marvelmind indoor gps beacon tutorial alongside want understand example implementation likewise linorobot stack amcl go ahead follow tutorial order,"[('sensor', 'fusion'), ('kalman', 'filter')]"
mayataka/robotoc,C++,robotoc efficient robot optimal control solver build codecov feature efficient optimal control robotic system direct multipleshooting method based lifted contact dynamic inverse dynamic riccati recursion algorithm switching time optimization sto problem efficient purestate equality constraint handling primaldual interior point method inequality constraint fast computation rigid body dynamic sensitivity thanks pinocchio requirement ubuntu 2204 2004 1804 possibly mac osx well tested gcc least c11 required cmake least version 311 eigen3 pinocchio python3 numpy python binding gepettoviewercorba andor meshcatpython optional visualize solution trajectory python pybullet optional simulate mpc example installation install latest stable version eigen3 sudo apt install libeigen3dev install latest stable version pinocchio following instruction clone repository change directory git clone cd robotoc build install robotoc mkdir build cd build cmake dcmakebuildtyperelease make install jnproc note want maximize performance use cmake option cmake dcmakebuildtyperelease doptimizefornativeon want visualize solution trajectory python install gepettoviewercorba sudo apt update sudo apt install robotpkgpy38qt5gepettoviewercorba andor meshcatpython pip install meshcat want install python binding change cmake configuration cmake dbuildpythoninterfaceoff osx explicitly set g complier first find path g l l usrlocalbin grep g set full path cmake cmake dcmakecxxcompilerfullpathtogplusplus usage c link executables robotoc writing cmakeliststxt eg findpackagerobotoc required addexecutable yourexectable yourexectablecpp targetlinklibraries yourexectable private robotocrobotoc python suppose python version 38 python binding installed robotocinstalldirlibpython38sitepackages robotocinstalldir install directory robotoc configured cmake eg dcmakeinstallprefix use installed python library convenient set environment variable export pythonpathrobotocinstalldirlibpython38sitepackagespythonpath eg bashrc note use another python version python38 please adapt solver following three solver provided ocpsolver solves ocp rigidbody system possibly contact using riccati recursion optimize switching time trajectory simultaneously unconstrocpsolver solves ocp unconstrained rigidbody system using riccati recursion unconstrparnmpcsolver solves ocp unconstrained rigidbody system using parnmpc algorithm unconstrained rigidbody system system without contact floatingbase example example solver found example directory explanation found switching time optimization sto example ocpsolver solve switching time optimization sto problem optimizes trajectory contact timing simultaneously following video display solution trajectory sto problem anymalpythonjumpingstopy icubpythonjumpingstopy wholebody mpc example following example implementation wholebody mpc provided mpccrawl mpc ocpsolver crawl gait quadrupedal robot mpctrot mpc ocpsolver trot gait quadrupedal robot mpcpace mpc ocpsolver pace gait quadrupedal robot mpcflyingtrot mpc ocpsolver flying trot gait quadrupedal robot mpcjump mpc ocpsolver jump motion quadrupedal bipedal robot mpcbipedwalk mpc ocpsolver walking motion bipedal robot find simulation mpc a1mpc anymalmpc icubmpc need pybullet mpc simulation easy install eg pip install pybullet following video display simulation result quadrupedal walking rough terrain a1mpctrotterrainpy bipedal walking icubmpcwalkpy documentation detailed documentation available tutorial tutorial robotoc available robotoctutorial citing robotoc citing sto algorithm ocpsolver misckatayama2021sto titlestructureexploiting newtontype method optimal control switched system authorsotaro katayama toshiyuki ohtsuka urlarxiv211207232 eprint211207232 archiveprefixarxiv year2021 citing ocpsolver without switching time optimization sto inproceedingskatayama2022lifted titlelifted contact dynamic efficient optimal control rigid body system contact authorsotaro katayama toshiyuki ohtsuka booktitle2022 ieeersj international conference intelligent robot system iros 2022 appear year2022 citing unconstrocpsolver unconstrparnmpcsolver repository name wa idocp paper inproceedingskatayama2021idocp titleefficient solution method based inverse dynamic optimal control problem rigid body system authorsotaro katayama toshiyuki ohtsuka booktitle2021 ieee international conference robotics automation icra pages20702076 year2021 related publication katayama ohtsuka wholebody model predictive control rigid contact via online switching time optimization 2022 ieeersj international conference intelligent robot system iros 2022 appear 2022 katayama ohtsuka structureexploiting newtontype method optimal control switched system 2021 katayama ohtsuka lifted contact dynamic efficient optimal control rigid body system contact 2022 ieeersj international conference intelligent robot system iros appear 2022 katayama ohtsuka efficient riccati recursion optimal control problem purestate equality constraint 2022 american control conference acc pp 35793586 2022 katayama ohtsuka efficient solution method based inverse dynamic optimal control problem rigid body system 2021 ieee international conference robotics automation icra pp20702076 2021 h deng ohtsuka parallel newtontype method nonlinear model predictive control automatica vol 109 pp 108560 2019,"[('optimal', 'control'), ('switching', 'time')]"
wpietri/sucks,Python,linux build status window build status suck caution abandonware ahead march 2020 longer active project ecovacs robot died ha since replaced roomba mean see code change work even usefully approve patch yet nobody ha agreed take interested please join mailing list discus overview simple commandline python script drive robot vacuum currently known work ecovacs deebot n79 m80 pro m81 m88 pro r95 mkii north america europe doe work model well join discussion sucksusers mailing list curious protocol rough doc started happily accept pull request project name well ridiculous needed mitm vacuum future signed b vacuum installation recent version pythonyou able pip install suck get recently released version usage get started need already set ecovacs account using smartphone ready step one log suck login ecovacs app email email ecovacs app password password twoletter country code u twoletter continent code na config saved creates config file platformappropriate place password hashed saving reasonably safe appear work continent try ww worldwide catchall set could clean auto mode 10 minute return charger suck clean 10 could clean 15 minute extra 10 minute edging suck clean 15 edge 10 wanted clean forminutes stop without charging suck cleanstop running amok like stop suck stop tell go plug suck charge run mine crontab want clean every day also ha mode randomly decides run based frequency give crontab entry look like this10 homewilliamprojectssuckssuckssh clean f 47 15 edge f 114 10 mean every day 10 might somethingdays ofit 15 minute automatic cleaningday 14 10 minute edging afterward always go back charge library use welcome try using python library effort api still experimental expect change please join mailing list participate shaping api simple usage might go something like import suck config api ecovacsapiconfig deviceid config email config passwordhash config country config continent myvac apidevices0 vacbot vacbotapiuid apirealm apiresource apiuseraccesstoken myvac config continent vacbotconnectandwaituntilready vacbotrunclean start cleaning timesleep900 clean 15 minute vacbotruncharge return charger developing like join developing recommend checking code setting virtual environment installing package editable mode confirm environment work running test please join mailing list discus plan information see development documentation see also similar library javascript go thanks heartfelt thanks xmpppeek great library examining xmpp traffic flow yes vacuum speaks jabbber mitmproxy fantastic tool analyzing click wonderfully complete thoughtful library making python commandline interface request polished python library http request decompilers online wa helpful figuring android app wa albert louw wa kind enough post code experiment device user given useful feedback contributed code,"[('mailing', 'list'), ('please', 'join')]"
zuoym15/craves.ai,Python,craves controlling robotic arm visionbased economic system code pose estimation module craves want test owi535 hardware please refer control module cravesai project control toy robotic arm owi535 single rgb camera please see system pipeline work docsreadmemd first trying code following animation show arm controlling mounted camera reach goal without relying sensor visualization result youtube dataset datagenerationloaddataandvispy contains sample visualize image annotation dataset download created three datasets project namely synthetic lab youtube download datasets usage datasets please refer pose estimation download checkpoint pretrained model put folder eg checkpointcheckpointpthtar create folder result saving eg savedresults open scriptsvalarmreallsh make sure datadir resume saveresultdir match folder put datasets pretrain model saved result respectively example datadir datatest20181024 resume checkpointcheckpointpthtar saveresultdir savedresults cd script run sh valarmreallsh see accuracy real lab dataset output expect see sh valarmreallsh creating model hg stacks2 blocks1 loading checkpoint checkpointcheckpointpthtar loaded checkpoint checkpointcheckpointpthtar epoch 30 total params 673m image dataset428 mergingdatasets total image 428 minibatches validation set72 evaluation processing 7272 data 0000000s batch 0958s total 00108 eta 00001 loss 00009 acc 09946 see overall accuracy lab dataset 9946 pck02 metric shell script may want try trainarmsh trainarmconcatsh train model scratch synthetic dataset multiple datasets respectively valarmsynsh evaluate model synthetic dataset valarmreallwith3d evaluate model synthetic dataset giving 2d 3d output valarmyoutubesh valarmyoutubevisonlysh evaluate model youtube dataset keypoints visible keypoints respectively dependency pytorch version 041 higher opencv 2d pose estimation module developed based pytorchpose data generation simulator download binary window linux tested ubuntu 1604 unzip run linuxnoeditorarmue4sh run following script generate image ground truth bash pip install unrealcv imageio cd datageneration python democapturepy generated data saved datanewdata default visualize groundtruth script datagenerationloaddataandvispy control system control module craves hosted another repo please see repo hardware driver pose estimator pidlike controller rlbased controller citation found craves useful please consider citing bibtex articlezuo2019craves titlecraves controlling robotic arm visionbased economic system authorzuo yiming qiu weichao xie lingxi zhong fangwei wang yizhou yuille alan l journalcvpr year2019 contact question suggestion please open issue repo thanks disclaimer author group scientist working computer vision research associated company manufacture arm better hardware recommend want apply technique arm please contact u,"[('robotic', 'arm'), ('pose', 'estimation')]"
qgallouedec/panda-gym,Python,pandagym set robotic environment based pybullet physic engine gymnasium pypi version downloads github build codecov code style black arxiv documentation check documentation installation using pypi bash pip install pandagym source bash git clone pip install e pandagym usage python import gymnasium gym import pandagym env gymmake pandareachv3 rendermodehuman observation info envreset range1000 action envactionspacesample random action observation reward terminated truncated info envstepaction terminated truncated observation info envreset envclose also open colab environment pandareachv3 pandapushv3 pandaslidev3 pandapickandplacev3 pandastackv3 pandaflipv3 baseline result baseline result available rlbaselines3zoo pretrained agent hugging face hub citation cite bib articlegallouedec2021pandagym title pandagym opensource goalconditioned environment robotic learning author gallou edec quentin cazin nicolas dellandr ea emmanuel chen liming year 2021 journal 4th robot learning workshop selfsupervised lifelong learning neurips environment widely inspired openai fetch environment,"[('pip', 'install'), ('observation', 'info')]"
hku-mars/ikd-Tree,C++,ikdtree ikdtree incremental kd tree designed robotic application ikdtree incrementally update kd tree new coming point leading much lower computation time existing static kd tree besides pointwise operation ikdtree support several feature boxwise operation downsampling practically useful robotic application doe ikdtree support build balanced kd tree build dynamically insert point delete point kd tree addpoints deletepoints delete point inside given axisaligned bounding box deletepointboxes k nearest neighbor search range limitation nearestsearch acquire point inside given axisaligned bounding box kd tree boxsearch acquire point inside ball given radius kd tree radiussearch user manual browse user manual using ikdtree developer yixi cai data structure design implementation wei xu incorporation lidarinertial odometry package fastlio2 tro 2022 related paper ikdtree incremental kd tree robotic application fastlio2 fast direct lidarinertial odometry using code repo research please cite least one article following ikdtree articlecai2021ikd titleikdtree incremental kd tree robotic application authorcai yixi xu wei zhang fu journalarxiv preprint arxiv210210808 year2021 fastlio2 articlexu2022fast titlefastlio2 fast direct lidarinertial odometry authorxu wei cai yixi dongjiao lin jiarong zhang fu journalieee transaction robotics year2022 publisherieee build run demohow build project bash cd catkinwssrc git clone gitgithubcomhkumarsikdtreegit cd ikdtreebuild cmake make j2 run example note run example3 please download pcd file hkudemopointcloud intoyour directoryikdtreematerials bash cd directoryikdtreebuild examplecheck speed ikdtree ikdtreedemo examplesearchingpointsbybox example ikdtreesearchdemo examplean aysnc exmaple reader better understanding principle ikdtree ikdtreeasyncdemo exampleikdtreesearchdemo box search result radius search result point returned two search method shown red exampleikdtreeasyncdemo original map box delete result point removed ikdtreered map box delete example demonstrate asynchronous phenomenon ikdtree point deleted attaching deleted tree node map shown instead removed ikdtree immediately removed tree rebuilding process performed please refer paper detail delete rebuilding acknowledgment thanks marcus davi help templating ikdtree general application thanks hyungtae lim providing application example point cloud license source code ikdtree released gplv2 license commercial use please contact mr yixi cai yixicaiconnecthkuhk dr fu zhang fuzhanghkuhk,"[('kd', 'tree'), ('robotic', 'application')]"
mjansen4857/pathplanner,Other,pathplanner codecov pathplannerlib pathplanner download one app store receive autoupdates manual installs found pathplanner pathplanner motion profile generator frc robot created team 3015 main feature pathplanner include path made bezier curve allowing fine tuning exact path shape holonomic mode support decoupling robot rotation direction travel realtime path preview allows placing event marker along path used trigger code path following build modular autonomous routine using path automatic saving file management robotside vendor library path generation custom path following commandscontrollers full autonomous command generation pathplannerlib auto builder real time path following telemetry hot reload path auto updated regenerated robot without redeploying code automatic pathfinding pathplannerlib ad usage documentation check wiki make sure install pathplannerlib generate path java api doc c api doc build manually install flutter project currently us v3136 open project terminal run following command flutter build platform valid platform window macos linux built app located window project dirbuildwindowsrunnerrelease macos project dirbuildmacosbuildproductsrelease linux project dirbuildlinuxx64releasebundle flutter run run debug mode,"[('path', 'following'), ('api', 'doc')]"
VIS4ROB-lab/ccm_slam,C++,ccmslam centralized collaborative monocular slam update covins collaborative visualinertial slam released covins new framework collaborative visualinertial slam paper code version 11 previous version ccmslam v10related publicationspatrik schmuck margarita chli multiuav collaborative monocular slam ieee international conference robotics automation icra 2017 pdfpatrik schmuck margarita chli ccmslam robust efficient centralized collaborative monocular simultaneous localization mapping robotic team journal field robotics jfr 2019 pdf video 11 major modification compared implementation described insome module framework experienced major modification implementation global ba performed merging two map loop closure interrupted soon new data agent arrives speed system however might affect accuracy estimate mission license ccmslam released gplv3 license list codelibrary dependency associated license please see dependenciesmd closedsource version ccmslam commercial purpose please contact author collaborative dot slam gmail dot com use ccmslam academic work please cite inproceedingsschmuck2017multi titlemultiuav collaborative monocular slam authorschmuck patrik chli margarita booktitleproceedings ieee international conference robotics automation icra year2017 inproceedingsschmuck2017ccm titleccmslam robust efficient centralized collaborative monocular simultaneous localization mapping robotic team authorschmuck patrik chli margarita booktitlejournal field robotics jfr year2018 installation tested ccmslam ubuntu 1604 kinetic opencvas well ubuntu 1804 melodic ubuntu 2004 noetic recommended use decently powerful computer server node ensure good performance multiagent slam 31 set environment note change noetic indigo ubuntu 1404 kinetic ubuntu 1604 melodic ubuntu 1804 necessary install build run dependency sudo aptget install pythoncatkintools create catkin workspace mkdir p ccmslamwssrc cd ccmslamws source optrosnoeticsetupbash catkin init catkin config extend optrosnoetic clone source repo catkin workspace src folder cd ccmslamwssrc git clone 32 ubuntu 1604 kinetic opencvubuntu 1804 melodic ubuntu 2004 noetic compile dbow2 cd ccmslamwssrcccmslamcslamthirdpartydbow2 mkdir build cd build cmake make j8 compile g2o cd ccmslamwssrcccmslamcslamthirdpartyg2o mkdir build cd build cmake cmakeargs dg2ou140 make j8 unzip vocabulary cd ccmslamwssrcccmslamcslamconf unzip orbvoctxtzip build code cd ccmslamws catkin build ccmslam cmakeargs dg2ou140 dcmakebuildtyperelease source ccmslamwsdevelsetupbash 33 ubuntu 1404 indigo opencvcompile opencv cd ccmslamwsccmslamcslamthirdparty unzip opencv2413zip cd opencv2413 mkdir build cd build cmake make j8 afterwards follow instruction 32 34 known issue g2o compiletime error youmixeddifferentnumerictypes run cmake cmakeargs dg2ou141 instead cmake cmakeargs dg2ou140 catkin build cmakeargs dg2ou141 instead catkin build cmakeargs dg2ou140examples recommended start roscore separate terminal starting interact ccmslam source ccmslamwsdevelsetupbash roscore 41 example euroc dataset forget run source ccmslamwsdevelsetupbash every terminal use ccmslam download euroc machine hall rosbag datasets website start server launch file roslaunch ccmslam serverlaunch every agent want use start one launch file eg roslaunch ccmslam client0euroclaunch note want runagents plus server simultaneously one pc probably need powerful machine check cpu load runtime using eg htop reaching limit machine run one agent reduce playback speed bagfile using r parameter eg rosbag play mybagbag r 05 play bagfile half speed play rosbag file agentrosbag play mh01easybag start 45 agentrosbag play mh02easybag start 35 cam0imagerawcam0imageraw1 agentrosbag play mh03mediumbag start 15 cam0imagerawcam0imageraw2 agentrosbag play mh04difficultbag start 15 cam0imagerawcam0imageraw3 change odometry frame agent server map launch file adjusting value statictransformpublisher ccmslam provides config file rviz cd ccmslamwssrcccmslamcslam rviz confrvizccmslamrviz rviz window show center map known server two map merged red line indicates position matching location two map completion merge step one map aligned merge take place map overlaid yet reference map map limited size agent also displayed rviz however hidden default activating markercx mappointscx rviz sidebar respective trajectory map point onboard agent x displayed background change odometry frame map server agent launch file 42 kitti dataset provide two launch file kitti odometry dataset however ccmslam wa briefly tested kitti motion pattern car used capture data cause problem regarding initialization drift test converted kitti image sequence rosbag file client0kittilaunch load camera parameter kittimonoyaml us image dataset client0kittihalfreslaunch load camera parameter kittimonohalfresyaml image downsampled factor 05 test alleviated initialization problem 43 running ccmslam multiple pc pc need network find ip address pc intented run server using ifconfig make sure pick ip wireless interface start roscore server pc participating pc every terminal used ccmslam matter whether running camera driver bagfiles ccmslam launch file rviz execute export rosmasteruri 44 saving loading map ccmslam offer functionality save load map folder map data ccmslamwssrcccmslamcslamoutputmapdata map saved using service ccmslamsavemap rosservice call ccmslamccmslamsavemap x x id map saved usuallythe folder mapdata need emtpy save map load map set parameter loadmap serverlaunch true matter whether map load contains data fromor agent data remapped agentie agent id isfor keyframes mappoints since loaded map associated agentthe communication agent deactivated ie loading map client0euroclaunch cannot used 45 output file default ccmslam automatically save trajectory estimate agent file cslamoutput global bundle adjustment gba ha performed file kfgbaagentidcsv store pose associated agent specified agentid row represents single pose ccmslam save trajectory informats euroc format tum format one used controlled via parameter trajectoryformat configyaml tum format default timestamps tx ty tz qx qy qz qw euroc format timestampns tx ty tz qw qx qy qz trajectory tum format directly evaluated using evo evaluation tool run evaluation eg evoape euroc kfgba0csv gtdatacsv va perform sim3 alignment reporting trajectory rmse scale error ground truth data individual euroc sequence found sequencemav0stategroundtruthestimate0datacsv evaluate multiagents estimate individual trajectory file must combined eg cat kfgba0csv kfgba1csv kfgba2csv mh123estcsv also individual ground truth information euroc sequence used generate estimate must combined single file recommend manually since every file contains header describing data copied multiple time using data using datasets camera need create according calibration launch file create new camera calibration file eg copying adjusting confvieurocyaml know parameter camera find using camera calibration toolbox kalibr create new launch file eg copying adjusting launcheurocclient0eurocyaml change parameter cam path new camera file change parameter topicnamecamsub name camera topic hint existing rosbagfile camera data directly modify topic playing bagfile rosbag play mybagbag existingtopicnewname need change serverlaunch however adjust number agent system changing numofclients maximum set toin current implementation using downwardlooking camera instead forwardlooking euroc sequence recommended change rotational part static transform publisher launch file to0 3142 eg node pkgtf typestatictransformpublisher namelinks0broadcaster args050 3142 world odoms0 100 need change name frameids odomc0parameters system parameter loaded confconfigyaml explain functionality important parameter following line mapping mappinglocalmapsize local map agent limited n kfs mappinglocalmapbuffer localmapsize reached eg due communication loss buffer n kfs filled kfs irreversibly removed map mappingrecentkfwindow recent n kfs every map excluded kf culling mappingredthres threshold kf redundancy 10 mean kf removal recommend use value range 10095 please refer publication detail communication commclientpubfreq agent publishes new data local map frequency commserverpubfreq server publishes data agent augmentupdate local map frequency commserverkfstoclient every message one agent server sends data n closest kfs agent current position commclientpubmaxkfs maximimum number kfs per message commclientpubmaxmps maximimum number mp per message place recognition placerecnewloopthres two loop closure n kfs need pas placerecstartmapmatchingafterkf map matching doe consider first n kfs ensure enough overlap two map matching merging visualization vieweractive activatedeactivate visualization functionality viewerscalefactor scale visualization useful since monocular estimate exhibit arbitrary scale statswritekfstofile write kfs cslamoutput attention written csvfile kfs transformed body frame robot using transformation given camera calibration file timucam0update note update 11 changed format trajectory writeout tum format default added functionality save load map tracking mappoints local map agent projected current frame improve robustness fixed problem gba interruption multiple agent final gba gba interrupted active part slam mission gba trigerred new message arrived server 30,"[('launch', 'file'), ('collaborative', 'monocular')]"
yankailab/OpenKAI,Other,openkai modern framework unmanned vehicle robot control openkai kinetic ai opensource framework realize rapid development unmanned vehicle robot incorporate ai sensor actuator etc openkai light weight run embedded hardware simple unified multithreading modular architecture written purely c make highly customizable versatile application easily expanded support new device keep adding support sensor actuator available market hackable module industry solution supported device used easily abstracted object openkai welcome contribution vendor provide evaluation device well coder opensource community platform tested limited x86 pc ubuntu 2004 lts nvidia jetson series jetpackubuntu raspberry pi raspberry pi dependency mandatory pthread google glog eigen optional opencv open3d opencl etc interface uart usb serial incl usb converter rs485 usb rs485 converter lanwifi protocol mavlinkmodbus tcpudp websocket json external controller pixhawk compatibles mavlinkuart oriental motor modbusrs485 zlac 8015 modbusrs485 coming sensor intel realsense d400 series l515 t265 leddartech leddarvu uartusb tofsense raspberry camera module hiphen airphen canon slr sony rx0 series livox coming actuator oriental motor drv8825 rs485 coming display mutrics aric ar glass coming soon showcase solution updating,"[('unmanned', 'vehicle'), ('vehicle', 'robot')]"
visionworkbench/visionworkbench,C++,introduction nasa vision workbench modular extensible crossplatform computer vision software framework written c wa designed support variety space exploration task including automated science engineering analysis robot perception 2d3d environment reconstruction though also serve generalpurpose image processing machine vision framework context well package composed several module provides separate c library core library provides basic image pixel data type well range fundamental image processing operation module provided release math geometric numeric mathematical type function hdr creating processing compressing high dynamic range image interestpoint detecting tracking matching interest point mosaic compositing blending manipulating 2d image mosaic camera camera model related type function cartography tool manipulating geospatiallyreferenced image module dependency discussed greater detail sectionlibrary structure license see copying full text copyright license summary copyright c 20062012 united state government represented administrator national aeronautics space administration right reserved nasa vision workbench licensed apache license version 20 license may use file except compliance license may obtain copy license unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license b thirdparty library distribution includes bundled thirdparty software convenience user software located thirdparty directory covered abovementioned distribution agreement copyright see included documentation detailed copyright license information thirdparty software addition various piece vision workbench depend additional thirdparty library user expected installed specific dependency component vision workbench discussed sectionlibrary structure information obtain nonbundled thirdparty library provided sectioninstallation library structure vision workbench software located directory srcvw consists core library several optional library module module contained subdirectory name name module main vision workbench library center vision workbench three module fact linked together form single fundamental library core module provides fundamental service specific image processing c exception type type computation class ii image module provides pixel image type function form heart vision workbench including support various color space filtering operation image processing primitive iii fileio module contains routine support reading writing image disk variety file format required dependency vision workbench core boost c library provide variety lowlevel c library servies actually many library different author released common license generally distributed package treat way simplicity file io module ha number optional dependency providing support one image file format specifically libpng png file libjpeg jpegjfif file libtiff tiff file netpbm pbmpgmetc file openexr exr file b math module module provides variety mathematical data type algorithm centered around fundamental vector matrix quaternion data type support usual range mathematical operation top foundation higherlevel type algorithm geometric computation linear algebra optimization statistic forth linear algebra numerical algorithm rely standard lowlevel routine provided lapack linear algebra package blas basic linear algebra subprogram many computer eg running x come optimized implementation lapack blas case probably use support platform provide publicdomain implementation automatically translated original fortran taken online netlib repository c hdr module core vision workbench library support working high dynamic range hdr image data directly input output device eg digital camera display support limited dynamic range module provides tool interfacing two world generating hdr image collection ordinary image well providing several method compress hdr image display ordinary output device interestpoint module interest point point image reliably detected tracked corner peak module provides tool locating interest point image variety way also generate local descriptor point using several method used locate corresponding point set image e mosaic module mosaic module provides tool working large image assembled many smaller image panorama aerial map includes support assembling source image mosaic blending image mosaic create single large image dicing extremely large image result better format visualization f camera module camera module provides variety data type tool working camera model camera data notably includes support variety standard camera geometry ability transform image camera model ability interpret camera data stored exif header image file generated digital camera g cartography module cartography module provides variety 2d 3d mapping capability allows georeference image specifying projection position within projected space altitude reference datum support reprojecting image desired projection requires proj4 cartographic projection library also optionally depends gdal library provides support variety gi file format h testing framework module includes collection test located module test subdirectory use test confirm library installed working properly system simply run make check building library please report error encounter using contact information bottom file note test currently exercise significant portion library yet fully exhaustive installation use obtaining software reading text presumably copy software however obtain recent version attempting configure build install vision workbench obtain install prerequisite library need absolute requirement boost others either required build specific module enable particular feature available complete list dependency shown table library noted either required optional dependency one module library distributed variation theme mit bsd license see individual library documentation detail library relevant module source website boost core etc req proj4 cartography req gdal cartfileio opt png fileio opt jpeg fileio opt tiff fileio opt openexr fileio opt addition vision workbench module require lower level module built internal vision workbench dependency table appears hdr mosaic cartography applicationspecific toolkits fileio camera highlevel primatives image math lowlevel image processinglinear algrebra core basic programming infrastructure b building installing obtained installed prerequisite software process building vision workbench generally straightforward four step configure library usually simple running configure script within root vision workbench package directory ii build library running make iii run test running make check iv install library running make install simple sequence suffice user configure script ha many option use adjust various property compiler optimization flag search path used find required library see install file directory detailed information c using library install library place file three subdirectory installation location header file need develop software using library located include subdirectory compiled library need link software located lib subdirectory need configure software development environment appropriate locate file finally number simple commandline tool provided bin directory intended primarily demo application many fact useful right see documentation complete list tool documentation primary source documentation vision workbook provided source form along distribution includes gentle introduction using core image processing routine well documentation high level vision workbench module copy document pdf format available wherever obtained package original source document found docsworkbook built running make workbook operation requires latex typesetting package contact credit mailing list bug feature request general discussion sent vision workbench user mailing list visionworkbenchlistsnasagov subscribe list send empty email message subject subscribe without quote visionworkbenchrequestlistsnasagov contact lead developer project manager directly send mail visionworkbenchownerlistsnasagov please use second list technical inquiry sent main visionworkbench list b credit vision workbench wa developed within autonomous system robotics area inteligent system division nasa ames research center leverage intelligent robotics group irg extensive experience developing surface reconstruction tool planetary explorationeg mar pathfinder mar exploration rover missionsand rover autonomy ha also developed collaboration adaptive control evolvable system ace group draw experience developing computer vision technique autonomous vehicle control system see author file complete list developer,"[('vision', 'workbench'), ('module', 'provides')]"
areed1192/python-trading-robot,Python,python trading robot table content overview setup usage support project overview current version 011 trading robot written python run automated strategy using technical analysis robot designed mimic common scenario maintaining portfolio multiple instrument portfolio object able calculate common risk metric related portfolio give realtime feedback trade define order used trade financial instrument trade object define simple even complex order using python order also help similify common scenario like defining take profit stop loss time realtime data table includes historical realtime price change stockframe make process storing data easy quick additionally setup way easily select financial data come analysis needed define calculate indicator using historical realtime price indicator object help easily define input indicator calculate update value new price come setup setup local install planning make modification project would like access ha indexed pypi would recommend either install project editable mode local install want make modification project would recommend install library editable mode want install library editable mode make sure run setuppy file install dependency may need run setuppy file run following command terminal console pip install e plan make modification project still want use across different project local install console pip install install dependency listed setuppy file done use library wherever want setup pypi install project found pypi like view project please use link install library run following command terminal bash pip install pythontradingrobot setup pypi upgrade upgrade library run following command terminal bash pip install upgrade pythontradingrobot usage run robot need provide piece information td ameritrade developer account following item need authentication client id also called consumer key wa provided registered app td ameritrade developer platform example client id could look like following mmmmyyyyya6444vxxxxbbjc3doooo redirect uri also called callbakc url redirect url wa specified regiestered app td ameritrade developer platform example redirect uri credential path file path point json file state info saved keep mind okay point nonexisting file run script file auto generated example want state info saved desktop would look like following cusersdesktoptsstatejson identfied piece info run robot simple example create new instance python pyrobotrobot import pyrobot initialize robot tradingrobot pyrobot clientid xxxxxx111111yyyy22 redirecturi credentialspath pathtotdstatejson detailed example go tradingrobotpy file see example use library along different object inside support project patreon help support project future project donating patreon page always looking add content individual like unfortuantely apis would require pay monthly fee youtube like watch content feel free visit youtube channel sigma coding,"[('pip', 'install'), ('support', 'project')]"
introlab/rtabmap,C++,rtabmap rtabmap logo release downloads license rtabmap library standalone application information eg paper major update visit rtabmap home page installation instruction example visit rtabmap wiki use rtabmap visit rtabmap page wiki acknowledgement project supported introlab intelligent interactive integrated interdisciplinary robot lab sherbrooke quebec canada href ci latest linux window binary rosrosdistrortabmap rosnoetic roshumble iron rolling docker,"[('visit', 'rtabmap'), ('rtabmap', 'rtabmap')]"
ShuoYangRobotics/Cerberus,C++,introduction package contains visualinertialleg odometry vilo unitree a1 go1 robot goal provide compact lowcost long term position sensing suite legged robot sensing solution ha one imu one stereo camera leg sensor total cost 1000 focus work adding body velocity calculated leg joint sensor calibrate potential kinematic parameter error improve accuracy used vilo odometry us optimization framework vinsfusion one popular visual inertial odometry additional vins image imu measurement model add special contact preintegration term achieves lower thanposition estimation drift various datasets detail theoratical contribution found recent paper online kinematic calibration legged robot yang shuo choset howie manchester zachary ieee robotics automation letter iros 2022 pdf cerberus lowdrift visualinertialleg odometry agile locomotion yang shuo zhang zixin fu zhengyu manchester zachary paper accepted icra 2023 pdf use cerberus academic research please cite least one related paper two video comparing performance cerberus vilo vinsfusion video1 video2 installation git clone repo remember initialize submodules shell git clone recursesubmodules gitgithubcomshuoyangroboticscerberusgit use docker vscode remote container devcontainerjson configures development environment shown devcontainer folder nvidia gpu computer file autmatically setup docker container use gpu open rviz inside docker need comment devcontainerjson lineafter docker container start default working directory homeestimationuserestimationwssrccerberus compile code open terminal vscode run shell catkin build code mounted host computer docker container edit code host computer change reflected docker container vi versa data visualization work linux machine nvidia gpu open rviz first local machine run following command allow docker container open gui local machine xhost docker configuration file allow user open rviz inside docker container said earlier work smoothly linux machine nvidia gpu using mac window still install dockere container know enable gui rviz tutorial may help always recommend use linux nvidia gpu demo datasets google drive folder contains several dataset test vilo download pathtocoderepobags since directly map code location inside docker homeestimationuserestimationwssrccerberus download dataset rosbag pathtocoderepobags bag file appear docker container well homeestimationuserestimationwssrccerberusbags list bag run connect remote container make sure bag homeestimationuserestimationwssrccerberusbags streetbag a1 robot traveled 260m 590s average speed 044ms suburban environment shell roslaunch vilo runstreetbagvilolaunch campusbag go1 robot traveled 350m 350s average speed 10ms indoor outdoor campus environment shell roslaunch vilo runcampusbagvilolaunch trackbag a1 robot traveled 450m 590s average speed 076ms stadium running track shell roslaunch vilo runtrackbagvilolaunch cutbag go1 robot traveled 450m 450s average speed 10ms outdoor campus environment shell roslaunch vilo runcutbagvilolaunch outdoorsnowbag a1 robot traveled 30m 80 average speed 038ms heavy snow shell rosbag play r 07 clock outdoorsnowbag roslaunch vilo hardwarea1vilolaunch notice rosbag play slow slow computer otherwise vilo cannot finish computation time launch file play 05x original speed check result algorithm running number topic contain estimation result published moreover output folder estimation result saved csv file custom sensor setup vilo work properly sensor topic received correctly sensor transformation set properly use outdoorsnowbag dataset overview sensor data frequency format command rosbag info outdoorsnowbag show following information version 20 duration 141s 101s start jan 18 2022 15271062 164253763062 end jan 18 2022 15285255 164253773255 size 9490 mb message 120363 compression none 10201020 chunk type sensormsgsimage 060021388200f6f0f447d0fcd9c64743 sensormsgsimu 6a62c6daae103f4ff57a132d6f95cec2 sensormsgsjointstate 3066dcd76a6cfaef579bd0f34173e9fd topic cameraforwardinfra1imagerectraw 1529 msg sensormsgsimage cameraforwardinfra2imagerectraw 1529 msg sensormsgsimage hardwarea1imu 48466 msg sensormsgsimu hardwarea1jointfoot 48452 msg sensormsgsjointstate imudata 20387 msg sensormsgsimu dataset ground truth position additonal topic mocapnodemocappose bag data type geometrymsgsposestamped info list important topic cameraforwardinfra1imagerectraw sensormsgsimage 15 hz cameraforwardinfra2imagerectraw sensormsgsimage 15 hz come realsense camera hard get image right infra camera useful infra light emitter turned a1launch launch file reading realsense camera handle emitter setting a1launchlaunchfrontcamerareadlaunch hardwarea1imu sensormsgsimu 500hz output a1 robot topic come unitree api unitree api topic type lowstate contains robot data separate imu data leg data make generic robot may archtected way imudata sensormsgsimu 200hz imu data come expensive imu called xsens mti200 directly used algorithm used reference benchmark orientation measurement a1 imu turn a1 imu performs well comparing xsens mti200 3000 sensor convinced a1 performance good hardwarea1jointfoot sensormsgsjointstate 500hz another part lowstate structure jointstate seen name list 16 jointstates topic first 12 contains motor joint information last four contains foot contact sensor reading standard topic represent created topic one caviet user create topic joint velocity directly generated a1 robot noisy controller differentiates joint angle generate joint velocity,"[('docker', 'container'), ('a1', 'robot')]"
exAspArk/awesome-chatops,Other,awesome chatops awesome collection awesome thing chatops chatops collaboration model help connect people process tool automation transparent workflow conversationdriven development allows automate task collaborate encourages team transparent working better cheaper faster want contribute please read contributingmd content article video book event podcasts resource service framework library article chatops get started chatops concept tool chatops guide evolution adoption significance chatops adoption hipchat evangelist chatops revolutionize business benefit using chatops tool current trend futurereasons chatops working company insight chatops might optimized company advice make work chatops go cool critical consideration chatops librato better living chatops benefit chatops offer managing virtual war room making virtual war room journey chatops creating virtual war room step step video chatops github slide first public talk subject jesse newland chatops technology philosophy james fryman stackstorm philosophy best practice implementing maintaining chatops rise chatops slide first chatops san francisco meetup jimmy cuadra chatops augmented reality ops github use chat improve situational awareness incident share knowledge coordinate activity much living future chatops slide quick summary pagerduty chatops journey eric sigler incident management future slide michael ansel manages incident via chat box chatops san francisco youtube channel video meetup installing hubot window powershell dsc using hubot powershell desired state configuration dsc resource install hubot window embrace chatops stop installing deployment software slide talk laracon eu 2016 leverage chatops automated deployment using hubot chatops powershell errbot talk powershell conference europe 2017 get started errbot window powershell chatops poshbot powershell overview poshbot powershellbased bot framework portland powershell user group book chatops dummy highlevel guide understanding origin practice benefit tool needed get started chatops managing operation group chat key chatops concept technology jason hand automation monitoring hubot ebook walk building hubot driven chatops implementation event chatops san francisco discussion collaboration aspect chatops including tool security methodology podcasts chatops extravaganza jason hand sasha rosenbaum peter burkholder episode best practice chatops chatops jason hand episode chatops general resource rchatops subreddit article discussion service abbot hosted bot extendible c python javascript integrates slack discord aws chatbot interactive agent monitor interact aws resource slack marbot configure aws monitoring receive alert solve incident slack microsoft team framework library open source project help build bot automate company chat depending platform aim campfire chatwork dasher discord facebook messenger fleep flowdock gitter hipchat idobata imessage irc jabbr let chat lingr matrix mattermost partychat qq rocketchat skype skyweb slack spark talker telegram tox twilio twitter typetalk victorops visual studio online vkontakte wechat xmpp jabber yammer zulip aim hubot adapter coffeescript nodejs campfire errbot adapter python hal adapter go hubot adapter coffeescript nodejs lita adapter ruby chatwork hubot adapter coffeescript nodejs lita adapter ruby dasher hubot adapter coffeescript nodejs discord discordrb ruby errbot adapter python lita adapter ruby facebook messenger botkit javascript nodejs facebookmessenger ruby hubot adapter coffeescript nodejs lita adapter ruby opsdroid connector python fleep hubot adapter coffeescript nodejs flowdock hubot adapter coffeescript nodejs lita adapter ruby gitter errbot adapter python hubot adapter coffeescript nodejs lita adapter ruby hipchat cog language errbot python hal adapter go hipbot ruby hipchat via xmpp go hipchatgo via hipchat api v2 go hubot adapter coffeescript nodejs lita adapter ruby python idobata lita adapter ruby imessage hubot adapter coffeescript nodejs irc cinch ruby errbot python hal adapter go hubot adapter coffeescript nodejs lita adapter ruby pagerbot ruby yetibot clojure jabbr hubot adapter coffeescript nodejs let chat hubot adapter coffeescript nodejs lingr hubot adapter coffeescript nodejs matrix opsdroid connector python mattermost errbot adapter python hubot adapter coffeescript nodejs hubot adapter via websockets coffeescript nodejs partychat hubot adapter coffeescript nodejs qq hubot adapter coffeescript nodejs rocketchat errbot adapter python hubot adapter coffeescript nodejs opsdroid connector python skype errbot adapter python hubot adapter coffeescript nodejs hubot adapter via web coffeescript nodejs skyweb hubot adapter coffeescript nodejs slack botkit javascript nodejs bolt javascript nodejs cog language elixirslack elixir errbot python gort language hal adapter go hubot adapter coffeescript nodejs jubot clojure lita adapter ruby multivac python docker opsdroid connector python pagerbot ruby poshbot powershell slackrubybot ruby slackbotsy ruby slacker elixir yetibot clojure spark opsdroid connector python talker hubot adapter coffeescript nodejs telegram errbot python hubot adapter coffeescript nodejs lita adapter ruby opsdroid connector python telegrambotruby ruby telegrambot crystal telegrambot ruby tox errbot adapter python lita adapter ruby twilio botkit via ip messaging javascript nodejs hubot adapter via ip messaging coffeescript nodejs hubot adapter via sm coffeescript nodejs twitter chatterbot ruby hubot adapter coffeescript nodejs lita adapter ruby opsdroid connector python typetalk hubot adapter coffeescript nodejs victorops hubot adapter coffeescript nodejs visual studio online hubot adapter coffeescript nodejs vkontakte errbot adapter python lita adapter ruby wechat hubot adapter coffeescript nodejs xmpp jabber errbot python hubot adapter coffeescript nodejs jabberjay clojure yammer hubot adapter coffeescript nodejs zulip errbot adapter python hubot adapter coffeescript nodejs license cc0,"[('hubot', 'adapter'), ('coffeescript', 'nodejs')]"
chonyy/AI-basketball-analysis,Python,alternative google colab thanks hardik0 play around without gpu machine heroku project also hosted heroku however heavy computation tensorflow may cause timeout error crash app especially video analysis therefore hosting project local machine preferable please note shooting pose analysis running heroku hosted website since cuda device required run openpose project structure feature project ha three main feature shot analysis shot detection detection api shot pose analysis shot counting counting shooting attempt missing scoring shot input video detection keypoints different color different meaning listed blue detected basketball normal status purple undetermined shot green shot went red miss pose analysis implementing openpose calculate angle elbow knee shooting detection shown image confidence coordinate detection listed detection api get json response submitting post request detectionjson image key input image value detection model object detection model trained faster rcnn model architecture includes pretrained weight coco dataset taking configuration model architecture train dataset future plan change model efficient yolov4 implement sort tracking algorithm filter false detection improve visual effect improve efficiency making executable web app service,"[('pose', 'analysis'), ('analysis', 'shot')]"
i2Nav-WHU/Wheel-INS,C++,wheelins wheelmounted mem imubased dead reckoning system unlike conventional odometeraided inertial navigation system odoins imu always placed either vehicle body coach wheelins imu mounted wheel ground vehicle two major advanatges sothe wheel velocity obtained wheelimu thus replace traditional odometer wheel encoderthe rotation modulation leveraged mitigate error accumulation particularly wheel velocity calculated gyroscope output wheel radius treated external observation nonholonomic constraint nhc fuse extended kalman filter ekf boomnewsboom tadatada oct 2023 completely new version code supporting linux window released tadatada nov 2022 wheelins ha extended slam check paper wheelslam accepted ieee robotics automation letter source code also released tadatada nov 2022 paper multiple imusbased wheeled robot localization wheelins2 ha accepted ieee transaction intelligent transportation system check run itlinux recommend use g compiler ubuntu 2004 buildessential library installed first shell sudo aptget install cmake sudo aptget install buildessential preparing compilation environment clone repository run follows shell clone repository git clone gitgithubcomi2navwhuwheelinsgit build wheelins cd wheelins mkdir build cd build cmake make j10 run demo dataset cd wheelins binwheelins configrobotyaml window show run code visual studio code vscode also use ides eg visual studio install vscode extension cc cc extension pack cmake cmake tool install cmake microsoft visual cc build tool open wheelins vscode set compiler open command palette ctrlshiftp type cmake select kit select correct build tool according system configure cmake type click cmake configure command palette compile project type click cmake build command palette execuble file wheelinsexe generated compilation done run via terminal vscode following shell binreleasewheelinsexe configrobotyaml run plotpy utils plot trajectory estimated wheelins well raw wheelimu data example plot robot dataset datasets two set example data ground truth provided see dtaset please refer readmepdf detail git clone slow please try download zip file directly related paper based study wheelimu published three papersthe original wheelins paper proposed wheelmounted imubased dead reckoning system investigated characteristicsa thorough complete comparison three different measurement model wheelins theoretical analysis experimental illustrationa multiple imusbased localization system wheeled robot obtaining different dynamic information vhehicle taking advantage relative spatial constraint among inertial sensor find study helpful academic research please consider citing related paper x niu wu j kuang wheelins wheelmounted mem imubased dead reckoning system ieee transaction vehicular technology doi 101109tvt20213108008 2021 pdf ieee xplore bibtex articleniu2021tvt authorniu xiaoji wu yibin kuang jian journalieee transaction vehicular technology titlewheelins wheelmounted mem imubased dead reckoning system year2021 volume70 number10 pages98149825 doi101109tvt20213108008 wu x niu j kuang comparison three measurement model wheelmounted mem imubased dead reckoning system ieee transaction vehicular technology doi 101109tvt20213102409 2021 pdf ieee xplore bibtex articlewu2021tvt authorwu yibin niu xiaoji kuang jian journalieee transaction vehicular technology titlea comparison three measurement model wheelmounted mem imubased dead reckoning system year2021 volume70 number11 pages1119311203 doi101109tvt20213102409 wu j kuang x niu wheelins2 multiple mem imubased dead reckoning system wheeled robot evaluation different imu configuration ieee transaction intelligent transportation system 2022 pdf xplore bibtex articlewu2022tits authorwu yibin kuang jian niu xiaoji journalieee transaction intelligent transportation system titlewheelins2 multiple mem imubased dead reckoning system different configuration wheeled robot year2022 pages114 doi101109tits20223220508 license code released gplv3 license acknowledgement would like thank i2nav group sharing kfgins referenced code question please feel free contact mr yibin wu ybwu whueducn dr jian kuang kuang whueducn,"[('imubased', 'dead'), ('dead', 'reckoning')]"
andyzeng/visual-pushing-grasping,Python,visual pushing grasping toolbox visual pushing grasping vpg method training robotic agent learn plan complementary pushing grasping action manipulation eg unstructured pickandplace application vpg operates directly visual observation rgbd image learns trial error train quickly generalizes new object scenario repository provides pytorch code training testing vpg policy deep reinforcement learning simulation realworld setting ur5 robot arm reference implementation paper learning synergy pushing grasping selfsupervised deep reinforcement learning pdf webpage video result andy zeng shuran song stefan welker johnny lee alberto rodriguez thomas funkhouser ieeersj international conference intelligent robot system iros 2018 skilled robotic manipulation benefit complex synergy nonprehensile eg pushing prehensile eg grasping action pushing help rearrange cluttered object make space arm finger likewise grasping help displace object make pushing movement precise collisionfree work demonstrate possible discover learn synergy scratch modelfree deep reinforcement learning method involves training two fully convolutional network map visual observation action one infers utility push dense pixelwise sampling end effector orientation location doe grasping network trained jointly qlearning framework entirely selfsupervised trial error reward provided successful grasp way policy learns pushing motion enable future grasp learning grasp leverage past push picking experiment simulation realworld scenario find system quickly learns complex behavior amid challenging case clutter achieves better grasping success rate picking efficiency baseline alternative hour training demonstrate method capable generalizing novel object citing find code useful work please consider citing inproceedingszeng2018learning titlelearning synergy pushing grasping selfsupervised deep reinforcement learning authorzeng andy song shuran welker stefan lee johnny rodriguez alberto funkhouser thomas booktitleieeersj international conference intelligent robot system iros year2018 demo video demo video real robot action found contact question find bug please let know andy zeng andyzatprincetondotedu installation implementation requires following dependency tested ubuntu 16044 lts python 27 python numpy scipy opencvpython matplotlib quickly installupdate dependency running following replace pip pip3 python shell pip install numpy scipy opencvpython matplotlib pytorch version 03 since 03 longer latest version see installation instruction run following pip install torch031 torchvision020 pytorch version 10 thanks andrew shell pip install torch torchvision vrep known coppeliasim simulation environment optional gpu acceleration accelerating traininginference nvidia gpu requires installing cuda running outofthebox pretrained model using gpu acceleration requires 8gb gpu memory running gpu acceleration highly recommended otherwise training iteration take several minute run opposed several second code automatically detects gpus system try use gpu would instead like run cpu mode add tag cpu running mainpy quickstart demo simulation demo run pretrained model ur5 robot arm simulation challenging picking scenario adversarial clutter grasping object generally feasible without first pushing break tight cluster object instruction checkout repository download pretrained model shell git clone visualpushinggrasping cd visualpushinggraspingdownloads downloadweightssh cd run vrep navigate vrepcoppeliasim directory run vrepsh coppeliasimsh main menu select file open scene open file visualpushinggraspingsimulationsimulationttt repository another terminal window run following simulation start vrep window please note pretrained model trained pytorch version 03 run pytorch 03 training scratch next section still work pytorch 10 shell python mainpy issim objmeshdir objectsblocks numobj 10 pushrewards experiencereplay exploreratedecay istesting testpresetcases testpresetfile simulationtestcasestest10obj07txt loadsnapshot snapshotfile downloadsvpgoriginalsimpretrained10objpth savevisualizations note may get popup window titled dynamic content vrep window select checkbox press ok total oftimes stop annoying training train regular vpg policy scratch simulation first start simulation environment running vrep navigate vrep directory run vrepsh main menu select file open scene open file visualpushinggraspingsimulationsimulationttt navigate repository another terminal window run following shell python mainpy issim pushrewards experiencereplay exploreratedecay savevisualizations data collected training session including rgbd image camera parameter heightmaps action reward model snapshot visualization etc saved directory log folder training session resumed adding flag loadsnapshot continuelogging load latest model snapshot specified snapshotfile transition history session directory specified loggingdirectory shell python mainpy issim pushrewards experiencereplay exploreratedecay savevisualizations loadsnapshot snapshotfile logsyoursessiondirectorynameheremodelssnapshotbackupreinforcementpth continuelogging loggingdirectory logsyoursessiondirectorynamehere various training option modified toggled onoff different flag run python mainpy h see option shell usage mainpy h issim objmeshdir objmeshdir numobj numobj tcphostip tcphostip tcpport tcpport rtchostip rtchostip rtcport rtcport heightmapresolution heightmapresolution randomseed randomseed method method pushrewards futurerewarddiscount futurerewarddiscount experiencereplay heuristicbootstrap exploreratedecay grasponly istesting maxtesttrials maxtesttrials testpresetcases testpresetfile testpresetfile loadsnapshot snapshotfile snapshotfile continuelogging loggingdirectory loggingdirectory savevisualizations result baseline comparison ablation study paper reproduced using flag example train reactive policy pushing grasping pg reactive specify method reactive remove pushrewards remove exploreratedecay shell python mainpy issim method reactive experiencereplay savevisualizations train reactive policy graspingonly graspingonly similar argument pg reactive add grasponly shell python mainpy issim method reactive experiencereplay grasponly savevisualizations train vpg policy without reward pushing vpgnoreward similar argument regular vpg remove pushrewards shell python mainpy issim experiencereplay exploreratedecay savevisualizations train shortsighted vpg policy lower discount factor future reward vpgmyopic similar argument regular vpg set futurerewarddiscount 02 shell python mainpy issim pushrewards futurerewarddiscount 02 experiencereplay exploreratedecay savevisualizations plot performance session training time run following shell python plotpy logsyoursessiondirectorynamehere solid line indicate grasp success rate primary metric performance dotted line indicate pushthengrasp success rate secondary metric measure quality push training step default point plot measure average performance last 200 training step range xaxis fromto 2500 training step easily change parameter top plotpy compare performance different session draw multiple plot time shell python plotpy logsyoursessiondirectorynamehere logsanothersessiondirectorynamehere evaluation provide collection 11 test case simulation adversarial clutter test case consists configuration of6 object placed workspace front robot configuration manually engineered reflect challenging picking scenario remain exclusive training procedure across many test case object laid closely side side position orientation even optimal grasping policy would trouble successfully picking object without decluttering first sanity check single isolated object additionally placed workspace separate configuration ensure policy sufficiently trained prior benchmark ie policy ready fails grasp isolated object demo run pretrained model multiple time x30 single test case test pretrained model simply change location snapshotfile shell python mainpy issim objmeshdir objectsblocks numobj 10 pushrewards experiencereplay exploreratedecay istesting testpresetcases testpresetfile simulationtestcasestest10obj07txt loadsnapshot snapshotfile yoursnapshotfilehere savevisualizations data test case saved session directory log folder report average testing performance session run following shell python evaluatepy sessiondirectory logsyoursessiondirectorynamehere method specifymethod numobjcomplete n specifymethod reactive reinforcement depending architecture model numobjcomplete n defines number object need picked order consider task completed example evaluating pretrained model demo test case n set shell python evaluatepy sessiondirectory logsyoursessiondirectorynamehere method reinforcement numobjcompleteaverage performance measured three metric metric higher betteraverage completion rate test run measure ability policy finish task picking least n object without failing consecutively 10 attemptsaverage grasp success rate per completionaverage action efficiency describes succinctly policy capable finishing task see paper detail computed creating test case simulation design challenging test case open simulation environment vrep navigate vrep directory run vrepsh main menu select file open scene open file visualpushinggraspingsimulationsimulationttt another terminal window navigate repository run following shell python createpy vrep window use vrep toolbar object shiftrotate move around object desired position orientation terminal window type name text file save test case press enter try run trained model test case running mainpy demo flag testpresetfile pointing location test case text file running real robot ur5 code repository used train real ur5 robot arm tested ur software version 18 communicate later version ur software several minor change may necessary robotpy eg function like parsetcpstatedata tested python 27 fully tested pythonsetting camera system latest version system us rgbd data captured intel realsense d415 camera provide lightweight c executable stream data realtime using librealsense sdk 20 via tcp enables connect camera external computer fetch rgbd data remotely network training come handy many real robot setup course required entire system also run computer installation instruction download install librealsense sdk 20 navigate visualpushinggraspingrealsense compile realsensecpp shell cd visualpushinggraspingrealsense cmake make connect realsense camera usb 30 compliant cable important realsense d400 series us usbc cable still requires 30 compliant able stream rgbd data start tcp server rgbd streaming run following shell realsense keep executable running calibrating training real robot instruction test python tcp client fetch rgbd data active tcp server run following shell cd visualpushinggraspingreal python capturepy calibrating camera extrinsics provide simple calibration script estimate camera extrinsics respect robot base coordinate script move robot gripper set predefined 3d location camera detects center moving 4x4 checkerboard pattern taped onto gripper checkerboard size larger better instruction predefined 3d location sampled 3d grid point robot workspace modify location change variable workspacelimits calibgridstep top calibratepy measure offset midpoint checkerboard pattern tool center point robot coordinate variable checkerboardoffsetfromtool offset change depending orientation tool variable toolorientation move across predefined location change variable respectively top calibratepy code directly communicates robot via tcp top calibratepy change variable tcphostip point network ip address ur5 robot controller caution run following move robot calibrate shell python calibratepy script also optimizes zscale factor save realcameradepthscaletxt scale factor multiplied depth pixel captured camera step relevant realsense sr300 camera commonly suffer severe scaling problem 3d data often 1520 smaller real world coordinate d400 series le likely severe scaling problem training train real robot simply run shell python mainpy tcphostip xxxxxxxxxx tcpport 30002 pushrewards experiencereplay exploreratedecay savevisualizations xxxxxxxxxx network ip address ur5 robot controller additional tool use touchpy test calibrated camera extrinsics provides ui user click point rgbd image robot move endeffector 3d location point use debugpy test robot communication primitive action,"[('shell', 'python'), ('test', 'case')]"
lucidrains/robotic-transformer-pytorch,Python,robotic transformer pytorch implementation href robotic transformer robotics google team pytorch install bash pip install robotictransformerpytorch usage python import torch robotictransformerpytorch import maxvit rt1 vit maxvit numclasses 1000 dimconvstem 64 dim 96 dimhead 32 depth22 windowsize mbconvexpansionrate mbconvshrinkagerate 025 dropout 01 model rt1 vit vit numactions 11 depth head dimhead 64 conddropprob 02 video torchrandn26 224 224 instruction bring apple sitting table please pas butter trainlogits modelvideo instructions6 11 256 batch frame action bin much training modeleval evallogits modelvideo instruction condscaleclassifier free guidance conditional scale appreciation href generous sponsorship work open source cutting edge artificial intelligence research todo x add classifier free guidance option x add cross attention based conditioning citation bibtex inproceedingsrt12022arxiv title rt1 robotics transformer realworld control scale author anthony brohan noah brown justice carbajal yevgen chebotar joseph dabis chelsea finn keerthana gopalakrishnan karol hausman alex herzog jasmine hsu julian ibarz brian ichter alex irpan tomas jackson sally jesmonth nikhil joshi ryan julian dmitry kalashnikov yuheng kuang isabel leal kuanghuei lee sergey levine yao lu utsav malla deeksha manjunath igor mordatch ofir nachum carolina parada jodilyn peralta emily perez karl pertsch jornell quiambao kanishka rao michael ryoo grecia salazar pannag sanketi kevin sayed jaspiar singh sumedh sontakke austin stone clayton tan huong tran vincent vanhoucke steve vega quan vuong fei xia ted xiao peng xu sichun xu tianhe yu brianna zitkovich booktitle arxiv preprint arxiv220401691 year 2022 bibtex inproceedingstu2022maxvitmv title maxvit multiaxis vision transformer author zhengzhong tu hossein talebi han zhang feng yang peyman milanfar alan conrad bovik yinxiao li year 2022 bibtex miscpeebles2022scalable title scalable diffusion model transformer author william peebles saining xie year 2022 eprint 221209748 archiveprefix arxiv primaryclass cscv,"[('year', '2022'), ('robotic', 'transformer')]"
dheera/rosboard,Other,rosboard node run web server robot run node point web browser get nice visualization ros1ros2 compatible package work either version mobile friendly designed walk around next robot phone viewing topic light weight depending much consumes extremely little resource actually used easily extensible easily code visualization custom type adding one j file referncing inside top indexjs run desktop play bag also sure check terminal visualization tool rosshow prerequisite sudo pip3 install tornado sudo pip3 install simplejpeg recommended rosboard fall back cv2 pil instead intend use melodic earlier also need rospkg allow python3 ros1 node work sudo pip3 install rospkg required melodic earlier distros running easy way without installing workspace source optrosyourros1orros2distrosetupbash run point web browser replace localhost robot ip good go installing package package work either ros1 ros2 simply drop catkinwssrc colconwssrc work rosrun rosrun rosboard rosboardnode put launch file rosrun ros2 run rosboard rosboardnode put launch file faq write visualizer custom type add new viewer class inherits viewer following example default viewer add import top indexjs done doe work ros1 ros2 make use rospy2 use rosbridgesuite robot web tool great project initially used moved away favor custom tornadobased websocket bridge reason le easy ros1 ros2 compatible depending library advantage websocket implementation tornado custom websocket api speaks exactly language regardless whether backend ros1 ros2 custom implementation allows use lossy compression large message eg image pointcloud2 sending websocket robotside timestamps message possibly throttling future want browser superuser access system functionality necessary work also want add basic usernamepassword authorization point future many time past robot web tool available immediately aptget distros released one ha wait month depends standard python library like tornado optionally pil doe depend distrospecific package theoretically work immediately new distros released credit project make use number opensource library author extremely grateful tornado used web server web socket server copyright c tornado author apache 20 license simplejpeg used encoding decoding jpeg format copyright c joachim folz mit license psutil used monitoring system resource utilization copyright c giampaolo rodola bsd 3clause license masonry used laying card page copyright c david desandro mit license leafletjs used rendering sensormsgsnavsatfix message copyright c vladimir agafonkin cloudmade bsd 2clause license material design lite used general ui theming widget webbased client copyright c google inc apache 20 license jquery used clientside dom manipulation copyright c openjs foundation mit license litegljs used wrapper webgl api 3d visualization copyright c evan wallace javi agenjo mit license glmatrix matrix manipulation 3d visualization copyright c brandon jones colin mackenzie iv mit license rosbagjs used reading rosbag file copyright c cruise automation mit license uplot used timeseries plot copyright c leon sorokin mit license json5 used encodingdecoding json5 message copyright c aseem kishore others mit license jetbrains mono used fixedwidth text web ui copyright c jetbrains mono project author sil open font license 11 titillium web used variablewidth text web ui copyright c accademia di belle arti di urbino student course visual design sil open font license 11,"[('copyright', 'c'), ('mit', 'license')]"
zz570557024/vue-mpvue-ChatRobot,Other,nodejs vue mpvue koakoa2 vue vue vue mpvue vuejs vuejs mpvue vuejs runtime compiler vuejs koa express web koa web generator koa web node build setup bash install dependency npm install build mini program npm start build h5 page npm run starth5 build page production minification mini program npm run build build page production minification h5 program npm run buildh5 build node resource server gulp build bash start mini progrom npm run dev start h5 page npm run devh5 start server npm run server server projectconfigjsonappidappid echartsforweixin 663 1991 vuejs mpvue koa vuex webpack hotreload npm olami api gulp toolkit automating painful timeconsuming task development workflow stop messing around build something echarts javascript pc ie891011chromefirefoxsafari zrender dayjs javascript momentjs api momentjs dayjs contribution rushi license mit,"[('npm', 'run'), ('program', 'npm')]"
appliedAI-Initiative/orb_slam_2_ros,C++,orbslam2 orbslam2 author raul murartal juan tardos j montiel dorian galvezlopez dbow2 original implementation found orbslam2 node implementation orbslam2 realtime slam library monocular stereo rgbd camera computes camera trajectory sparse 3d reconstruction stereo rgbd case true scale able detect loop relocalize camera real time implementation remove pangolin dependency original viewer data io handled via topic visualization use rviz repository maintained lennart haller behalf appliedai feature full compatibility support lot camera box intel realsense family see run section list data io via topic parameter set rqtreconfigure gui runtime quick startup considerably sped vocab file loading full map save load functionality based pr loading parameter via launch file support loading cam parameter caminfo topic related publication monocular raul murartal j montiel juan tardos orbslam versatile accurate monocular slam system ieee transaction robotics vol 31 nopp 11471163 2015 2015 ieee transaction robotics best paper award pdf stereo rgbd raul murartal juan tardos orbslam2 opensource slam system monocular stereo rgbd camera ieee transaction robotics vol 33 nopp 12551262 2017 pdf dbow2 place recognizer dorian galvezlopez juan tardos bag binary word fast place recognition image sequence ieee transaction robotics vol 28 nopp 11881197 2012 pdflicense orbslam2 released gplv3 license list codelibrary dependency associated license please see dependenciesmd closedsource version orbslam2 commercial purpose please contact author orbslam unizar dot e use orbslam2 monocular academic work please cite articlemurtro2015 titleorbslam versatile accurate monocular slam system authormurartal ra ul montiel j tard juan journalieee transaction robotics volume31 number5 pages11471163 doi 101109tro20152463671 year2015 use orbslam2 stereo rgbd academic work please cite articlemurorb2 titleorbslam2 opensource slam system monocular stereo rgbd camera authormurartal ra ul tard juan journalieee transaction robotics volume33 number5 pages12551262 doi 101109tro20172705103 year2017 building orbslam2ros tested library ubuntu 1604 kinetic ubuntu 1804 melodic powerful computer eg i7 ensure realtime performance provide stable accurate result c11 compiler needed getting code clone repository catkin workspace git clone node requires catkinmakeisolated catkin build build package depends number package ship default installation installed use rosdep install catkin folder run sudo rosdep init rosdep update rosdep install frompaths src ignoresrc r install dependency package already initialized rosdep get warning ignore eigen3 required g2o download install instruction found otherwise eigen installed binary sudo apt install libeigen3dev required least eigen 310 building build node run catkin build catkin folderconfiguration vocab file run algorithm expects vocabulary file see paper ship repository config config file camera calibration tracking hyper paramters original implementation replaced paramters get set launch file parameter topic service parameter three type parameter right static dynamic parameter camera setting static parameter send parameter server startup supposed change set launch file located roslaunch parameter loadmap bool set true node try load map provided mapfile startup mapfile string name file map loaded vocfile string location config vocanulary file mentioned publishpointcloud bool pointcloud containing key point map published publishpose bool posestamped message published even false tf still published pointcloudframeid string frame id pointcloudmap cameraframeid string frame id camera position targetframeid string map transform pose estimate provided frame id set loadcalibrationfromcam bool true camera calibration read camerainfo topic otherwise read launch file params dynamic parameter changed runtime either updating directly via command line using rqtreconfigure recommended way parameter localizeonly bool toggle fromto localization slam longer add new point map resetmap bool set true erase map start new reset parameter automatically update back false minnumkfinmap int number key frame map ha get reset tracking lost minobservationsforrosmap int number minimal observation key point must published point cloud influence behavior slam finally intrinsic camera calibration parameter along hyperparameters found specific yaml file orbslam2config published topic following topic published subscribed node node publish given setting pointcloud2 containing key point map also node publish given setting posestamped current pose camera frame target frame targetframeid set live image camera containing currently found key point status text tf pointcloud frame id camera frame id position target frame targetframeid set subscribed topic mono node subscribes cameraimageraw input image cameracamerainfo camera calibration loadcalibrationfromcam true rgbd node subscribes camerargbimageraw rgb image cameradepthregisteredimageraw depth information camerargbcamerainfo camera calibration loadcalibrationfromcam true stereo node subscribes imageleftimagecolorrect imagerightimagecolorrect corresponding image imageleftcamerainfo camera calibration loadcalibrationfromcam true service node offer possibility save map via service nodetypesavemap savemap service orbslam2rgbdsavemap orbslam2monosavemap orbslam2stereosavemap savemap service expects name file map saved input moment save file take place slam inactiverun sourcing setup bash using source develsetupbash suported camera camera mono stereo rgbd intel realsense r200 roslaunch orbslam2ros orbslam2r200monolaunch roslaunch orbslam2ros orbslam2r200stereolaunch roslaunch orbslam2ros orbslam2r200rgbdlaunch intel realsense d435 roslaunch orbslam2ros orbslam2d435monolaunch roslaunch orbslam2ros orbslam2d435rgbdlaunch mynteye roslaunch orbslam2ros orbslam2mynteyesmonolaunch roslaunch orbslam2ros orbslam2mynteyesstereolaunch stereolabs zedroslaunch orbslam2ros orbslam2zed2stereolaunch use command corresponding cell camera launch orbslam2ros right parameter setupdocker easy way use orbslam2ros docker repository ship dockerfile based kinetic container includes orbslam2ros well intel realsense package quick testing data collectionfaq answer frequently asked question save map save map simple command line command run one command matching node running rosservice call orbslam2rgbdsavemap mapbin rosservice call orbslam2stereosavemap mapbin rosservice call orbslam2monosavemap mapbin replace mapbin file name want file saved roshome default note need source catkin workspace terminal order service become available using new different camera use slam almost mono stereo rgbd cam want order use different camera need supply set paramters algorithm loaded launch file roslaunch folderyou need camera intrinsics configuration read camera calibration parameter mean use launch file roslaunch need correct topic subscribe new camera note camera support orbslam2ros subscribe camerainfo topic read camera calibration parameter problem running realsense node node realsense fails launch running roslaunch realsense2camera rsrgbdlaunch get depth stream solution install rgbdlaunch package command make sure adjust distro needed sudo apt install rosmelodicrgbdlaunch,"[('stereo', 'rgbd'), ('camera', 'calibration')]"
evanw/rapt,C++,porting c game rapt html5 info come soon,"[('porting', 'c'), ('c', 'game')]"
kyprizel/testcookie-nginx-module,Other,description testcookienginxmodule simple robot mitigation module using cookie based challengeresponse challenge cooky set using different method setcookie 302307 http location redirect setcookie html meta refresh redirect custom template javascript used prevent automatic parsing challenge cookie value encrypted aes128 cbc mode using customrandom key iv decrypted client side javascript directive testcookie enable module disable module var intercept request set cookie var testcookiename cookie name default tck testcookiedomain cookie domain default none set browser testcookieexpires cookie expiration value default 31 dec 2037 235555 gmt testcookiepath cookie path useful plan use different key location default testcookiesamesite cookie samesite attribute allows declare cookie restricted firstparty samesite context default none cooky sent context ie sending crossorigin allowed accepts three value lax strict none testcookiesecret secret string used challenge cookie computation 32 byte better long static prevent cookie reset legitimate user every server restart set random new secret generated every server restart recomendedall cooky previous key invalid testcookiesession set challenge generation function input remoteaddr client ip address used user unique identifier remoteaddr client ip useragent required configuration directive testcookiearg get parameter name used cookie setting attempt computation set server try set cookie infinitelyactually browser show error page afterattempts testcookiemaxattempts maximum number redirects user sent fallback url according rfc1945 set toor testcookiearg set server try set cookie infinitely testcookiep3p p3p policy default none testcookiefallback set fallback url user redirected maximum number attempt specified directive testcookiemaxattempts exceded nginx scripting variable used set client get 403 max attempt reached testcookiewhitelist set network testing used add search engine network currently ipv4 cidr testcookiepass variable name variable set tocookie check performed used complex whitelisting testcookieredirectviarefresh set cookie redirect using http meta refresh required testcookierefreshtemplate used onoff default testcookierefreshtemplate custom html instead simple http meta refresh need set cookie manually template available nginx variable testcookienexturl url client redirected testcookiegot cookie value received client empty cookie doe match format testcookieset correct cookie value expecting client testcookieok user passed test 10 note changed yesno v110 also testcookierefreshencryptcookie enabled three variable testcookieenckey encryption key 32 hex digit testcookieenciv encryption iv 32 hex digit testcookieencsec encrypted cookie value 32 hex digit testcookierefreshstatus custom http response status 200 default testcookiedenykeepalive close connection setting cookie reason keep connection bot onoff default testcookiegetonly process get request post request bypassed onoff default testcookie redirect protocol setting cookie also affect testcookienexturl useful 3dparty ssl offload onoff default testcookierefreshencryptcookie encrypt cookie variable used testcookierefreshtemplate force clientside decryption aes128 cbc mode used onoff default testcookierefreshencryptcookiekey encryption key possible value random new key generated every nginx restart 32 hex digit static key useful plan obfuscate deep clientside javascript required directive encryption enabled testcookierefreshencryptiv encryption iv possible value random new iv generated every client request random2 new iv generated every nginx restart 32 hex digit static iv useful plan obfuscate deep clientside javascript default random testcookieinternal enable testcookie check internal redirects onoff useful type configs rewrite indexphp1 last default testcookie add flag cookie onoff default testcookiesecureflag add secure flag cookie onoffvariable default variable value except interpreted false testcookieportinredirect keep server port redirect onoff default installation grab nginx source code nginxorg example version 1115 see nginx compatibility build source module wget tar xzvf nginx1115targz cd nginx1115 configure addmodulepathtotestcookienginxmodule make make install use nginx 1911 compile dynamic module wget tar xzvf nginx1911targz cd nginx1911 configure adddynamicmodulepathtotestcookienginxmodule make make install load ngx using loadmodule directive using clientside cookie decryption need manually grab slowaes javascript aes implementation patch itutilsaespatch put document root compatibility module wa tested nginx 11 work 10 example configuration http default config module disabled testcookie setting cookie name testcookiename bpc setting secret testcookiesecret keepmesecret setting session key testcookiesession remoteaddr setting argument name testcookiearg ckattempt setting maximum number cookie setting attempt testcookiemaxattempts setting p3p policy testcookiep3p cpcur adm sta nid policyrefw3cp3pxml setting fallback url testcookiefallback configuring whitelist testcookiewhitelist 888832 setting redirect via html code testcookieredirectviarefresh enable encryption testcookierefreshencryptcookie setting encryption key testcookierefreshencryptcookiekey deadbeefdeadbeefdeadbeefdeadbeef setting encryption iv testcookierefreshencryptcookieiv deadbeefdeadbeefdeadbeefdeadbeef setting response template testcookierefreshtemplate htmlbodysetting cookiescript typetextjavascript srcaesminjs scriptscriptfunction tonumbersdvar edreplacegfunctiondepushparseintd16return efunction tohexforvar dd1argumentslengtharguments0constructorarrayarguments0argumentsef0fdlengthfe16df0dftostring16return etolowercasevar atonumberstestcookieenckeybtonumberstestcookieencivctonumberstestcookieencsetdocumentcookiebpctohexslowaesdecryptc2ab expiresthu 31dec37 235555 gmt pathlocationhreftestcookienexturlscriptbodyhtml server listen 80 servername testcom location aesminjs gzip gzipminlength 1000 gziptypes textplain root var location w3cp3pxml root var location enable module specific location testcookie proxysetheader host host proxysetheader xrealip remoteaddr proxysetheader xforwardedfor proxyaddxforwardedfor proxypass test suite module come perldriven test suite thanks testnginx module perl world source available github kyprizeltestcookienginxmodule todo code review encryption algos statistic bug feel free report bug send patch kyprizelgmailcom use github issue tracker support project send donation 1fhmptp6adbazvtm7pe7y69zqhjprx847s copyright license copyright c 20112017 eldar zaitov kyprizelgmailcom right reserved module licenced term bsd license redistribution use source binary form without modification permitted provided following condition met redistribution source code must retain copyright notice list condition following disclaimer redistribution binary form must reproduce copyright notice list condition following disclaimer documentation andor material provided distribution neither name author name contributor may used endorse promote product derived software without specific prior written permission software provided author contributor express implied warranty including limited implied warranty merchantability fitness particular purpose disclaimed event shall author contributor liable direct indirect incidental special exemplary consequential damage including limited procurement substitute good service loss use data profit business interruption however caused theory liability whether contract strict liability tort including negligence otherwise arising way use software even advised possibility damage,"[('onoff', 'default'), ('set', 'cookie')]"
pirxthepilot/wtfis,Python,wtfis test pypi passive hostname domain ip lookup tool nonrobots wtf wtfis commandline tool gather information domain fqdn ip address using various osint service unlike tool kind built specifically human consumption providing result pretty ymmv easy read understand tool assumes using free tier community level account make api call possible minimize hitting quota rate limit project name play whois data source service used lookup required free tier virustotal yes yes passivetotal yes ip2whois domainfqdn yes ipwhois ip address yes signup shodan ip address greynoise ip address yes virustotal primary source information retrieves hostname fqdn domain ip latest analysis stats vendor detail reputation score based vt community vote popularity rank alexa cisco umbrella etc fqdn domain category assigned different vendor resolution fqdn domain last n ip address defaultmax 10 latest analysis stats ip whois fallback passivetotal cred available various whois data domain passivetotal riskiq optionally used cred provided retrieves whois various whois data domain passivetotal recommended virustotal whois data couple reason vt whois data format le consistent pt whois data tends better quality vt also vt registrant data apparently anonymized save one vt api call offloading pt ip2whois optionally used cred provided passivetotal cred supplied ie second line whois information whois various whois data domain ip2whois recommended virustotal passivetotal account cannot obtained ipwhois default enrichment ip address retrieves asn org isp geolocation ipwhois confused ip2whois provides domain whois data shodan alternative ip address enrichment source get data shodanhostip endpoint see doc ip retrieves asn org isp geolocation list open port service operating system available tag assigned shodan greynoise supplementary ip address enrichment source using community api wtfis show whether ip one greynoise datasets noise ip ha seen regularly scanning internet riot ip belongs common business application eg microsoft o365 google workspace slack information datasets addition api also return greynoise classification ip available possible value benign malicious unknown install pip install wtfis install via conda condaforge see wtfisfeedstock install via brew brew install wtfis setup wtfis us environment variable vtapikey required virustotal api key ptapikey optional passivetotal api key ptapiuser optional passivetotal api user ip2whoisapikey optional ip2whois api key shodanapikey optional shodan api key greynoiseapikey optional greynoise api key wtfisdefaults optional default argument set using method alternatively create file home directory envwtfis declaration see envwtfisexample template note forget chmod 400 file usage usage wtfis h n g nv entity positional argument entity hostname domain ip optional argument h help show help message exit n maxresolutions n maximum number resolution show default useshodan use shodan enrich ip g usegreynoise enable greynoise ip n nocolor show output without color onecolumn display result one column v version print version number basically wtfis fqdnordomainorip get result organized panel similar image defanged input accepted eg apigooglecom supported terminal analysis field using pt heading whois panel clickable hyperlink point appropriate page vt pt website shodan enrichment shodan used enrich ip address instead ipwhois invoke useshodan flag supported terminal service field clickable hyperlink take shodan web interface greynoise enrichment enable greynoise invoke g usegreynoise flag api quota quite low 50 request per week march 2023 lookup default greynoise field name also hyperlink terminalsupported point ip entry greynoise web interface context shown display option fqdn domain lookup increase decrease maximum number displayed ip resolution number maxresolutionsnumber upper limit 10 need resolution set number toto show panel one column use theor onecolumn flag panel displayed color n nocolor default default argument defined setting wtfisdefaults environment variable example use shodan display result one column default wtfisdefaultssif argument wtfisdefaults specifying argument command invocation negates argument example run wtfis examplecom shodan used note maximum resolution n maxresolutions n cannot defined default moment docker wtfis run docker image first build image using included dockerfile running make dockerimage image latest tagged version necessarily latest commit wtfis ensures getting stable release two way run image ensure envwtfis home directory set necessary envvars simply run make dockerrun alias docker run envfilehomeenvwtfis wtfis note definition must space equal sign foobar foo bar altenatively set environment variable run eg docker run e vtapikey e shodanapikey wtfis,"[('ip', 'address'), ('whois', 'data')]"
facebookresearch/iSDF,Python,isdf realtime neural signed distance field robot perception robotics science system r 2022 isdf realtime system reconstructs signed distance field sdf room scale environment online training neural sdf model represented mlp trained continual learning style live stream posed depth image using selfsupervised loss detail see paper example result replicacad scannet alt textgithubreplicacadgif alt textgithubscannetgif three isdf mode three option running isdf chose desired mode follow instruction section running isdf sequence pose provided1runningisdfonsequenceswithposeprovided running isdf scannet replicacad sequence used paper running isdf live camera ros2runningisdfwithalivecamerainros wrapper isdf subscribes topic posed frame published orbslam3 wrapperrunning isdf franka live camera ros3runningisdfwithafrankaandlivecamerainros wrapper isdf subscribes topic realsense frame pose calibrated realsense franka panda robot running isdf sequence pose provided installation please read isdf mode sectiontwoisdfmodes make sure mode want installing git clone cd isdf setup environment conda env create f environmentyml conda activate isdf install pytorch following instruction pip install e downloading data make sure conda environment download single replicacad sequence 5gb bash datadownloadapt2navsh download 12 sequence 15gb bash datadownloaddatash data shared license replicacad datset instruction generate dataset see data readmedata scannet sequence run scannet sequence must download scannet dataset downloading scan export depth color pose intrinsics sequence wish use script usage using scannet data must set directory downloaded sequence via key scannetdir config file cd isdftrain python trainvispy config configsreplicacadjson reproducing experiment run batch isdf experiment sequentially headless mode run experiment must downloaded 12 sequence using bash script well separately downloading exporting scannet sequence run replicacad sequence modify loadparams function batchutilspy multiple gpus may want parallelise experiment run make sure update projectdir scannetdir jobslocalpy running cd isdftrain python batchtrainjobslocalpy provided result baseline use paper wanted reproduce result isdf code reproduce result baseline coming soon provide instruction generate quantitative qualitative result paper note result may vary depending cpu gpu used sdf accuracy plot provide script generate plot comparing sdf error collision cost error gradient cosine distance isdf two baseline script wa used generate quantitative plot paper eg figchange variable isdfdir script running python isdfevalfigsallseqpy running isdf live camera use interface isdf tracking system enable running live camera isdf node subscribes topic frame custom message type containing time synchronised rgb image depth image pose use wrapper orbslam3 rgbd mode publish topic developed project ubuntu 2004 noetic several code change may needed adapt version installation clone build orbslam3 may need install dependency first see full instruction run issue git clone orbslam3 cd orbslam3 chmod x buildsh buildsh noetic follow install instruction also install catkin tool already installed sudo aptget install python3catkintools realsense camera sudo aptget install rosrosdistrorealsense2camera isdf orbslam3 wrapper create catkin workspace clone isdf inside mkdir p catkinwssrc cd catkinws catkin init cd src git clone recursesubmodules open cmakeliststxt change directory point orbslam3 library beginning file default home folder nano catkinwssrcisdforbslam3roscmakeliststxt change installation orbslam3 default setorbslam3dir envhomeorbslam3 unzip orbvoctxt file cd catkinwssrcisdforbslam3rosconfig tar xf orbvoctxttargz build package conda environment cd catkinws catkinmake source develsetupbash setup isdf conda environment conda env create f environmentyml conda activate isdf install pytorch following instruction pip install e usage running need modify camera intrinsics isdf orbslam3 launch camera roslaunch realsense2camera rscameralaunch intrinsics published cameracolorcamerainfo copy intrinsics isdf config isdftrainconfigsrealsensejson orbslam3 config orbslam3rosconfigrealsenseconfigyaml launch run roslaunch isdf trainlaunch showorbslamvistrue helpful show orbslam3 vi tracking fails isdf also fail live operation press c clear keyframe set press pause live operation open 3d visualization window change 3d visualization using key press instruction printed terminal window opened orbslam3 wrapper also contains launchfile run azure kinect camera run kinect camera modify trainlaunchisdflaunchtrainlaunch launch runkinectlaunch install kinect driver current limitation isdf run single thread alternate training optimising map updating live visualisation change frequency live visualisation update however set high training become slow live visualistaion rendered depth normal current view us basic depth rendering method lead artifact render even geometry good plan improve depth rendering soon running isdf franka live camera run similar live camera demo subscribes franka panda inverse kinematics rather orbslam additionally implementation ha tuned work tabletop scene restricted defined workspace follow instruction previous section2runningisdfwithalivecamerainros orbslam step needed system requires following extrinsic calibration realsense wrt robot base use eyehandcal repository run automatic script using projfun worldmarkerprojhandcamera copy context calibrationjson add extcalib isdftrainconfigsrealsensefrankajson live topic rgb depth ee pose franka modified franka control record kinesthetic demonstratations please refer repository dependency setup replay playbackpy publish live posed frame live script recording kinesthetic demo frankacontrol run repository playback script python playbackpy xxyynpz launch run roslaunch isdf trainfrankalaunch tabletop dataset script even without access franka run franka isdf tabletop dataset datset consists ofdatalogs tabletop ycb object 3d printed stanford bunny download frankarealsense tabletop dataset 34gb bash datadownloadfrankash launch run select seqdir realsensefrankaofflinejson roslaunch isdf trainfrankalaunch livefalse inctrue franka integration wa carried sudharshan suresh feel free reach questionscomments citation inproceedingsortizetalisdf2022 titleisdf realtime neural signed distance field robot perception authorortiz joseph clegg alexander dong jing sucar edgar novotny david zollhoefer michael mukadam mustafa booktitlerobotics science system year2022 license isdf released mit license please see licenselicense file information contributing actively welcome pull request please see contributingmdgithubcontributingmd codeofconductmdgithubcodeofconductmd info,"[('running', 'isdf'), ('live', 'camera')]"
aholstenson/miio,Other,miio device library npm version dependency control mi home device implement miio protocol mi air purifier mi robot vacuum mi smart socket device commonly part xiaomi call mi ecosystem branded mijia miio mitlicensed requires least node 660 api promisebased nodeis recommended provides support async await greatly simplifies asynchronous handling note since 0150 library ha rewritten use abstractthings base api device changed bug expected testing feedback new api welcome please open issue needed device type intent library support miiocompatible device provide easy use api library map specific device model generic device type well defined capability simplify interacting currently supported device air purifiers2 pro mi humidifier mi smart socket plug power strip mi robot vacuum v1 v2 mi smart home gateway aqara accessory switch sensor etc philip light bulb eyecare lamp yeelights white bulb color bulb desk lamp strip see documentation device information type api supported device model also check missing device want know help library support device installation install project npm install miio install globally access command line tool npm install g miio usage javascript const miio require miio resolve handle device javascript resolve device resolving token automatically storage miiodevice address 1921681008 thendevice consolelog connected device catcherr handleerrorhere resolve device specifying token see get token miiodevice address 1921681008 token tokenashex thendevice consolelog connected device catcherr handleerrorhere call method interact device javascript switch power device devicetogglepower thenon consolelog power catcherr handleerrorhere using asyncawait await devicetogglepower listen event property change action javascript listen power change deviceon power power consolelog power changed power device available event handler const handler action device consolelog action action performed device device1on action handler device2on action handler capability type used hint device javascript ifdevicematches captemperature consolelogawait devicetemperature ifdevicematches capswitchablepower devicesetpowerfalse thenconsolelog catchconsoleerror done device call destroy stop network traffic javascript devicedestroy token device management miio device send back token handshake used without figuring token device hide token yeelights mi robot vacuum command line tool named miio help finding storing token see device management detail common use case discovering device use miiodevices look connect device local network method discovery tell directly device reveals token autoconnected want automatically connect device use miiobrowse instead example using miiodevices javascript const device miiodevices cachetime 300minutes default 1800 second 30 minute deviceson available device ifdevicematches placeholder device either missing token could connected else something useful device deviceson unavailable device device longer available destroyed miiodevices support option cachetime maximum amount second device unreachable becomes unavailable default 1800 filter function used filter device connected default reg true skipsubdevices sub device aqara gateway skipped default false usetokenstorage token fetched storage see device management default true token object manual mapping id token advanced use device management possible see advanced api detail miiobrowse device api check documentation device detail api supported device detailed documentation core api available section using thing abstractthings documentation library versioning api stability library us semantic versioning exception api device based type capability model mean device method removed type capability change happen better implementation made available model working library implement check type capability future compatibility within major version miio capability considered stable across major version device support power minor patch version introduce powermega replace power new functionality needed new capability added along side older one reporting issue reporting issue contains information useful making issue want report easier fix debugging library us debug two namespaces miio used packet detail network discovery device use thingmiio namespace controlled via debug environment flag flag set running miio command nodejs script show debug info device discovery debugthing miio discover activate namespaces set debug debugmiiothing miio discover protocol documentation library based documentation provided openmihome see detail detail figure command new device look documentation protocol command,"[('device', 'management'), ('mi', 'robot')]"
engcang/SLAM-application,Python,slamapplication installation test 3d singlelidar legoloam liosam lvisam fastlio2 fasterlio voxelmap r3live dlo pvlio slamesh 3d multilidars fastliomulti result singlelidar video legoloam v liosam v lvisam video2 liosam v lvisam video3 liosam v fastlio2 video4 fastlio2 v livoxmapping v loamlivox using livox mid70 lidar realworld video5 fastlio2 building narrow stair using ouster os0128 realworld video6 fastlio2 narrow tunnel using ouster os0128 uav drone video7 fasterlio v fastlio building narrow stair using ouster os0128 realworld video8 voxelmap building using intel realsense l515 realworld video9 r3live building around building using livox mid70 lidar flir blackfly pixhawk4 mini realworld video10 fastlio2 v adalio v pointlio v kissicp building narrow stair realworld video11 fastlio2 v adalio gazebo challenging environment video12 dlo v fastlio2 video13 dlo v dlio v adalio v fastlio2 video15 adalio v pvlio v slamesh video16 adalio v pvlio multilidars video14 fastliomulti bundle update v asynchronous update dependency common package bash sudo aptget install rosmelodicnavigation rosmelodicrobotlocalization rosmelodicrobotstatepublisher gtsam lvisam liosam bash wget gtsamzip unzip gtsamzip cd gtsam402 mkdir build cd build cmake dgtsambuildwithmarchnativeoff dgtsamusesystemeigenon sudo make install j8 cere solver lvisam slamesh bash sudo aptget install cmake libgoogleglogdev libatlasbasedev libsuitesparsedev wget lvisam wget slamesh tar zxf ceressolver1140targz lvisam tar zxf ceressolver210targz slamesh mkdir ceresbin mkdir solver cd ceresbin cmake ceressolver1140 dexportbuilddiron dcmakeinstallprefixsolver good build without root privileged wanted directory make j8number core make test make install glog g9 gcc9 fasterlio bash sudo aptget install libgoogleglogdev sudo addaptrepository ppaubuntutoolchainrtest sudo apt update sudo apt install gcc9 g9 sudo updatealternatives install usrbingcc gcc usrbingcc9 60 slave usrbing g usrbing9 note ousterros package cannot built gcc g version higher building ousterros bash catkin b dcmakeccompilergcc6 dcmakecxxcompilerg6 dcmakebuildtyperelease cgal pcltools r3live bash sudo apt install libcgaldev pcltools optionally sudo apt install meshlab installation legoloam shell cd yourworkspacesrc git clone cd catkin build dcmakebuildtyperelease liosam shell cd yourworkspacesrc git clone cd catkin build dcmakebuildtyperelease lvisam shell cd yourworkspacesrc git clone cd catkin build dcmakebuildtyperelease trouble shooting lvisam opencv 4x edit lvisamsrcvisualodometryvisualloopthirdpartydvisionbriefcpp53 cpp cvcvtcolorimage aux cvrgb2gray cvcvtcolorimage aux cvcolorrgb2gray fastlio2 shell cd yourworkspacesrc git clone cd catkin build dcmakebuildtyperelease cd yourworkspacesrc git clone recursive cd catkin build dcmakebuildtyperelease fasterlio shell cd yourworkspacesrc git clone cd fasterliothirdparty tar xvf tbb201820170726osslintgz cd yourworkspace catkin build dcustomtbbdirpwdsrcfasterliothirdpartytbb201820170726oss dcmakebuildtyperelease fasterlio arm architecture eg jetson xavier shell cd yourworkspacesrc git clone cd fasterliothirdparty git clone cd tbbaarch64 scriptsbootstrapaarch64linuxsh cd buildaarch64 make make install gedit fasterliocmakepackagescmake edit line 13 settbb2018librarydir customtbbdirlibintel64gcc47 settbb2018librarydir customtbbdirlib cd yourworkspace catkin build dcustomtbbdirpwdsrcfasterliothirdpartytbbaarch64dist dcmakebuildtyperelease voxelmap bash cd yourworkspacesrc git clone cd catkin build dcmakebuildtyperelease git clone cd catkin build dcmakebuildtyperelease trouble shooting voxelmap usrincludelz4h19657 error conflicting declaration typedef struct lz4streamt lz4streamt could meet error rosmelodic fix bash sudo mv usrincludeflannextlz4h usrincludeflannextlz4hbak sudo mv usrincludeflannextlz4hch usrincludeflannextlz4hbak sudo ln usrincludelz4h usrincludeflannextlz4h sudo ln usrincludelz4hch usrincludeflannextlz4hch r3live bash cd yourworkspacesrc git clone cd catkin build dcmakebuildtyperelease trouble shooting r3live lidar incoming frame old original livoxrosdriver doe publish data timestamp lidar time use modified livoxrosdriver doe solve problem edit lddccpp line 563 c livoxmsgheaderstamp rostimetimestamp initlidartim packetoffsettime 1e9 initrostime livoxmsgheaderstamp rostimenow modified r2live rospublisher ppublisher lddcgetcurrentpublisherhandle koutputtoros outputtype ppublisherpublishlivoxmsg properly set configuration r3live camera calibration use kalibr cameracalibration kalibr refer original repo cameracalibration use lidarcamera calibration spinning lidar supported yet rgb mapping try use lidarcameracalibration repo want livox lidar use livoxcameracalib repo record bag file livox lidar data capture image rgb camera use convert bag file pcd file change directory launch file bash roslaunch livoxcameracalib bagtopcdlaunch calibrate lidar camera change directory launch config file bash roslaunch livoxcameracalib caliblaunch note extrinsic rotational parameter livoxcameracalib transposed r3liveconfigyaml file refer extrinsic result r3live config file left target image right target pcd left calibrated image residual right calibrated image sensor configuration mine pixhawk4 mini imu flir blackfly usb3 bfsu323s3cc livox mid70 pointlio shell cd yourworkspacesrc git clone cd catkin build dcmakebuildtyperelease cd yourworkspacesrc git clone recursive cd catkin build dcmakebuildtyperelease kissicp ros1 shell cd yourworkspacesrc git clone cd catkin build dcmakebuildtyperelease dlo shell sudo apt install libompdev libpcldev libeigen3dev cd yourworkspacesrc git clone cd catkin build dcmakebuildtyperelease dlio shell sudo apt install libompdev libpcldev libeigen3dev cd yourworkspacesrc git clone cd catkin build dcmakebuildtyperelease fastliomulti shell cd yourworkspacesrc git clone git clone cd catkin build dcmakebuildtyperelease pvlio shell cd yourworkspacesrc git clone git clone cd catkin build dcmakebuildtyperelease slamesh shell sudo aptget install buildessential cmake cmakecursesgui libflanndev libgsldev libeigen3dev libopenmpidev openmpibin openclcheaders oclicdopencldev libboostalldev libopencvdev libyamlcppdev freeglut3dev libhdf5dev qtbase5dev qt5default libqt5opengl5dev liblz4dev ubuntu 1804 sudo aptget install libvtk6dev libvtk6qtdev ubuntu 2004 sudo aptget install libvtk7dev libvtk7qtdev git clone cd lvr2 mkdir build cd build cmake make sudo make install cd yourworkspacesrc git clone git clone cd catkin build dcmakebuildtyperelease trouble shooting slamesh cere 20 version opencv 4x version ceressolve occur error delete opencv dependency cmakeliststxt cmakefile targetlinklibrariesslamesh catkinlibraries pcllibraries opencvlibs g2olibs cereslibraries lvr2libraries targetlinklibrariesslamesh catkinlibraries pcllibraries g2olibs cereslibraries lvr2libraries run check config file launch file folder repo trouble shooting gazebo velodyne plugin using cpu ray instead gpu ray height width interchanged used script file,"[('git', 'clone'), ('clone', 'cd')]"
lardemua/atom,Python,atom calibration calibration framework using atomic transformation optimization method atom set calibration tool multisensor multimodal robotic system based optimization atomic transformation provided based robot description moreover atom provides several script facilitate step calibration procedure instruction install use check documentation img aligncenter width832 height468 src p also take look atom youtube playlist support work helpful please cite paper oliveira e pedrosa aguiar rato f santos p dia v santos atom general calibration framework multimodal multisensor system expert system application 2022 118000 issn 09574174 bibtexdocsbibtexsoliveira2022eswabib adequate gomes oliveira v santos atom calibration framework interaction visualization functionality sensor 2023 23 936 bibtexdocsbibtexsgomessensors2023bib rato oliveira v santos gomes sappa sensortopattern calibration framework multimodal industrial collaborative cell journal manufacturing system 2022 volume 64 page 497507 issn 02786125 bibtexdocsbibtexsratojms2022bib pedrosa e oliveira n lau v santos general approach handeye calibration optimization atomic transformation ieee transaction robotics 2021 pp 115 doi 2021 bibtexdocsbibtexspedrosa2021trobib aguiar oliveira e pedrosa f santos camera lidar calibration approach optimization atomic transformation expert system application 2021 p 114894 issn 09574174 doi 2021 bibtexdocsbibtexsaguiar2021eswabib oliveira castro madeira e pedrosa p dia v santos framework extrinsic calibration intelligent vehicle multisensor multimodal approach robotics autonomous system 2020 p 103558 issn 09218890 doi 2020 bibtexdocsbibtexsoliveira2020rasbib contributor miguel riem oliveira university aveiro afonso castro university aveiro eurico pedrosa university aveiro tiago madeira university aveiro andre aguiar inesc tec daniela rato university aveiro manuel gomes university aveiro maintainer miguel riem oliveira university aveiro manuel gomes university aveiro,"[('university', 'aveiro'), ('v', 'santos')]"
DoongLi/awesome-Implicit-NeRF-SLAM,Other,awesomeimplicitnerfslam awesome repo contains curative list implicit representation nerf paper relating slamrobotics domain inspired awesomeimplicitnerfrobotics please feel free send pull request email add paper find repository useful please consider citing staring list feel free share list others overview nerfs checkout survey neural volume rendering nerf beyond nerf neural radiance field 3d vision comprehensive review blog post nerf explosion 2020 collection awesomenerf overview nerf general model slam visualslam lidarslam multimodalslam robotics manipulationrl planningnavigation citation nerf general model nerf representing scene neural radiance field view synthesis eccv 2020 paper tensorflow code webpage video shapo implicit representation multi object shape appearance pose optimization eccv 2022 paper pytorch code webpage video ncf neural correspondence field object pose estimation eccv 2022 paper pytorch code webpage neuralsim learning generate training data nerf eccv 2022 paper pytorch code webpage snake snake shapeaware neural 3d keypoint field neurips 2022 paper pytorch code nerfrpn general framework object detection nerfs arxiv 2022 paper video nerf2nerf pairwise registration neural radiance field arxiv 2022 paper pytorch code webpage dataset inerf inverting neural radiance field pose estimation iros 2021 paper pytorch code website dataset pointnerf pointbased neural radiance field cvpr 2022 paper pytorch code website zipnerf antialiased gridbased neural radiance field arxiv 2023 paper website video mipnerf 360 unbounded antialiased neural radiance field cvpr 2022 paper jax code website dataset video f2nerf fast neural radiance field training free camera trajectory cvpr 2023 paper pytorch code website dataset 3d gaussian splatting realtime radiance field rendering siggraph 2023 paper website slam visualslam neuralrecon realtime coherent 3d reconstruction monocular video cvpr 2021paper pytorch code website difusion online implicit 3d reconstruction deep prior cvpr 2021paper pytorch code isdf realtime neural signed distance field robot perception r 2022 paper pytorch code website lens lens localization enhanced nerf synthesis corl 2021 paper video niceslam neural implicit scalable encoding slam cvpr 2021 paper pytorch code website imap implicit mapping positioning realtime iccv 2021 paper website video bnvfusion bnvfusion dense 3d reconstruction using bilevel neural volume fusion cvpr 2022 paper pytorch code nerfslam realtime dense monocular slam neural radiance field arxiv 2022 paper pytorch code video nerfels renderable neural code improved camera pose estimation cvpr 2022 workshop paper sdfbased rgbd camera tracking neural scene representation icra workshop 2022 paper orbeezslam realtime monocular visual slam orb feature nerfrealized mapping arxiv 2022 paper video code eslam efficient dense slam system based hybrid representation signed distance field arxiv 2022 paper voxfusion dense tracking mapping voxelbased neural implicit representation ismar 2022 paper website pytorch code video visualinertial odometry prior bundleadjusting neural radiance field iccas 2022 paper featurerealistic neural fusion realtime open set scene understanding arxiv 2022 paper website video towards open world nerfbased slam arxiv 2023 paper dense rgb slam neural implicit map iclr 2023 paper website code video vmap vectorised object mapping neural field slam cvpr 2023 paper website pytorch code video nicerslam neural implicit scene encoding rgb slam arxiv 2023 paper video implicit map augmentation relocalization eccv workshop 2022 paper unifusion universal continuous mapping arxiv 2023paper website newton neural viewcentric mapping onthefly largescale slam arxiv 2023 paper pointslam dense neural point cloudbased slam arxiv 2023 paper code romap realtime multiobject mapping neural radiance field ral 2023 paper code video coslam joint coordinate sparse parametric encoding neural realtime slam cvpr 2023 paper website neural implicit dense semantic slam arxiv 2023 paper fmapping factorized efficient neural field mapping realtime dense rgb slam arxiv 2023 paper website code uncleslam uncertainty learning dense neural slam arxiv 2023 paper imoderealtime incremental monocular dense mapping using neural field icra 2023 paper nisbmap scalable mapping neural implicit spatial block ral 2023 paper rgbd mapping tracking plenoxel radiance field arxiv 2023 paper efficient map fusion multiple implicit slam agent tiv 2023 paper mipsfusion multiimplicitsubmaps scalable robust online neural rgbd reconstruction arxiv 2023 paper goslam global optimization consistent 3d instant reconstruction iccv 2023 paper website code endtoend rgbd slam multimlps dense neural implicit representation ral 2023 paper dynamon motionaware fast robust camera localization dynamic nerf arxiv 2023 paper endtoend rgbd slam multimlps dense neural implicit representation ral 2023 paper hislam monocular realtime dense mapping hybrid implicit field arxiv 2023 paper lidarslam shinemapping largescale 3d mapping using sparse hierarchical implicit neural representation arxiv 2022 paper code irmcl implicit representationbased online global localization arxiv 2022 paper code efficient implicit neural reconstruction using lidar icra 2023 paper website pytorch code video nerfloam neural implicit representation largescale incremental lidar odometry mapping arxiv 2023 paper code nfatlas multivolume neural feature field large scale lidar mapping arxiv 2023 paper accurate implicit neural mapping compact representation largescale scene using ranging data ral 2023 paper loner lidar neural representation realtime slam arxiv 2023 paper multimodalslam multimodal neural radiance field monocular dense slam lightweight tof sensor iccvoral 2023 paper robotics manipulationrl ditto building digital twin articulated object interaction cvpr 2022 paper pytorch code website relationalndfse3equivariant relational rearrangement neural descriptor field corl 2022 paper pytorch code website neural descriptor fieldsse3equivariant object representation manipulation icra 2022 paper pytorch code website nerfrl reinforcement learning neural radiance field arxiv 2022 paper website neural motion field encoding grasp trajectory implicit value function r 2022 paper video grasping field learning implicit representation human grasp 3dv 2020 paper pytorch code video dexnerf using neural radiance field grasp transparent object corl 2021 paper website nerfsupervision learning dense object descriptor neural radiance field icra 2022 paper pytorch code website giga synergy affordance geometry 6dof grasp detection via implicit representation r 2021 paper pytorch code website neuralgrasps learning implicit representation grasp multiple robotic hand corl 2022 paper website objectfolder dataset object implicit visual auditory tactile representation corl 2021 paper pytorch code website objectfolder 20 multisensory object dataset sim2real transfer cvpr 2022 paper pytorch code website nerf2real sim2real transfer visionguided bipedal motion skill using neural radiance field arxiv 2022 paper website nifr neural field robotic object manipulation single image arxiv 2022 paper local neural descriptor field locally conditioned object representation manipulation icra 2023 paper code website equivariant descriptor field se3equivariant energybased model endtoend visual robotic manipulation learning iclr 2023 paper code planningnavigation nerflow neural radiance flow 4d view synthesis video processing iccv 2021 paper pytorch code website nerfnavigation visiononly robot navigation neural radiance world icra 2022 paper pytorch code website uncertainty guided policy active robotic 3d reconstruction using neural radiance field ral 2022 paper website nerfdy 3d neural scene representation visuomotor control corl 2021 paper website compnerfdyn learning multiobject dynamic compositional neural radiance field corl 2022 paper website pifo deep visual constraint neural implicit model manipulation planning visual input ral 2022 paper website redsdf regularized deep signed distance field reactive motion generation iros 2022 paper website esdf samplingfree obstacle gradient reactive planning neural radiance field icra 2022 paper fullbody visual selfmodeling robot morphology science robotics 2022 paper pytorch code website clipfields openlabel semantic navigation pretrained vlms language model arxiv 2022 paper pytorch code tutorial website renderable neural radiance map visual navigation cvpr 2023 paper nerfvins realtime neural radiance field mapbased visualinertial navigation system arxiv 2023 paper citation find repository useful please consider citing list miscdoong2022implicitnerfslampaperlist title awesomeimplicitnerfslam author doong li journal github repository url year 2022,"[('2022', 'paper'), ('2023', 'paper')]"
tynguyen/unsupervisedDeepHomographyRAL2018,Python,unsupervised deep homography fast robust homography estimation model paper presented international conference robotics automation icra 2018 brisbane australia appear proceeding ieee robotics automation letter devise unsupervised learning algorithm train deep convolutional neural network estimate planar homographies compare proposed algorithm traditional featurebased direct method well corresponding supervised learning algorithm empirical result demonstrate compared traditional approach unsupervised algorithm achieves faster inference speed maintaining comparable better accuracy robustness illumination variation addition synthetic dataset representative realworld aerial dataset unsupervised method ha superior adaptability performance compared supervised deep learning method citation use code research please cite inproceedingsnguyen2017unsupervised titleunsupervised deep homography fast robust homography estimation model authornguyen ty chen steven w shivakumar shreyas taylor camillo j kumar vijay booktitleral page year2018 organizationieee month year 2018 url installation building using requires following library program cuda 8061 required gpu support python 2712 tensorflow 121 higher opencv 340 installed using pip install opencvpython built system ubuntu 1604 tensorflow cpu tensorflow gpu work well installed virtualenv method install tensorflow tested install required python package pip required bash source virtualenvnamebinactivate pip install r requirementstxt build instruction clone repo bash git clone trained model model trained synthetic data download bash store syntheticmodels folder model model trained aerial image data bash note need format image data correct size order make use trained model please refer next section get format raw image preparing training dataset synthetic download mscoco dataset use 2014train generate training data 2014testing generate test set store rawdatapath testrawdatapath repository declared generating synthetic data generate synthetic dataset file codeutilsgensyntheticdatapy set important parameter follows bash rho 45 maximum value pertubation higher larger displacement two generated image datanumber 100000 number pair synthetic image training dataset testdatanumber 5000 number pair synthetic image test dataset imperrealgeneratedifferent synthetic image one single real image size synthetic image height 240 width 320 size crop patchsize 128 directory mscoco image rawdatapath earthbytetynguyenrawdatatrain real image used generating synthetic data testrawdatapath earthbytetynguyenrawdatatest real image used generating test synthetic data synthetic data directory datapath hometynguyenposeestimationdatasynthetic strrho idir datapath first large image one pair iprimedir datapath iprime second large image one pair since generated image stored location need txt file maintain training image test image filenamesfile ospathjoindatapath trainsynthetictxt list training image testfilenamesfile ospathjoindatapath testsynthetictxt list test image groundtruthfile ospathjoindatapath gttxt training set ground truth homography parameter delta movement ofcorners pts1file ospathjoindatapath pts1txt training set path tocorners first image testpts1file ospathjoindatapath testpts1txt test set ground truth homography parameter delta movement ofcorners testgroundtruthfile ospathjoindatapath testgttxt test path tocorners first image generate training dataset take hour generate 100000 data sample choose smaller number data debugging bash python utilsgensyntheticdatapy mode train numdata number data generate test dataset bash python utilsgensyntheticdatapy mode test debugging training testing process visualize image using either tensorboard set visual true calling python function tensorboard highly recommended since doe reduce running speed much plotting using visual flag example bash python homographycnnsyntheticpy mode train lr 5e4 losstype hloss visual true train model synthetic dataset file codehomographycnnsyntheticpy set important parameter follows bash size synthetic image pertubation range rh0 height 240 width 320 rho 45 maximum value pertubation higher larger displacement two generated image change value evaluate different level displacement patchsize 128 synthetic data directory datapath hometynguyenposeestimationdatasynthetic strrho idir datapath first large image one pair iprimedir datapath iprime second large image one pair since generated image stored location need txt file maintain training image test image filenamesfile ospathjoindatapath trainsynthetictxt list training image testfilenamesfile ospathjoindatapath testsynthetictxt list test image groundtruthfile ospathjoindatapath gttxt training set ground truth homography parameter delta movement ofcorners pts1file ospathjoindatapath pts1txt training set path tocorners first image testpts1file ospathjoindatapath testpts1txt test set ground truth homography parameter delta movement ofcorners testgroundtruthfile ospathjoindatapath testgttxt test path tocorners first image log model directory mainlogpath mediatynguyen logdir mainlogpath dockerfolderposeestimationlogs modeldir mainlogpath dockerfolderposeestimationmodels save visualization image report resultsdir mainlogpath dockerfolderposeestimationresultssyntheticreport list augmentation data augmentlist normalize normalize standardize image supervised bash python homographycnnsyntheticpy mode train lr 5e4 losstype hloss unsupervised bash python homographycnnsyntheticpy mode train lr 1e4 losstype l1loss test model synthetic dataset supervised bash python homographycnnsyntheticpy mode test lr 5e4 losstype hloss unsupervised bash python homographycnnsyntheticpy mode test lr 1e4 losstype l1loss generate aerial dataset due company privacy cannot make aerial dataset publically available however alternative reader might interested datasets quite similar supervised supervised method everything synthetic dataset use aerial image generate synthetic image train model unsupervised aerial dataset image recorded time sequence thus consider two consecutive image pair generate new pair training sample randomly cropping training sample consists pair height x width image pair corresponding crop mentioned paper original pair image first resize fullheight x fullwidth height x width crop pair resized image location yx pair original image generate imperreal training sample keeping constant romdomizing x max pertubation rho recommended resizing cropping highly dependent level displacement pair original image aerial dataset feature large displacement keep constant make large crop patchsizewidth however still border effect warping warped crop second image ha black area near edge better performance one think moving crop window largest overlapping area image centercropping bash rho 24 maximum range pertubation datanumber 10000 testdatanumber 1000 imperreal 20 generate 20 different pair image one single real image size synthetic image height 142 width 190 patchsize 128 fullheight 480 fullwidth 640 directory file rawdatapath earthbytetynguyenrealrawdatajoedatatrain real image used generating real dataset testrawdatapath earthbytetynguyenrealrawdatajoedatatest real image used generating real test dataset data directory datapath earthbytetynguyendockerfolderposeestimationdatasynthetic strrho idir datapath large image 240 x 320 iprimedir datapath iprime large image 240 x 320 fullidir datapath fulli full image size 480 x 640 fulliprimedir datapath fulliprime full image size 480 x 640 pts1file ospathjoindatapath pts1txt filenamesfile ospathjoindatapath trainrealtxt groundtruthfile ospathjoindatapath gttxt testpts1file ospathjoindatapath testpts1txt testfilenamesfile ospathjoindatapath testrealtxt real dataset ground truth file consists correspondence row file containsnumberscorr1 corr2 testgroundtruthfile ospathjoindatapath testgttxt bash python utilsgenrealdatapy mode train numdata number training data bash python utilsgenrealdatapy mode test numdata number test data train model aerial dataset file homographycnnrealpy set parameter follows bash size synthetic image pertubation range rh0 height 142 width 190 rho 24 patchsize 128 full image size used displaying fullheight 240 fullwidth 320 data directory datapath hometynguyenposeestimationdatareal strrho idir datapath large image iprimedir datapath iprime large image pts1file ospathjoindatapath pts1txt filenamesfile ospathjoindatapath trainrealtxt groundtruthfile none ground truth training fullidir datapath fulli large image fulliprimedir datapath fulliprime large image testpts1file ospathjoindatapath testpts1txt testfilenamesfile ospathjoindatapath testrealtxt correspondence test set testgroundtruthfile ospathjoindatapath testgttxt log model directory mainlogpath mediatynguyendata logdir mainlogpath dockerfolderposeestimationlogs load model could location model trained synthetic data dataset loadmodeldir mainlogpath dockerfolderposeestimationmodels save new model location finetuned model savemodeldir mainlogpath dockerfolderposeestimationmodelsrealmodels save visualization image report resultsdir mainlogpath dockerfolderposeestimationresultssyntheticreport list augmentation data augmentlist normalize supervised supervised method generating new set synthetic image using aerial dataset change datapath homographycnnsyntheticpy accordingly run bash python homographycnnsyntheticpy mode train lr 5e4 losstype hloss unsupervised bash python homographycnnrealpy mode train lr 1e4 losstype l1loss couple option training training model scratch bash python homographycnnrealpy mode train lr 1e4 losstype l1loss finetune false finetune model training synthetic dataset datasets bash python homographycnnrealpy mode train lr 1e4 losstype l1loss finetune true resume training model training aerial dataset bash python homographycnnrealpy mode train lr 1e4 losstype l1loss resume true resume training model training aerial dataset reset iteration number bash python homographycnnrealpy mode train lr 1e4 losstype l1loss resume true retrain true,"[('bash', 'python'), ('mode', 'train')]"
qiayuanliao/legged_control,C++,leggedcontrol introduction leggedcontrol nmpcwbc legged robot control stack framework based ocs2 roscontrol advantage show author best knowledge framework probably bestperforming opensource legged robot mpc control framework deploy framework a1 robot within hour thanks roscontrol interface easily use framework custom robot believe framework provide highperformance easytouse modelbased baseline legged robot community installation source code source code hosted github qiayuanliaoleggedcontrol clone leggedcontrol git clone gitgithubcomqiayuanliaoleggedcontrolgit ocs2 ocs2 huge monorepo try compile whole repo need compile ocs2leggedrobotros dependency following step supposed clone ocs2 pinocchio hppfcl described documentation ocs2 clone ocs2 git clone gitgithubcomleggedroboticsocs2git clone pinocchio git clone recursesubmodules clone hppfcl git clone recursesubmodules clone ocs2roboticassets git clone install dependency sudo apt install liburdfdomdev liboctomapdev libassimpdev compile ocs2leggedrobotros package catkin tool instead catkinmake take ten minute catkin config dcmakebuildtyperelwithdebinfo catkin build ocs2leggedrobotros ocs2selfcollisionvisualization ensure command anymal shown document build build source code leggedcontrol catkin build leggedcontrollers leggedunitreedescription build simulation run onboard computer catkin build leggedgazebo build hardware interface real robot use computer simulation need compile leggedunitreehw todo add legged prefix package name catkin build leggedunitreehw quick start set robot type environment variable robottype export robottypea1 run simulation roslaunch leggedunitreedescription emptyworldlaunch robot hardware roslaunch leggedunitreehw leggedunitreehwlaunch load controller roslaunch leggedcontrollers loadcontrollerlaunch cheaterfalse start leggedcontroller leggedcheatercontroller note allowed start leggedcheatercontroller real hardware rosservice call controllermanagerswitchcontroller startcontrollers controllersleggedcontroller stopcontrollers strictnessstartasap false timeout 00 start controller using rqtcontrollermanager gui sudo apt install rosnoeticrqtcontrollermanager rosrun rqtcontrollermanager rqtcontrollermanager set gait terminal loadcontrollerlaunch use rviz need add want display control robot cmdvel movebasesimplegoal ezgif5684a1e1e23gif note gait goal completely different separated need type stance robot lying ground four foot touching ground completely wrong since robot already stance gait targettrajectoriespublisher demonstration combine trajectory publisher gait command simple node add gamepad keyboard input different gait torso height startstop controller service framework system framework diagram shown robot torso desired velocity position goal converted state trajectory sent nmpc nmpc evaluate optimized system state input wholebody controller wbc figure joint torque according optimized state input nmpc torque set feedforward term sent robot motor controller lowgain jointspace position velocity pd command sent robot motor reduce shock foot contact better tracking performance nmpc wbc need know current robot state base orientation joint state obtained directly imu motor running loop wbc linear kalman filter1 estimate base position velocity base orientation base acceleration joint foot position measurement module main module entire control framework nmpc wbc following brief introduction nmpc nmpc part solves following optimization problem cycle formulation solving interface provided ocs2 beginsplit begincases undersetmathbf umin phimathbf xti displaystyle intt0ti lmathbf xt mathbf ut dt textst mathbf xt0 mathbf x0 hspace115em textinitial state dotmathbf xt mathbf fmathbf xt mathbf ut hspace75em textsystem flow map mathbf g1mathbf xt mathbf ut mathbf0 hspace85em textstateinput equality constraint mathbf g2mathbf xt mathbf0 hspace105em textstateonly equality constraint mathbf hmathbf xt mathbf ut geq mathbf0 hspace85em textinequality constraint endcasesendsplit framework defined system state mathbfx input mathbfu beginequation mathbfx mathbfhcomt mathbfqbt mathbfqjtt mathbfu mathbffct mathbfvjtt endequation mathbfhcom mathbbr6 collection normalized centroidal momentum mathbfqmathbfqbt mathbfqjtt generalized coordinate mathbffc mathbbr12 consists contact force four contact point ie four ground reaction force foot mathbfqj mathbfvj joint position velocity cost function simply quadratic cost tracking error state input system dynamic us centroidal dynamic following constraint friction cone motion standing foot zaxis position swinging foot satisfies gaitgenerated curve solve optimal control problem multiple shooting formulated transcribe optimal control problem nonlinear program nlp problem nlp problem solved using sequential quadratic programming sqp qp subproblem solved using hpipm details3 wbc wbc considers current moment several task defined table task equality constraint inequality constraint decision variable decision variable wbc mathbfxwbc ddotmathbfqt mathbffct mathbftautt ddotmathbfq acceleration generalized coordinate mathbftau joint torque wbc solves qp problem null space higher priority task linear constraint try minimize slacking variable inequality constraint approach consider full nonlinear rigid body dynamic ensure strict hierarchy result detailsdeploy develop a1 robot people foundation able run simulation real machine deployment within hour following show known laboratory run framework a1 object time spent table show lab successfully deploying repo real a1 feel free open pr update code got time wa stable spend time cannot represent level lab xpeng robotics unitree hybrid robotics spend timedayhours recommended use external computing device nuc run control framework author us 11th generation nuc computing frequency nmpc close 200hz costum rorbots deploying framework robot simple step follows imitate unitreehw class leggedexamplesleggedunitreeleggedunitreehw inherit leggedhw implement read write function hardware interface imitate leggedexamplesleggedunitreeleggedunitreedescription write xarco robot generate urdf file note name joint link need leggedunitreedescription referencet flayols del prete p wensing mifsud benallegue stasse experimental evaluation simple estimator humanoid robot ieeeras int conf humanoid robot pp 889895 2017 doi 101109humanoids20178246977j p sleiman f farshidian v minniti hutter unified mpc framework wholebody dynamic locomotion manipulation ieee robot autom lett volnopp 46884695 2021 doi 101109lra20213068908r grandia f jenelten yang f farshidian hutter perceptive locomotion nonlinear model predictive control submitted ieee trans robot august 2022 doi 1048550arxiv220808373c dario bellicoso c gehring j hwangbo p fankhauser hutter perceptionless terrain adaptation whole body control hierarchical optimization ieeeras international conference humanoid robot 2016 pp 558564 doi 101109humanoids20167803330,"[('git', 'clone'), ('xt', 'mathbf')]"
monperrus/crawler-user-agents,Python,crawleruseragents repository contains list http useragents used robot crawler spider single json file install direct download download crawleruseragentsjson file repository directly npm yarn crawleruseragents deployed npmjscom use using npm yarn sh npm install save crawleruseragents yarn add crawleruseragents nodejs require package get array crawler user agent j const crawler require crawleruseragents consolelogcrawlers usage pattern regular expression work outofthebox wih favorite regex library javascript regexpentrypatterntestreqheaders useragent php add slash pattern pregmatch entry pattern server python researchentry pattern ua contributing welcome addition contributed pull request pull request contain single addition specify discriminant relevant syntactic fragment example totobot mozilla5 totobot v20131212alpha1 contain pattern generic regular expression discovery date yearmonthday official url robot result valid json file forget comma item example pattern rogerbot additiondate 20140228 url instance rogerbot23 example ua license list mit license version prior nov2016 ccsa license related work wrapper library use data detect bot voightkampff ruby isbot ruby crawler clojure crawlerflagger go isbot nodejs system spotting robot crawler spider may want consider crawlerdetect php browserdetector php browscap json file,"[('json', 'file'), ('robot', 'crawler')]"
pliang279/awesome-multimodal-ml,Other,awesome multimodal machine learning paul liang pliangcscmuedu machine learning department language technology institute cmu help member multicomp lab lti cmu area paper datasets missed please let know course content workshop check comprehsensive tutorial paper foundation recent trend multimodal machine learning principle challenge open question tutorial multimodal machine learning cvpr 2022 naacl 2022 slide video new course 11877 advanced topic multimodal machine learning spring 2022 cmu primarily reading discussionbased plan post discussion probe relevant paper summarized discussion highlight every week website public course content lecture video 11777 multimodal machine learning fall 2020 cmu table content survey paper core area multimodal representation multimodal fusion multimodal alignment multimodal pretraining multimodal translation crossmodal retrieval multimodal colearning missing imperfect modality analysis multimodal model knowledge graph knowledge base intepretable learning generative learning semisupervised learning selfsupervised learning language model adversarial attack fewshot learning bias fairness human loop learning architecture multimodal transformer multimodal memory application datasets language visual qa language grounding vision language grouding navigation multimodal machine translation multiagent communication commonsense reasoning multimodal reinforcement learning multimodal dialog language audio audio visual visual imu wireless medium description video generation text affect recognition multimodal language healthcare robotics autonomous driving finance human ai interaction workshop tutorial course research paper survey paper foundation trend multimodal machine learning principle challenge open question arxiv 2023 multimodal learning transformer survey tpami 2023 trend integration vision language research survey task datasets method jair 2021 experience ground language emnlp 2020 survey reinforcement learning informed natural language ijcai 2019 multimodal machine learning survey taxonomy tpami 2019 multimodal intelligence representation learning information fusion application arxiv 2019 deep multimodal representation learning survey arxiv 2019 guest editorial image language understanding ijcv 2017 representation learning review new perspective tpami 2013 survey socially interactive robot 2003 core area multimodal representation identifiability result multimodal contrastive learning iclr 2023 code unpaired visionlanguage pretraining via crossmodal cutmix icml 2022 balanced multimodal learning via onthefly gradient modulation cvpr 2022 unsupervised voiceface representation learning crossmodal prototype contrast ijcai 2021 code towards unified foundation model jointly pretraining transformer unpaired image text arxiv 2021 flava foundational language vision alignment model arxiv 2021 transformer need multimodal multitask learning unified transformer arxiv 2021 multibench multiscale benchmark multimodal representation learning neurips 2021 code perceiver general perception iterative attention icml 2021 code learning transferable visual model natural language supervision arxiv 2021 blogblog code vinvl revisiting visual representation visionlanguage model arxiv 2021 blog code learning transferable visual model natural language supervision arxiv 2020 blog code 12in1 multitask vision language representation learning cvpr 2020 code watching world go representation learning unlabeled video arxiv 2020 learning video representation using contrastive bidirectional transformer arxiv 2019 visual conceptmetaconcept learning neurips 2019 code omninet unified architecture multimodal multitask learning arxiv 2019 code learning representation maximizing mutual information across view arxiv 2019 code vico word embeddings visual cooccurrences iccv 2019 code unified visualsemantic embeddings bridging vision language structured meaning representation cvpr 2019 multitask learning hierarchical visionlanguage representation cvpr 2019 learning factorized multimodal representation iclr 2019 code probabilistic framework multiview feature learning manytomany association via neural network icml 2018 neural network crossmodal mapping really bridge modality acl 2018 learning robust visualsemantic embeddings iccv 2017 deep multimodal representation learning temporal data cvpr 2017 image worth thousand word finegrain semantic difference visual linguistic representation coling 2016 combining language vision multimodal skipgram model naacl 2015 deep fragment embeddings bidirectional image sentence mapping nip 2014 multimodal learning deep boltzmann machine jmlr 2014 learning grounded meaning representation autoencoders acl 2014 devise deep visualsemantic embedding model neurips 2013 multimodal deep learning icml 2011 multimodal fusion robust contrastive learning noisy view arxiv 2022 cooperative learning multiview analysis arxiv 2022 make multimodal learning better single provably neurips 2021 efficient multimodal fusion diversity analysis acmmm 2021 attention bottleneck multimodal fusion neurips 2021 vmloc variational fusion learningbased multimodal camera localization aaai 2021 trusted multiview classification iclr 2021 code deephoseq deep higherorder sequence fusion multimodal sentiment analysis icdm 2020 removing bias multimodal classifier regularization maximizing functional entropy neurips 2020 code deep multimodal fusion channel exchanging neurips 2020 code make training multimodal classification network hard cvpr 2020 dynamic fusion multimodal data arxiv 2019 deepcu integrating common unique latent information multimodal sentiment analysis ijcai 2019 code deep multimodal multilinear fusion highorder polynomial pooling neurips 2019 xflow crossmodal deep neural network audiovisual classification ieee tnnls 2019 code mfa multimodal fusion architecture search cvpr 2019 neurosymbolic concept learner interpreting scene word sentence natural supervision iclr 2019 code unifying merging welltrained deep neural network inference stage ijcai 2018 code efficient lowrank multimodal fusion modalityspecific factor acl 2018 code memory fusion network multiview sequential learning aaai 2018 code tensor fusion network multimodal sentiment analysis emnlp 2017 code jointly modeling deep video compositional text bridge vision language unified framework aaai 2015 coregularized approach semisupervised learning multiple view icml 2005 multimodal alignment reconsidering representation alignment multiview clustering cvpr 2021 code comir contrastive multimodal image representation registration neurips 2020 code multimodal transformer unaligned multimodal language sequence acl 2019 code temporal cycleconsistency learning cvpr 2019 code see hear read deep aligned representation arxiv 2017 deep multiview representation learning icml 2015 unsupervised alignment natural language instruction video segment aaai 2014 multimodal alignment video mm 2014 deep canonical correlation analysis icml 2013 code multimodal pretraining align fuse vision language representation learning momentum distillation neurips 2021 spotlight code le clipbert videoandlanguage learning via sparse sampling cvpr 2021 code transformer need multimodal multitask learning unified transformer arxiv 2021 largescale adversarial training visionandlanguage representation learning neurips 2020 code vokenization improving language understanding contextualized visualgrounded supervision emnlp 2020 code integrating multimodal information large pretrained transformer acl 2020 vlbert pretraining generic visuallinguistic representation arxiv 2019 code visualbert simple performant baseline vision language arxiv 2019 code vilbert pretraining taskagnostic visiolinguistic representation visionandlanguage task neurips 2019 code unicodervl universal encoder vision language crossmodal pretraining arxiv 2019 lxmert learning crossmodality encoder representation transformer emnlp 2019 code videobert joint model video language representation learning iccv 2019 multimodal translation zeroshot texttoimage generation icml 2021 code translatetorecognize network rgbd scene recognition cvpr 2019 code language2pose natural language grounded pose forecasting 3dv 2019 code reconstructing face voice neurips 2019 code speech2face learning face behind voice cvpr 2019 code found translation learning robust joint representation cyclic translation modality aaai 2019 code natural tt synthesis conditioning wavenet mel spectrogram prediction icassp 2018 code crossmodal retrieval learning noisy correspondence crossmodal matching neurips 2021 code mural multimodal multitask retrieval across language arxiv 2021 selfsupervised learning web data multimodal retrieval arxiv 2019 look imagine match improving textualvisual crossmodal retrieval generative model cvpr 2018 scenecentric v objectcentric imagetext crossmodal retrieval reproducibility study ecir 2023 multimodal colearning scaling visual visionlanguage representation learning noisy text supervision icml 2021 multimodal colearning challenge application datasets recent advance future direction arxiv 2021 vokenization improving language understanding via contextualized visuallygrounded supervision emnlp 2020 foundation multimodal colearning information fusion 2020 missing imperfect modality variational information bottleneck approach multiomics data integration aistats 2021 code smil multimodal learning severely missing modality aaai 2021 factorized inference deep markov model incomplete multimodal time series arxiv 2019 learning representation imperfect time series data via tensor rank regularization acl 2019 multimodal deep learning robust rgbd object recognition iros 2015 analysis multimodal model m2lens visualizing explaining multimodal model sentiment analysis ieee tvcg 2022 decoupling role data attention loss multimodal transformer tacl 2021 doe multimodal model learn crossmodal interaction harder tell might think emnlp 2020 blindfold baseline embodied qa nip 2018 visuallygrounded interaction language workshop analyzing behavior visual question answering model emnlp 2016 knowledge graph knowledge base mmkg multimodal knowledge graph eswc 2019 answering visualrelational query webextracted knowledge graph akbc 2019 embedding multimodal relational data knowledge base completion emnlp 2018 multimodal translationbased approach knowledge graph representation learning sem 2018 code orderembeddings image language iclr 2016 code building largescale multimodal knowledge base system answering visual query arxiv 2015 intepretable learning multimodal explanation predicting counterfactuality video cvpr 2019 multimodal explanation justifying decision pointing evidence cvpr 2018 code explanation make vqa model predictable human emnlp 2018 towards transparent ai system interpreting visual question answering model icml workshop visualization deep learning 2016 generative learning mmvae enhancing generative quality multimodal vaes without compromise iclr 2023 code limitation multimodal vaes iclr 2022 code generalized multimodal elbo iclr 2021 code multimodal generative learning utilizing jensenshannondivergence neurips 2020 code selfsupervised disentanglement modalityspecific shared factor improves multimodal generative model gcpr 2020 code variational mixtureofexperts autoencodersfor multimodal deep generative model neurips 2019 code fewshot videotovideo synthesis neurips 2019 code multimodal generative model scalable weaklysupervised learning neurips 2018 code1 code2 multientity variational autoencoder neurips 2017 semisupervised learning semisupervised visionlanguage mapping via variational learning icra 2017 semisupervised multimodal hashing arxiv 2017 semisupervised multimodal deep learning rgbd object recognition ijcai 2016 multimodal semisupervised learning image classification cvpr 2010 selfsupervised learning dab domainagnostic benchmark selfsupervised learning neurips 2021 datasets benchmark track code selfsupervised learning crossmodal audiovideo clustering neurips 2020 code selfsupervised multimodal versatile network neurips 2020 code labelling unlabelled video scratch multimodal selfsupervision neurips 2020 code selfsupervised learning visual feature embedding image text topic space cvpr 2017 multimodal dynamic selfsupervised learning perceptual motor system 2016 language model neural language modeling visual feature arxiv 2019 learning multimodal word representation grounded visual context aaai 2018 visual word2vec visw2v learning visually grounded word embeddings using abstract scene cvpr 2016 unifying visualsemantic embeddings multimodal neural language model icml 2014 code adversarial attack attend attack attention guided adversarial attack visual question answering model neurips workshop visually grounded interaction language 2018 attacking visual language grounding adversarial example case study neural image captioning acl 2018 code fooling vision language model despite localization attention mechanism cvpr 2018 fewshot learning language network conditional parameter adaptation natural language description acl 2020 shaping visual representation language fewshot classification acl 2020 zeroshot learning good bad ugly cvpr 2017 zeroshot learning crossmodal transfer nip 2013 bias fairness worst world bias compound pretrained visionandlanguage model arxiv 2021 towards debiasing sentence representation acl 2020 code faircvtest demo understanding bias multimodal learning testbed fair automatic recruitment icmi 2020 code model card model reporting facct 2019 black criminal caucasian police detecting removing multiclass bias word embeddings naacl 2019 code gender shade intersectional accuracy disparity commercial gender classification facct 2018 datasheets datasets arxiv 2018 man computer programmer woman homemaker debiasing word embeddings neurips 2016 human loop learning human loop dialogue system neurips 2020 workshop human machine intheloop evaluation learning strategy neurips 2020 workshop humancentric dialog training via offline reinforcement learning emnlp 2020 code humanintheloop machine learning intelligent multimodal interface icml 2017 workshop architecture multimodal transformer pretrained transformer universal computation engine aaai 2022 perceiver general perception iterative attention icml 2021 flava foundational language vision alignment model arxiv 2021 polyvit cotraining vision transformer image video audio arxiv 2021 vatt transformer multimodal selfsupervised learning raw video audio text neurips 2021 code parameter efficient multimodal transformer video representation learning iclr 2021 code multimodal memory multimodal transformer variablelength memory visionandlanguage navigation arxiv 2021 history aware multimodal transformer visionandlanguage navigation neurips 2021 code episodic memory lifelong language learning neurips 2019 icon interactive conversational memory network multimodal emotion detection emnlp 2018 multimodal memory modelling video captioning cvpr 2018 dynamic memory network visual textual question answering icml 2016 application datasets language visual qa tag boosting textvqa via textaware visual questionanswer generation arxiv 2022 code learning answer question dynamic audiovisual scenario cvpr 2022 sutdtrafficqa question answering benchmark efficient network video reasoning traffic event cvpr 2021 code multimodalqa complex question answering text table image iclr 2021 manymodalqa modality disambiguation qa diverse input aaai 2020 code iterative answer prediction pointeraugmented multimodal transformer textvqa cvpr 2020 interactive language learning question answering emnlp 2019 code fusion detected object text visual question answering arxiv 2019 rubi reducing unimodal bias visual question answering neurips 2019 code gqa new dataset realworld visual reasoning compositional question answering cvpr 2019 code okvqa visual question answering benchmark requiring external knowledge cvpr 2019 code murel multimodal relational reasoning visual question answering cvpr 2019 code socialiq question answering benchmark artificial social intelligence cvpr 2019 code probabilistic neuralsymbolic model interpretable visual question answering icml 2019 code learning count object natural image visual question answering iclr 2018 code overcoming language prior visual question answering adversarial regularization neurips 2018 neuralsymbolic vqa disentangling reasoning vision language understanding neurips 2018 code recipeqa challenge dataset multimodal comprehension cooking recipe emnlp 2018 code tvqa localized compositional video question answering emnlp 2018 code bottomup topdown attention image captioning visual question answering cvpr 2018 code assume look answer overcoming prior visual question answering cvpr 2018 code stacked latent attention multimodal reasoning cvpr 2018 learning reason endtoend module network visual question answering iccv 2017 code clevr diagnostic dataset compositional language elementary visual reasoning cvpr 2017 code dataset generation smarter sixth grader textbook question answering multimodal machine comprehension cvpr 2017 code multimodal compact bilinear pooling visual question answering visual grounding emnlp 2016 code movieqa understanding story movie questionanswering cvpr 2016 code vqa visual question answering iccv 2015 code language grounding vision core challenge embodied visionlanguage planning arxiv 2021 marvl multicultural reasoning vision language emnlp 2021 code grounding grounding nlp acl 2021 hateful meme challenge detecting hate speech multimodal meme neurips 2020 code doe bert vision look acl 2020 visual grounding video unsupervised word translation cvpr 2020 code violin largescale dataset videoandlanguage inference cvpr 2020 code grounded video description cvpr 2019 show control tell framework generating controllable grounded caption cvpr 2019 multilevel language vision integration texttoclip retrieval aaai 2019 code binary image selection bison interpretable evaluation visual grounding arxiv 2019 code finding weaklysupervised referenceaware visual grounding instructional video cvpr 2018 scan learning hierarchical compositional visual concept iclr 2018 visual coreference resolution visual dialog using neural module network eccv 2018 code gatedattention architecture taskoriented language grounding aaai 2018 code using syntax ground referring expression natural image aaai 2018 code grounding language acquisition training semantic parser using captioned video acl 2018 interpretable globally optimal prediction textual grounding using image concept neurips 2017 localizing moment video natural language iccv 2017 talking texttoimage coreference cvpr 2014 grounded language learning video described sentence acl 2013 grounded compositional semantics finding describing image sentence tacl 2013 language grouding navigation alfworld aligning text embodied environment interactive learning iclr 2021 code hierarchical crossmodal agent robotics visionandlanguage navigation icra 2021 code video project page improving visionandlanguage navigation imagetext pair web eccv 2020 towards learning generic agent visionandlanguage navigation via pretraining cvpr 2020 code videonavqa bridging gap visual embodied question answering bmvc 2019 code visionanddialog navigation arxiv 2019 code hierarchical decision making generating following natural language instruction arxiv 2019 code stay path instruction fidelity visionandlanguage navigation acl 2019 looking grounding multiple modality visionandlanguage navigation acl 2019 touchdown natural language navigation spatial reasoning visual street environment cvpr 2019 code reinforced crossmodal matching selfsupervised imitation learning visionlanguage navigation cvpr 2019 regretful navigation agent visionandlanguage navigation cvpr 2019 code tactical rewind selfcorrection via backtracking visionandlanguage navigation cvpr 2019 code multimodal discriminative model visionandlanguage navigation naacl splurobonlp workshop 2019 selfmonitoring navigation agent via auxiliary progress estimation iclr 2019 code language goal inverse reinforcement learning visionbased instruction following iclr 2019 read watch move reinforcement learning temporally grounding natural language description video aaai 2019 learning navigate unseen environment back translation environmental dropout naacl 2019 code attention based natural language grounding navigating virtual environment ieee wacv 2019 mapping instruction action 3d environment visual goal prediction emnlp 2018 code visionandlanguage navigation interpreting visuallygrounded navigation instruction real environment cvpr 2018 code embodied question answering cvpr 2018 code look leap bridging modelfree modelbased reinforcement learning plannedahead visionandlanguage navigation eccv 2018 multimodal machine translation unsupervised multimodal neural machine translation pseudo visual pivoting acl 2020 multimodal transformer multimodal machine translation acl 2020 neural machine translation universal visual representation iclr 2020 code visual agreement regularized training multimodal machine translation aaai 2020 vatex largescale highquality multilingual dataset videoandlanguage research iccv 2019 code latent variable model multimodal translation acl 2019 distilling translation visual awareness acl 2019 probing need visual context multimodal machine translation naacl 2019 emergent translation multiagent communication iclr 2018 zeroresource neural machine translation multiagent communication game aaai 2018 learning translation via image massively multilingual image dataset acl 2018 visual attention grounding neural model multimodal machine translation emnlp 2018 adversarial evaluation multimodal machine translation emnlp 2018 doublyattentive decoder multimodal neural machine translation acl 2017 code empirical study effectiveness image multimodal neural machine translation emnlp 2017 incorporating global visual feature attentionbased neural machine translation emnlp 2017 code multimodal pivot image caption translation acl 2016 multi30k multilingual englishgerman image description acl workshop language vision 2016 code doe multimodality help human machine translation image captioning acl wmt 2016 multiagent communication multiagent communication meet natural language synergy functional structural language learning acl 2020 emergence compositional language deep generational transmission icml 2019 pitfall measuring emergent communication aamas 2019 code emergent translation multiagent communication iclr 2018 code emergent communication multimodal multistep referential game iclr 2018 code emergence linguistic communication referential game symbolic pixel input iclr 2018 emergent communication negotiation iclr 2018 code emergence grounded compositional language multiagent population aaai 2018 emergence language multiagent game learning communicate sequence symbol neurips 2017 natural language doe emerge naturally multiagent dialog emnlp 2017 code1 code2 learning cooperative visual dialog agent deep reinforcement learning iccv 2017 code multiagent cooperation emergence natural language iclr 2017 learning communicate deep multiagent reinforcement learning nip 2016 learning multiagent communication backpropagation nip 2016 emergence compositional structure perceptually grounded language game ai 2005 commonsense reasoning adventure flatland perceiving social interaction physical dynamic cogsci 2020 logical model supporting social commonsense knowledge acquisition arxiv 2019 heterogeneous graph learning visual commonsense reasoning neurips 2019 socialiqa commonsense reasoning social interaction arxiv 2019 recognition cognition visual commonsense reasoning cvpr 2019 code commonsenseqa question answering challenge targeting commonsense knowledge naacl 2019 multimodal reinforcement learning minihack planet sandbox openended reinforcement learning research neurips 2021 code imitating interactive intelligence arxiv 2020 grounded language learning fast slow iclr 2021 rtfm generalising novel environment dynamic via reading iclr 2020 code embodied multimodal multitask learning ijcai 2020 learning speak act fantasy text adventure game arxiv 2019 code language abstraction hierarchical deep reinforcement learning neurips 2019 hierarchical decision making generating following natural language instruction neurips 2019 code habitat platform embodied ai research iccv 2019 code multimodal hierarchical reinforcement learning policy taskoriented visual dialog sigdial 2018 mapping instruction visual observation action reinforcement learning emnlp 2017 reinforcement learning mapping instruction action acl 2009 multimodal dialog two causal principle improving visual dialog cvpr 2020 meld multimodal multiparty dataset emotion recognition conversation acl 2019 code clevrdialog diagnostic dataset multiround reasoning visual dialog naacl 2019 code talk walk navigating new york city grounded dialogue arxiv 2018 dialogbased interactive image retrieval neurips 2018 code towards building large scale multimodal domainaware conversation system arxiv 2017 code visual dialog cvpr 2017 code language audio lattice transformer speech translation acl 2019 exploring phonemelevel speech representation endtoend speech translation acl 2019 audio caption listen tell icassp 2019 audiolinguistic embeddings spoken sentence icassp 2019 semisupervised almostunsupervised speech recognition verylow resource jointly learning phonetic structure audio text embeddings arxiv 2019 audio semantics approach endtoend spoken language understanding arxiv 2018 natural tt synthesis conditioning wavenet mel spectrogram prediction icassp 2018 code deep voicescaling texttospeech convolutional sequence learning iclr 2018 deep voicemultispeaker neural texttospeech neurips 2017 deep voice realtime neural texttospeech icml 2017 texttospeech synthesis 2009 audio visual music gesture visual sound separation cvpr 2020 cocompressing unifying deep cnn model efficient human face speaker recognition cvprw 2019 learning individual style conversational gesture cvpr 2019 code capture learning synthesis 3d speaking style cvpr 2019 code disjoint mapping network crossmodal matching voice face iclr 2019 wav2pix speechconditioned face generation using generative adversarial network icassp 2019 code learning affective correspondence music image icassp 2019 dataset jointly discovering visual object spoken word raw sensory input eccv 2018 code seeing voice hearing face crossmodal biometric matching cvpr 2018 code learning separate object sound watching unlabeled video cvpr 2018 deep audiovisual speech recognition ieee tpami 2018 look listen learn iccv 2017 unsupervised learning spoken language visual context neurips 2016 soundnet learning sound representation unlabeled video neurips 2016 code visual imu wireless vifi associating moving subject across vision wireless sensor ipsn 2022 code medium description towards unsupervised image captioning shared multimodal embeddings iccv 2019 video relationship reasoning using gated spatiotemporal energy graph cvpr 2019 code joint event detection description continuous video stream wacvw 2019 learning compose reason language tree structure visual grounding tpami 2019 neural baby talk cvpr 2018 code grounding referring expression image variational context cvpr 2018 video captioning via hierarchical reinforcement learning cvpr 2018 charadesego largescale dataset paired third first person video cvpr 2018 code neural motif scene graph parsing global context cvpr 2018 code metric perfect adversarial reward learning visual storytelling acl 2018 generating description grounded coreferenced people cvpr 2017 densecap fully convolutional localization network dense captioning cvpr 2016 review network caption generation neurips 2016 code hollywood home crowdsourcing data collection activity understanding eccv 2016 code show tell lesson learned 2015 mscoco image captioning challenge tpami 2016 code show attend tell neural image caption generation visual attention icml 2015 code deep visualsemantic alignment generating image description cvpr 2015 code show tell neural image caption generator cvpr 2015 code dataset movie description cvpr 2015 code whats cookin interpreting cooking video using text speech vision naacl 2015 code microsoft coco common object context eccv 2014 code video generation text image generation scene graph cvpr 2018 learning color language naacl 2018 generative adversarial text image synthesis icml 2016 affect recognition multimodal language endtoend facial physiological model affective computing application arxiv 2019 affective computing largescale heterogeneous multimedia data survey acm tomm 2019 towards multimodal sarcasm detection obviouslyperfect paper acl 2019 code multimodal approach affective computing embc 2018 multimodal language analysis recurrent multistage fusion emnlp 2018 multimodal language analysis wild cmumosei dataset interpretable dynamic fusion graph acl 2018 code multiattention recurrent network human communication comprehension aaai 2018 code endtoend multimodal emotion recognition using deep neural network arxiv 2017 amhuse multimodal dataset humor sensing icmi 2017 code decoding childrens social behavior cvpr 2013 code collecting large richly annotated facialexpression database movie ieee multimedia 2012 code interactive emotional dyadic motion capture iemocap database 2008 code healthcare multimodal coattention transformer survival prediction gigapixel whole slide image iccv 2021 petguided attention network segmentation lung tumor petct image gcpr 2020 code pathomic fusion integrated framework fusing histopathology genomic feature cancer diagnosis prognosis ieee tmi 2020 leveraging medical visual question answering supporting fact arxiv 2019 unsupervised multimodal representation learning across medical image report ml4h 2018 multimodal medical image retrieval based latent topic modeling ml4h 2018 improving hospital mortality prediction medical named entity multimodal learning ml4h 2018 knowledgedriven generative subspace modeling multiview dependency medical data ml4h 2018 multimodal depression detection fusion analysis paralinguistic head pose eye gaze behavior tac 2018 learning joint representation heterogeneous temporal event clinical endpoint prediction aaai 2018 understanding coagulopathy using multiview data presence subcohorts hierarchical subspace approach mlhc 2017 machine learning multimodal medical imaging 2017 crossmodal recurrent model weight objective prediction multimodal timeseries data ml4h 2017 simsensei kiosk virtual human interviewer healthcare decision support aamas 2014 dyadic behavior analysis depression severity assessment interview icmi 2014 audiovisual behavior descriptor depression assessment icmi 2013 robotics detect reject correct crossmodal compensation corrupted sensor icra 2021 multimodal sensor fusion differentiable filter iros 2020 concept2robot learning manipulation concept instruction human demonstration r 2020 see feel act hierarchical learning complex manipulation skill multisensory fusion science robotics 2019 early fusion goal directed robotic vision iros 2019 simultaneously learning vision featurebased control policy realworld ballinacup r 2019 probabilistic multimodal modeling humanrobot interaction task r 2019 making sense vision touch selfsupervised learning multimodal representation contactrich task icra 2019 evolving multimodal robot behavior via many stepping stone combinatorial multiobjective evolutionary algorithm arxiv 2018 multimodal predicate identification using dynamically learned robot controller ijcai 2018 multimodal probabilistic modelbased planning humanrobot interaction arxiv 2017 perching vertical climbing design multimodal robot icra 2014 multimodal scene understanding robotic grasping 2011 strategy multimodal scene exploration iros 2010 autonomous driving deep multimodal object detection semantic segmentation autonomous driving datasets method challenge ieee tit 2020 website nuscenes multimodal dataset autonomous driving cvpr 2020 dataset multimodal endtoend autonomous driving arxiv 2020 finance multimodal eventdriven lstm model stock prediction using online news tkde 2020 multimodal deep learning finance integrating forecasting international stock market 2019 multimodal deep learning shortterm stock volatility prediction 2018 human ai interaction multimodal human computer interaction survey hci 2005 affective multimodal humancomputer interaction multimedia 2005 building multimodal humanrobot interface ieee intelligent system 2001 multimodal content generation nonlinear consumption video using sequence personalized multimodal fragment iui 2021 generating needadapted multimodal fragment iui 2020 workshop multimodal kdd 2023 international workshop multimodal learning kdd 2023 multimodal representation learning perk pitfall iclr 2023 social intelligence human robot icra 2021 lantern 2021 third workshop beyond vision language integrating realworld knowledge eacl 2021 multimodal workshop cvpr 2021 multimodal learning application sight sound visual question answering embodied ai language 3d scene multimodal workshop naacl 2021 maiworkshop alvr vigil iclr 2021 workshop embodied multimodal learning neurips 2020 workshop wordplay language meet game acl 2020 workshop multimodal language proceeding advance language vision research multimodal workshop eccv 2020 eval camp mva multimodal video reasoning analyzing competition iccv 2021 grand challenge workshop human multimodal language acl 2020 acl 2018 advance language vision research acl 2020 visually grounded interaction language neurips 2019 neurips 2018 emergent communication towards natural language neurips 2019 workshop multimodal understanding learning embodied application acm multimedia 2019 beyond vision language integrating realworld knowledge emnlp 2019 how2 challenge new task vision language icml 2019 visual question answering dialog cvpr 2019 cvpr 2017 multimodal learning video cvpr 2019 multimodal learning application workshop cvpr 2019 eccv 2018 habitat embodied agent challenge workshop cvpr 2019 closing loop vision language lsmd challenge iccv 2019 multimodal video analysis moment time challenge iccv 2019 crossmodal learning real world iccv 2019 spatial language understanding grounded communication robotics naacl 2019 youtube8m largescale video understanding iccv 2019 eccv 2018 cvpr 2017 language vision workshop cvpr 2019 cvpr 2018 cvpr 2017 cvpr 2015 sight sound cvpr 2019 cvpr 2018 large scale movie description challenge lsmdc iccv 2019 iccv 2017 wordplay reinforcement language learning textbased game neurips 2018 interpretability robustness audio speech language neurips 2018 multimodal robot perception icra 2018 wmt18 shared task multimodal machine translation emnlp 2018 shortcoming vision language eccv 2018 computational approach subjectivity sentiment social medium analysis emnlp 2018 emnlp 2017 naaclhlt 2016 emnlp 2015 acl 2014 naaclhlt 2013 visual understanding across modality cvpr 2017 international workshop computer vision audiovisual medium iccv 2017 language grounding robotics acl 2017 computer vision audiovisual medium eccv 2016 language vision acl 2016 emnlp 2015 tutorial tutorial multimodal machine learning icml 2023 cvpr 2022 naacl 2022 recent advance visionandlanguage research cvpr 2020 connecting language vision action acl 2018 machine learning clinician advance multimodal health data mlhc 2018 multimodal machine learning acl 2017 cvpr 2016 icmi 2016 vision language bridging vision language deep learning icip 2017 course cmu 11777 multimodal machine learning cmu 11877 advanced topic multimodal machine learning cmu 05618 humanai interaction cmu 11777 advanced multimodal machine learning stanford cs422 interactive embodied learning cmu 16785 integrated intelligence robotics vision language planning cmu 10808 language grounding vision control cmu 11775 largescale multimedia analysis mit 6882 embodied intelligence georgia tech c 8803 vision language virginia tech c 6501004 vision language,"[('2019', 'code'), ('2018', 'code')]"
miccol/ROS-Behavior-Tree,C++,news href width200 alignleft url src book behavior tree robotics ai published crc press taylor francis available purchase ebook hardcover crc press store amazon preprint version free available tutorial available note yarp version library ha gui following alt tag rosbehaviortree license mit version behavior tree library leaf node user defined either c python read user manual information reference please refer following paper using library behavior tree modularize hybrid control system generalize sequential behavior composition subsumption architecture decision tree michele colledanchise petter ogren ieee transaction robotics 2017 bibtex entry articletro17colledanchise authorm colledanchise p ogren journalieee transaction robotics titlehow behavior tree modularize hybrid control system generalize sequential behavior composition subsumption architecture decision tree year2017 volume33 number2 pages372389 keywordscomputer architecturedecision treeshigh definition videorobot controlswitchesbehavior tree btsdecision treesfinite state machine fsmshybrid dynamical system hdssmodularitysequential behavior compositionssubsumption architecture doi101109tro20162633567 issn15523098 monthapril info containspackages behaviortreecore behaviortreeleaves behaviortreecore contains core bt source code including tree leaf node behaviortreeleaves contains action condition specification bt leaf node running external node user manual available project folder btusermanualpdf build status hydro indigo jade kinetic release copyright notice permission notice shall included copy substantial portion software software provided without warranty kind express implied including limited warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arising connection software use dealing software,"[('behavior', 'tree'), ('leaf', 'node')]"
shekit/peeqo-robot,Other,peeqo thank making highest second highest voted diy project everr reddit check video hardware separated hardware element seperate repo find setting pi detailed guide getting pi running setup sd card pi download raspbian jessie pixel kernel version 44 release date 11 01 2017 latest version version january 2017 latest version unzip file mac osx ha problem unzipping file unzip 4gb go terminal unzip file command tar xzvf pathtozipfile download etcher resinio download sdformatter clean format sd cardnot quick clean sometimes sd card larger 32gb may work pi pi red led green led blinking mean cannot read sd card transfer unzipped img file sd card using etcher etcherio plug sd card pi boot connect wifi plug ethernet cable initial setup go menu preference raspberry pi config set keyboard u set locale locale expand filesystem reboot run command terminal update raspbian recent bug fix sudo aptget update sudo apt update sudo aptget distupgrade sudo apt fullupgrade enable ssh i2c sudo raspiconfig interfacing option ssh enabled interfacing option i2c enabled enable overclocking uncomment bootconfigtxt armfreq800 sudo apt install apttransport install python pillow pip install pillow make sure using python 27 30 update node raspbian ship node v01029 work update remove old version node sudo aptget remove nodered flag say yes instead requiring user input sudo aptget remove nodejs nodejslegacy sudo aptget remove npm install latest node version install versionsudo curl sl sudo e bash sudo aptget install nodejs check node npm version node v output v61010 higher npm v output 31010 higher install electron install electron globally currently v162 sudo npm install g electron doesnt work rm rf electron mkdir electron chmod 777 electron sudo rm usrbinelectron sudo npm g install electron clone repo cd git clone start app bootstartup change directory configautostart may need create directory exist add edit desktop file name inside directory sudo nano peeqodesktop edit file desktop entry typeapplication execlaunchsh create launcher script root directory sudo nano launchsh sudo chmod x launchsh edit launch script binbash cd pathtoelectronapp directory exists pi sudo electron mainjs setup mic plug sound card usb plug speaker mic soundcard arecord l aplay l see number device whether 012 edit alsaconf might change toordepending whether camera plugged sudo nano usrsharealsaalsaconf defaultsctlcarddefaultsctlcarddefaultspcmcarddefaultspcmcarddefaultspcmdevicedefaultspcmdeviceedit aliasesconf sudo nano libmodprobedaliasesconf comment option override previous change startup option sndusbaudio index2 comment may causing error dont see help check order module load cat procasoundmodules edit asoundrc nano asoundrc pcmdefault type asym playbackpcm type plug slavepcm hw10 first number number usb device capturepcm type plug slavepcm hw10 mic usb number maybeif camera included check work instead worked one pi running pixelpcmdefault type plug slave pcm hw10 ctldefault type hw card8 dont use plug get following error arecordarecord setparams1233 sample format non available available format s16le setup bluetooth hcitool grep ver make sure higher 5xx stop bluetooth daemon bluetoothd sudo systemctl stop bluetooth sudo systemctl status bluetooth show status quitting sudo systemctl disable bluetooth persist reboot power bluetooth adapter sudo hciconfig hci0 install necessary library sudo aptget install bluetooth bluez libbluetoothdev libudevdev allow run without rootsudo sudo aptget install libcap2bin sudo setcap capnetraweip eval readlink f electron grant electron capnetraw priveleges startstop ble advertising working right installing app bleno remove mouse cursor prevent screen going sudo nano etclightdmlightdmconf uncomment line saying xservercommandx write command xservercommandx nocursor sdpms manga screen setting sudo nano bootconfigtxt hdmiforcehotplug1 already confighdmiboost4 overscanleft0 overscanright0 overscantop0 overscanbottom0 disableoverscan1 displayrotate1 hdmicvt480 800 60hdmigroup2 hdmimode87 hdmidrive2 increase usb current sudo nano bootconfigtxt maxusbcurrent1 run app cd pathtofolderelectron sudo electron mainjs step ahead yes still work done keep chipping away contributionsfeedback welcome let make peeqo best community built robot ever,"[('sudo', 'aptget'), ('sudo', 'nano')]"
BerkeleyAutomation/gqcnn,Python,note python 2x support ha officially dropped berkeley autolab gqcnn package href img altbuild status src href img altrelease src href img altsoftware license src img altpythonversions src package overview gqcnn python package training analysis grasp quality convolutional neural network gqcnns part ongoing dexteritynetwork dexnet project created maintained autolab uc berkeley installation usage please see doc installation usage instruction citation use part code publication please cite appropriate dexnet publication,"[('href', 'img'), ('src', 'href')]"
Derek-TH-Wang/quadruped_ctrl,C++,quadrupedrobot mit mini cheetah simulation pybullet mit mini cheetah use customized simulator lcm framework popular way robot development extract algorithm simulation using pybullet simple deploy system different custom robot plantform easy learn algorithm system requirement ubuntu 1804 melodic dependency use logitech gamepad control robot git clone msg rospack rviz plugin build cd workspace catkin make source develsetupbash install python dependency bash pip3 install r requirementstxt terrain modify configquadrupedctrlcinfigyamlterrain deploy different terrain four terrain supported simulator example plane stair random1 random2 racetrack running run gamepad node control robot roslaunch gamepadctrl gamepadctrllaunch run controller simulator roslaunch quadrupedctrl quadrupedctrllaunch switch camera camera set true false configquadrupedctrlconfigyaml launch rviz see point cloud roslaunch quadrupedctrl visionlaunch also switch gait type rosservice call gaittype cmdgait type 0trot 1bunding 2pronking 3random 4standing 5trotrunning 6random2 7galloping 8pacing 9trot as10walking 11walking2,"[('mit', 'mini'), ('mini', 'cheetah')]"
caochao39/aerial_navigation_development_environment,C++,repository meant leveraging system development robot deployment autonomous aerial navigation integrating gazebo airsim simulator containing autonomous navigation module collision avoidance waypoint following manual flight user develop autonomous navigation system later port system onto real flying robot deployment video showing functionality repository available repository ha tested 18kg drone 10kg drone flying high speed cluttered environment completely unknown priori unlike many existing aerial system relying visual fiducials detecting narrow passage andor external motion tracking system acquiring state estimation system use onboard range sensor data alone compute free space guide vehicle free space safely processing onboard repository meant used developing aerial navigation system realworld application eg survey patrol scout delivery support internal development aerial exploration repository optimized lightweight processing 18kg drone equipped single raspberry picomputer 18ghz arm processor repository consumes 20 single core computer planning time 01ms repository adaptable aerial vehicle carry limited computational resource demonstrate fast response collision avoidance prerequisite repository support waypoint flight flying waypoint collision avoidance smart joystick flight teleoperation collision avoidance manual flight standard teleoperation try smart joystick flight manual flight system requires ps34 xbox controller waypoint flight run without controller ps34 xbox controller usb bluetooth interface would work box using xbox wireless usb adapter please install xow one ha tested easysmx 24g wireless controller controller different mode make sure controller right mode usually factory default mode powered using controller image two led top center button lit holding center button second change mode repository ha tested ubuntu 1804 melodic ubuntu 2004 noetic install dependency command line sudo apt update sudo apt install libusbdev clone opensource repository git clone terminal go folder compile cd aerialnavigationdevelopmentenvironment catkinmake unzip pregenerated motion primitive unzip srclocalplannerpathspathfileszip srclocalplannerpaths run script download environment model 150mb may take minute script doe start download user download environment model unzip file srcvehiclesimulatormeshes srcvehiclesimulatormeshdownloadenvironmentssh source workspace launch joystick driver source develsetupsh roslaunch ps3joy ps3launch another terminal rostopic echo joy press button controller joystick message display terminal quick start gazebo simulator terminal launch system command line roslaunch vehiclesimulator systemgazebolaunch wait gazebo initialize second following scene show rviz user try smart joystick flight using right joystick control flight left joystick adjust altitude flying forward try manual flight hold manualflight button controller time operate joystick modeconvention right joystick roll pitch left joystick yaw altitude note realworld flight manual flight instant repositioning vehicle specifically changing heading locally adjusting 3dof position smart joystick flight continuous flight collision avoidance keep vehicle safe user want change heading middle flight example please switch manual flight try waypoint flight send waypoint clicking waypoint button rviz clicking point set waypoint vehicle navigate waypoint avoiding obstacle along way note waypoint reachable vicinity vehicle alternatively user run node send series waypoints another terminal go folder source workspace run node command line roslaunch waypointexample waypointexamplelaunch hold waypointflight button controller time push right joystick vehicle follow waypoints sequentially right joystick give speed waypointflight button held vehicle fly minimum speed speed sent waypointexample system start taking speed second controller unavailable set autonomymode true srclocalplannerlaunchlocalplannerindoorlaunch launch waypointexample together system system start waypoint flight note set autonomymode true even controller connected pressing button controller bring system smart joystick flight holding waypointflight button bring system back waypoint flight note running slow computer user change worldname srcvehiclesimulatorsystemgazebolaunch office officesimple use simple environment reduced graphic rendering load setting gazebogui false stop launching gazebo main window alternatively user set realtimefactor smaller value betweenand 10 run system slower speed switching airsim simulator ubuntu 2004 user use airsim simulator replace gazebo simulator photorealistic render vast set environment model running airsim simulator requires powerful graphic card ideally would like data render 10hz 510hz performance aerial navigation drop slightly 5hz performance drop seriously airsim simulator requires python 35 later computer make sure pip3 point python 3x x5 use pip3 version check version install pip3 use sudo apt install python3pip pip3 install msgpackrpcpython pip3 install airsim install dependency replace distribution melodic noetic depending distribution sudo apt install rosdistributiontf2sensormsgs rosdistributiontf2geometrymsgs sudo apt install rosdistributionmavros build airsim airsim requires gcc8 higher use gcc version check version git clone cd airsim setupsh buildsh cd catkinmake issue complete step please refer documentation download airsim environment airsim release page click version release find asset bottom page default environment use named airsimnh download unzip file copy srcairsimutilsconfigsettingsjson file development environment airsimnhlinuxnoeditor folder terminal go airsimnhlinuxnoeditor folder launch airsim airsimnhsh windowed second terminal go airsimros folder launch airsim wrapper source develsetupbash roslaunch airsimrospkgs airsimnodelaunch third terminal go development environment folder launch system source develsetupsh roslaunch vehiclesimulator systemairsimlaunch user use controller try smart joystick flight manual flight click waypoint button rviz try waypoint flight note user turn airsim main window reduce graphic rendering load increase data render framerate changing flywithme nodisplay airsimnhlinuxnoeditorsettingsjson file integrating cmurecon model releasing soon ubuntu 2004 system seamlessly integrate realistic model built cmurecon system cmurecon model made highfidelity lidar scan rgb image try example cmurecon model go development environment folder terminal switch noeticcmurecon branch compile git checkout noeticcmurecon catkinmake run script download cmurecon model prompted enter overwrite existing file srcvehiclesimulatorcmurecondownloadcmureconmodelsh user use command line launch system wait system initialize second rendered rgb depth semantic image show rviz view rendered rgb semantic point cloud click panelsdisplays check colorcloud semanticcloud source develsetupsh roslaunch vehiclesimulator systemcmureconseglaunch advanced changing simulation environment additional five gazebo environment provided terminal go development environment folder use command line download environment srcvehiclesimulatormeshdownloadadditionalenvironmentssh change worldname srcvehiclesimulatorsystemgazebolaunch one additional environment name ie campus indoor garage tunnel forest starting vehicle different position set vehiclex vehicley vehiclez vehicleyaw user launch system fly additional environment note fly campus environment recommend outdoor configuration use command line launch system instead roslaunch vehiclesimulator systemgazebolaunch configoutdoor change airsim environment dowmload airsim environment airsim release page integrating real drone system interface flight controller onboard aerial vehicle attitude control mode control command sent geometrymsgstwiststamped typed message topic attitudecontrol specifically twistlinearx twistlineary message contain desired roll pitch twistangularz contains desired yaw rate twistlinearz contains desired vertical speed vehiclehorizontal frame xforward yleft zup system take state estimation navmsgsodometry typed message range sensor data sensormsgspointcloud2 typed message defined srcvehiclesimulatorsystemgazebolaunch srcvehiclesimulatorsystemairsimlaunch addition system take joystick input sensormsgsjoy typed message topic joy waypint geometrymsgspointstamped typed message topic waypoint speed stdmsgsfloat32 typed message topic speed system stack range sensor data close distance 1m default around vehicle deal case obstacle get close range sensor cannot seen reinitialize kept range data send stdmsgsempty typed message topic clearsurrcloud press clearpointcloud button controller tuning control parameter please refer instruction tuning control parameter use gazebo simulation setup example srccontroltunerlaunchcontroltestgazebolaunch set trackingcamxoffset trackingcamyoffset trackingcamzoffset offset state estimation sensor wrt vehicle center set trackingcambackward true state estimation sensor point backward use command line initial parameter tuning roslaunch vehiclesimulator controltestgazebolaunch first execute manual flight operating two joystick execute waypoint flight holding waypointflight button pushing right joystick bring speed tune velxygain posxygain horizontal velocity position gain flight stopvelxygain stopposxygain corresponding gain hovering poszgain maxvelbyposz vertical position gain maximum speed yawgain maxratebyyaw yaw gain maximum yaw rate set smoothincrspeed maximum speed increase waypoint flight minspeed maxspeed minimum maximum speed waypoint flight manualspeedxy manualspeedz manualyawrate maximum horizontal speed vertical speed yaw rate manual flight update parameter tuned srclocalplannerlaunchlocalplannerindoorlaunch set depthcamxoffset depthcamyoffset depthcamzoffset depthcampitchoffset offset range sensor pitch angle calibrate depthclouddelay relative latency range sensor state estimation sensor use command line parameter tuning roslaunch vehiclesimulator systemgazebolaunch execute smartjoystick flight make vehicle fly straight tune lookaheadscale scale lookahead distance wrt speed minlookaheaddis minimum lookahead distance make vehicle fly circle tune accxygain horizontal acceleration gain yawboostscale scale boosting yaw gain vehicle turn slowturnrate rate reduced speed vehicle turn minslowturncurv minimum path curvature trigger reduced speed make vehicle ascend descend tune poszboostscale scale boosting vertical position gain vehicle ascends descends execute waypoint flight set maxelev maximum altitude stoprotyaw1 angle waypoint vehicle stop turn flying toward waypoint set savetrajectory true log desired executed trajectory computer desktop compare trajectory evaluate path following performance changing vehicle size system us motion primitive generated matlab script change vehicle size adjust searchradiushori searchradiusvert srclocalplannerpathspathgeneratorm run matlab script generate set path file folder license repository released noncommercial license carnegie mellon university commercial use please contact national robotics engineering center nrec carnegie mellon university author chao cao cmu robotics institute fan yang cmu robotics institute sam shum cmu nrec hongbiao zhu cmu robotics institute ji zhang cmu nrec robotics institute reference j zhang c hu r gupta chadha singh falco fast likelihoodbased collision avoidance extension humanguided navigation journal field robotics vol 37 nopp 13001313 2020 pdf credit gazebo environment mode 3dgems joystickdrivers package opensource release link airompl planner omplbased route planner aerial navigation running top aerial navigation development environment,"[('waypoint', 'flight'), ('manual', 'flight')]"
devanhurst/ktane_voice,Other,charlie keep talking nobody explodes ai partner development note speech detection incorporates pocketsphinxruby ruby wrapper cmusphinx carnegie mellon university texttospeech incorporates espeak installation regardless operating system need ruby environment set first specifically need ruby rbenv bundler gem install bundler osx install homebrew usrbinruby e curl fssl install rbenv brew install rbenv install bundler gem install bundler next install pocketsphinxruby dependency voice recognition detailed instruction brew tap watsonboxcmusphinx brew install head watsonboxcmusphinxcmusphinxbase brew install head watsonboxcmusphinxcmupocketsphinx next install espeak brew install espeak next make sure homebrew ha linked portaudio keg run brew doctor check error warning unlinked keg cellar leaving keg unlinked lead buildtrouble cause brew depend keg fail run properly built run brew link portaudio see error run brew link portaudio fix finally navigate ktanevoice folder run following command bundle able launch charlie ruby charlierb window untested download install pocketsphinx sphinxbase espeak thelinks navigate ktanevoice folder run following command bundle able launch charlie ruby charlierb fun please leave issue ticket instruction work module module ha keyword select main menu command give bot appropriate data solve module bomb prompt bomb variable first time necessary recommended playing expert bomb however say charlie bomb check beginning game get way charlie responding accurately turn mic sensitivity currently charlie really sensitive background noise static like bomb check keyword charlie bomb check battery 09 number battery digit 09 last digit serial number vowel yesno vowel serial number car yesno lit car indicator freak yesno lit frk indicator parallel port yesno parallel port subject wire keyword defuse wire usage blackblueredwhiteyellow wire repeat example black wire blue wire white wire subject keypad keyword defuse keypad usage say list keypad prefixing word key example key inkblot key six key spaceship key paragraph list coming soon subject button keyword defuse button usage say color word button held say colour stripe example red abort hold button stripe colour yellow subject simon say keyword defuse simon usage say light colour sequence followed done example red blue green green yellow done subject complicated wire keyword defuse complicated usage say combination attribute red blue star light order followed next move next wire done finish example red blue star next nothing next blue next red light blue done subject wire sequence keyword defuse sequence usage top bottom say colour letter alpha bravo charlie connected say next move next wire done finish cut accordingly example red bravo next red charlie next black alpha done subject memory keyword defuse memory usage say sequence followed sequence number starting display number working left right keyword must repeated round example defuse memory round one sequence23defuse memory round two sequence23on subject maze keyword defuse maze usage topleft coordinate 11 bottom right 66 give location requested circle given either order x example first circle1 second circle4 white square3 red triangle6 x subject morse code keyword defuse morse code usage say combination dot dash next really enunciate difference dot dash example dot dot dot next note letter spoken order believe error wa made escape morse code reset morse code start saying defuse morse code subject first keyword defuse word usage say word display bot give position say word position bot read list word press first one hear button label example word yes middleleft word next word list display word word first first okay okay c c letter yes yes nothing nothing led l e word blank blank read read book red red color word possessive contraction possessive empty reed reed instrument leed leeds england contraction display display say say lead lead guitar hold hold word location see see movie cee cee word button word ready ready first first blank blank nothing nothing yes yes statement question uhhh u h h h left left right right middle middle okay okay wait wait press press word word possessive contraction u r u r letter u u letter uh huh uh huh uh uh staccato done done next next hold hold sure sure like like subject password keyword defuse password usage first select column using nato phonetic alphabet say letter one column result found bot read prompt another column example one selecting column one alpha foxtrot whiskey quebec tango echo subject knob keyword defuse knob usage left right say sequence light combination example none addingremoving strike main menu add strike remove strike reset command reset wire sequence reset wire sequence reset morse code reset morse code reset password reset password reset memory reset memory upon successful completion module reset automatically necessary run command unless error wa made undo command undo last wire sequence remove previous spoken wire sequence command successfailure command bomb defused cue happy success response bomb detonated bomb blew cue upset failure response,"[('keyword', 'defuse'), ('usage', 'say')]"
jazzband/django-robots,Python,django robot image target alt jazzband image target image target image target basic django application manage robotstxt file following robot exclusion protocol complementing django sitemap contrib app installation instruction see documentation install section instruction use application provides see file overviewtxt doc directory readthedocs supported django version django 40 django 32 django 31 django 22 older django version 16110 use djangorobots30 djangoand use djangorobots400 supported python version python 37 38 39 310 install section robot exclusion protocol django sitemap contrib app,"[('image', 'target'), ('target', 'image')]"
projectchrono/chrono,C++,attention structure chrono git repository wa changed follows main development branch called main previously develop master branch obsolete wa deleted release located branch named release tag form project chrono pipeline status bsd license distributed permissive bsd license chrono opensource multiphysics package used model simulate dynamic large system connected rigid body governed differentialalgebraic equation dae dynamic deformable body governed partial differential equation pde granular dynamic using either nonsmooth contact formulation resulting differential variational inequality dvi problem smooth contact formulation resulting daes fluidsolid interaction problem whose dynamic governed coupled daes pdes firstorder dynamic system governed ordinary differential equation ode chrono provides mature stable code base continues augmented new feature module core functionality chrono provides support modeling simulation visualization rigid flexible multibody system additional capability offered optional module module provide support additional class problem eg granular dynamic fluidsolid interaction modeling simulation specialized system ground vehicle cosimulation runtime visualization postprocessing interface external linear solver specialized parallel computing algorithm multicore gpu distributed largescale simulation used many different scientific engineering problem researcher academia industry government chrono ha mature sophisticated support multibody dynamic finite element analysis granular dynamic fluidsolid interaction ground vehicle simulation vehicleterrain interaction implemented almost entirely c chrono also provides python c apis build system based cmake chrono platformindependent actively tested linux window macos using variety compiler project website build install instruction documentation c api reference main development branch release 800 release 700 python interface pychrono reference manual core module chronovehicle module support google group user forum,"[('granular', 'dynamic'), ('fluidsolid', 'interaction')]"
LiJiangnanBit/path_optimizer,C++,pathoptimizer bell check newer version pathoptimizer2 package generates feasible path nonholonomic vehicle 20210107 011929png simulation videossimulation dynamic environmentsimulation complex static obstacle simulation run demosinstall dependency build kinetic ubuntu 1604 opencv mkdir p workspacesrc cd workspacesrc git clone gitgithubcomlijiangnanbitpathoptimizergit sudo bash pathoptimizerscriptsinstalldepssh cd catkin build pathoptimizer source develsetupbash installdepssh install dependency already installed skipped dependency include ipopt 3124 cppad 201800000 google benchmark glog gflags osqpeigen gridmap rosviztools tinysplineros demo png image loaded grid map click specify global reference path startgoal state vehicle roslaunch pathoptimizer demolaunch pick reference point using publish point tool rviz pick least six point hard fast rule spacing point want abandon chosen point double click anywhere using publish point tool replace gridmappng black white image note resolution democpp set 02m whick mean length one pixel 02m map application reference path given global path search algorithm like gif pick start state using 2d pose estimate tool pick goal state using 2d nav goal tool currently strictly required reach goal state changed start state must ahead first reference point gif benchmark test computation time test rosrun pathoptimizer pathoptimizerbenchmark usage refer democpp parameter change found planningflagscpp work refer take input red dot 20200213 162746png optional use b spline curve fitting make path continuous search around reasonable reference path yellow dot step skipped changing setting 20200213 162756png smooth reference path using ipopt yellow curve 20200213 162805png represent path planning problem qp solve using osqp 20200213 162819png,"[('reference', 'path'), ('reference', 'point')]"
ClemensElflein/xESC,Other,license cc byncsa 40 discord join discord server xesc discussion want notified update availability star star watch eye repository looking xesc2040 wa moved repo xesc2 xesc2 easy use low cost electronic speed controller esc design brushless dc bldc motor drive bldc motor sensored sensorless mode controller support foc control mode firmware based open source vesc firmware implement torque speed position control current state motor controller current voltage speed position read back serial interface esc wa designed ground suited robotics use ha pin header make easy integrate existing design small compared vesc much cheaper vesc much lower power vesc enough drive robot also customized driver esc todo add emergency shutdown pin design add pinout silkscreen enough space comparison doe xesc compare brushless escs market right esc current need xesc2 minithis repo xesc xesc2 vesccheap hobby escs technical data intended use robotics robotics robotics electromobility rc car plane max currentcontinuous 10a 40v 10a 40v 10a 40v 80a 60v depends model size 50x30 mm 60x30 mm 85x42 mm 75x70mm depends model supported firmware xesc2 firmware vesc based xesc firmware simplefoc based xesc2 firmware vesc based vesc firmware open source hwsw hwsw hwsw sw feature interface usb uart pwm analog uart pwm usb uart pwm analog usb uart pwm analog pwm motor commutation foc bldc foc foc bldc control mode current position speed current current position speed current position speed none sensored whitecheckmark whitecheckmark whitecheckmark whitecheckmark feedback channel whitecheckmark whitecheckmark whitecheckmark whitecheckmark x low cost design whitecheckmark whitecheckmark whitecheckmark x whitecheckmark bec internal 5v regulator x whitecheckmark whitecheckmark whitecheckmark whitecheckmark pin header easy connection pcbs whitecheckmark x x x x status working prototype obsolete working prototype mass production mass production pcb design front back firmware feature xesc2 firmware based current version vesc firmware therefore able everything wish brushless esc including foc speed control current limiting buy one xesc2 mini officially sale yet since really capability produce larger quantity right making robotics project moment however really like get hand message eg open issue something course build escs kind idea open source please mass produce design sell without permission license rellicense href altcreative common license styleborderwidth0 src work licensed rellicense href common attributionnoncommercialsharealike 40 international license feel free use design project try sell design product based without getting consent first,"[('whitecheckmark', 'whitecheckmark'), ('uart', 'pwm')]"
Tasshack/dreame-vacuum,Python,version hacs community forum kofi paypalme dreame vacuum integration home assistant complete app replacement home assistant dreame robot vacuum feature auto generated device entity live multi floor map support customized room cleaning entity service device map example persistent notification error reporting event automation valetudo map card support supported device dreame dreamevacuump2008 f9 dreamevacuump2009 d9 dreamevacuump2259 d9 max dreamevacuump2187 d9 pro dreamevacuumr2205 d10 plus dreamevacuump2029 l10 pro dreamevacuump2028a l10 plus dreamevacuumr2228o l10s ultra dreamevacuumr2215o l10s pro dreamevacuumr2216o l10s pro dreamevacuump2028 z10 pro dreamevacuump2027 w10 dreamevacuumr2104 w10 pro dreamevacuumr2251o w10s dreamevacuumr2232a w10s pro dreamevacuumr2228 s10 dreamevacuumr2211o s10 dreamevacuumr2233 s10 pro dreamevacuumr2247 s10 pro plus dreamevacuumr2246 s10 plus dreamevacuumr2215 x10 dreamevacuumr2235 x10 ultra mijia dreamevacuump2036 trouver lds finder dreamevacuump2150o vacuummop dreamevacuump2150a vacuummopultra dreamevacuump2150b vacuummopultra set dreamevacuump2114o selfcleaning robot vacuummop dreamevacuump2149o selfcleaning robot vacuummop pro dreamevacuumr2254 1 dreamevacuumr2209 x10 dreamevacuump2114a x10 dreamevacuump2041 1t dreamevacuump2140a 2c dreamevacuump2140 2c dreamevacuump2140q mi robot vacuummopdreamevacuump2140p mi robot vacuummopdreamevacuump2140o mi robot vacuummopdreamevacuump2148o mi robot vacuum mop ultra slim dreamevacuump2041o mi robot vacuummoppro mova dreamevacuump2157 l600 dreamevacuump2156o mova z500 installation manually sh wget bash via hacs configuration select configuration type img src width550px href targetblankabout map featurea enter required credential according selected configuration type please make sure device subnet configuration type pythonmiio article issue set device name integration setting notification featureabout map color scheme navigate device page disabling enabling entity want use entity use integration compatible available lovelace vacuum card want use zone cleaning feature prefer xiaomi vacuum card xiaomi vacuum map card yaml type customxiaomivacuummapcard entity vacuum entity mapsource camera map entity calibrationsource camera true vacuumplatform tasshackdreamevacuum open card editor click generate room config button check adjust needed config using yaml editor save change img src vacuum card yaml type customvacuumcard entity vacuum entity map map entity maprefreshstats default attribute filterleft unit subtitle filter attribute sidebrushleft unit subtitle side brush attribute mainbrushleft unit subtitle main brush attribute sensordirtyleft unit subtitle sensor cleaning attribute cleanedarea unit m2 subtitle cleaned area attribute cleaningtime unit min subtitle cleaning time shortcut name clean room service dreamevacuumvacuumcleansegment servicedata entityid vacuum entity segment icon mdisofa name clean room service dreamevacuumvacuumcleansegment servicedata entityid vacuum entity segment icon mdibedempty name clean room service dreamevacuumvacuumcleansegment servicedata entityid vacuum entity segment icon mdisilverwareforkknife valetudo map card enable map data camera entity yaml type customvaletudomapcard vacuum vacuum name entity id rotatemap rotation entity doe work valetudo map card dockicon mdilightningboltcircle dockcolor rgb105 178 141 vacuumcolor rgb110 110 110 wallcolor rgb159 159 159 floorcolor rgb221 221 221 nogoareacolor rgb1770 nomopareacolor rgb170 47 255 virtualwallcolor rgb1990 virtualwallwidth 15 currentlycleanedzonecolor rgb221 221 221 pathcolor rgb255 255 255 pathwidth 15 segmentopacitysegmentcolors rgb171 199 248 rgb249 224 125 rgb184 227 255 rgb184 217 141 xiaomi vacuum card picture entity card yaml type pictureentity entity vacuum entity cameraimage camera entity showstate false showname false cameraview live tapaction action none holdaction action none yaml type customxiaomivacuumcard entity vacuum entity vendor xiaomi attribute mainbrushlife label main brush key mainbrushleft unit icon mdicarturbocharger sidebrushlife label side brush key sidebrushleft unit icon mdipinwheeloutline filterlife label filter key filterleft unit icon mdiairfilter sensorlife label sensor key sensordirtyleft unit icon mdiradar mainbrush false sidebrush false filter false sensor false dreame vacuum card coming soon cleaning history map support map recovery support schedule editing ai obstacle image support custom lovelace card map editing contributing integration currently available english language want use language would helpful translate file translation folder share u submit change please fork repository open pull request thanks xiaomivacuum pooyashahidi xiaomi miot home assistant ha0y xiaomi cloud map extractor piotrmachowski valetudo hypfer,"[('vacuum', 'entity'), ('mi', 'robot')]"
fkie/multimaster_fkie,Python,new version daemon instance whats new remote access control launch configuration file easy remote editing launch file monitoring node system resource remote host old version available branch oldmaster longer supported fkie multimaster stack fkiemultimaster offer complete solution using multicores addition node manager daemon provide guibased management environment useful manage roslaunch configuration control running node also singlecore system package renamed fkie multimaster package used fkie suffix conformance rep144 package renamed fkie prefix starting version 100 built older version source make sure remove build artifact old version build space install communication node manager gui daemon based python grpc using ubuntu 1810 later simply run sudo apt install pythongrpcio pythongrpctools ubuntu 1804 lts provide ppa backport grpc library ubuntu version older need install grpciotools pypi run following command setup build source cd catkinwssrc git clone multimaster rosdep update rosdep install asroot pipfalse reinstall frompaths multimaster build package catkin build fkiemultimaster documentation multimasterfkie discovery discovery using multicast zeroconf synchronization master synchronization node manager gui gui manage configuration local remote master node manager daemon helper node allows easy autostart remote node manage remote launch file interface parameterization see wiki configuration detail find example launch file package,"[('node', 'manager'), ('launch', 'file')]"
APRIL-ZJU/CL-CBS,C++,clcbs overview carlike conflictbased search clcbs efficient complete solver multiagent path finding carlike robot problem applies body conflict tree address collision considering shape agent also includes new algorithm spatiotemporal hybridstate singleagent path planner generate path satisfying kinematic spatiotemporal constraint video demonstration found youtube source code requirement bash sudo aptget install g cmake libboostprogramoptionsdev libyamlcppdev clangtidy clangformat python3matplotlib libompldev libeigen3dev note please make sure matplotlib version 20 otherwise may show weird image visualization upgrade pip3 install u matplotlib build bash mkdir build cd build cmake dcmakebuildtyperelease make j8 make build clcbs code make doc build doxygen documentation make clangformat reformat source file make build three target run example instance bash make sure build folder default 10 agent batch clcbs benchmarkmap100by100agents20obstaclemap100by100obst50agents20ex13yaml outputyaml compute 20 agent whole batch clcbs benchmarkmap100by100agents20obstaclemap100by100obst50agents20ex13yaml outputyaml b 20 visualize result bash make sure build folder python3 srcvisualizepy benchmarkmap100by100agents20obstaclemap100by100obst50agents20ex13yaml outputyaml agent configuration agent configuration including size kinematic constraint penalty function changed srcconfigyaml benchmark benchmark evaluating clmapf problem available benchmark folder contains 3000 unique instance different map size agent number folder arranged like follows mapset contains 60 instance benchmark map100by100 agents10 empty obstacle map300by300 agents10 empty obstacle map50by50 agents10 empty obstacle instance yaml format typical result benchmark act like credit researcher leveraged compared work please cite following articlewen2022103997 title clmapf multiagent path finding carlike robot kinematic spatiotemporal constraint journal robotics autonomous system volume 150 page 103997 year 2022 issn 09218890 doi url author licheng wen yong liu hongliang li license code wa developed april lab zhejiang university provided mit license,"[('make', 'sure'), ('benchmarkmap100by100agents20obstaclemap100by100obst50agents20ex13yaml', 'outputyaml')]"
RobotLocomotion/pytorch-dense-correspondence,Python,update september2018 tutorial data available tutorial available walk stepbystep getting repo running june 26 2019 updated repo pytorch 11 cuda 10 code used experiment paper see dense correspondence learning pytorch project learn dense object net ie dense descriptor network previously unseen potentially deformable object potentially class object also demonstrate using dense object net robotic manipulation task dense object net learning dense visual descriptor robotic manipulation reference implementation paper pdf video pete florence lucas manuelli rus tedrake abstract right object representation manipulation would like robot visually perceive scene learn understanding object taskagnostic used building block variety manipulation task ii generally applicable rigid nonrigid object iii take advantage strong prior provided 3d vision iv entirely learned selfsupervision hard achieve previous method much recent work grasping doe extend grasping specific object task whereas taskspecific learning may require many trial generalize well across object configuration task paper present dense object net build recent development selfsupervised dense descriptor learning consistent object representation visual understanding manipulation demonstrate trained quickly approximately 20 minute wide variety previously unseen potentially nonrigid object additionally present novel contribution enable multiobject descriptor learning show modifying training procedure either acquire descriptor generalize across class object descriptor distinct object instance finally demonstrate novel application learned dense descriptor robotic manipulation demonstrate grasping specific point object across potentially deformed object configuration demonstrate using class general descriptor transfer specific grasp across object class citing find code useful work please consider citing articleflorencemanuelli2018dense titledense object net learning dense visual object descriptor robotic manipulation authorflorence peter manuelli lucas tedrake rus journalconference robot learning year2018 tutorial getting started pytorchdensecorrespondence code setup setting docker image recommended docker workflow dataset data organization data preprocessing single scene training evaluation training network evaluating trained network pretrained model miscellaneous coordinate convention testing git management prevent repo growing size recommend always restart clear output committing jupyter notebook like save notebook look like always download html great way snapshot state notebook share,"[('object', 'net'), ('dense', 'object')]"
lich0821/WeChatRobot,Python,wechatrobot wechatferry faq wechatferry quick start python 31011 39223 wechatsetup sh git clone gitee git clone sh pip python pip install u pip pip install r requirementstxt sh python mainpy configyaml roomid yaml group enable roomid2xxxxxxxxx3chatroom chatgpt chatgpt openai key yaml chatgpt chatgpt key chatgpt key api proxy prompt wcferry http http wcf pypi downloads documentation status,"[('git', 'clone'), ('pip', 'install')]"
nategri/nematoduino,Other,longer duration clip click update revisionof nematoduino ha released version includes number bug fix also important architectural change make project accessible hobbyist order largest impact new user biggest difference preferred robot platform alphabot2ar preferred robotics platform nematoduino code written run immediately box hardware alphabot2ar wa chosen cheap 60 version without arduino board easy assemble screwdriver readily available multiple online retailer said nematoduino easy port two wheeled robot platform source code repository comprise relatively straightforward template help intermediate arduino enthusiast adapt software robot choice arduino library nematoduinolibrary folder directory contains nematoduino arduino library library provides simple interface simulated worm biological state getleftmuscle getrightmuscle method allowing hobbyist potentially bring c elegansonanarduino variety different context nanotode nematoduino arduino library us nanotode core c elegans neural simulation nanotode written pure c intended general framework running simple c elegans spiking neural network resource constrained context example another project mine us nanotode check nematodefarm description nematoduino arduino unocompatible robotic simulation c elegans nematode core simulation nanotode framework implement simple leaky integrateandfire model biological worm spiking neural network implementation based prior workbut following improvement compressed representation connectome networkkilobytes ability run ubiquitous lowcost arduino uno platform biologically motivated conntectomemotor interface nematoduino software consumes significant portion arduino uno onboard program dynamic memory probably half still leaf plenty room tweaking experimentation hope nematoduino end hand lot student neurorobotics hobbyist installation first download nematoduino source selecting green clone download button near top page clicking download zip unzip file downloads open nemaoduinonemtoduinoino file arduino ide compile upload nematoduino arduino uno must first include nemtoduino library arduino ide going sketch include library add zip library selecting nematoduinolibrary folder located repository locomotion refeither chemotaxis smell finding nose touch neuron stimulated depending whether obstacle detecting sensor ha triggered flow chart representing sensor state feed connectome simulation motor given figureparticular weight given neck muscle worm provide direction locomotion see ref figure 1flowchart depicting motor output generated backward forward movement biological worm governed btype motor neuron nose touch resulting reversal worm locomotion since backward motion driven atype cell see fig1 refthe average activation motor neuron connectome used trigger reverse locomotion robot figure 2average btype motor neuron activation connectome simulation chemotaxis first half timeseries nosetouch second half handselected threshold backward motion robot indicated dashed line indeed normalized activity atype motor neuron show stronger response nose touch input btype approach seems reasonably well motivated work might notice nematoduino robot ha slight limp list one side motor response side typically symmetric cheap robot might kind calibration routine could devise could ameliorate would nice use light sensor see qualitative chemotaxis behavior investigated refcan reproduced using connectome model c elegans project author nematodefarm simple wasm sdl2 based game utilizing c elegans simulation nanotode framework running lightweight simulation c elegans nematode nervous system form core simulation seen project nematodefarm reference busbice extending c elegans connectome robotics url zhen samuel c elegans locomotion small circuit complex function url morse ferree c lockery r robust spatial navigation robot inspired chemotaxis c elegans url related project busbice garrett g churchill g gopigo c elegans connectome code github repository url note propgenitor project connectome model originates file connectomepy olmos f v robot gusano con arduino paso paso article url pastebin url note appears le straight translation busbice python code run arduino mega baek arduino c elegans youtube video url note run arduino uno board author indicates implementation issue source code author hi name nathan griffith think clear like implementing complicated stuff simple hardware see also animated gifs apple ii astrophysicist definitely biologist work c elegans academic setting want give feedback would really love reached nategrigmailcom license nematoduino covered gnu public license v2,"[('c', 'elegans'), ('nematoduino', 'arduino')]"
Deeplocal/mocktailsmixer,C++,google assistant sdk demo mocktails mixer gizmology 2023 make diy robotic mocktails mixer google assistant built spring 2023 innovation studio experiential design firm deeplocal launched gizmology oneyear creative technology apprenticeship program recent high school graduate underemployed adult pittsburgh black community supported part deeplocals parent company wpps racial equity committments gizmologys goal wa advance racial equity creative technical field onthejob training mentorship initial upfront classroom training spanning nearly four month gizmology apprentice gizmo affectionately named learned foundational skill related 3d design electrical engineering physical computing fabrication method laser cuttingweldingwoodworking creative technology designed two semester gizmologyand gizmologyeach semester culminated capstone project final capstone classroom training wa recreate robotic mocktails mixer google assistant built midjuly week interdisciplinary training exposure gizmo chose apprenticeship track setout complete final capstone project fulfilling specific role jason focused exhibit fabrication jordan delved deeper technical integration justin focused mechanical design pitching work team support assembly creative tech imani mecca shared responsibility updating converting sdk python nodejs wa longer valid wa small feat amazing accomplishment beginning creative technologist gizmo wa evident recreation robotic mocktails mixer google assistant wasnt simply going matter merely following direction wa going take creativity ingenuity importantly real world application skill learned successfully recreate project team youll see journey gizmo create gizmology mocktails mixer complete six uniquely designed mocktails eight different flavor representing personal connection member gizmology team diy robotic home bartender whip favorite mixed drink commandin true spirit gizmo disclaimer instruction provided informational purpose intended used production commercial product executing instruction agree assume liability connection building use device deeplocal disclaims warranty express implied respect instruction resulting device including limited warranty merchantability fitness particular purpose noninfringement use extreme caution building using device pursuant instruction event shall deeplocal liable claim damage including limited claim damage related death personal injury property damage product liability feature voicecontrolled drink ordering modular design allows customize mixer include many ingredient drink combination choose youll find diagram hardware cad lasercut photo bill material software arduino rpi gcf apiai agent zip need get started basic knowledge soldering also access laser cutter find part used along exact quantity supplier cost link purchase note general used part readily available expensive side build could completed le expense part sourced amazonalibaba lower quality part used note material used build rated food safe liquid doe come contact material food grade safe tool needed build listed hand drill rubber mallet hammer screwdriver set xacto knife soldering iron wire cutter wire stripper scissors hex key set wrench set building mixer body steplaser cutting laser cut 2d profile acrylic sheet note dfxs inch please scale according input laser cutter see attached drawing design guidance top panel 14 inch thick b bottle capture panel 14 inch thick c lid capture panel 14 inch thick drip panel 14 inch thick e pumprelay control panel 14 inch thick f pour panel 14 inch thick g bottom panel 14 inch thick h inside side panel 14 inch thick outside side panel14 inch thick j inside side button panel14 inch thick k outside side button panel 14 inch thick l front panel 14 inch thick rear panel 14 inch thick n cup indicator panel 116 inch thick arduino top plate 116 inch thick p arduino bottom plate 116 inch thick q speaker diffusion level r speaker clear level 16th 116 inch thick speaker black level 8th 18 inch thick speaker black level 8th18 inch thick u speaker black level 4th14 inch thick panel revised include lid capture panel needed hole light wire pump relay control panel cad mount hole bracket cad hole wire pump power access tube run hole relay mounted rear panel cad hole mounting fan note highly recomend cardboard prototype stepassemble bottle holder sub attach top panel bottle capture panel together 1032 x 12 inch length button socket cap 1032 xinch length 14 od standoff side lid capture panel use 1032 x 34 inch length button socket cap fastener optional double sided tape used attach lid capture panel bottom bottle capture panel note 14 inch overhang top panel rear panel flush exception tab stepassemble pump relay control panel sub note ensure pump tubing food grade safe please replace tygon clear pvc tubing 332 inch id x 532 inch od hardness rating soft durometer 65a durometer imperative pump tube life found mcmastercarr install food grade pump tubing remove cover pump depressing snap side pump head remove tubing wa placed shipment place food grade tubing pump allowinginches remain outside inlet outlet pump also careful puncture tubing installing around roller attach pump pump available required bracket mounted bracket created solidworks 3d printed use pumprelay control panel attach bracket eight 110 inch diameter hole located panel place ablack rubber washer bracket acrylic reduce vibration use 256 x 12 inch length phillips pan head machine screw corresponding nut fasten bracket acrylic use screw nut attach pump bracket attach relay module version save time used anchannel relay module attach 8channel relay module directly pump pumprelay control panel abolt hole pattern use 256 x 38 inch length 18 inch od standoff optional use 256 x 12 inch length phillips pan head machine screw corresponding nut instead standoff numberwashers underneath hole standoff fasten corner 256 x 532 inch length phillips pan head machine screw note red led must positioned toward top acrylic sheet use 256 x 38 inch length pan head phillips machine screw fasten relay side acrylic tip attaching fastener washer standoff relay module allow loose help easy alignment corresponding hole acrylic retighten fastener relay attach arduino uno arduino mount 3d print arduino uno mount using link download file grabcad used bambu studio p1p 3d printer file take aboutminutes print total place arduino mount matching hole arduino corresponding hole mount use screw secure arduino onto mount attach arduino mount onto back pump panel vhb leave enough room wire relay come slot attach pin arduino uno attach raspberry pi drip panel attach raspberry pi back panel using velcore wiring electrical system electrical system overview clearer view wiring diagram download fritzing file control electrical system mocktails mixer us two control system first raspberry pi handle communication google assistant sdk second arduino micro control pump led system connected serial raspberry pi sends command arduino light pump turn arduino executes outside two controller mocktails mixer ha four major hardware system power pumping system light audio power power system control flow electricity mixer however mixer us two different voltage 12v pump 5v hardware handle using stepdown voltage regulator dualvoltage power supply adequate basic build mixer want add extra flair like led may need use two separate power supply instruction bom use two power supply note safety recommend placing power supply external enclosure keep 110v away liquid mixer pump version mocktails mixer used eightperistaltic pump rated recommended use 12v run 24v find pump running slow pump individually switched relay controlled arduino uno lighting visual feedback added led ring mixer used adafruit neopixel easy wire add additional ring plus library easy use draw decent amount amperage want add build need size 5v power supply accordingly audio last least used usb microphone speak order drink connected directly raspberry pi chose connect speaker speaker could connected amplifier arduinos mounting plate amplifier connected raspberry pi via 35 mm headphone jack electrical system wiring instruction stepwire power supply wire power supply first connect ac line terminal black l load white n neutral green ground next connect dc power line power supply note make wiring easier follow used red wire 12v line green 5v line kept ground wire black device need share ground order communicate note also recommend using lower gauge wire 12 14 gauge dc power line moving power supply terminal block wire nut using higher gauge 20 24 gauge line note pump used assembly produce lot ground noise travel throughout dinrail could potentially interfere communication raspberry pi arduino carry command properly recommended add 5k capacitor dinral long side going 12v supply short side going ground store ground noise resolve communication interference stepwire pump relay module start wire pump relay first assemble relay module used sainsmart 8channel relay module build assembly instruction found like easy use readily availablebut cheaper alternative available next mount pump relay pumprelay control panel ready wire pump relay module first connect 5v line 5v terminal module daisy chained line across relay reduce amount wire going main 5v terminal similarly 5v power connect ground wire gnd terminal relay also daisy chaining next connect control line ctrl terminal respective pin arduino make connecting control line arduino easier waited plugged mounted arduino way could still read pin location back reset arduino necessary pinouts arduino pumprelay pin pumprelay pin pumprelay pin pumprelay pin pumprelay pin pumprelay pin pumprelay pin 10 pumprelay pin 11 note use pinto trigger relay reserved pin control light pwm pin arduino provide power pump connect 12v line com terminal relay also daisychained connect positive red terminal pump terminal relay finally wrap connect ground line negative terminal pump since four pump right side mixer mounted reverse need change rotation pump also reversed switch ground line positive terminal power line relay negative terminal stepwire led wiring neopixel led ring easy solder data line pinon arduino din pin connect 5v line 5v ground line gnd would like add led ring need wire dout first ring din next ring connect 5v ground ring together stepwire audio since microphone usb controlled wiring necessary final connection power raspberry pi connect ground line ground pin pi connect 5v line 5v pi activate voice command button side push wire button connect com terminal 33v raspberry pi connect terminal button button respective gpio case gpiofor cleaner signal connect resistor terminal ground double check wiring trace piece hardware source feel good wiring go ahead power system raspberry pi red power light visible arduino blue power light visible well building mixer body continued stepassemble pump control center sub assemble pumprelay control panel drip panel pour panel corresponding tab slot sheet acrylic make sure pump relay face front unit front pour hole center pour plate use 1032 standoff 1032 fastener bring subassembly together 1032 x 12 inch length thread used bring 1032 xinch length standoff 1032 xinch length standoff together stepassemble side panel sub attach outside side panel inside side panel using 832 binding post optional omit build help holding side panel together assembling flat side binding post face inside side panel six binding post used per side assembly repeat inside side button panel outside side button panel side panel assembly button right side unit looking unit front step 10 assemble cup indication bottom panel attach cup indicator panel bottom panel 832 low profile binding barrel optional cup indicator help user place cup necessary assembly step 11 bring subassemblies together begin laying side assembly face slot facing upwards allow easy installation component attach bottle holder subassembly top side panel assembly aligning slot note tab rear must face rear unit next attach pumprelay control panel subassembly right bottle holder subassembly noting tab align like note pump must facing towards front unit electric motor face rear front unit determined amount space slot edge side panelsthe larger gap indicates front unit attach bottom panel last two remaining slot towards bottom side panel assembly attach side panel assembly mating tab slot use 1032 xinch length button socket cap corresponding square nut secure unit six per side rotate unit 180 degree fasten six fastener tip careful rotating unit make sure firmly hold two side panel assembly together second person may helpful step 12 cut fit fluid delivery tube length install begin taking 14 inch od tubing food safe run pump hole drip panel leave additional 810 inch extra tubing easily remove bottle next using tube connector run 14 inch od tubing food safe pump outlet pour hole center pour panel tube fit snuggly theholes made slight interference fit step 13 attach front panel unit attach front panel unit 1032 x 34 inch length button socket cap corresponding square nut two hold panel place tip use piece painter tape hold square nut place fastener grab tape removed bottle hole step 14 attach rear panel unit align rear panel corresponding slot tab rear unit use 1032 x 34 inch length button socket cap respective square nut bottle build step 15 drill hole tube connector lid carafe drill 14 inch hole tubing step 16 place bottle assembly unit fill bottle desired liquid place top mixer put lid carafe feed tubing throught hole way bottom carafe programming mixer step 17 run javascript program install node package serialport speechtotext defining path variable declare port new serialport define path used upload j program raspberry pi ssh pi initiate program update code declare variable called keyword set empty string initiating program ssh pi ssh username password using git bash type command pm2 restartto refresh program cd srcmocktailsmixersoftwarerpi type command pm2 start indexjs run program type command pm2 logsto view log observe happening program run user press physical button assembled mocktail mixer trigger serial message sent arduino javascript application arduino sends message j program aka button press function called handleserial listens complete serial message arduino know parse command completed serial message held variable data contains string button received arduino passed onto function buttoncallback within buttoncallback function statement ha condition use tostring method transfer data arduino string startswith method detect button message ha received j program found begin recording set timeout processing speech text javascript application pick serial message function processtranscript start streaming audio speechtotext api settimeout incorporated within function startstop audio recording 10 second translated 10000 millisecond audio transcribed transcript processed loop array keywords correspond drink name ie mango mechanical mud detected within transcript calculate many second relay turned transmit command arduino via serial doe j program communicate arduino buttoncallback function call function keywordtoarduinokeyword 10000 millisecond else responds consolelogdont know one keywordtoarduino function ha series statement open close relay bottle depending correct keyword detected initial statement use include method check variable keyword includes chosen keyword like mango example word mango detected executed code include portwrite method send string message arduino via serial port open first relay ex portwriteb0r arduino serial command b bottle action 07 index bottle r l termination active interaction portwrite method must one serial command order received arduino ex turn relay number one look like portwriteb0r portwriteb0l first relay open timeout set open next relay aftersecond first relay open open relay simultaneously arduino fail turn either relay many command one time thesecond settimeout avoid problem relay open use settimeout function close first relay number second take pour proper ratio based drink ingredient nested within settimeout another settimeout turn second relay aftersecond first relay turned 11 ratio proper number millisecond required based specific drink ratio remaining keywords else statement used follow pattern keywordtoarduino function else statement used tell user try keywords detected within handleserial function portwritea command communicates arduino button press wa received j program allow new button press command received entire program ha run completed step 18 prepare arduino load sketch onto board connect raspberry pi via usb step 19 run system ssh pi ssh dluser1007197 password deeplocal fails plug hdmi board connect monitor board show grey screen white text show current ip address autoconnect devtest boot ha far check pm2 running pm2 l list current process running already running restart pm2 restartor watch log pm2 logsbut running need cd srcmocktailsmixersoftwarerpi pm2 start indexjs view log see happening pm2 log step 20 order drink scan qr code find list drink available prep glass desired place cup holder push button side active ask drink choice cleaning mixer use empty bottle earlier content rinse water fill bottle water run mixer clean line residue may left behind keep mixer clean ready next time change liquid run mixer pump liquid seen coming ensure liquid left line remove bottle mixer allow dry rinsing periodically check hose connection prevent leak developing,"[('inch', 'thick'), ('14', 'inch')]"
personalrobotics/aikido,C++,aikido ai kido build status codecov codacy badge warning warning aikido heavy development instruction primarily reference developer aikido c library complete python binding solving robotic motion planning decision making problem library tightly integrated dart kinematicdynamics calculation ompl motion planning aikido optionally integrates suite aikidoros package execution real robot building source dependency aikido depends install adding repository sourceslist follows encourage user install noetic least following package shell sudo apt install rosnoeticactionlib rosnoeticgeometrymsgs rosnoeticinteractivemarkers rosnoeticroscpp rosnoeticstdmsgs rosnoetictf rosnoetictrajectorymsgs rosnoeticvisualizationmsgs aikido also depends cmake boost dart version 685 ompl yamlcpp tinyxml2 prcontrolmsgs libmicro python development header pythondev debian system dart aikido make heavy use c14 require modern compiler ubuntu focal using cmake install package described build rosdependent aikido component eg aikidocontrolros install dependency shell sudo addaptrepository ppadartsimppa sudo addaptrepository ppapersonalroboticsppa sudo aptget update sudo aptget install cmake buildessential libboostfilesystemdev libdart6optimizernloptdev libdart6utilsdev libdart6utilsurdfdev libmicro libompldev libtinyxml2dev libyamlcppdev prcontrolmsgs dependency installed build install aikido using cmake shell mkdir build cd build cmake make may want build aikido using multicore executing make j4 sudo make install aikido includes several optional component depend suggest building aikido catkin workspace see enable component also possible build component standalone build source setupbash file catkin workspace running command eg shell pathtomyworkspacesetupbash ubuntu focal using catkin also possible build aikido thirdparty packagerep136 inside catkin workspacecatkin workspace clone aikido catkin workspace use catkin build command like normal using older catkinmake command must build workspace catkinmakeisolated may dramatically increase build time strongly recommend use catkin build provided catkintools package possible macos using cmake please install homebrew described easily install dependency follows shell cd aikidodirectory brew bundle dependency installed build install aikido using cmake shell cd aikidodirectory mkdir build cd build cmake make may want build aikido using multicore executing make j4 sudo make install code style please follow aikido style guideline making contribution license aikido licensed bsd license see license information author aikido developed personal robotics lab paul g allen school computer science engineering university washington library wa started michael koval mkoval pras velagapudi psigen ha received major contribution shushman choudhury shushman ethan gordon egordon brian hou brianhou aaron johnson aaronjoh jennifer king jeking gilwoo lee gilwoolee jeongseok lee jslee02 clint liddick clintliddick also would like thank michael grey mxgrey jeongseok lee jslee02 making change dart better support aikido catkin workspace,"[('using', 'cmake'), ('aikido', 'using')]"
facebookresearch/habitat-lab,Python,circleci codecov github license github release latest date support habitatsim python 39 precommit code style black import isort twitter follow habitatlab habitatlab modular highlevel library endtoend development embodied ai designed train agent perform wide variety embodied ai task indoor environment well develop agent interact human performing task towards goal habitatlab designed support following feature flexible task definition allowing user train agent wide variety single multiagent task eg navigation rearrangement instruction following question answering human following well define novel task diverse embodied agent configuring instantiating diverse set embodied agent including commercial robot humanoid specifying sensor capability training evaluating agent providing algorithm single multiagent training via imitation reinforcement learning learning senseplanact pipeline well tool benchmark performance defined task using standard metric human loop interaction providing framework human interact simulator enabling collect embodied data interact trained agent habitatlab us habitatsim core simulator documentation refer habitat demo table content habitatlab table content citing habitat installation testing debugging environment issue documentation docker setup question datasets baseline rosxhabitat license citing habitat use habitat platform research please cite habitat 10 habitat 20 paper miscpuig2023habitat3 titlehabitat 30 cohabitat human avatar robot authorxavi puig eric undersander andrew szot mikael dallaire cote ruslan partsey jimmy yang ruta desai alexander william clegg michal hlavac tiffany min theo gervet vladimir vondrus vincentpierre berges john turner oleksandr maksymets zsolt kira mrinal kalakrishnan jitendra malik devendra singh chaplot unnat jain dhruv batra akshara rai roozbeh mottaghi year2023 eprint archiveprefixarxiv primaryclasscsai inproceedingsszot2021habitat title habitat 20 training home assistant rearrange habitat author andrew szot alex clegg eric undersander erik wijmans yili zhao john turner noah maestre mustafa mukadam devendra chaplot oleksandr maksymets aaron gokaslan vladimir vondrus sameer dharur franziska meier wojciech galuba angel chang zsolt kira vladlen koltun jitendra malik manolis savva dhruv batra booktitle advance neural information processing system neurips year 2021 inproceedingshabitat19iccv title habitat platform embodied ai research author manolis savva abhishek kadian oleksandr maksymets yili zhao erik wijmans bhavana jain julian straub jia liu vladlen koltun jitendra malik devi parikh dhruv batra booktitle proceeding ieeecvf international conference computer vision iccv year 2019 installation preparing conda env assuming conda installed let prepare conda env bash require python39 cmake314 conda create n habitat python39 cmake3140 conda activate habitat conda install habitatsim install habitatsim bullet physic conda install habitatsim withbullet c condaforge c aihabitat see habitatsim installation instruction detail pip install habitatlab stable version bash git clone branch stable cd habitatlab pip install e habitatlab install habitatlabinstall habitatbaselines command install core habitatlab include habitatbaselines along additional requirement use command installing habitatlab bash pip install e habitatbaselines install habitatbaselines testing let download 3d asset using habitatsim python data download utility download testing 3d scene bash python habitatsimutilsdatasetsdownload uids habitattestscenes datapath data note testing scene provide semantic annotation download pointgoal navigation episode test scene bash python habitatsimutilsdatasetsdownload uids habitattestpointnavdataset datapath data noninteractive testing test pick task run example pick task script bash python examplesexamplepy us habitatlabhabitatconfigbenchmarkrearrangeskillspickyaml configuration task agent script roughly doe python import gym import habitatgym load embodied ai task rearrangepick prespecified virtual robot env gymmakehabitatrenderpickv0 observation envreset terminal false step environment random action terminal observation reward terminal info envstepenvactionspacesample modify configuration environment also use habitatgymmakegymfromconfig method allows create habitat environment using configuration python config habitatgetconfig benchmarkrearrangeskillspickyaml overrideshabitatenvironmentmaxepisodesteps20 env habitatgymmakegymfromconfigconfig want know different configuration key override use reference see examplesregisternewsensorsandmeasurespy example extend habitatlab outside source code interactive testing using keyboard mouse control fetch robot replicacad environment bash pygame interactive visualization pybullet inverse kinematics pip install pygame201 pybullet304 interactive play script python examplesinteractiveplaypy neverend use ijkl key move robot base forwardleftbackwardright wasd move arm endeffector forwardleftbackwardright eq move arm updown arm difficult control via endeffector control detail documentation try move base arm touch red bowl table fun note interactive testing currently fails ubuntu 2004 error x error failed request badaccess attempt access private resource denied working fixing update instruction fix script work without error macos debugging environment issue vectorized environment fast verbose using vectorenv error may silenced resulting process hanging multiprocessing error hard interpret recommend setting environment variable habitatenvdebug towhen debugging export habitatenvdebug1 use slower verbose threadedvectorenv class forget reset habitatenvdebug unset habitatenvdebug done debugging since vectorenv much faster threadedvectorenv documentation browse online habitatlab documentation extensive tutorial train agent habitat habitat 20 use quickstart guide docker setup provide docker container habitat updated approximately per year habitat challenge work machine nvidia gpu requires user install nvidiadocker setup habitat stack using docker follow step pull habitat docker image docker pull fairembodiedhabitatchallengetesting2022habitatbasedocker start interactive bash session inside habitat docker docker run runtimenvidia fairembodiedhabitatchallengetesting2022habitatbasedocker activate habitat conda environment conda init source bashrc source activate habitat run testing script cd habitatlab python examplesexamplepy print output like bash agent acting inside environment episode finished 200 step question find answer question try asking developer community discussion forum datasets common task episode datasets used habitatlab baseline habitatlab includes reinforcement learning via ppo baseline running ppo training sample data detail refer habitatbaselinesreadmemd rosxhabitat rosxhabitat framework bridge ai habitat platform habitat lab habitat sim robotics resource via compared habitatpyrobot rosxhabitat place emphasis onleveraging habitat sim v2 physicsbased simulation capability andallowing roboticists access simulation asset work ha also made public paper note rosxhabitat wa developed maintained lab computational intelligence ubc ha yet officially supported habitat lab team please refer framework repository doc discussion license habitatlab mit licensed see license file detail trained model task datasets considered data derived correspondent scene datasets matterport3d based task datasets trained model distributed matterport3d term use cc byncsa 30 u license gibson based task datasets code generating datasets trained model distributed gibson term use cc byncsa 30 u license,"[('embodied', 'ai'), ('pip', 'install')]"
basnijholt/home-assistant-config,Other,ba nijholt home assistant config file github star github last commit ha version ha community yaml lint lovelace ui using io light dark mode theme see also guide girlfriend table content device supervisor addons automation noteworthy useful automation see automation dependency page alarm clock us appdaemon volume ramp sunrise app automatic lovelacejson lovelaceuiyaml converter version control controlling music light hue brightness using xiaomi aqara magic cube controlling light using phillips hue dimmer xiaomi aqara smart switch automated light presence detection different room based various binary template sensor robot vacuum automation arriving leaving automation notification dishwasher washing machine done time work tracking notification go home using hamenu control speaker imac using homeassistantmacbooktouchbar control ha macbook pro touch bar automatically switch lovelace theme background lightdark mode sync volume tv speaker security notification front door ha open long motion detected one home cool appdaemon apps sunrise emulator app wake spotify app slowly ramp volume low battery level notification popular reddit post feature config sorted new old advanced control apple watch using single automation setting light vacuum temperature sleep mode idea notify u window open raining add budget keeper using bunq api device switch unit price per unit price tplink hs1103584 3584 xiaomi aqara magic cube1108 1108 xiaomi aqara single button1435 5738 philip hue dimmer switch1661 3322 total 13752 sensor unit price per unit price xiaomi aqara door sensor818 3271 xiaomi aqara temperature sensor915 4574 xiaomi aqara motion sensor 10 979 9785 xiaomi aqara vibration sensor1159 1159 xiaomi mi flora1554 4663 total 23452 vacuum unit price per unit price xiaomi mi roborock s529431 29431 total 29431 medium player unit price per unit price kef ls50 wireless speakersnan nan kef lsx speakersnan nan lg oled 55 c9nan nan light unit price per unit price philip hue e27 white color 12 2222 2667 philip hue e14 white color3488 6977 philip hue gu10 ambient white1854 927 philip hue go5705 5705 philip hue led strip 2m432 8639 philip hue led strip 1m1384 1384 total 58645 hub unit price per unit price conbee ii3995 3995 total 3995 server unit price per unit price intel nuc kit nuc8i3beh2783 2783 gb crucial ct8g4sfs824a ddr42552 5104 samsung 970 evo m2 500gb9499 9499 raspberry pi4gb ram connected powergas meter connected mqtt main ha instance709 709 raspberry piflirc case2585 2585 sandisk ultra microsdhc memory card 32gb699 699 total 52807 device tracker unit price per unit price iphone x io appnan nan iphone se2 io appnan nan unit price per unit price playstation eye webcam microphone array1495 1495 dsmr slimme meter kabel1995 1995 nodoshop opentherm gateway otgw nodemcu4881 4881 total 8371 total 190453 supervisor addons run supervised install following addons home assistant stream deck version 202374 basnijholt advanced ssh web terminal version 1505 hassioaddons appdaemon version 0133 hassioaddons glance version 0192 hassioaddons grafana version 903 hassioaddons influxdb version 470 hassioaddons log viewer version 0151 hassioaddons studio code server version 5100 hassioaddons phpmyadmin version 087 hassioaddons let encrypt version 4129 homeassistant mariadb version 261 homeassistant mosquitto broker version 621 homeassistant samba share version 1002 homeassistant vlc version 020 homeassistant home assistant google drive backup version 01111 sabeechen zigbee2mqtt version 13221 zigbee2mqtt automation table content adaptive lightingautomations alarm clockautomations apple watch 12 automation arrivingautomations bikeautomations climateautomations control switchesautomations cubeautomations doorbellautomations frontendautomations leavingautomations light 29 automation lovelaceautomations mailboxautomations medium playerautomations musicautomations notificationsautomations plantautomations securityautomations night modeautomations systemautomations testautomations utilitiesautomations vacation modeautomations vacuumautomations workautomations total number automation 126 adaptive lighting turn switch us inputselectsleepmode reset manualcontrol afterhour notify manualcontrol toc alarm clock wake spotify light us inputbooleanalarmclock inputbooleanwakeuplight inputbooleanwakeupwithspotify inputselectsleepmode sensortenminutesbeforealarm toc apple watch play pause tv minimal light bedroom fix tv sound us scriptfixsound set sleep mode us inputselectsleepmode set light us scriptcozylightsbedroom scriptcozylightslivingroom scriptturnonlights scriptwhitelightslivingroom temperature report portfolio value send vacuum cleaner us scriptvacuumcommand movie time reset adaptive lighting us scriptresetadaptivelighting set temperature person toc arriving switch music iphone speaker one home us inputbooleanguestmode toc bike started charging us inputdatetimebikechargeroff inputdatetimebikechargeron stop charging us inputdatetimebikechargeroff toc climate turn heating 30 min waking us inputbooleanalarmclock inputbooleanautomatictemperature scriptsethightemperature sensorhalfhourbeforealarm turn heating going home us inputbooleanautomatictemperature inputnumbertemperaturehigh scriptsethightemperature binarysensornoonehome turn heating 2200 us inputbooleanautomatictemperature inputnumbertemperaturelow scriptsethightemperature scriptsetlowtemperature binarysensornoonehome set outside temperature every hour warning heating living room door open us inputnumbertemperaturelow set temperature setpoint 50 c automatically turn spaceheater noone guest room us binarysensoractivityinguestroom toc control switch living room philip hue dimmer switch us inputselectlastscriptlivingroom scriptincreasebrightness scriptnextcolors scriptresetadaptivelighting scriptwhitelightslivingroom bedroom philip hue dimmer switch us inputselectlastscriptbedroom scriptincreasebrightness scriptnextcolors scriptresetadaptivelighting scriptwhitelightsbedroom bedroom ikea dimmer switch us inputbooleanguestmode inputselectlastscriptbedroom inputselectsleepmode scriptincreasebrightness scriptnextcolors scriptturnoffeverything scriptwhitelightsbedroom living room aqara wireless mini switch us inputselectlastscriptlivingroom scriptfixsound scriptincreasebrightness scriptnextcolors bedroom aqara wireless mini switch us inputselectlastscriptbedroom inputselectsleepmode scriptincreasebrightness scriptnextcolors scriptturnoffeverything sensortenminutesbeforealarm bathroom aqara wireless mini switch door aqara wireless mini switch us scriptarriving scriptsetlowtemperature scriptstartspotify scriptturnoffeverythingnonautomatic sensorfavoriteplaylistofnearestperson guest room ikea switch toc cube perform operation us inputselectcubemode scriptstartspotifyplaylistofnearestperson rotate cube us inputselectcubemode toc doorbell click button toc frontend turn dark mode us inputbooleandarkmode turn light mode us inputbooleandarkmode change theme us inputbooleandarkmode inputbooleanthemealternative inputselecttheme toc leaving automatically turn everything us inputbooleanguestmode scriptleaving binarysensoranythingon binarysensornoonehome binarysensorsomeoneinthehouseinlasthour ask turn everything us inputbooleanguestmode binarysensoranythingon binarysensornoonehome turn everything notification us scriptleaving downstairs aqara wireless mini switch us scriptturnoffeverything toc light turn living room us inputbooleanguestmode binarysensoractivityinlivingroom turn living room us inputbooleanguestmode binarysensoractivityinlivingroom toggle dinner area light us inputbooleanautomaticdinnerarealight inputbooleanguestmode inputselectsleepmode binarysensoractivityindinnerarea turn automatic dinner area light turning light 1800 us inputbooleanautomaticdinnerarealight reset automatic dinner area light 0600 us inputbooleanautomaticdinnerarealight turn kitchen counter sleep mode us inputselectsleepmode binarysensoractivityinkitchen turn kitchen counter us binarysensoractivityinkitchen reboot kitchen ceiling shelly us shellcommandrebootkitchenceiling turn bathroom us inputselectsleepmode binarysensoractivityinbathroom turn bathroom us binarysensoractivityinbathroom turn hall us inputselectsleepmode scriptturnonlights binarysensoractivityinhall turn hall us binarysensoractivityinhall automatically turn bedroom us inputbooleanautomaticbedroomlights inputbooleanbedroomlightsautomaticallyturnedon inputselectsleepmode scriptturnonlights binarysensoractivityinmasterbedroom automatically turn bedroom us inputbooleanautomaticbedroomlights inputbooleanbedroomlightsautomaticallyturnedon binarysensoractivityinmasterbedroom turn bedroom light auto switch us inputbooleanbedroomlightsautomaticallyturnedon turn automaticbedroomlights switch us inputbooleanautomaticbedroomlights turn bedroom afterhours inactivity us binarysensoractivityinmasterbedroom reboot bedroom ceiling shelly us shellcommandrebootbedroomceiling update inputselect bedroom light turned set inputselectlastscriptbedroom colored light chosen us inputselectlastscriptbedroom scriptwhitelightsbedroom turn utility room garage outside us binarysensoractivityinutilityroom binarysensoractivityoutsidefrontdoor binarysensoractivityoutsidegarage turn utility room garage outside us binarysensoractivityinutilityroom binarysensoractivityoutsidefrontdoor binarysensoractivityoutsidegarage binarysensoractivityoutsidehouse toggle guest room us inputbooleanguestmode binarysensoractivityinguestroom toggle baby room us binarysensoractivityinbabyroom turn guest room extra check case automation failed us binarysensoractivityinguestroom turn baby room extra check case automation failed us binarysensoractivityinbabyroom turn bedroom extra check case automation failed us inputbooleanautomaticbedroomlights inputbooleanbedroomlightsautomaticallyturnedon binarysensoractivityinmasterbedroom turn utility room garage extra check case automation failed us binarysensoractivityinutilityroom binarysensoractivityoutsidefrontdoor binarysensoractivityoutsidegarage update zigbee2mqtt light inputselect option us inputselectz2mlights update zigbee2mqtt light state refresh state zigbee2mqtt light us scriptsyncz2mtohalights toc lovelace convert lovelacejson lovelaceuiyaml us shellcommandchores shellcommandconvertlovelace toc mailbox mailbox wa opened ui show inputbooleanmailboxfull need manually switched getting mail us inputbooleanmailboxfull toc medium player turn opt tv spotify playing usb speaker connected via optical cable tv whenever speaker playing spotify via wifi directly switch source speaker opt turn speaker turning tv speaker tv turn speaker tv state change update spotify entity tv everyseconds sync kef ls50 tv volume automatically turn tv xbox two hour inactivity turn living room tv wakeonlan toc music start playlist us inputbooleanstartthemusic scriptstartspotifyplaylistofnearestperson switch music iphone speaker coming home us inputbooleanguestmode toc notification marcella arrived rotterdam centraal front door ha opened us inputbooleanfrontdooropenwarning toc plant problem calathea us plantcalathea problem monstera us plantmonstera problem peace lily us plantpeacelily toc security motion detected home us binarysensormotiondetected grouppersons front door ha open thanminutes utility room door ha open thanminutes one home high power usage us binarysensornoonehome bathroom door ha opened us inputbooleanbathroomdooropenwarning door outside open us binarysensordoortooutsideopen toc night mode automatically turn alarm turn 7am us inputbooleanalarmclock inputselectsleepmode turn automatic bedroom light us inputbooleanautomaticbedroomlights inputselectsleepmode set low temperature sleep mode turn us inputselectsleepmode scriptsetlowtemperature go half total sleeping mode half sleeping mode activity house hour go total sleeping mode us inputselectsleepmode binarysensoractivityoutsidebedroom set sleeping mode living room set living room light sleep mode noone anymore us inputselectsleepmode binarysensoractivityinlivingroom toc system warning high cpu usage warning high cpu temperature warning high xbox temperature update dns update dns gandi point domain home assistant instance us scriptupdatedns run chore run shell python script utils folder us shellcommandchores mqtt sensor updating check whether receiving message mqtt ha instance battery level low toc test listen adaptive lighting event time flash light call updateentity lightturnonturnoff light baby room loop toc utility washing machine dishwasher started finished us binarysensordishwasher binarysensorwashingmachine washing machine notification us scriptutilitynotification binarysensorwashingmachine dishwasher notification us scriptutilitynotification binarysensordishwasher toc vacation mode auto turn us inputbooleanguestmode inputbooleanvacationmode grouppersons auto turn us inputbooleanguestmode inputbooleanvacationmode grouppersons toc vacuum started cleaning us inputdatetimevacuumon stopped cleaning us inputbooleancleanedtoday inputdatetimevacuumoff sensorrobotvacuumlastcleanduration reminder notification us binarysensorvacuumday cleanup nobody home us inputbooleancleanedtoday inputbooleanguestmode inputbooleanvacationmode binarysensorvacuumday grouppersons reset cleaned today us inputbooleancleanedtoday reset standard mode toc work go home notification us inputbooleanworkhournotificationsent binarysensorworkedenoughtoday reset inputboolean midnight us inputbooleanworkhournotificationsent ba left work notification marcella toc,"[('unit', 'price'), ('switch', 'us')]"
opencog/opencog,Other,opencog circleci repo longer maintained please use following instead opencogatomspace opencogatomspacecog opencogatomspacerocks opencogcogserver opencoglgatomese opencoglearn obsolete 2021 interesting actively maintained part git repo split distinct git repos left mishmash unmatained stuff process bitrotting unit test fail unit test run code compile perhaps good stuff perhaps brought back life used something however part obsolete git repository contains opencog framework ha served scientific technical laboratory researching exploring learning integrate ai algorithm system humanoid robotic system activity within particular repo ha focused integrating natural language chat commonsense reasoning assorted learning algorithm motor control humanoid robot stated goal opencog project develop artificial general intelligence agi system well however found particular repo far code really laboratory integrating various type ai system compilation several decade work large varying collection student researcher professor software engineer laboratory filled sort device varying state working order wellpolished mostlybroken see also rocca rational opencog controlled agent different assemblage assorted opencog component operate within minecraft openai gym focus learning pattern miner reasoning pln overview basic component used opencog distributed across various git repos mostly grouped git repository contains crude natural language processing pipeline several embodied chatbots controlactionselection mechanism include ghost chatscriptcompatible chatbot additional capability accepting visual sensory input controlling robot movement openpsi model psychological state currently mashup two unrelated idea generic ruleclass actionselection planning system model human psychological state open todo item untangle two assortment natural language processing subsystem including natural language generation expressing thought sentence natural language input reading hearing relex2logic converting natural language logic expression assorted chatbots embodied lojban tool prerequisite build run system package listed required user ubuntu may use dependency installer opencogoctool repository docker container opencog preconfigured found opencogdocker repo cogutil common opencog c utility us exactly build procedure package sure sudo make install end atomspace opencog atomspace sophisticated hypergraph database us exactly build procedure package sure sudo make install end cogserver opencog cogserver network server us exactly build procedure package sure sudo make install end attention opencog attention allocation subsystem us exactly build procedure package sure sudo make install end ure opencog unified rule engine required pln us exactly build procedure package sure sudo make install end pln opencog probabilistic logic network reasoning system us exactly build procedure package sure sudo make install end spacetime opencog spacetime server location object space time us exactly build procedure package sure sudo make install end rosbehaviorscripting visual auditory sens robot motor control us exactly build procedure package sure sudo make install end lgatomese natural language parser english russian language required natural language generation chatbot us exactly build procedure package sure sudo make install end building opencog perform following step shell prompt cd project root dir mkdir build cd build cmake make library built subdirectory within build mirroring structure source directory root unit test build run unit test build directory enter building opencog make test,"[('us', 'exactly'), ('exactly', 'build')]"
snape/RVO2-3D,C++,optimal reciprocal collision avoidance three dimension doi present formal approach reciprocal collision avoidance multiple independent mobile robot agent need avoid collision without communication among agent moving common workspace formulation optimal reciprocal collision avoidance orca provides sufficient condition collisionfree motion letting agent take half responsibility avoiding pairwise collision selecting optimal action agent reduced solving lowdimensional linear program prove resulting motion smooth test optimal reciprocal collision avoidance approach several dense complex simulation scenario workspace involving thousand agent compute collisionfree action millisecond rvo23d library opensource c98 implementation algorithm three dimension ha simple api thirdparty application user specifies agent preferred velocity simulation performed stepbystep via simple call library simulation fully accessible manipulable runtime library exploit multiple processor available using openmp efficient parallelization simulation build status build status spdxfilecopyrighttext 2008 university north carolina chapel hill spdxlicenseidentifier apache20 licensed apache license version 20 license may use file except compliance license may obtain copy license unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license please send bug report geomcsuncedu author may contacted via jur van den berg stephen j guy jamie snape ming c lin dinesh manocha dept computer science 201 columbia st frederick p brook jr computer science bldg chapel hill nc 275993175 united state america,"[('reciprocal', 'collision'), ('collision', 'avoidance')]"
semitable/robotic-warehouse,Python,multiagent reinforcement learning environment maintenance github license table content environment description doe look like action space observation space dynamic collision reward environment parameter naming scheme custom layout installation getting started please cite environment description multirobot warehouse rware environment simulates warehouse robot moving delivering requested good simulator inspired realworld application robot pickup shelf deliver workstation human access content shelf robot return empty shelf location environment configurable allows different size difficulty number agent communication capability reward setting cooperativeindividual course parameter used experiment must clearly reported allow fair comparison algorithm doe look like illustration small 10x20 warehouse four trained agent agent trained seac algorithmthis visualisation achieved using envrender function described later action space simulation robot following discrete action space turn left turn right forward loadunload shelf first three action allow robot rotate move forward loadingunloading work agent beneath shelf one predesignated location observation space observation agent partially observable consists 3x3 configurable square centred agent inside limited grid entity observable location rotation whether agent carrying shelf location rotation robot shelf whether currently request queue dynamic collision dynamic environment also particular interest like real 3dimensional warehouse robot move beneath shelf course robot loaded must use corridor avoiding standing shelf collision resolved way allows maximum mobility two agent attempt move location prioritise one also block others otherwise selection done arbitrarily visuals demonstrate resolution various collision exampleexampleexample reward time set number shelf r requested requested shelf brought goal location another shelf uniformly sampled added current request agent rewarded successfully delivering requested shelf goal location reward ofa significant challenge environment agent deliver requested shelf also finding empty location return previously delivered shelf multiple step delivery lead sparse reward signal environment parameter multirobot warehouse task parameterised size warehouse preset either tiny 10x11 small 10x20 medium 16x20 large 16x29 number agent n number requested shelf r default rn easy hard variation environment use r 2n r n2 respectively note r directly affect difficulty environment small r especially larger grid dramatically affect sparsity reward thus exploration randomly bringing correct shelf becomes increasingly improbable naming scheme rware allows fine tuning multiple parameter using warehouse class also register multiple default environment gym simplicity registered name look like rwaretiny2agv1 might cryptic beginning actually complicated every name always start rware next map size appended tiny small medium large number robot map selected xag x number larger one eg 4ag foragents difficulty modifier optionally appended form easy hard making requested shelf twice half number agent see section reward finally v1 version required openai gym time writing environment v1 increase change bugfixes example python env gymmakerwaretiny2agv1 env gymmakerwaresmall4agv1 env gymmakerwaremedium6aghardv1 course setting available changed environment creation example python env gymmakerwaretiny2agv1 sensorrange3 requestqueuesize6 custom layout design custom warehouse layout following python layout x xx xx xx x gg gym envmakerwarerwaretiny2agv1 layoutlayout transform x shelf g goal location result like one detailed explanation parameter found installation assuming python3 preferably virtual environment venv anaconda installed use pypi sh pip install rware prefer code available able edit use git download install sh git clone gitgithubcomuoeagentsroboticwarehousegit cd roboticwarehouse pip install e getting started rware wa designed compatible open ai gym framework creating environment done exactly one would create gym environment python import gym import rware env gymmakerwaretiny2agv1 even bypass import statement gym directly use python import gym env gymmakerwarerwaretiny2agv1 rware beginning environment name tell gym import respective package number agent observation space action space accessed using python envnagentsenvactionspace tuplediscrete5 discrete5 envobservationspace tupleboxxx boxxx returned space gym library gymspaces element tuple corresponds agent meaning lenenvactionspace envnagents lenenvobservationspace envnagents always true reset step function identical gym python ob envreset tuple observation action envactionspacesample action space sampled printactions0 nob reward done info envstepactions printdone false false printreward 00 00 leaf difference gym reward done flag list element corresponds respective agent finally environment rendered debugging purpose python envrender closed terminating python envclose please cite use environment consider citinga comperative evaluation marl algorithm includes environment inproceedingspapoudakis2021benchmarking titlebenchmarking multiagent deep reinforcement learning algorithm cooperative task authorgeorgios papoudakis filippos christianos lukas schafer stefano v albrecht booktitle proceeding neural information processing system track datasets benchmark neurips year2021 url openreview code method achieves stateoftheart performance robotic warehouse task inproceedingschristianos2020shared author christianos filippos schafer lukas albrecht stefano booktitle advance neural information processing system editor h larochelle ranzato r hadsell f balcan h lin page 1070710717 publisher curran associate inc title shared experience actorcritic multiagent reinforcement learning url volume 33 year 2020,"[('action', 'space'), ('requested', 'shelf')]"
dora-rs/dora,Other,dorars 2023 ai booming robotic framework however changed much year create dorars dorars new robotic framework brings modernity robotic application dorars already show impressive performance 17x speedup compared ros2 python result using shared memory server apache arrow achieve zero copy performance improvement make world difference beginner ai practitioner weekend hobbyist limited lack support python field dorars still experimental still working many feature doraros2bridge bridge dora dorars deep learning application make easy integrate state art dl model hopefully train within framework feel free reach question installation quickest way bash cargo install doracli alias dora doracli cargo install doracoordinator cargo install doradaemon pip install dorars python api dora help installation guideline check installation guide getting started install example python dependency bash pip install r get example operator bash wget wget wget wget wget start dataflow bash dora dora start dataflowyml attach hotreload make sure webcam stop dataflow use ctrlc go add yolov5 operator check getting started documentation full documentation available website discussion main communication channel discord server github project discussion feel free reach topic issue idea also contributing guidecontributingmd license project licensed apache20 check noticemdnoticemd information,"[('wget', 'wget'), ('cargo', 'install')]"
iuiaoin/wechat-gptbot,Python,welcome wechatgptbot day plugins name configs add favorite plugins running prepare need specific wechat version dll make window hook work download asset releaseinstall wechatsetup321121exe loginrun wechatdllinjectorv103exeselect 321121ltsdll click inject dll see successfully injected 321121ltsdll run command bash python apppy img width1440 src voila enjoy exploring journey generous backer thank much support biggest motivation contributing contribution issue feature request welcomefeel free check issue page show support give like project announcement wechatsetup coming wechatwindowsversions wechatdllinjector wechatbot use without concern also thanks two repo owner contribution sponsor become sponsor afdian name specifically listed generous backer href img width300 src,"[('generous', 'backer'), ('welcome', 'wechatgptbot')]"
chengxuxin/extreme-parkour,Python,extreme parkour legged robot author xuxin cheng kexin shi ananye agarwal deepak pathak website paper installation bash conda create n parkour python38 conda activate parkour cd pip3 install torch1100cu113 torchvision0111cu113 torchaudio0100cu113 f git clone gitgithubcomchengxuxinextremeparkourgit cd extremeparkour download isaac gym binary originally trained preview3 seen bug using preview4 cd isaacgympython pip install e cd extremeparkourrslrl pip install e cd extremeparkourleggedgym pip install e pip install numpy124 pydelatin wandb tqdm opencvpython ipdb pyfqmr flask usage cd leggedgymscriptstrain base policy bash python trainpy exptid xxxxxwhatever device cuda0 train 1015k iteration 810 hour 3090 least 15k recommended train distillation policy bash python trainpy exptid yyyyywhatever device cuda0 resume resumeid xxxxx delay usecamera train 510k iteration 510 hour 3090 least 5k recommended run either base distillation policy arbitary gpu long set device cuda need set cudavisibledevices play base policy bash python playpy exptid xxxxx need write full exptid parser auto match run firststrings xxxxx better make sure reuse xxxxx delay added 8k iters want play 8k add delay play distillation policy bash python playpy exptid yyyyy delay usecamera save model deployment bash python savejitpy exptid xxxxx save model leggedgymlogsparkournewxxxxxtraced viewer usage used isaacgym web viewer alt mouse left drag mouse move view switch nextprev robot space pauseunpause f switch free camera following camera argument exptid string xxxxxwhatever xxxxx typically number whatever description run device cuda0 cpu etc delay whether add delay checkpoint specific checkpoint want load specified load latest one resume resume another checkpoint used together resumeid seed random seed nowandb wandb logging usecamera use camera scandots web used playing headless machine forward port vscode visualize seemlessly vscode idle gpu cpu live preview vscode extension required otherwise view browser tipspretrained model provided leggedgymlogsparkournew play directly 05140 base policy scandots input 05141 distillation policy depth input heading direction distillation 05142 distillation policy depth input heading direction distillation need direction distillation comment following line rslrlrslrlrunnersonpolicyrunnerpy python obsstudentinfosdeltayawok 68 yawdetachinfosdeltayawok line leggedgymleggedgymscriptsplaypy python ob 68 15yaw deployment a1 internal realsense d435i jetson xavier nx hardware code go1 support coming later acknowledgement citation found part code useful please consider citing articlecheng2023parkour titleextreme parkour legged robot authorcheng xuxin shi kexin agarwal ananye pathak deepak journalarxiv preprint arxiv230914341 year2023,"[('bash', 'python'), ('distillation', 'policy')]"
cyandterry/Like-My-GF,Python,likemygf autorobot like girlfriend post instagram girlfriend always complains care like post instagram wechat weibo comment post bla bla bla programmer really much interest time review every social network build although know using like post pretty happy ask never complained happy tool requires simplejson pythoninstagram installed pip install configuration copy configini config fill instagram api info setup target name path etc test run first time run like 20 instagram max paginate num post aware target might think crazy setup cron running everymin setup email alert everytime robot found new post include photo email support social medium weibo wechat facebookthis gonna endless maybe anyone else want use setup web api allow others register target setup engine note used work instagram team really interest update repo anymore little convinience offer might abused spammer hurt people plus add work teammate,"[('post', 'instagram'), ('like', 'post')]"
peract/peract,Python,perceiveractor perceiveractor multitask transformer robotic manipulation mohit shridhar lucas manuelli dieter fox corl 2022 peract endtoend behavior cloning agent learns perform wide variety languageconditioned manipulation task peract us transformer exploit 3d structure voxel patch learn policy demonstration per task best entrypoint understanding peract colab tutorial want apply peract problem start notebook otherwise repo mostly reproducing rlbench result paper latest update see peractgithubio guide getting started installation quickstart checkpoint pregenerated datasets model card data generation data generation training evaluation multitask training evaluation gotchas miscellaneous recording video notebook disclaimer faq docker guide license acknowledgement acknowledgement citation hotfix fire training speedup storage memory reduction ishika found switching fp32 fp16 storing pickle file dramatically speedsup training time significantly reduces memory usage checkout modification yarr installation prerequisite peract builtoff arm repository james et al prerequisite arm environment bash setup virtualenv whichever package manager prefer virtualenv p python38 systemsitepackages peractenv source peractenvbinactivate pip install upgrade pip pyrep coppelia simulator follow instruction official pyrep repo reproduced convenience pyrep requires version 41 coppeliasim download ubuntu 1604 ubuntu 1804 ubuntu 2004 downloaded coppeliasim pull pyrep git bash cd installdir git clone cd pyrep add following bashrc file note edit first line bash export coppeliasimrootedit mepathtocoppeliasiminstalldir export ldlibrarypathldlibrarypathcoppeliasimroot export qtqpaplatformpluginpathcoppeliasimroot remember source bashrc source bashrc zshrc source zshrc warning coppeliasim might cause conflict workspace finally install python library bash pip install r requirementstxt pip install good go could try running one example example folder encounter error please use pyrep issue trackerrlbench peract us rlbench fork bash cd git clone b peract note peract branch cd rlbench pip install r requirementstxt python setuppy develop running headless mode task setup issue please refer official repoyarr peract us yarr fork bash cd git clone b peract note peract branch cd yarr pip install r requirementstxt python setuppy develop peract repo clone bash cd installdir git clone install bash cd peract pip install git pip install r requirementstxt export peractrootpwd mostly used reference point tutorial python setuppy develop note might need version torch171 torchvision082 compatible cuda hardware later version also fine theory quickstart quick tutorial evaluating pretrained multitask agent download pretrained peract checkpoint trained 100 demo per task 18 task total bash cd peractroot sh scriptsquickstartdownloadsh generate small val set 10 episode opendrawer inside peractrootdata bash cd installdirrlbenchtools python datasetgeneratorpy tasksopendrawer savepathperactrootdataval imagesize128128 rendereropengl episodespertask10 processes1 allvariationstrue take minute finish evaluate pretrained peract agent bash cd peractroot cudavisibledevices0 python evalpy rlbenchtasksopendrawer rlbenchtaskname multi rlbenchdemopathperactrootdataval frameworkgpu0 frameworklogdirperactrootckpts frameworkstartseed0 frameworkevalenvs1 frameworkevalfromepsnumber0 frameworkevalepisodes10 frameworkcsvloggingtrue frameworktensorboardloggingtrue frameworkevaltype last rlbenchheadlessfalse headless machine turn visualization headlesstrue evaluate agent task first generate validation dataset like download pregenerated dataset run evalpy note dowloaded checkpoint might necessarily best one given task simply last checkpoint training download pregenerated datasets provide pregenerated rlbench demonstration train 100 episode validation 25 episode test 25 episode split used paper directly use datasets need run toolsdatageneratorpy rlbench using datasets also help reproducibility since scene randomly sampled datageneratorpy one big zip file split task instead individual file gdrive account get ratelimited everyone directly downloading huge file recommend downloading rclone google api console enabled full dataset zip file 116gb pretrained checkpoint peract 2048 latents id seed0 num task 18 training demo 100 episode per task task includes variation training iteration 600k voxel size 100x100x100 camera front leftshoulder rightshoulder wrist latents 2048 selfattention layersvoxel feature dim 64 data augmentation 45 deg yaw perturbation peract 512 latents id seed5 num task 18 training demo 100 episode per task task includes variation training iteration 600k voxel size 100x100x100 camera front leftshoulder rightshoulder wrist latents 512 selfattention layersvoxel feature dim 64 see quickstart guide evaluate checkpoint make sure frameworkstartseed set correct id data generation data generation pretty similar arm setup except use allvariationstrue sample task variation bash cd installdirrlbenchtools python datasetgeneratorpy tasksopendrawer savepathperactrootdatatrain imagesize128128 rendereropengl episodespertask100 processes1 allvariationstrue run parallel multiple task list 18 task used paper order result tablebash opendrawer slideblocktocolortarget sweeptodustpanofsize meatoffgrill turntap putitemindrawer closejar reachanddrag stackblocks lightbulbin putmoneyinsafe placewineatracklocation putgroceriesincupboard placeshapeinshapesorter pushbuttons insertontosquarepeg stackcups placecups probably train peract rlbench task 18 task handselected diversity task variation language instruction warning scene generated datageneratorpy use different random seed configure object state scene mean get different train val test set pregenerated one fine peract likely see small difference evaluation performance recommended use pregenerated datasets reproducibility using larger test set also help training evaluation following guide training everything scratch task follow 4phase workflow generate train val test datasets datageneratorpy download pregenerated datasets train agent trainpy save 10k iteration checkpoint run validation evalpy frameworkevaltypemissing find best checkpoint val task save result evaldatacsv evaluate best checkpoint evaldatacsv test task evalpy frameworkevaltypebest save final result testdatacsv make sure train val test set sufficient demo task want train evaluate training train peractbc agent 100 demo per task 600k iteration withgpus bash cudavisibledevices01234567 python trainpy methodperactbc rlbenchtasksclosejarinsertontosquarepeglightbulbinmeatoffgrillopendrawerplacecupsplaceshapeinshapesorterpushbuttonsputgroceriesincupboardputitemindrawerputmoneyinsafereachanddragstackblocksstackcupsturntapplacewineatracklocationslideblocktocolortargetsweeptodustpanofsize rlbenchtaskname multi18t rlbenchcamerasfrontleftshoulderrightshoulderwrist rlbenchdemos100 rlbenchdemopathperactrootdatatrain replaybatchsize1 replaypathtmpreplay replaymaxparallelprocesses32 methodvoxelsizes100 methodvoxelpatchsize5 methodvoxelpatchstride5 methodnumlatents2048 methodtransformaugmentationapplyse3true methodtransformaugmentationaugrpy0000450 methodposencodingwithlangtrue frameworktrainingiterations600000 frameworknumweightstokeep60 frameworkstartseed0 frameworklogfreq1000 frameworksavefreq10000 frameworklogdirperactrootlogs frameworkcsvloggingtrue frameworktensorboardloggingtrue ddpnumdevices8 make sure enough diskspace replaypath frameworklogdir adjust replaymaxparallelprocesses fill replay buffer parallel based resource also train fewer gpus training take long time converge get started probably train small number rlbenchtasks use tensorboard monitor training progress log inside frameworklogdir validation evaluate peractbc seed0 18 val task sequentially slow bash cudavisibledevices0 python evalpy rlbenchtasksclosejarinsertontosquarepeglightbulbinmeatoffgrillopendrawerplacecupsplaceshapeinshapesorterpushbuttonsputgroceriesincupboardputitemindrawerputmoneyinsafereachanddragstackblocksstackcupsturntapplacewineatracklocationslideblocktocolortargetsweeptodustpanofsize rlbenchtaskname multi18t rlbenchdemopathperactrootdataval frameworklogdirperactrootlogs frameworkcsvloggingtrue frameworktensorboardloggingtrue frameworkevalenvs4 frameworkstartseed0 frameworkevalfromepsnumber0 frameworkevalepisodes25 frameworkevaltype missing rlbenchheadlesstrue script slowly go 10k interval checkpoint save success rate evaldatacsv evaluate checkpoint parallel use frameworkevalenvs start multiple process testing bash cudavisibledevices0 python evalpy rlbenchtasksclosejarinsertontosquarepeglightbulbinmeatoffgrillopendrawerplacecupsplaceshapeinshapesorterpushbuttonsputgroceriesincupboardputitemindrawerputmoneyinsafereachanddragstackblocksstackcupsturntapplacewineatracklocationslideblocktocolortargetsweeptodustpanofsize rlbenchtaskname multi18t rlbenchdemopathperactrootdatatest frameworklogdirperactrootlogs frameworkcsvloggingtrue frameworktensorboardloggingtrue frameworkevalenvs1 frameworkstartseed0 frameworkevalfromepsnumber0 frameworkevalepisodes25 frameworkevaltype best rlbenchheadlesstrue final result saved testdatacsv baseline ablation agent reported paper along respective config file code name paper name peractbc peract c2farmlingunetbc c2farmbc vitbclang imagebc vit bclang imagebc cnn peract ablation set bash methodnoskipconnection false methodnoperceiver false methodnolanguage false methodkeypointmethod heuristic gotchas opengl error gl error probably caused pyrender voxel visualizer see issue reference might set following environment variable depending setup bash export display0 export mesaglversionoverride41 export pyopenglplatformegl unpickling error see pickleunpicklingerror invalid load key x9e maybe one replay pickle file got corrupted quitting training script try deleting file replaypath restarting training recording video save highresolution video agent execution set cinematicrecorderenabledtrue evalpy bash cd peractroot cudavisibledevices0 python evalpy rlbenchtasksopendrawer rlbenchtaskname multi rlbenchdemopathperactrootdataval frameworkgpu0 frameworklogdirperactrootckpts frameworkstartseed0 frameworkevalenvs1 frameworkevalfromepsnumber0 frameworkevalepisodes3 frameworkcsvloggingtrue frameworktensorboardloggingtrue frameworkevaltype last rlbenchheadlesstrue cinematicrecorderenabledtrue video saved peractrootckptsmultiperactbcseed0videosopendrawerw600000s0succmp4 note rendering highresolutions super slow take long time finish disclaimer limitation code quality level desperate grad student code modular code like project endtoend small test set test set larger 25 episode parallelize evaluation easily evaluate larger test set multiple run different seed parallelization lot thing data generation evaluation slow everything done serially parallelizing process save lot time impossible task task like pushbuttons solvable peract since memory switch dp ddp paper submission wa using pytorch dataparallel multigpu training code release switched distributeddataparallel hopefully introduce new bug collision avoidance simulated evaluation use vrep internal motionplanner collision avoidance realworld experiment setup moveit use voxel grid avoiding occupied voxels yarr modification change yarr repo total mess sorry lamb optimizer lamb implementation ha issue still work maybe use fusedlamb instead limitation see appendix l paper detail faq much training data need realworld task depends complexity task 1020 demonstration agent start something useful often make mistake picking wrong object robustness probably need 50100 demostrations good way gauge much data might need setup simulated version problem evaluate agent trained 10 100 250 demonstration long train agent start seeing good evaluation performance depends number complexity diversity task also much compute take look checkpoint folder containing traindatacsv evaldatacsv testdatacsv log file give sense training loss look like evaluation performance expect multitask agent paper trained 600k iteration singletask agent trained 40k iteration 8gpu setup agent follow language instruction mean either sort bias dataset agent exploiting eg always blue block enough training data also make sure task doable referred attribute barely legible voxel grid going hard agent figure mean pick best checkpoint realrobot task ideally create validation set heldout instance choose checkpoint lowest translation rotation error also reuse training instance swap language instruction unseen goal realworld experiment paper simply chose last checkpoint replace motionplanner learnable module yes see c2farmlpr james et al need generate val test set two reasonsonetoone comparison two agent take episode test dataset use random seed spawn exact object object pose configuration every timechecking task actually solvable least expert want evaluate unsolvable task instance see issue3 reference duplicate keyframes loaded replay buffer design choice arm james et al training slow replay pickle file take much space ishika found switching fp32 fp16 storing pickle file dramatically speedsup training time significantly reduces memory usage checkout modification yarr release realrobot code datacollection execution checkout frankahtcteleopzip realrobot code peractdemointerfacepy collecting data peractagentinterfacepy executing trained model realrobot datasets see issue18 detail setup issue2 realworld setup detail docker guide coming soon notebook colab tutorial tutorial good starting point understanding dataloading training pipeline dataset visualizer coming soon see colab qprediction visualizer coming soon see colab result notebook coming soon hardware requirement peract agent paper trained withp100 card 16gb memory use fewer gpus training take long time converge tested gpu nvidia p100 cpu intel xeon quad core ram 32gb ubuntu 1604 1804 inference single gpu sufficient acknowledgement repository us code following opensource project arm original license arm license change data loading wa modified peract voxelization code wa modified ddp training perceiverio original license mit change perceiverio adapted 6dof manipulation vit original license mit change vit adapted baseline lamb optimizer original license mit change none openai clip original license mit change minor modification extract token sentence feature thanks opensourcing license peract license apache 20 perceiveractor transformer arm license voxelization data preprocessing yarr licence apache 20 rlbench licence pyrep license mit perceiver pytorch license mit lamb license mit clip license mit release note update 23nov2022 ditched pytorch lightning implemented multigpu training directly pytorch ddp could introduced bug transition refactoring repo general update 31oct2022 pushed change rlbench yarr data generation pretty similar arm except run datageneratorpy allvariationstrue able use generated datasets colab code paper wa using pytorch dataparallel train multiple gpus made code messy brittle currently stuck cleaning ddp pytorch lightning code release might bit delayed apology citation peract inproceedingsshridhar2022peract title perceiveractor multitask transformer robotic manipulation author shridhar mohit manuelli lucas fox dieter booktitle proceeding 6th conference robot learning corl year 2022 c2farm inproceedingsjames2022coarse titlecoarsetofine qattention efficient learning visual robotic manipulation via discretisation authorjames stephen wada kentaro laidlow tristan davison andrew j booktitleproceedings ieeecvf conference computer vision pattern recognition pages1373913748 year2022 perceiverio articlejaegle2021perceiver titleperceiver io general architecture structured input output authorjaegle andrew borgeaud sebastian alayrac jeanbaptiste doersch carl ionescu catalin ding david koppula skanda zoran daniel brock andrew shelhamer evan others journalarxiv preprint arxiv210714795 year2021 rlbench articlejames2020rlbench titlerlbench robot learning benchmark learning environment authorjames stephen zicong arrojo david rovick davison andrew j journalieee robotics automation letter volume5 number2 pages30193026 year2020 publisherieee question issue please file issue issue tracker,"[('bash', 'cd'), ('license', 'mit')]"
sergionr2/RacingRobot,Python,autonomous racing robot arduino raspberry pi pi camera build status codecov autonomous toy racing car camaleon team toulouse robot race 2017 humbavision team ironcar medium article video car racing robot table content detailed presentation 3d model training data 3d model training data ironcar toulouse robot race datasets run everything autonomous mode remote control mode train line detector installation recommended use image everything already installed scratch python package contributor detailed presentation wrote article medium detailed approach read en francais 3d model training data 3d model 3d model used onshapecom battery holder camera holder additional camera piece raspberry pi holder note battery holder wa designed external battery training data ironcar toulouse robot race datasets release different video taken onboard camera along labeled data label pickle file ironcar toulouse robot race video outdated toulouse dataset outdated ironcar dataset run everything installation see section installation autonomous mode compile upload code arduino cd arduino make make upload launch main script raspberry pi try follow line useful constant found constantspy python mainpy remote control mode need computer addition raspberry pi create local wifi network eg using create ap connect raspberry pi network wifi rpi launch teleoperation server use port 5556 python teleopteleopserver launch teleoperation client computer edit raspberry pi ip constantspy python teleopteleopclient enjoy control car keyboard train line detector record video teleoperation mode python teleopteleopserver v myvideo convert recorded video h264 mp4 using ffmpeg mp4box mp4box add videoh264 videomp4 split video sequence image python trainsplitvideo videomp4 pathtodatasetfolder label data using labeling tool rename json file contains label labelsjson put folder dataset folder image train neural network please change path script python traintrain f pathtodatasetfolder best model lowest error validation data saved cnnmodeltmppth test trained neural network use option test video python traintest f pathtodatasetfolder w cnnmodeltmppth installation recommended use image everything already installed need 16gb micro sd card warning data card overwritten warning smaller sd card need resize image writing link repo download image info linux image ubuntu mate 1604 raspberry pi username enstar password enstar installed software dependency project opencvpytorch current project folder racingrobot kinetic camera ssh enabled identify name sd card using fdisk l instance give devmmcblk0p1 2048 131071 129024 63m c w95 fat32 lba devmmcblk0p2 131072 30449663 30318592 145g 83 linux case sd card named devmmcblk0 p1 p2 stand partition write downloaded image sd card gunzip stdout ubunturosracingrobotimggz sudo dd bs4m ofdevmmcblk0 enjoy current project located racingrobot want back image raspberry pi sudo dd bs4m ifdevmmcblk0 gzip ubunturosracingrobotimggz scratch update pi sudo aptget update sudo aptget upgrade sudo rpiupdate arduino arduino makefile rlwrap screen mp4box sudo aptget install arduinocore arduinomk rlwrap screen gpac arduino 105 arduinomakefile opencvlibserialdev aptget pythonor opencv precompiled recommended method compile source doc tutorial raspbian tuto python package required package except pytorch torchvision found requirementstxt install using pip install r requirementstxt short pyserial tqdm progressbar pygame teleoperation enum support python zeromq teleoperation pytorch compile source rpi scikitlearn scipy pip install pyserial tqdm pygame enum34 scikitlearn scipy zeromq message passing socket remote control mode sudo aptget install libzmq3dev pip install pyzmq note using serial port need change current user permission add user dialout group right write serial port sudo usermod g dialout user need logoutlogin change taken account additional python devdependencies training neural network laptop pip install pytorch pip install torchvision raspberry pi try use pythonwheel tested wa created project download python wheel pip install torch040a0b23fa21cp27cp27mulinuxarmv7lwhl follow tutorial pytorch raspberry pi make sure leastgo swap see link sudo dd ifdevzero ofswap1 bs1m count3072 statusprogress sudo mkswap swap1 sudo swapon swap1 optional install recent version cmake scikitbuild ninja install pytorch see dependency additional dependency sudo aptget install libopenblasdev libeigen3dev libffidev forget set env variable export nocuda1 export nodistributed1 git clone recursive python setuppy install user torchvision used yet pip install torchvision user wifi rpi opencv pythonrpi compiling source cf doc tuto additional dependency sudo aptget install libtbbdev openclheaders libompdev libopenblasdev libeigen3dev sudo aptget install libatlasbasedev gfortran gstreamer cmake cmakeinstallprefixusrlocal buildopencvjavaoff buildopencvpython2on buildopencvpython3off pythondefaultexecutablewhich python installcexamplesoff dinstallpythonexampleson dbuildtiffon dwithcudaoff dwithopenglon dwithopenclon dwithippon dwithtbbon dwitheigenon dwithv4lon dwithvtkoff dbuildtestsoff dbuildperftestsoff dcmakebuildtyperelease opencv anaconda compiling source cmake dpythonexecutablehomeyournameanaconda3binpython3 dpythonincludehomeyournameanaconda3include dpythonlibraryhomeyournameanaconda3liblibpython36mso dpythonpackagespathhomeyournameanaconda3libpython36sitepackages dpythonnumpyincludedirhomeyournameanaconda3libpython36sitepackagescoreinclude dinstallpythonexampleson dbuildtiffon dbuildopencvjavaoff dwithcudaoff dwithopenglon dwithopenclon dwithippon dwithtbbon dwitheigenon dwithv4lon dwithvtkoff dbuildtestsoff dbuildperftestsoff dcmakebuildtyperelease docker support experimental info build docker image laptop image docker build f dockerdockerfilecpu racingrobotcpu build docker image raspberry pi image docker build f dockerdockerfilebaserpi3 racingrobotrpi3base docker build f dockerdockerfilerpi3 racingrobotrpi3 contributor sergio nicolas rodriguez rodriguez antonin raffin,"[('raspberry', 'pi'), ('sudo', 'aptget')]"
Salman-H/pick-place-robot,C++,pickplace robot object picking stowing 6dof kuka kr210 anthropomorphic robotic serial manipulator using salman hashmi sah517gharvardedu content introduction environment setup theoretical background design requirement design implementation testing review abbreviation dof degree freedom robot operating system arc amazon robotics challenge international space station eva extra vehicular activity ee endeffector wc wrist center dh denavithartenberg fk forward kinematics ik inverse kinematics rrr revolute revolute revolute urdf unified robot description format introduction project originated udacity robotic arm pick place project turn based amazon robotics challenge sponsored amazon robotics llc fig 11 robotic arm shelving product amazon fulfillment center objective commercially viable automated picking stowing unstructured environment like picking product shelf putting shipping box still remains difficult challenge goal arc perform simplified version general task picking stowing item shelf per arc rule challenge combine object recognition pose recognition grasp planning compliant manipulation motion planning task planning task execution error detection recovery objective project demonstrate autonomous capability kr210 serial manipulator simulation pick place object semiunstructured environment within context project single pick place cycle divided following task identify target object shelf plan perform clean movement towards object efficiently grasppick target object without disturbing object plan perform clean movement towards dropoff site efficiently stowplace object dropoff site relevance capability picking placing object relies able locate point interest 3d environment planning movement trajectory point robotic manipulator industry depend capability fig 12 robotic serial manipulator found almost every industry robotic manipulator become ubiquitous almost every industry food beverage shipping packaging manufacturing foundry space palletizing food bakery precision painting automobile aircraft targeting product packaging station warehouse cutting steel manufacturing steel bridge spot welding automating foundry process assisting deployment satellite docking berthing spacecraft assisting mobility astronaut eva job require core capability namely robotic arm endeffector reach specific 3d coordinate within workspace interact environment location project aim demonstrate environment setup project us kinetic kame running ubuntu 1604 lts xenial xerus following tool used simulation motion planning gazebo physic based 3d simulator extensively used robotics world rviz 3d visualizer sensor data analysis robot state visualization moveit based software framework motion planning kinematics robot control installed proceed environment setup project verify project toolsverify version gazebo installed sh gazebo versionif installed gazebo version 770 update follows sh sudo sh c echo deb lsbrelease c main etcaptsourceslistdgazebostablelist wget sudo aptkey add sudo aptget update sudo aptget install gazebo7 create workspacecreate catkinclone download project repository src directory catkin workspace sh cd catkinwssrc git cloneinstall missing dependency sh cd catkinws rosdep install frompaths src ignoresrc rosdistrokinetic ychange permission script file turn executable sh cd catkinwssrcpickplacerobotkukaarmscripts sudo chmod ux targetspawnpy sudo chmod ux ikserverpy sudo chmod ux safespawnershbuild project sh cd catkinws catkinmakeopen bashrc file found home directory add following command end sh inform gazebo sim software look project custom 3d model export gazebomodelpathcatkinwssrcpickplacerobotkukaarmmodels autosource setupbash since pick place simulator spin different node separate terminal source catkinwsdevelsetupbash save bashrc file open new terminal change take effect test simulator simulator environment tested launching project demo mode 10 open inversekinematicslaunch file pickandplacekukaarmlaunch set demo flag true addition spawn location target object modified desired modify spawnlocation argument targetdescriptionlaunchunder pickandplacekukaarmlaunch 09 valid value spawnlocation withbeing random mode 11 launch project calling safespawner shell script fresh terminal sh cd catkinwssrcpickplacerobotkukaarmscripts safespawnersh note gazebo rviz launch within couple second close process started shell script entering ctrlc sprung terminal rerun safespawner script gazebo rviz running ensure following seen gazebo world robot shelf blue cylindrical target one shelf dropbox right next robot 12 run ikserver node new terminal window sh cd catkinwssrcpickplacerobotkukaarmscripts rosrun kukaarm ikserverpy 13 arrange gazebo rviz window sidebyside click next button left side rviz proceed state status message rviz change different stage simulation traversed next button actuation observed gazebo window theoretical background following theoretical concept used project generalized coordinate degree freedom common industrial serial manipulator workspace rotation matrix composition rotation euler angle euler theorem homogeneous transforms denavithartenberg parameter forward inverse kinematics 31 serial manipulator serial manipulator robot composed assembly link connected joint kinematic chain common type robot industry generalized coordinate generalized coordinate parameter used uniquely describe instantaneous dynamical configuration rigid multibody system relative reference configuration robotics serial manipulator used define configuration space joint space refers set possible configuration manipulator may degree freedom degree freedom dof rigid body mechanical system number independent parameter coordinate fully define configuration free space common dofs coordinate required fully describe configuration rigid body 3d free space 12 coordinate required fully describe simultaneously configuration two separate rigid body 3d free spacecoordinates required fully describe configuration two rigid body 3d free space connected joint fig 31 geometry 3dof anthropomorphic robot source narong aphiratsakun ait serial manipulator shown figure 31 ha n3 joint revolute 1dof joint connects two link making total number link n1including fixed base link therefore total number dof serial manipulator three 1dof joint note dof serial manipulator revolute andor prismatic joint always equal number joint except end manipulator fixed closed chain linkage workspace workspace robotic manipulator defined set point reached endeffectorin word simply 3d space robot mechanism work fig 32 workspace 3dof scara anthropomorphic manipulator source federicaeu figure 32 show two type serial manipulator scara anthropomorphic associated workspace figure 31 also show workspace 3dof manipulator top side perspective important note kinematic solution exists manipulator configuration joint space desired endeffector position outside workspace spherical wrist spherical wrist robotic manipulator designed arranging last three revolute joint ax rotation intersect common point referred wrist center fig 33 difference spherical nonspherical wrist source khaled elashry researchgate figure 33 show difference spherical nonspherical wrist 33 joint ax rotation b c intersect wrist center whereas 33b wrist center nonexistent physically speaking six dof serial manipulator like one figure 33 would use first three joint control position wrist center last three joint spherical wrist would orient end effector needed human arm spherical wrist important design characteristic anthropomorphic manipulator simplifies kinematic analysis demonstrated section 32 rotation coordinate frame rotation matrix mean expressing vector one coordinate frame term coordinate frame fig 34 2d geometric rotation coordinate frame b figure 32 point p expressed vector u relative coordinate frame b objective express point p vector v relative coordinate frame basis vector v vx vy expressed term basis vector u ux uy follows unit vector frame ax ay expressed term unit vector frame b bx follows substitutinginand solving dot product yield following equation first term righthand side 2d rotation matrix denoted case abr point coordinate frame b multiplied abr project onto frame word express vector u frame b vector v different frame u multiplied rotation matrix angle theta frame rotated fram b also worth noting rotation b equal transpose rotation b 33 euler angle euler angle system describe sequence composition rotation according euler rotation theorem orientation rigid body wrt fixed reference frame always described three elementary rotation given sequence shown figure 33 fig 35 defining euler angle sequence rotation source chrobotics conventionally movement three ax rotation associated angle described 3d rotation matrix figure 34 fig 36 3d counterclockwise rotation matrix describing yaw pitch roll euler angle characterized following property taitbryan v classic rotation order intrinsic body fixed v extrinsic fixed ax rotation intrinsic bodyfixed rotation performed coordinate system rotated previous rotation rotation sequence change axis orientation elemental rotation body remains fixed intrinsic sequence rotation zyx convention yaw followed pitch followed roll subsequent elemental rotation postmultiplied extrinsic fixedaxis rotation performed fixed world reference frame original coordinate frame remains motionless body change orientation extrinsic sequence rotation zyx convention yaw followed pitch followed roll subsequent elemental rotation premultiplied note extrinsic rotation sequence b c intrinsic rotation sequence c b euler angle normally taitbryan zxy convention also used robotics describing degree freedom spherical wrist robotic manipulator particular importance phenomenon associated euler angle known gimbal lock occurs loss one degree freedom result ax two three gimbal driven parrallel configuration 34 homogeneous transforms case reference frame simultaneously rotated translated transformed respect reference frame homogeneous transform matrix describes transformation fig 37 rotation translation frame b relative frame source salman hashmi bsd license figure 37 point p expressed wrt frame b objective express wrt frame would require projecting superimposing frame b onto frame ie first rotating frame b orient frame translating center b0 a0 frame aligned relationship three vector figure 37 shown equationthe desired vector point p a0 sum vector point p b0 rotated frame translation vector b0 wrt a0 equationsandare matrixforms equationso rendered software linear algebra library fig 38 anatomy homogeneous transform relationship figure 38 describes component equationthe desired vector point p wrt a0 obtained multiplying given vector point p wrt b0 homogeneous transform matrix composed block rotation matrix projecting b onto block translation vector b wrt a0 fig 39 transformation adjacent revolute joint frame shown figure 39 position endeffector known wrt coordinate reference frame c objective express wrt fixed world coordinate reference frame w position object interest manipulator environment expressed wrt world reference frame world endeffector object interacts need defined coordinate reference frame point p relative frame w found successively applying equationbetween adjacent joint process summarized term equationwith wct desired composite homogeneous transform project frame c onto frame w 35 denavithartenberg parameter homogeneous transforms adjacent link computed coordinate frame joint link transforms applied must defined denavithartenberg dh parameter four parameter describing rotation translation adjacent link definition parameter constitutes convention assigning coordinate reference frame link robotic manipulator figure 38 show socalled modified convention dh parameter defined craig jj 2005 fig 38 four parameter modified dh convention source modified wikipedia common parameter defined follows i1 twist angle zaxes link i1 measured xi1 righthand sense i1 link distance zaxes link i1 measured xi1 di link offset signed distance xaxes link i1 measured along zi joint angle xaxes link i1 measured zi righthand sense note origin frame defined intersection xi zi xaxes define common normal zi1 zi recall compute position endeffector wrt base world reference frame transforms adjacent link composed follows base frame denoted byand endeffector frame denoted n thus 0nt defines homogeneous transformation project frame n onto framemore specifically single transform link i1 given made two rotation r magnitude two displacement magnitude parameter assignment process open kinematic chain n degree freedom ie joint summarized label joint from2 n label link from1 n starting fixed base link asdraw line joint defining joint ax assign zaxis frame point along joint axis identify common normal frame zi1 zi endpoint intermediate link ie base link end effector associated two joint ax i1 fromto n1 assign xi skew ax along normal zi zi1 pointing i1 intersecting ax normal plane containing zi zi1 parallel coincident ax assignment arbitrary look way make dh parameter equal zero base link always choose frameto coincident framewhen first joint variable d1 equal zero guarantee thata0and jointis revolute d1if jointis prismatic then0 end effector frame joint n revolute choose xn direction xn1 nand origin frame n dn special case involving zi1 zi ax collinear line alphaand aparallel line alphaand aintersecting line alphaand aif common normal intersects zi origin frame di zero frame assignment made dh parameter typically presented tabular form row table corresponds homogeneous transform frame frame i1 table 31 four parameter modified dh convention 36 forward inverse kinematics forward kinematics process computing manipulator endeffector position cartesian coordinate given joint angle achieved composition homogeneous transformation map base frame onto endeffector frame taking input joint angle endeffector coordinate extracted resulting composite transform matrix relationship forward inverse kinematics depicted figure 39 fig 39 relationship forward inverse kinematics inverse kinematics reverse process ee position known set joint angle would result position need determined complicated process fk multiple solution exist ee position however joint angle solution exist ee position outside manipulator workspace two main approach solve ik problem numerical analytical later approach used project design requirement scope design limited single pickandplace cycle consists following step movement ee towards target object graspingpicking target object movement towards dropsite droppingplacing object dropsite figure 41 show step gazebo fig 41 single pickandplace cycle source gazebo primary metric interest percentage success total 10 pickandplace cycle error calculated ee position trajectory via fk compared ee position received ik service request time taken execute complete pickandplace cycle fig 42 planned ee trajectory dropoff location source rviz moveit table 41 show criterion project evaluated table 41 project evaluation criterion minimum criterion achieve success rate least 80 ee trajectory error greater 05 design implementation order perform single pickandplace operation joint angle corresponding given location target object dropoff site need determined towards goal inverse kinematic analysis performed implemented software using python 51 kinematic analysis dh parameter figure 51 show kuka kr210 serial manipulator b show zero configuration schematic indicating dh parameter zero configuration joint angle assumed zero fig 51 kuka kr210 6dof robotic manipulator schematic architecture source kuka roboter gmbh b salman hashmi bsd license note jointthere constant 90 degree offset x1 x2 following step performed construct kr210 schematic derive dh table label joint fromto nlabel link fromto ndefine zaxes joint ax joints3 andare parallel jointsandare coincident define xaxes common normal define reference frame origin joint define xaxes common normal zi1 zi define origin frame intersection xi zi add fixed frame rigidly attached linkfor gripper ee note ee reference frame oee differs linkreference frame o4 o5 o6 translation along z6 label nonzero dh parameter last step implemented using table 51 constructed kr210 urdf file kr210urdfxacro table 51 location joint relative parent joint i1 kr210 urdf file note following concerning urdf file table 51 rviz doe directly show joint reference frame instead show link reference frame th urdf file joint defined relative center origin parent joint eg rowshows location jointrelative center origin jointthe baselink table 51 depicted link0 l0 figure 51 b dh table derived figure 51 b table 51 table 52 modified dh table kr210 inverse kinematic solution approach analytical closedform approach used perform inverse kinematics approach ha two advantage much faster solve compare numerical approach easier develop rule solution appropriate additionally type robotic manipulator used anthropomorphic meet condition applicability approach ax rotation ofadjacent joint intersect single point satisfied spherical wrist design ax rotation ofadjacent joint parallel special case ofsince parallel line intersect infinity thexhomogeneous transform adjacent link sectionis shown clarity noted 12 simultaneous nonlinear equation would solved one term firstrows overall homogeneous transformation base link endeffector therefore simplify solution spherical wrist design exploited kinematically decouple position orientation endeffector original problem reduced two simpler problem solved independently find position cartesian coordinate wc geometrically compute joint angles2that physically control find composition xyz rotation r p orient ee analytically solve euler angle joint angles5 inverse position kinematics mentioned previously joints2 andcontrol position spherical wrist consisting joints5 andin position part inverse kinematics joint angles2 andare geometrically calculated position spherical wrist center wc position determined endeffector position ee using figure 52 fig 52 finding location wc relative base frame position vector wc wrt ee rwceeo simple translation along zee desired position vector wc wrt base frame found transforming rwceeo onto base frame using homogeneous transform consisting rotation matrix 0eer translation vector ee dee given d7 dh table 52 columnvector rotation matrix describes zaxis ee relative base frame cartesian coordinate wc knownandcan calculated using law cosine ss triangle edge joints3 andas shown figure 53 fig 53 calculation ofandusing ss triangle note joint angle defined rotation z adjacent x ax eg joint angleis angle x2 x3 z3 shownis joint1 angle x0 x1 measured z1 calculated using x coordinate wc relative base frame joint2 angle x1 x2 measured z2 note jointthere constant 90 degree offset x1 x2 shown figure 51 b dh table 52 w given determined law cosinesis joint3 angle x2 x3 measured z3 figure 54 b used calculatewhere 54 used comparison help visualize sag link jointsand fig 54 calculation ofand accounting sag link j3 j5 described figure 54 b finalis given sag angle b determined law cosine inverse orientation kinematics recall joints5 andconstitute spherical wrist design jointis wrist center wc orientation part inverse kinematics joint angles5 andare analytically calculated 36r composition xyz rotation roll pitch yaw orient wc thus joint angles5 andare euler angle composition rotation 36r determined 06r follows i1ir composite rotation matrix homogeneous transform i1it 03r given since joint angles2 andhave already calculated 03r longer variable as2 andcan simply substituted 01r 12r 23r respectively leaving5 andas variable 36r symbolically evaluating 36r sympy yield joint angles5 andcan analytically determined 36r 52 software implementation primary code project node ikserver kukaarm package kr210 operated based simulator environment consisting gazebo rviz moveit ikserver node receives endeffector gripper pose kr210 simulator performs inverse kinematics providing response simulator calculated joint variable value joint angle case ik analysis conducted section 51 implemented ikserver node using sympy numpy library following selected note interest regarding implementation python code conforms pepwherever possible occasional deviation accommodate sympy numpy matrix notation improves readability similarly function docstrings conformed pep 257 convention dh table kr210 constructed kr210urdfxacro file kukaarm package gripper ee orientation converted desired euler angle quaternion received ik service request using geometry transformation module urdf v dh frame misalignment gripperee pose addressed aligning urdf dh ee frame sequence intrinsic rotation 180 deg yaw 90 deg pitch sympy implementation dh table substituted individual transforms composing overall homogeneous transform base frame endeffector take considerable calculation time order several second symbolically simplify product six 4x4 transform matrix consisting trigonometric expression substituting value constant angle trigonometric expression individual matrix overall composite homogeneous transform matrix simplified much faster order millisecond described figure 53 54 account sag sidea ss triangle line segment connecting jointsandwc caused jointfirst length sidea recalculated second sag angle formed y3axis sidea calculated accounted calculation theta3 composite rotation matrix r36 symbolically evaluated using sympy calculating thetas2the ikserver node reimplemented numpy optimize speed mpmath matrix trig import replaced numpy dh params dict key redefined string instead sympy symbol q symbol replaced theta make joint variable consistent dh params moved global scope since joint variable immutable like sympy symbol sympy matrix replaced numpy matrix dh variable added function args accessed string key r03 converted float array passing numpylingalginv compute inverse remove single composite transforms required fk joint angle updated dh params dictionary calculated improve accuracy thetaandboth length sidea containing sag sag angle roundedoff high consistent number digit testing review testing implementing ikserver node pickandplace operation tested launching project test mode setting demo flag false inversekinematicslaunch file pickandplacekukaarmlaunch addition spawn location target object modified desired modify spawnlocation argument targetdescriptionlaunchunder pickandplacekukaarmlaunch 09 valid value spawnlocation withbeing random mode project launched calling safespawner shell script fresh terminal sh cd catkinwssrcpickplacerobotkukaarmscripts safespawnersh note gazebo rviz launch within couple second close process started shell script entering ctrlc sprung terminal rerun safespawner script gazebo rviz running following seen gazebo world robot shelf blue cylindrical target one shelf dropbox right next robot ikserver node run new terminal window follows sh cd catkinwssrcpickplacerobotkukaarmscripts rosrun kukaarm ikserverpy gazebo rviz window arranged sidebyside next button left side rviz window clicked proceed one state another continue button clicked continuously run complete pickandplace cycle warning terminal window safespawner shell script called need monitored failed call service calculateik error case running process need killed safespawner script called shown figure 61 status message rviz change different stage pickandplace simulation traversed actuation observed gazebo window fig 61 step followed single pickandplace cycle source gazebo moveit review primary metric interest error calculated ee trajectory since multiple joint angle value lead ee position error joint angle value reliable indicator whether ee position calculated correctly way know conclusively substitute joint angle value ik fk compare resulting ee position one received ik service request defined sectionthe three evaluation metric success rate percentage success total 10 pickandplace cycle success defined table 41 ee error error calculated ee position trajectory via fk compared one received ik request time taken average time taken total 10 pickandplace cycle figure 62 show kr210 execute planned ee trajectory dropoff location joint angle obtained ik implementation fig 62 executing planned ee trajectory source moveit cursory visual inspection animation figure 62 show trajectory received ee position ik service request correctly followed six joint kr210 observed figure 63 comprehensively compare various requested ee trajectory followed ee trajectory show overall ee position error received ee position ik request b comparison received fk ee position fig 63 visualizing planned ee trajectory associated error figure 63 show six ee position trajectory received ikserver node ik service request c e target object visible b e f dropoff location figure 63 b compare received ee position recee blue one obtained fk fkee orange six joint angle due low resulting ee overall offset error eeerror magenta blue plot point received ee position hidden behind orange plot point ee position obtained fk visual inspection also show result total 10 run simulator following result achieved success rate 100 ee error 000000006 average time 51 sec improvement addition accuracy improvement made calculation theta2 theta3 section 51 well 350x time improvement numpy implementation ikserver node following offer improvement ee error speed ensuring precision intermediate calculation result solving joint angle use quaternion instead euler angle solving ss triangle slightly faster law cosine alternative using law cosine calculate largest angle using law sine find another angle using angle triangle add 180 find last angle reference narong aphiratsakun 2015 mt411 robotic engineering asian institute technology ait siciliano et al 2010 robotics modelling planning control springer elashry khaled glynn ruairi 2014 approach automated construction using adaptive programing 5166 10100797833190466314 springer yi cao ke lu xiujuan li yi zang 2011 accurate numerical method computing 2d 3d robot workspace journal international journal advanced robotic system intech august 2011vol viii pp 113 understanding euler angle chrobotics craig jj 2005 introduction robotics mechanic control 3rd ed pearson education copyright 2017 salman hashmi see attached license,"[('ee', 'position'), ('joint', 'angle')]"
PaulDanielML/MuJoCo_RL_UR5,Python,accompanying repository master thesis tu berlin aalborg university longer active development developed earlier python day please forgive unformatted spaghetti code deep reinforcement learning robotic pick place application using purely visual observation author paul daniel paudan22gmailcom trait environment large multidiscrete actionspace high samplecost visual observation binary reward trained agent action example predicted grasp chance setup iteration relevant change it5 many object randomly piled actionspace multidiscrete second dimension rotation action it4 zcoordinate grasping calculated using depth data object vary size it3 new twofinger gripper implemented it2 grasp success check moving drop location 1000 step it1 baseline grasp success check moving straight 500 step trying close gripper fixed zcoordinate grasping object equal size repository provides several python class control robotic arm mujoco mjcontroller class used standalone class basic robot control mujoco useful trying model grasping capability alternatively method also used class like gym environment provide functionality one example might move robot back certain position every episode training might preferable compared resetting joint angle velocity controller currently also hold method image transformation might put another separate class point graspenv gym environment training reinforcement learning agent task master pick place task difference mujoco gym environment observation returned camera image instead state vector simulation meant resemble real world setup closely robot configuration used setup universal robot ur5 robotiq modelfinger gripper based resource ha since heavily modified current xmlfile ur5gripper2fingerxml python binding used come mujocopy pid controller implemented based simplepid simple inverse kinematics solver translating endeffector position joint angle ha implemented using ikpy required module installed either manually using provided requirementstxt file setup download install mujoco set license activate clone repo git clone change newly created directory cd mujocorlur5 desired activate virtual environment run pip install r requirementstxt install required package using pip first time run script us mujocour5controller class setup might happen take moment setup required use repo usage graspenv class gymenvironment training agent use rgbd data predicting pixelwise grasp success chance file exampleagentpy demonstrates use random agent environment file graspingagentpy give example training shortsighted dqnagent environment predict pixelwise grasping success pytorch created environment ha associated controller object provides functionality mjcontroller class action space pixel space specified setting height width current default 200x200 mean 40000 possible action resolution translates picking accuracy 4mm state space state observation provided dictionary containing two array rgbimage depthimage resolution action space reward function environment ha updated binary reward structure choosing pixel doe lead successful grasp choosing pixel lead successful grasp user get summary step performed console recommended train agent without rendering speed training significantly rgb part last captured observation shown updated extra window mjcontroller class example usage class method demonstrated file examplepy class mjcontroller offer high low level method controlling robot mujoco moveee high level move endeffector arm desired xyz position world coordinate done using simple inverse kinematics obeying joint limit currently collision avoidance implemented since whole repo created grasping mind delivered pose always gripper oriented vertical way top grasp actuatejointgroup low level let user specify motor activation specified group grasp us specified gripper group attempt grasp simple check done determine weather grasp wa successful result output blinking console update trial offline rl folder offline rl contains script generating learning dataset state action rewardtransitions generatedatapy used generate many file required file containing 12 transition new gripper model available new le bulky 2finger gripper wa implemented model training setup iteration image normalization added script normalizepy sample 100 image environment writes mean value standard deviation channel file reset shuffle calling environment step method rearranges pickable object random position table record grasp step method graspingenv ha optional parameter recordgrasps set true capture side camera image every time grasp made deemed successful environment allows quality control grasp without watch failed attempt captured image also useful fine tuning grasping parameter point cloud controller class wa provided new method image transformation depth2meters convert normalized depth value returned mujocopy createcameradata construct camera matrix focal length set camera position rotation based provided camera name desired image width depth world2pixel accepts xyz world position return corresponding xy pixel coordinate pixel2world accepts xy pixel coordinate depth value return xyz world position method used construct point cloud data returned controller getimagedata method joint plot method move joint optional plot parameter set true pngfile created local directory show plot joint involved trajectory containing joint angle time well target value used determine joint overshoot oscillate etc adjust controller gain based tolerance used trajectory plotted red easily determined many step joint need reach value within tolerance,"[('grasp', 'success'), ('mjcontroller', 'class')]"
probcomp/Gen.jl,Other,genjl build status gen generalpurpose probabilistic programming system programmable inference warning rapidly evolving research software see introduction documentation tutorial gen wa created mit probabilistic computing project get contact please email gencontactmitedu use gen research please cite 2019 pldi paper gen generalpurpose probabilistic programming system programmable inference cusumanotowner f saad f lew mansinghka v k proceeding 40th acm sigplan conference programming language design implementation pldi 19 pdf bibtex,"[('gen', 'generalpurpose'), ('generalpurpose', 'probabilistic')]"
mjl/particle_filter_demo,Python,simple particle filter example prompted stanford intro ai lecture robot placed maze ha idea sensor measure approximate distance nearest beacon yes know totally weird easy implement also show even simple sensor used need high resolution laser scanner arena display robot represented small green turtle belief redblue dot belief match current sensor reading belief colour change red beacon little cyan dot illustration purpose also compute mean reasonably confident particle check whether point actually center cluster point represented gray circle becomes green algorithm think actually determined robot position robot start randomly move around maze move belief updated using particle filter algorithm couple move belief converge around robot finally know particle filter really totally cool start simulation python particlefilterpy feel free experiment different maze particle count etc enjoy mjl,"[('particle', 'filter'), ('move', 'belief')]"
eclipse/repairnator,Other,repairnator opensource platform software bot github repairnator opensource project software bot github particular automated program repair build failure repair static warning repair soraldbot etc project hosted eclipse opensource foundation eclipserepairnator welcoming community welcome contribute number open issue new contributor jump say hello repairnator done nice team welcoming engineer researcher youtube video repairnator documentation entry point documentation post repairnator patch program automatically give highlevel overview repairnator medium coverage see release maven release dockerhub release license content repository licensed mit epl license,"[('repairnator', 'opensource'), ('software', 'bot')]"
ori-mrg/robotcar-dataset-sdk,Other,robotcar dataset sdk repo contains sample matlab python code viewing manipulating data oxford robotcar dataset oxford radar robotcar dataset directory extrinsics extrinsic calibration sensor vehicle matlab sample matlab code viewing manipulating data model camera model see sample python matlab code use python sample python code viewing manipulating data tag list tag dataset obtaining data oxford robotcar dataset obtain data please visit dataset website downloads chunked tar file containing 5gb chunk corresponds time window sensor recommended extract tar file directory leave data sensible heirarchical directory structure example script scraping dataset website found robotcardatasetscraper oxford radar robotcar dataset obtain data please visit dataset website downloads separated individual zip file sensor traversal recommended extract tar file directory leave data sensible heirarchical directory structure example script scraping dataset website found radarrobotcardatasetsdk,"[('robotcar', 'dataset'), ('dataset', 'website')]"
zauberzeug/nicegui,Python,href nicegui nicegui easytouse pythonbased ui framework show web browser create button dialog markdown 3d scene plot much great micro web apps dashboard robotics project smart home solution similar use case also use development example tweakingconfiguring machine learning algorithm tuning motor controller nicegui available pypi package docker image condaforge well github pypi pypi downloads conda version conda downloads docker pull github license github commit activity github issue github fork github star feature browserbased graphical user interface implicit reload code change act webserver accessed browser native mode eg desktop window standard gui element like label button checkbox switch slider input file upload simple grouping row column card dialog generalpurpose html markdown element powerful highlevel element plot graph chart render 3d scene get steering event via virtual joystick annotate overlay image interact table navigate foldable tree structure builtin timer refresh data interval even every 10 straightforward data binding refreshable function write even le code notification dialog menu provide state art user interaction shared individual web page easytouse peruser general persistence ability add custom route data response capture keyboard input global shortcut etc customize look defining primary secondary accent color livecycle event session data run jupyter notebook allows python interactive mode autocomplete support tailwind cs svg base64 emoji favicon support installation bash python3 pip install nicegui usage write nice gui file mainpy python nicegui import ui uilabel hello nicegui uibutton button onclicklambda uinotify button wa pressed uirun launch bash python3 mainpy gui available browser note nicegui automatically reload page modify code documentation example documentation hosted provides plenty live demo whole content implemented nicegui may also look indepth example nicegui wiki list great nicegui project community section tutorial growing list faq strategy using chatgpt llm get help nicegui zauberzeug like streamlit find doe much magic built top fastapi based asgi framework starlette asgi webserver uvicorn great performance ease use contributing thank interest contributing nicegui thrilled board appreciate effort make project even better growing opensource project understand take community effort achieve goal welcome kind contribution matter small big whether adding new feature fixing bug improving documentation suggesting new idea believe every contribution count add value project provided detailed guide contribute nicegui contributingmd file encourage read carefully making contribution ensure work aligns project goal standard question need help anything please hesitate reach u always support guide contribution process included web dependency see dependenciesmd list web framework nicegui depends,"[('3d', 'scene'), ('bash', 'python3')]"
Jaeyoung-Lim/mavros_controllers,C++,mavroscontrollers build test doi controller controlling mavs using mavros package offboard mode overview repository contains controller controlling mavs using mavros package following package included repo geometriccontroller trajectory tracking controller based geometric control controllermsgs custom message definition trajectorypublisher node publishing setpoints state motion primitive trajectory controller follow multiple drone getting started install px4 sitlonly simulate follow instruction shown gazebo simulation px4 documentation check necessary environment setup correctly run gazebo sitl using following command bash cd firmwaredirectory dontrun1 make px4sitldefault gazebo source px4 environment run following command bash cd firmwaredirectory source catkinwsdevelsetupbash optional source toolssetupgazebobash pwd pwdbuildpx4sitldefault export rospackagepathrospackagepathpwd export rospackagepathrospackagepathpwdtoolssitlgazebo run rest roslaunch file terminal bash roslaunch px4 posixsitllaunch need source px4 environment every new terminal open launch mavroscontrollers installing mavroscontrollers create catkin workspace folder probably already created since previous process would created present bash mkdir p catkinwssrc cd catkinws catkin init catkin config mergedevel cd catkinwssrc wstool init clone repository bash cd catkinwssrc git clone continue either wstool automatically download dependency download manually wstool wstool automates installation dependency update package problem updating package required mavroscontrollers andor package follow procedure follow next manually download dependency build section bash cd catkinws wstool merge src srcmavroscontrollersdependenciesrosinstall wstool update src j4 rosdep install frompaths src ignoresrc rosdistro rosdistro catkin build source catkinwsdevelsetupbash manually download dependency build install wstool need manually download dependency catkinsimple eigencatkin mavcomm bash cd catkinwssrc git clone git clone git clone build package bash cd catkinws catkin build source catkinwsdevelsetupbash running code remember source workspace setupbash sourcing px4 environment bash cd firmwaredirectory source catkinwsdevelsetupbash necessary source toolssetupgazebobash pwd pwdbuildpx4sitldefault export rospackagepathrospackagepathpwd export rospackagepathrospackagepathpwdtoolssitlgazebo following launch file enables geometric controller follow circular trajectory bash roslaunch geometriccontroller sitltrajectorytrackcirclelaunch uav doe takeoff please open qgroundcontrol enable virtual joystick mentioned node mavroscontrollers include following package geometriccontroller geometric controller publishes subscribes following topic parameter geometriccontrollermavname default iris geometriccontrollerctrlmode default modebodyrate geometriccontrollerenablesim default true geometriccontrollerenablegazebostate default false geometriccontrollermaxacc default 70 geometriccontrolleryawheading default 00 geometriccontrollerdragdx default 00 geometriccontrollerdragdy default 00 geometriccontrollerdragdz default 00 geometriccontrollerattctrlconstant default 02 geometriccontrollernormalizedthrustconstant default 01 published topic commandbodyratecommand mavrosmsgsattitudetarget referencepose geometrymsgsposestamped subscribed topic referencesetpoint geometrymsgstwiststamped mavrosstate mavrosmsgsstate mavroslocalpositionpose geometrymsgsposestamped gazebomodelstates gazebomsgsmodelstates mavroslocalpositionvelocity geometrymsgstwiststamped trajectorypublisher trajectory publisher publishes continous trajectory trajectorycontroller parameter trajectorypublisherinitposx default 00 trajectorypublisherinitposy default 00 trajectorypublisherinitposz default 10 trajectorypublisherupdaterate default 001 trajectorypublisherhorizon default 10 trajectorypublishermaxjerk default 100 trajectorypublishertrajectorytype default trajectorypublishernumberofprimitives default trajectorypublishershaperadius default 10 published topic referencetrajectory navmsgspath referencesetpoint geometrymsgstwiststamped subscribed topic trajectorypublishermotionselector stdmsgsint32 mavroslocalpositionpose geometrymsgsposestamped mavroslocalpositionvelocity geometrymsgstwiststamped contact jaeyoung lim jalimethzch citation case use work academic context please cite following miscjaeyounglim20192619313 author jaeyoung lim title mavroscontrollers aggressive trajectory tracking using mavros px4 enabled vehicle month mar year 2019 doi 105281zenodo2652888 url referenceslee taeyoung melvin leoky n harris mcclamroch geometric tracking control quadrotor uav sedecision control cdc 2010 49th ieee conference ieee 2010faessler matthias antonio franchi davide scaramuzza differential flatness quadrotor dynamic subject rotor drag accurate tracking highspeed trajectory ieee robot autom lett 32 2018 620626 build issue catkinsimple eigencatkin found happened clone catkinsimple eigencatkin repository try bash cd catkinwssrc git clone git clone cd catkinws catkin build mavroscontrollers source catkinwsdevelsetupbash refer issue irissdf model found try bash cd firmwaredirectory make px4sitldefault sitlgazebo refer issue gazebo simulation px4 documentation,"[('bash', 'cd'), ('git', 'clone')]"
dotchen/LearningByCheating,Python,learning cheating repo implemention paper learning cheating carla 096 learning cheating dian chen brady zhou vladlen koltun philipp krhenbhl conference robot learning corl 2019 arxiv 191212294 code carla 095 coming soon reference find repo useful research please consider citing work inproceedingschen2019lbc author chen dian zhou brady koltun vladlen krahenbuhl philipp title learning cheating booktitle conference robot learning corl year 2019 update march 2022 checkout latest followup work lav may 2021 checkout latest followup work world rail 2020 checkout submission 2020 carla challenge video summarization project please checkout video installation please refer installmd setup instruction quick start provide quick script case would like skip compiling directly use official binary release bash download carla 096 wget mkdir carlalbc tar xvzf carla096targz c carlalbc cd carlalbc download lbc git init git remote add origin rename license file avoid conflict pull mv license carlalicense git pull origin release096 wget wget mv townbin carlaue4contentcarlamapsnav create conda environment conda env create f environmentyml conda activate carla install carla client cd pythonapicarladist rm carla096py35linuxx8664egg wget easyinstall carla096py35linuxx8664egg download model checkpoint cd mkdir p ckptsimage cd ckptsimage wget wget cd mkdir p ckptspriveleged cd ckptspriveleged wget wget cd done need start carla server lbc agent running carla server open terminal inside carla directory run carlaue4sh fps10 benchmark running lbc agent open another terminal run lbc agent run lbc agent pythonpath need set correctly make sure carla pathpythonapi pythonpath inside carlalbc directory created run following command export pythonpathpwdpythonapipythonpath ensuring pythonpath set correctly run cudavisibledevices0 python benchmarkagentpy suitetown2 modelpathckptsimagemodel10th show see image model drive testing town benchmark result 096 w pedestrian fix since carla doe official 09 version support pedestrian crossing modified uptodate carla 096 support pedestrian crossing compare original benchmark change client side summarized modified navigation mesh pedestrian walk cross street modified navigation pedestrian avoid car added pedestrian teleport functionality teleported stuck causing traffic jam carla 096 cleaningup carla 095 implementation code coming soon autopilot training new weather new town new town weather corl straight 100 100 100 100 corl turning 100 100 100 100 corl nav 100 100 100 100 corl nav dynamic 100 100 100 100 priviledgedcheating agent training new weather new town new town weather corl straight 100 100 100 100 corl turning 100 100 100 100 corl nav 100 100 99 100 corl nav dynamic 100 100 100 100 stage 1purely offline agent training new weather new town new town weather corl straight 100 100 100 100 corl turning 96 100 95 98 corl nav 94 98 94 98 corl nav dynamic 95 92 88 90 stage 2online finetuned agent training new weather new town new town weather corl straight 100 100 100 100 corl turning 100 96 100 100 corl nav 100 100 98 100 corl nav dynamic 100 100 99 100 training model data collection bash python datacollectorpy datasetpathpath use nepisodes select number trajectory want collect make sure carla pathpythonapi python path add pythonpathcarla pathpythonapi call train privileged agent bash cd training python trainbirdviewpy datasetpathdata path logdirlog dir datasetpath expects folder contains train val subdirectory contain lmdb trajectory file collected data collection script logdir store model checkpoint hyperparameter configuration training loss visualization track model using tensorboard logdir logdir monitor progress expect validation loss smaller 5e3 well trained privileged model train image agent stagewarmup bash cd training python trainimagephase0py datasetpathdata path logdirlog dir pretrained teacherpathteacher path teacherpath expects path privileged agent th checkpoint make sure configjson priveleged agent trainig lie directory checkpoint stagebash cd training python trainimagephase1py datasetpathdata path logdirlog dir teacherpathteacher path ckptckpt path ckpt expects path stageth checkpoint stagedagger bash cd training python trainimagephase2py teacherpathteacher path ckptckpt path logdirlog dir ckpt expects path stageth checkpoint stage track model using tensorboard logdir logdir monitor progress note due randomness retrained model published likely need retune controller parameter benchmarking model start carla server instance carlash fps10 benchmark worldportport num run python benchmarkagentpy suitesuite name portport num modelpathmodel path create summarycsv benchmark benchmarking video benchmarksuite name benchmarking done use python viewbenchmarkresultspy modelpathbenchmarkmodel name print result table like one shown note carla nondeterministic since currently cannot control random seed server clientside random seed make sure vehicle deterministic initial position decision whether turn left right intersection nondeterministic detailed benchmark result autopilot performance autopilot suite name success rate total seed fulltown01v1 100 100100 fulltown01v2 100 5050 fulltown01v3 100 100100 fulltown01v4 100 5050 fulltown02v1 100 100100 fulltown02v2 100 5050 fulltown02v3 100 100100 fulltown02v4 100 5050 nocrashtown01v1 1000 00 300300 012 nocrashtown01v2 1000 00 150150 012 nocrashtown01v3 987 06 296300 012 nocrashtown01v4 993 12 149150 012 nocrashtown01v5 863 32 259300 012 nocrashtown01v6 827 61 124150 012 nocrashtown02v1 1000 00 300300 012 nocrashtown02v2 1000 00 150150 012 nocrashtown02v3 990 10 297300 012 nocrashtown02v4 980 20 147150 012 nocrashtown02v5 600 26 180300 012 nocrashtown02v6 587 76 88150 012 straighttown01v1 100 100100 straighttown01v2 100 5050 straighttown02v1 100 100100 straighttown02v2 100 5050 turntown01v1 100 100100 turntown01v2 100 5050 turntown02v1 100 100100 turntown02v2 100 5050 priviledgedcheating agent model checkpoint performance model512 suite name success rate total seed fulltown01v1 100 100100 fulltown01v2 100 5050 fulltown01v3 100 100100 fulltown01v4 100 5050 fulltown02v1 100 100100 fulltown02v2 100 5050 fulltown02v3 99 99100 fulltown02v4 100 5050 nocrashtown01v1 1000 00 300300 012 nocrashtown01v2 1000 00 150150 012 nocrashtown01v3 963 31 289300 012 nocrashtown01v4 973 31 146150 012 nocrashtown01v5 802 49 239298 012 nocrashtown01v6 813 58 122150 012 nocrashtown02v1 1000 00 300300 012 nocrashtown02v2 1000 00 150150 012 nocrashtown02v3 950 10 285300 012 nocrashtown02v4 933 23 140150 012 nocrashtown02v5 455 84 135297 012 nocrashtown02v6 453 95 68150 012 straighttown02v1 100 100100 straighttown02v2 100 5050 turntown02v1 100 100100 turntown02v2 100 5050 stage 1purely offline agent performance model32 suite name success rate total seed fulltown01v1 93 93100 fulltown01v2 98 4950 fulltown01v3 94 94100 fulltown01v4 96 4850 fulltown02v1 94 94100 fulltown02v2 96 4850 fulltown02v3 92 92100 fulltown02v4 94 4750 nocrashtown01v1 883 15 265300 012 nocrashtown01v2 913 31 137150 012 nocrashtown01v3 743 38 223300 012 nocrashtown01v4 713 46 107150 012 nocrashtown01v5 277 35 83300 012 nocrashtown01v6 247 23 37150 012 nocrashtown02v1 850 26 255300 012 nocrashtown02v2 807 23 121150 012 nocrashtown02v3 643 40 193300 012 nocrashtown02v4 600 40 90150 012 nocrashtown02v5 117 23 35300 012 nocrashtown02v6 113 31 17150 012 straighttown01v1 100 100100 straighttown01v2 100 5050 straighttown02v1 100 100100 straighttown02v2 100 5050 turntown01v1 96 96100 turntown01v2 100 5050 turntown02v1 97 97100 turntown02v2 100 5050 note different controller parameter submitted corl2019 yielding slightly different number original raw number shown performance model32 suite name success rate total seed fulltown01v1 94 94100 fulltown01v2 98 4950 fulltown01v3 95 95100 fulltown01v4 92 4650 fulltown02v1 94 94100 fulltown02v2 98 4950 fulltown02v3 88 88100 fulltown02v4 90 4550 straighttown01v1 100 100100 straighttown01v2 100 5050 straighttown02v1 100 100100 straighttown02v2 100 5050 turntown01v1 96 96100 turntown01v2 100 5050 turntown02v1 95 95100 turntown02v2 98 4950 stage 2online finetuned agent model checkpoint performance model10 suite name success rate total seed fulltown01v1 100 100100 fulltown01v2 100 5050 fulltown01v3 100 100100 fulltown01v4 100 5050 fulltown02v1 100 100100 fulltown02v2 100 5050 fulltown02v3 98 98100 fulltown02v4 98 4950 nocrashtown01v1 990 00 297300 012 nocrashtown01v2 893 31 134150 012 nocrashtown01v3 973 12 292300 012 nocrashtown01v4 953 31 143150 012 nocrashtown01v5 700 48 196280 012 nocrashtown01v6 627 23 94150 012 nocrashtown02v1 990 00 297300 012 nocrashtown02v2 847 31 127150 012 nocrashtown02v3 933 21 280300 012 nocrashtown02v4 700 20 105150 012 nocrashtown02v5 461 40 128278 012 nocrashtown02v6 327 95 49150 012 note run different controller parameter submitted corl2019 yielding slightly better number original raw number shown benchmark resultsvideos performance model10 suite name success rate total seed fulltown01v1 100 100100 fulltown01v2 100 5050 fulltown01v3 100 100100 fulltown01v4 96 4850 fulltown02v1 98 98100 fulltown02v2 100 5050 fulltown02v3 99 99100 fulltown02v4 100 5050 nocrashtown01v1 970 10 291300 012 nocrashtown01v2 867 42 130150 012 nocrashtown01v3 933 06 280300 012 nocrashtown01v4 873 31 131150 012 nocrashtown01v5 707 45 212300 012 nocrashtown01v6 633 31 95150 012 nocrashtown02v1 997 06 299300 012 nocrashtown02v2 700 40 105150 012 nocrashtown02v3 940 30 281299 012 nocrashtown02v4 620 20 93150 012 nocrashtown02v5 513 31 154300 012 nocrashtown02v6 387 64 58150 012 straighttown01v1 100 100100 straighttown01v2 100 5050 straighttown02v1 100 100100 straighttown02v2 100 5050 turntown01v1 100 100100 turntown01v2 96 4850 turntown02v1 100 100100 turntown02v2 100 5050 license repo released mit license please refer license file detail part pythonapi map rendering code borrowed official carla repo mit license image augmentation code borrowed coiltraine released mit license,"[('100', '100'), ('100', '5050')]"
introlab/odas,Other,odas odas stand open embedded audition system library dedicated perform sound source localization tracking separation postfiltering odas coded entirely c portability optimized run easily lowcost embedded hardware odas free open source odas wiki describes build run software please visite odasros project odas demonstration license odas provided mit license graphical user interface gui data visualization please look odasweb project gui open source hardware introlab 8soundsusbinputs usb powered configurable microphone array 16soundsusb 16 input usb powered configurable microphone array paper find information method implemented odas paper f grondin letourneau c godin j lauzon j vincent michaud faucher f michaud odas open embedded audition system frontier robotics ai volume2022 f grondin f michaud lightweight optimized sound source localization tracking method opened closed microphone array configuration robotics autonomous system 2019,"[('microphone', 'array'), ('open', 'embedded')]"
danijar/dreamerv2,Python,status stable release pypi mastering atari discrete world model implementation dreamerv2website agent tensorflowtraining curve 55 game included img width90 src p find code useful please reference paper articlehafner2020dreamerv2 titlemastering atari discrete world model authorhafner danijar lillicrap timothy norouzi mohammad ba jimmy journalarxiv preprint arxiv201002193 year2020 website method dreamerv2 first world model agent achieves humanlevel performance atari benchmark dreamerv2 also outperforms final performance top modelfree agent rainbow iqn using amount experience computation implementation repository alternate training world model training policy collecting experience run single gpu world model learning dreamerv2 learns model environment directly highdimensional input image predicts ahead using compact learned state state consist deterministic part several categorical variable sampled prior categoricals learned kl loss world model learned endtoend via straightthrough gradient meaning gradient density set gradient sample actor critic learning dreamerv2 learns actor critic network imagined trajectory latent state trajectory start encoded state previously encountered sequence world model predicts ahead using selected action learned state prior critic trained using temporal difference learning actor trained maximize value function via reinforce straightthrough gradient information google ai blog post project website research paper using package easiest way run dreamerv2 new environment install package via pip3 install dreamerv2 code automatically detects whether environment us discrete continuous action usage example train dreamerv2 minigrid environment python import gym import gymminigrid import dreamerv2api dv2 config dv2defaultsupdate logdir logdirminigrid logevery 1e3 trainevery 10 prefill 1e5 actorent 3e3 lossscaleskl 10 discount 099 parseflags env gymmake minigriddoorkey6x6v0 env gymminigridwrappersrgbimgpartialobswrapperenv dv2trainenv config manual instruction modify dreamerv2 agent clone repository follow instruction also dockerfile available case want install dependency system get dependency sh pip3 install tensorflow260 tensorflowprobability ruamelyaml gymatari dmcontrol train atari sh python3 dreamerv2trainpy logdir logdirataripongdreamerv21 configs atari task ataripong train dm control sh python3 dreamerv2trainpy logdir logdirdmcwalkerwalkdreamerv21 configs dmcvision task dmcwalkerwalk monitor result sh tensorboard logdir logdir generate plot sh python3 commonplotpy indir logdir outdir plot xaxis step yaxis evalreturn bin 1e6 docker instruction dockerfile let run dreamerv2 without installing dependency system requires docker gpu access set check setup sh docker run rm gpus tensorflowtensorflow242gpu nvidiasmi train atari sh docker build dreamerv2 docker run rm gpus v logdirlogdir dreamerv2 python3 dreamerv2trainpy logdir logdirataripongdreamerv21 configs atari task ataripong train dm control sh docker build dreamerv2 buildarg mujocokeycat mujocomjkeytxt docker run rm gpus v logdirlogdir dreamerv2 python3 dreamerv2trainpy logdir logdirdmcwalkerwalkdreamerv21 configs dmcvision task dmcwalkerwalk tip efficient debugging use debug config configs atari debug reduces batch size increase evaluation frequency disables tffunction graph compilation easy linebyline debugging infinite gradient norm normal described loss scaling mixed precisionmixed guide disable mixed precision passing precision 32 training script mixed precision faster principle cause numerical instability accessing logged metric metric stored tensorboard json line format directly load using pandasreadjson plotting script also store binned aggregated metric multiple run single json file easy manual plotting mixed,"[('world', 'model'), ('python3', 'dreamerv2trainpy')]"
chvmp/champ,C++,champ build status package champ quadruped controller champ champ open source development framework building new quadrupedal robot developing new control algorithm control framework based hierarchical controller highly dynamic locomotion utilizing pattern modulation impedance control implementation mit cheetah robot core feature fully autonomous using navigation stack setupassistant configure newly built robot collection preconfigured urdfs like anymal mit mini cheetah boston dynamic spot littledog gazebo simulation environment compatible diy quadruped project like spotmicroai openquadruped demo application like towr chicken head stabilization lightweight c headeronly library run sbc microcontrollers tested ubuntu 1604 kinetic ubuntu 1804 melodic installation 11 clone install dependency sudo apt install pythonrosdep cd yourwssrc git clone recursive git clone cd rosdep install frompaths src ignoresrc r want use preconfigured robot like anymal mini cheetah spot follow instruction 12 build workspace cd yourws catkinmake source yourwsdevelsetupbash quick start need physical robot run following demo building physical robot find configure run new robot step21 walking demo rviz 211 run base driver roslaunch champconfig bringuplaunch rviztrue 212 run teleop node roslaunch champteleop teleoplaunch want use joystick add joytrue argument 22 slam demo 221 run gazebo environment roslaunch champconfig gazebolaunch 222 run gmapping package movebase roslaunch champconfig slamlaunch rviztrue start mapping click 2d nav goal click drag position want robot go champ save map running roscd champconfigmaps rosrun mapserver mapsaver 23 autonomous navigation 231 run gazebo environment roslaunch champconfig gazebolaunch 232 run amcl movebase roslaunch champconfig navigatelaunch rviztrue navigate click 2d nav goal click drag position want robot go champrunning robot two way run champ real robot linux machine use package calculate joint angle send hardware interface control actuator follow guideline create actuator interface lightweight version run champ lightweight version teensy series microcontrollers use directly control actuator 31 generate robot configuration first generate configuration package using champsetupassistant follow instruction readme configure robot generated package contains urdf path robot joint link map help controller know semantics robot gait parameter hardware driver navigation parameter movebase amcl gmapping microcontroller header file gait lightweight robot description applies robot build use microcontroller run quadruped controller reference check collection robot preconfigured list popular quadruped robot like anymal mit mini cheetah boston dynamic littledog spotmicroai feel free download configuration package catkin workspace src directory try next build workspace newly generated package found cd yourws catkinmake 32 base driver run quadruped controller sensorhardware driver roslaunch myrobotconfig bringuplaunch available parameter rviz launch together rviz default false lite always set true using microcontroller run algorithm default false example usage view newly configured robot roslaunch myrobotconfig bringuplaunch rviztrue run real robot microcontroller roslaunch myrobotconfig bringuplaunch litetrue 33 creating map base driver described 32 must running run gmapping movebase run gmapping package movebase roslaunch myrobotconfig slamlaunch open rviz view map roscd champnavigationrviz rviz navigaterviz start mapping click 2d nav goal click drag position want robot go champ save map running roscd map rosrun mapserver mapsaver 34 autonomous navigation base driver described 32 must running run amcl movebase run amcl movebase roslaunch myrobotconfig navigatelaunch open rviz view map roscd champnavigationrviz rviz navigaterviz navigate click 2d nav goal click drag position want robot go champ 35 running robot gazebo run gazebo base driver simulation mode roslaunch myrobotconfig gazebolaunch take note order work urdf ha gazebo compatible ha roscontrol capability controller setup need add transmission actuator also need get physic parameter right like mass inertia foot friction useful resource getting parameter right inertial calculation list moment inertia gazebo inertial parameter also check pull request example 36 spawning multiple robot gazebo run gazebo default simulation world roslaunch champgazebo spawnworldlaunch also load world file passing world path gazeboworld argument roslaunch champgazebo spawnworldlaunch gazeboworldpathtoworldfile spawning robot roslaunch champconfig spawnrobotlaunch robotnameuniquerobotname worldinitxxposition worldinityyposition every instance spawned robot must unique robot name prevent topic transforms clashing tuning gait parameter gait configuration robot found gaitgaityaml champ setup assistant knee orientation knee bent configure robot follow following orientation dot front side robot max linear velocity x meterssecond robot maximum forwardreverse speed max linear velocity meteressecond robot maximum speed moving sideways max angular velocity z radianssecond robot maximum rotational speed stance duration second long leg spend ground walking set default025 sure higher stance duration displacement reference point leg swing height meter trajectory height swing phase leg stance height meter trajectory depth stance phase robot walking height meter distance hip ground walking take note setting parameter high get robot unstable com x translation meter use parameter move reference point x axis useful want compensate weight center mass middle robot front hip rear hip instance find robot heavier back set negative value shift reference point back odometry scaler use parameter multiplier calculated velocity dead reckoning useful compensate odometry error openloop system normally value range 10 120,"[('roslaunch', 'champconfig'), ('roslaunch', 'myrobotconfig')]"
pglira/simpleICP,Python,simpleicp repo contains implementation rather simple version iterative closest point icp algorithm various language currently implementation available language code main dependency c link nanoflann eigen cxxopts julia link nearestneighborsjl matlab link statistic machine learning toolbox octave link python link numpy scipy lmfit panda tried optimize readability code ie code structure simple possible test rather rare c version used cli interface also available matlab view simpleicp file exchange python downloads feature icp algorithm basic feature following basic feature implemented language usage signed pointtoplane distance instead pointtopoint distance error metric main reason higher convergence speed see eg better final point cloud alignment assumption point cloud differently sampled ie real pointtopoint correspondence exist estimation rigidbody transformation rotation translation movable point cloud final transformation given homogeneous transformation matrix h h r00 r01 r02 tx r10 r11 r12 ty r20 r21 r22 tz 01 r rotation matrix tx ty tz component translation vector using h movable point cloud transformed xt hx x 4byn matrix holding column homogeneous coordinate x zof single point xt resulting 4byn matrix transformed point selection fixed number correspondence fixed movable point cloud default correspondence 1000 automatic rejection potentially wrong correspondence basis median absolute deviation correspondence rejected distimediandists 3sigmad sigmad 14826maddists planarity plane used estimate normal vector see planarity defined p ev2ev3ev1 ev1 ev2 ev3 ev eigenvalue covariance matrix point used estimate normal vector correspondence rejected pi minplanarity default minplanarity 03 iteration convergence criterion tested mean standard deviation pointtoplane distance change minchange percent iteration stopped default minchange normal vector plane needed compute pointtoplane distance estimated fixed point cloud using fixed number neighbor default neighbor 10 point cloud must fully overlap ie partial overlap point cloud allowed example case bunny dataset see initial overlapping area two point cloud defined parameter maxoverlapdistance specifically correspondence selected across point fixed point cloud initial distance nearest neighbor movable point cloud maxoverlapdistance extended feature extended feature currently implemented language difference documented following table feature c julia matlab octave python observation rigidbody transformation parameter yes extended feature observation rigidbody transformation parameter useful least case subset therigidbody transformation parameter estimated accomplished setting weight individual parameter infinite see example subset therigidbody transformation parameter directly observed way eg mean manual measurement estimate rigidbody transformation parameter exist eg previous run simpleicp case observation weight set according theory least square adjustment w 1observationerror2 whereby observationerror defined stdobservationvalue observation error parameter reported simpleicp estuncertainty logging output feature introduces two new parameter rbpobservedvalues rbpobservationweights parameter exactlyelements correspond rigidbody transformation parameter following order alpha1 rotation angle around xaxis alpha2 rotation angle around yaxis alpha3 rotation angle around zaxis tx x component translation vector ty component translation vector tz z component translation vector rigidbody transformation defined nonhomogeneous coordinate follows xt rx x xt nby3 matrix original transformed movable point cloud resp translation vector r rotation matrix r thereby defined r ca2ca3 ca2sa3 sa2 ca1sa3sa1sa2ca3 ca1ca3sa1sa2sa3 sa1ca2 sa1sa3ca1sa2ca3 sa1ca3ca1sa2sa3 ca1ca2 substitution sa1 sinalpha1 ca1 cosalpha1 sa2 sinalpha2 ca2 cosalpha2 sa3 sinalpha3 ca3 cosalpha3 two parameter rbpobservedvalues rbpobservationweights used introduce additional observation least square optimization transformation parameter residual observationweight estimatedvalue observedvalue example demonstrates important combination python parameter alpha1 alpha2 alpha3 tx ty tz rbpobservedvalues 100 00 50 020 015 00 rbpobservationweights 1000 00 00 400 400 inf consequently alpha1 observed 10 degree observation weight 100 alpha2 observed since corresponding weight zero however observed value used initial value alpha2 nonlinear least square optimization alpha3 also observed ha initial value ofdegrees tx observed 020 observation weight 40 ty observed 015 observation weight 40 tz observed bewith infinite observation weight ie parameter becomes constant fixed exactly observation value thus case onlyout ofrigidbody transformation parameter estimated output implementation generate screen output example c version bunny dataset runsimpleicpsh processing dataset dragon create point cloud object select point correspondence fixed point cloud estimate normal selected point start iteration iteration correspondence meanresiduals stdresiduals orig0 767 00001 03203 767 00061 02531 773 00035 01669 771 00008 00835 741 00006 00196 762 00000 00025 775 00001 00022 convergence criterion fulfilled stop iteration estimated transformation matrix h 0998696 0052621 0034179 0206737 0052090 0999028 0020119 0408088 0034822 0018663 0999436 0593361 0000000 0000000 0000000 1000000 finished 1729 second test data set test data set included data subfolder example call language found runsimpleicp file eg runsimpleicpjl julia version dataset pc1 nopts pc2 nopts overlap source dragon pc1 100k pc2 100k full overlap stanford 3d scanning repository airborne lidar pc1 1340k pc2 1340k full overlap airborne lidar flight campaign austrian alp terrestrial lidar pc1 1250k pc2 1250k full overlap terrestrial lidar point cloud stone block bunny pc1 21k pc2 22k partial overlap stanford 3d scanning repository benchmark runtimes pc data set dataset c julia matlab octave python dragon 016s 399s 134s 957s 451s airborne lidar 398s 538s 1508s 1649s terrestrial lidar 362s 522s 1324s 1445s bunny 013s 038s 037s 728s 420s version input parameter correspondence neighbor used unfortunately found implementation kd tree octave yet implemented statistic thus timeconsuming exhaustive nearest neighbor search used instead larger datasets octave timing missing distance matrix doe fit memory reference please cite related paper use code articleglira2015a titlea correspondence framework al strip adjustment based variant icp algorithm authorglira philipp pfeifer norbert briese christian ressl camillo journalphotogrammetriefernerkundunggeoinformation volume2015 number4 pages275289 year2015 publishere schweizerbart sche verlagsbuchhandlung related project globalicp multiscan icp implementation matlab star history star history chart,"[('point', 'cloud'), ('transformation', 'parameter')]"
PeterFWS/Structure-PLP-SLAM,C++,structure plpslam efficient sparse mapping localization using point line plane monocular rgbd stereo camera license issue notice work based original openvslam renamed stellavslam derivative work orbslam2 without modification core algorithm wa declared conflict orbslam2 see courtesy orbslam2 granted license project gnu general public license v30 commercial purpose project please contact department augmented vision dfki german research center artificial intelligence germany technical question regarding implementation please kindly leave issue related papersf shu et al structure plpslam efficient sparse mapping localization using point line plane monocular rgbd stereo camera ieee international conference robotics automation icra 2023 updated arxiv v3 supplementary materialsf shu et al visual slam graphcut optimized multiplane reconstruction international symposium mixed augmented reality ismar poster ieee 2021 xie et al planerecnet multitask learning crosstask consistency piecewise plane detection reconstruction single rgb image british machine vision conference bmvc 2021 system workflow qualitative illustration monocular fr3structuretexturefar dataset tum rgbd livingroomtraj0 livingroomtraj2 dataset iclnuim mh04difficult dataset euroc mav sequence00 dataodometrygray dataset kitti rgbd fr2pioneerslam dataset tum rgbd officeroomtraj0 dataset iclnuim stereo mh04difficult dataset euroc mav v103difficult dataset euroc mav remark pointline slam generalized conducted kind data image sequence running planar slam segmentation need done beforehand see detail orb vocabulary already attached repository see orbvocab build pangolinviewer default dependency utilizing line segment lsd lbd develop code using opencv 346 restored implementation lsd wa removed hence use opencvyou may need restore lsd code however later version opencv restored lsd commit 9b768727080b3279c244ad595115b1d5126d32ed 01102021 able find information githistory opencv dependency g2o eigen3 pangolin dbow2 ubuntu 1804 general similar orbslam2 integrated graphcut ransac c implementation project bsd license see project doe support using docker least tested additional plane detector work take planerecnetas instance planar segmentation cnn instance segmentation used predicted depth used far example segmentation image different datasets provided downloading link see section run pointplane slam could also segment image code please see build using cmake mkdir build cd build cmake dbuildwithmarchnativeon dusepangolinvieweron dusesocketpublisheroff dusestacktraceloggeron dbowframeworkdbow2 dbuildtestsoff make j4 highlight filter gcc compiler message make j4 21 grep color ip warningerror make j4 21 grep color ip error command option run example code standard dataset eg tumrgbd buildruntumrgbdslam allowed option h help produce help message v vocab arg vocabulary file path datadir arg directory path contains dataset c config arg config file path frameskip arginterval frame skip nosleep wait next frame real time autoterm automatically terminate viewer debug debug mode evallog store trajectory tracking time evaluation p mapdb arg store map database path slam known issue crash right running slam due kind corruption error try deactivate buildwithmarch native ccmake standard slam standard datasetstumrgbd dataset monocularrgbd buildruntumrgbdslam v orbvocaborbvocabdbow2 datatumrgbdrgbddatasetfreiburg3longofficehousehold c exampletumrgbdtumrgbdmono3yamlkitti dataset monocularstereo buildrunkittislam v orbvocaborbvocabdbow2 datakittiodometrydataodometrygraydatasetsequences00 c examplekittikittimono0002yamleuroc mav dataset monocularstereo buildruneurocslam v orbvocaborbvocabdbow2 dataeurocmavmh01easymav0 c exampleeuroceurocmonoyaml run pointline slamtum rgbd monocularrgbd buildruntumrgbdslamwithline v orbvocaborbvocabdbow2 datatumrgbdrgbddatasetfreiburg3longofficehousehold c exampletumrgbdtumrgbdmono3yamliclnuim monocularrgbd buildruntumrgbdslamwithline v orbvocaborbvocabdbow2 dataiclnuimtraj3freipng c exampleiclnuimmonoyamleuroc mav monocularstereo buildruneurocslamwithline v orbvocaborbvocabdbow2 dataeurocmavmh04difficultmav0 c exampleeuroceurocmonoyamlkitti monocularstereo buildrunkittislamwithline v orbvocaborbvocabdbow2 datakittiodometrydataodometrygraydatasetsequences00 c examplekittikittimono0002yaml run relocalization mapbased image localization using prebuilt map first prebuild map using monocular rgbd slam buildruntumrgbdslamwithline v orbvocaborbvocabdbow2 datatumrgbdrgbddatasetfreiburg3longofficehousehold c exampletumrgbdtumrgbdrgbd3yaml mapdb freiburg3longofficehouseholdmsg second run monocular image localization mode notice give path rgb image folder buildrunimagelocalizationpointline v orbvocaborbvocabdbow2 datatumrgbdrgbddatasetfreiburg3longofficehouseholdrgb c exampletumrgbdtumrgbdmono3yaml mapdb freiburg3longofficehouseholdmsg run pointplane slam line activated see planarmappingparametersyaml provide instance planar segmentation mask txt file download onedrive shared tum rgbd dataset besides folder save rgb image need provide folder save segmentation mask masktxt file datatumrgbdrgbddatasetfreiburg3longofficehousehold rgb depth rgbtxt mask given download link masktxt given download link iclnuim dataset customize way tum rgbd dataset dataiclnuimlivingroomtraj0freipng rgb depth mask given download link rgbtxt given download link depthtxt given download link masktxt given download link associationstxt given download link groundtruthtxt given download link euroc mav dataset provide necessary segmentation mask downloading link save segmentation mask folder cam0 eg dataeurocmavv102mediummav0cam0seg given download link run slam piecewise planar reconstruction mapping parameter adjusted see planarmappingparametersyaml tum rgbd monocularrgbd buildrunslamplaneseg v orbvocaborbvocabdbow2 datatumrgbdrgbddatasetfreiburg3structuretexturefar c exampletumrgbdtumrgbdmono3yamliclnuim monocularrgbd buildrunslamplaneseg v orbvocaborbvocabdbow2 dataiclnuimlivingroomtraj0freipng c exampleiclnuimmonoyamleuroc mav monocularstereo v1 v2 image sequence due segmentation cnn failure factory data sequence mh0105 mentioned paperbuildruneurocslamplaneseg v orbvocaborbvocabdbow2 dataeurocmavv101easymav0 c exampleeuroceurocstereoyaml activate depthbased dense reconstruction easily activated planarmappingparametersyaml thresholddrawdensepointcloud true toy demo rgbd evaluation evo tool evoape tum datatumrgbdrgbddatasetfreiburg3structuretexturefargroundtruthtxt keyframetrajectorytxt p plotmodexy verbose important flag align se3 umeyama alignment rotation translation align correctscale sim3 umeyama alignment rotation translation scale correctscale scale alignment debug gdb gdb buildrunslamplaneseg run v orbvocaborbvocabdbow2 datatumrgbdrgbddatasetfreiburg3structuretexturefar c exampletumrgbdtumrgbdrgbd3yaml,"[('v', 'orbvocaborbvocabdbow2'), ('given', 'download')]"
mackorone/mms,C++,mm href alignright height36 altsave child src table content introduction download quick start mouse api scorekeeping cell wall cell color cell text reset button maze file building source related project citation acknowledgement introduction mm micromouse simulator make easy write test mazesolving code without physical robot test robot would behave real maze visualize robot thinking show knownunknown wall set color cell display ascii text cell simulate crashandreset scenario test algorithm custom maze file write code language want previous version mm exist old directory information micromouse see micromouse wikipedia page download download precompiled binary release page simply download asset corresponding platform window download unzip windowszip run mm exe note may get warning like microsoft defender smartscreen prevented unrecognized app starting running app might put pc risk get past warning click info run anyway macos download unzip macoszip run mm app note may get warning running application unidentified developer get past warning controlclick app select open opposed simply doubleclicking app precompiled binary platform unavailable build source quick start writing micromouse algorithm easy available template language repo arduino mackoronemmsarduino c mackoronemmsc c mackoronemmscpp java mackoronemmsjava javascript mackoronemmsjavascript python mackoronemmspython rust hardliner66mmsrs template particular language missing fret writing template easy writing stdout reading stdin implementing mouse api template like share please make pull request mouse api algorithm communicate simulator via stdinstdout issue command simply print stdout read response simply read stdin valid command listed invalid command simply ignored command return response recommended wait response issuing additional command summary c int mazewidth int mazeheight bool wallfront bool wallright bool wallleft command result crash void moveforwardint distancevoid moveforwardhalfint numhalfstepsvoid turnright void turnleft void turnright45 void turnleft45 void setwallint x int char direction void clearwallint x int char direction void setcolorint x int char color void clearcolorint x int void clearallcolor void settextint x int string text void cleartextint x int void clearalltext bool wasreset void ackreset intfloat getstatstring stat mazewidth args none action none response height maze mazeheight args none action none response width maze wallfront args none action none response true wall front robot else false wallright args none action none response true wall right robot else false wallleft args none action none response true wall left robot else false moveforward n args n optional number full step move forward defaultaction move robot forward specified number fullsteps response crash mouse cannot complete movement else ack movement completes moveforwardhalf n args n optional number half step move forward defaultaction move robot forward specified number halfsteps response crash mouse cannot complete movement else ack movement completes turnright turnright90 args none action turn robot ninty degree right response ack movement completes turnleft turnleft90 args none action turn robot ninty degree left response ack movement completes turnright45 args none action turn robot fortyfive degree right response ack movement completes turnleft45 args none action turn robot fortyfive degree left response ack movement completes setwall x args x x coordinate cell coordinate cell direction wall n e w action display wall given position response none clearwall x args x x coordinate cell coordinate cell direction wall n e w action clear wall given position response none setcolor x c args x x coordinate cell coordinate cell c character desired color action set color cell given position response none clearcolor x args x x coordinate cell coordinate cell action clear color cell given position response none clearallcolor args none action clear color cell response none settext x text args x x coordinate cell coordinate cell text desired text max length 10 action set text cell given position response none cleartext x args x x coordinate cell coordinate cell action clear text cell given position response none clearalltext args none action clear text cell response none wasreset args none action none response true reset button wa pressed else false ackreset args none action allow mouse moved back start maze response ack movement completes getstat args stat string representing stat query available stats totaldistance int totalturns int bestrundistance int bestrunturns int currentrundistance int currentrunturns int totaleffectivedistance float bestruneffectivedistance float currentruneffectivedistance float score float action none response value stat orif value exists yet value either float integer according type listed example c algorithm request stdout simulator response stdin mazewidth 16 mazewidth 16 wallleft true setwall0 w wallfront false moveforward ack turnleft ack wallfront true moveforward crash setcolor1 r settext1 whoop wasreset false wasreset true clearallcolor clearalltext ackreset ack scorekeeping stats tab display information used score algorithm efficiency tab display stats total distance total number turn also display distance number turn algorithm best starttofinish run algorithm make multiple run start tile goal distance number turn current starttofinish run also displayed another value displayed called effective distance number may differ distance moveforward called optional distance parameter moveforward called integer greater thaneach tile second tile add half point effective distance simulates mouse driving faster drive straight line tile example moveforward5 increase distance bybut increase effective distance 35 mouse incur 15point penalty next run effective distance us ackreset return start tile final score computed algorithm terminates lower score better final score depends best starttofinish run overall run according following equation score best run turn best run effective distance 01 total turn total effective distance mouse must reach goal receive score mouse never reach goal score 2000 cell wall cell wall allow robot diplay think wall exist think beginning run wall assumed nonexistent default simulator display wall discovered dark red robot explores maze set wall discovers cell color available color follows char color k black b blue gray c cyan g green orange r red w white yellow b dark blue c dark cyan dark gray g dark green r dark red dark yellow cell text printable ascii character except del used cell text invalid character newline tab replaced algorithm running simulator display distance cell center maze reset button reset button make possible test crash handling code press button simulate crash algorithm periodically check button wa pressed via wasreset algorithm reset internal state call ackreset send robot back beginning maze maze file simulator support different maze file format specified format supported feel free put pull request note order use maze simulator must nonempty rectangular fully enclosed also note official micromouse maze additional requirement inaccessible location exactly three starting wall one entrance center ha hollow center ie center peg ha wall attached ha wall attached every peg except center peg unsolvable wallfollowing robot link collection maze file micromouseonlinemazefiles map format example cell isspaces wide andspaces tall character besides space count wall wall determined checking location marked x x x x x num format format x n e w x x coordinate cell coordinate cell nif wall north side elsesif wall east side elseeif wall south side elsewif wall west side else example011101001110010111 result building source want write code simulator need build project source osspecific instruction instruction platform unavailable probably still run simulator figure window install qt download qt open source installer already qt account need make one prompted select component choose mingw build project using qtcreator download clone mm run qtcreator open mmssrcmmspro configure project use mingw build run project macos install xcode install qt download qt open source installer already qt account need make one prompted select component choose macos build project using qtcreator download clone mm run qtcreator open mmssrcmmspro configure project use clang 64bit build run project linux ubuntu install qt download qt open source installer make installer executable chmod x qtunifiedlinuxx64306onlinerun run installer executable qtunifiedlinuxx64306onlinerun already qt account need make one prompted select component choose desktop gcc 64bit installer finish qmake binary found installation directory clone build run project bash clone repo git clone gitgithubcommackoronemmsgit build simulator cd mmssrc qmake make run simulator binmms related project zdasaro wrote proxy priceton university robotics club mmscompetitionproxy p1n3appl3 created arch linux package mmsgit citation feel free open pull request want work listed paper post video repos acknowledgement name author used polypartition ivan fratric polygon triangulation qt qt company framework gui,"[('coordinate', 'cell'), ('args', 'none')]"
aniskoubaa/rosgpt,Python,rosgpt chatgpt interface ros2 humanrobot interaction rosgpt pioneering approach combine power chatgpt robot operating system redefine humanrobot interaction leveraging large language model like chatgpt rosgpt enables conversion unstructured human language actionable robotic command repository contains implementation rosgpt allowing developer explore contribute project reference paper doi author ani koubaa citation koubaa 2023 rosgpt nextgeneration humanrobot interaction chatgpt preprintsorg 2023 2023040827 bibtex citation bibtex articlekoubaa2023rosgpt titlerosgpt nextgeneration humanrobot interaction chatgpt authorkoubaa ani journalpreprintsorg year2023 volume2023 pages2023040827 doi1020944preprints2023040827v2 video demo explore rosgpt action video demonstration showcasing process getting started capability system rosgpt video demonstration rosgpt ros2 package description rosgpt ros2 package includes collection script work together provide convenient way translating natural human language text structured json command utilized robot like turtlesim turtlebot3 brief overview script rosgptpy script creates rosgpt node ros2 node rest server take post request containing natural human language text translates text structured json command via api call chatgpt script also defines ontologybased prompt help chatgpt convert human command json command rosgpt node publishes json command voicecmd topic rosgptclientnodepy script establishes ros2 client node sends post request natural human language text rosgpt rest server wait structured json command display upon receipt use ros2 run command execute node rosgptclientpy similar rosgptclientnodepy script sends post request natural human language text rosgpt rest server without implementing ros2 node solely function rest client rosgpt use python command ros2 run execute script rosgptparserturtlesimpy script implement rosgptparser subscribes voicecmd topic receives json command node par json command determines ros2 primitive required execute specified task script simple navigation task turtlesim robot considered including move rotate function rosgptparsertb3navpy script also implement rosgptparser subscribing voicecmd topic receiving json command json command parsed transformed navigation goal task turtlebot3 robot getting started get started rosgpt follow step clone repository local machine install dependency listed environment setup section following environment setup step run rosgpt flask server using bash ros2 run rosgpt rosgpt run turtlesim node using bash ros2 run turtlesim turtlesimnode run rosgptparserturtlesimpy using bash ros2 run rosgpt rosgptparserturtlesim run rosgptclientnodepy using bash ros2 run rosgpt rosgptclientnode start giving command robot using rosgptclientnode terminal example say want move forwardmeter speedand robot move forwardmeter speed environment setup rospackage wa tested using roshumble ubuntu 2204 also work rosfoxy rosversions need install following dependency add openai api key bashrc environment variable bash echo export openaiapikeyyourapikey bashrc install dependency required texttospeech functionality bash sudo aptget install libespeak1 sudo apt install roshumbleturtlesim ros2 humble verison ubuntu 2204 downgrading setuptools required bash pip3 install upgrade setuptools5802 install python dependency bash cd rosgpt pip3 install r requirementstxt build package bash colcon build packagesselect rosgpt source workspace bash source installsetupbash get started rosgpt got section getting started rosgpt rest api rosgpt rest api convenient way interacting rosgpt allows send post request natural human language text rosgpt server translate text structured json command json command used control robot like turtlesim turtlebot3 use rosgpt rest api follow step run rosgpt flask server using ros2 run rosgpt rosgpt run turtlesim node using ros2 run turtlesim turtlesimnode run rosgptparserturtlesimpy using ros2 run rosgpt rosgptparserturtlesim run rosgptclientpy using python rosgptclientpy send post request rosgpt server using curl x post h contenttype applicationjson textmove forward replace move forward natural human language text want rosgpt server translate text structured json command send back client client display json command terminal use command control turtlesim robot ros1 support ros1 earlier version robot operating system still widely used many robotics application rosgpt wa originally developed roshumble ubuntu 2204 recognize importance supporting ros1 well use rosgpt ros1 need modify roscode script corresponding roscode actively working developing functionality still workinprogress already developed extension enable rosgpt work ros1 would love hear please create pull request new branch review inclusion rosgpt repository license project licensed creative common attributionnoncommercial 40 international license free use share adapt material noncommercial purpose long provide attribution original author source contribute project still progress contribution welcome contribute please follow step fork repository github create new branch feature bugfix commit change push fork create pull request main repository submitting pull request please ensure change break build adhere project coding style question suggestion please open issue github issue tracker,"[('json', 'command'), ('ros2', 'run')]"
garrows/browser-serialport,Other,browserserialport robot browser like nodeserialport browser apps nodejs nodebots awesome html5 apps access lot apis make sense robotics like gamepadapi webrtc video data web speech api etc also get nice gui easier run also made fork johnnyfive work browserify restriction able add normal website library work chrome packaged app way get access serial port api browser incidentally since nwjs aka nodewebkit fully support chrome packaged app platform mean also use library nwjs v013 want help making first chrome app read create first app tutorial currently firefox extension support might come soon possible known incompatibility nodeserialport parser implemented inconsistent error message chrome ha slightly different option set databits8 stopbits2 parity none even mark odd space flowcontrol rtscts installation npm install browserserialport use opening serial port j var serialport requirebrowserserialportserialport var serialport new serialportdevttyusbserial1 baudrate 57600 opening serial port specify order path serial port required option optional described option object allows pas named option serial port initialization valid attribute option object following baudrate baud rate default 9600 one 115200 57600 38400 19200 9600 4800 2400 1800 1200 600 300 200 150 134 110 75 50 custom rate allowed hardware supported databits data bit default tomust one of7orstopbits stop bit default tomust one oforparity parity default none must one none even mark odd space buffersize size read buffer default 255 must integer value parser parser engine use read data default rawpacket strategy emits raw buffer data event function accepts eventemitter first parameter raw buffer second parameter note added support either lowercase camelcase option thanks jagautier use whichever style prefer open event must wait open event emitted readingwriting serial port open happens asynchronously installing data listener writing open event might result nothing assuming connected serial console would example j serialportonopen function consolelog open serialporton data functiondata consolelog data received data serialportwritelsn functionerr result consolelog err err consolelog result result also call open function case instanciate serialport additional flag j var serialport requirebrowserserialportserialport var serialport new serialportdevttyusbserial1 baudrate 57600 false openimmediately flag default true serialportopenfunction error error consolelog failed open error else consolelog open serialporton data functiondata consolelog data received data serialportwritelsn functionerr result consolelog err err consolelog result result list port also list port along metadata well j var serialport requirebrowserserialport serialportlistfunction err port portsforeachfunctionport consolelogportcomname consolelogportpnpid consolelogportmanufacturer parser browserserialport 200 support parser get update new data serial port follows j serialportondata function data sysputshere data write serial port sending string buffer write method follows j serialportwriteomg worksr enjoy cool thing code,"[('serial', 'port'), ('var', 'serialport')]"
MichaelGrupp/evo,Python,evo python package evaluation odometry slam linux macos window ros2 build status package provides executables small library handling evaluating comparing trajectory output odometry slam algorithm supported trajectory format tum trajectory file kitti pose file euroc mav csv groundtruth tum trajectory file ros2 bagfile geometrymsgsposestamped geometrymsgstransformstamped geometrymsgsposewithcovariancestamped geometrymsgspointstamped navmsgsodometry topic tf message see info format evo ha several advantage public benchmarking tool common tool different format algorithmic option association alignment scale adjustment monocular slam etc flexible option output plotting export eg latex plot excel table powerful configurable cli cover many use case modular core tool library custom extension faster established pythonbased tool see 1to1 reimplementation particular evaluation protocol tailored specific dataset installation upgrade installation easypeasy familiar evo support python 38 last evo version support python 27 1120 might also want use virtual environment pypi want use executables latest release version easiest way run bash pip install evo upgrade nobinary evo download package dependency pypi install upgrade depending might able use pip2 pip3 specify python version want tab completion bash terminal supported via argcomplete package unix system open new shell installation use without nobinary evo tab completion might installed properly want subscribe new release via source run repository base folder bash pip install editable upgrade nobinary evo dependency python package evo ha required dependency automatically resolved installation pip specified installrequires part setuppy file pyqt5 optional pyqt5 give enhanced gui plot figure qt5agg matplotlib backend otherwise tkagg pyqt5 already installed installing package used default see evoconfig show change plot backend afterwards run evoconfig set plotbackend qt5agg optional rosrelated feature require installation see testing package noetic iron previous version 1120 work melodic kinetic indigo command line interface installation setuppy pip following executables called globally commandline metric evoape absolute pose error evorpe relative pose error tool evotraj tool analyzing plotting exporting one trajectory evores tool comparing one multiple result file evoape evorpe evofig experimental tool reopening serialized plot saved serializeplot evoconfig tool global setting config file manipulation call command help see option eg evoape help tabcompletion command line parameter available unixlike system documentation check wiki github example workflow example trajectory source folder testdataplot multiple trajectory plot two kitti pose file ground truth using evotraj cd testdata evotraj kitti kitti00orbtxt kitti00sptamtxt refkitti00gttxt p plotmodexz run metric trajectory example calculate absolute pose error two trajectory orbslam sptam using evoape kitti00gttxt reference ground truth plot save individual result zip file evores first trajectory orb stereo mkdir result evoape kitti kitti00gttxt kitti00orbtxt va plot plotmode xz saveresults resultsorbzip second trajectory sptam evoape kitti kitti00gttxt kitti00sptamtxt va plot plotmode xz saveresults resultssptamzip process multiple result metric evores used compare multiple result file metric ie print info statistic default plot result save statistic table use result generate plot table evores resultszip p savetable resultstablecsv ipython jupyter resource interactive source code documentation open jupyter notebook metricstutorialipynb notebook folder repository info jupyter notebook see ipython installed launch ipython shell custom evo profile command evoipython contributing utility inoffical script special usecases collected contrib directory repository inofficial sense ship package distribution thus regularly tested continuous integration trouble scream piece shit software want11 first aid append h help command check wiki check previous issue open new issue contributing patch welcome preferably pull request license gpl30 later use package research footnote link repository appreciated githubcommichaelgruppevo citation bibtex miscgrupp2017evo titleevo python package evaluation odometry slam authorgrupp michael howpublishedurl year2017,"[('python', 'package'), ('odometry', 'slam')]"
kindredresearch/SenseAct,Python,senseact computational framework realworld robot learning task license repository provides implementation several reinforcement learning task multiple realworld robot task come interface similar openaigym learning algorithm plugged easily uniform manner across task task implemented based computational framework robotagent communication proposed mahmood et al 2018a call senseact computational framework agent environmentrelated computation ordered distributed among multiple concurrent process specific way senseact enables following timely communication learning agent multiple robotic device reduced latency easy systematic design robotic task reinforcement learning agent facilitate reproducible realworld reinforcement learning repository provides following realworld robotic task proposed mahmood et al 2018b benchmark task reinforcement learning algorithm universalrobots ur robotic arm tested ur software v 334310 urreacher bothjoint andjoint control urreacher2 urreacher6 dynamixel dxl actuator currently support mx64at dxlreacher dxltracker dxlreacher dxltracker irobot createrobots createmover createdocker createmover createdocker mahmood et al 2018b provide extensive result comparing multiple reinforcement learning algorithm task mahmood et al 2018a show effect different tasksetup element learning result reproduced using repository see documentation information version branch master latest official release dev current development branch installation senseact us python3 35 requirement automatically installed via pip linux mac x run followinggit clone 1cd senseact1pip install e orpip3 install e depends setup replicate experimental result paper please install tag v011 git repogit fetch tagsgit checkout tagsv011 additional instruction installing openai baseline needed running advanced example given corresponding readme additional installation step dynamixelbased task linux dynamixels controlled driver written using either ctypes robotis pyserial chosen passing either true ctypes false pyserial argument usectypesdriver parameter dynamixelbased task eg see examplesadvanceddxlreacherpy found ctypesbased driver provide substantially timely precise communication compared pyserialbased one order use ctypebased driver need install gcc relevant package compiling c library sudo aptget install gcc5 buildessential gccmultilib gmultilib run following script download compile dynamixel driver c library sudo bash setupdxlsh additional setup troubleshooting information regarding dynamixels please see dxl doc test check whether senseact installed correctly running included unit test bash cd senseact python unittest discover b support installation problem feature request general question read example api documentation create github issue senseact project join mailing list acknowledgment project developed kindred ai research team rupam mahmood dmytro korenkevych brent komer originally developed computational framework ur task william developed createtasks contributed substantially adding new feature senseact gautham vasan developed dxl task francois hogan developed simulated task james bergstra provided support guidance throughout development adrian martin scott rostrup jonathan yep developed pyserial dxl driver kindred project wa used senseact dxl communicator daniel snider oliver limoyo dylan ashley craig sherstan tested framework provided thoughtful suggestion confirmed reproducibility learning running experiment real robot citing senseact senseact computational framework urreacher task please cite mahmood et al 2018a dxl createtasks please cite mahmood et al 2018b mahmood r korenkevych komerb j bergstra j 2018a setting reinforcement learning task realworld robot ieeersj international conference intelligent robot system mahmood r korenkevych vasan g w bergstra j 2018b benchmarking reinforcement learning algorithm realworld robot proceeding 2nd annual conference robot learning,"[('reinforcement', 'learning'), ('mahmood', 'et')]"
Developer-Y/cs-video-courses,Other,computer science course video lecture introduction please check note general information list please refer contributingmd contribution guideline please feel free raise genuine issue may however ha noticed people open empty issue raise github contribution account spammer blocked welcome contribute please create pr actual collegeuniversity level course please add link small moocs basic tutorial advertisement siteschannels table content introduction computer science data structure algorithm system programming database system software engineering artificial intelligence machine learning computer network math computer scientist web programming internet technology theoretical c programming language embedded system real time system evaluation computer organization architecture security computer graphic image processing computer vision computational physic computational biology quantum computing robotics computational finance blockchain development misc course introduction computer science c 10 beauty joy computing spring 2015 dan garcia uc berkeley infocobuild 60001 introduction computer science programming python mit ocw 6001 structure interpretation computer program mit introduction computational thinking mit c 50 introduction computer science harvard university cs50tv c 61a structure interpretation computer program python uc berkeley cpsc 110 systematic program design racket university british columbia cs50 understanding technology cse 142 computer programming java programming spring 2016 university washington c 1301 intro computing gatech c 106a programming methodology stanford university lecture video c 106b programming abstraction stanford university lecture video c 106x programming abstraction c lecture video c 107 programming paradigm stanford university cmsc 150 introduction programming arcade game simpson college linfo 1104 paradigm computer programming peter van roy universite catholique de louvain belgium edx fp 101x introduction functional programming tu delft introduction problem solving programming iit kanpur introduction programming c iit kanpur programming c iit kharagpur python boot camp fall 2016 berkeley institute data science bid c 101 introduction computer science udacity 600sc introduction computer science programming spring 2011 mit ocw 600 introduction computer science programming fall 2008 mit ocw 601sc introduction electrical engineering computer science mit ocw modern c course 2018 bonn university modern c lecture tutorial 2020 vizzo stachniss university bonn data structure algorithm ec 36c data structure algorithm c spring 2020 joel porquetlupine uc davis programming data structure python 20212022 sem prof madhavan mukund cmi 6006 introduction algorithm mit ocw mit 6006 introduction algorithm spring 2020 algorithm design analysisstanford university algorithm design analysisstanford university co 226 algorithm youtube princeton robert sedgewick kevin wayne cse 331 introduction algorithm design analysis suny university buffalo ny fall 2017 lecture homework walkthroughs cse 373 analysis algorithm stony brook prof skiena cop 3530 data structure algorithm prof sahni ufl video cs225 data structure university illinois urbanachampaign lecture cs2 data structure algorithm richard buckland unsw data structure pepperdine university c 161 design analysis algorithm prof tim roughgarden stanford university 6046j introduction algorithm fall 2005 mit ocw introduction algorithm spring 2020 mit ocw 6046 design analysis algorithm spring 2015 mit ocw c 473 algorithm university illinois urbanachampaign note jeff erickson youtube comp300e programming challenge prof skiena hong kong university science technology 2009 16s4102 algorithm university virginia youtube c 61b data structure java uc berkeley c 170 algorithm ucberkeley fall 2018 youtube fall 2018bilibili 2013 bilibili ec 122a algorithm design analysis uc davis csep 521 applied algorithm winter 2013 university washington video data structure algorithm iit delhi design analysis algorithm iit bombay programming data structure algorithm iit madras design analysis algorithm iit madras fundamental algorithmsdesign analysis iit kharagpur programming data structure iit kharagpur programming data structure algorithm iit madras programming data structure algorithm python iit madras programming data structure pd iit madras cop 5536 advanced data structure prof sahni ufl video c 261 second course algorithm stanford university youtube c 224 advanced algorithm harvard university lecture video youtube c 6150 advanced algorithm fall 2016 university utah c 6150 advanced algorithm fall 2017 university utah ec 222a graduate level algorithm design analysis uc davis 6851 advanced data structure mit mit ocw 6854 advanced algorithm mit prof karger lecture cs264 beyond worstcase analysis fall 2014 tim roughgarden lecture youtube cs364a algorithmic game theory fall 2013 tim roughgarden lecture cs364b advanced mechanism design winter 2014 tim roughgarden lecture algorithm aduni 6889 algorithm planar graph beyond fall 2011 mit 6890 algorithmic lower bound fun hardness proof mit ocw computer algorithmsiit kanpur parallel algorithm iit kanpur graph theory iisc bangalore data structure mycodeschool algorithmic game theory winter 202021 uni bonn net 4120 algorithmic game theory spring 2023 upenn introduction game theory mechanism design iit kanpur system programming 15213 introduction computer system fall 2015 cmu cs361 computer system uic c 3650 computer system fall 2020 nat tuck neu lecture youtube c 4400 computer system fall 2016 uoutah system aduni cs110 principle computer system stanford operating system ec 150 operating system system programming fall 2020 joel porquetlupine uc davis cs124 operating system california institute technology fall 2018 youtube c 162 operating system system programming spring 2015 university california berkeley c 4414 operating system university virginia rustclass c 4414 operating system fall 2018 university virginia cse 421521 introduction operating system suny university buffalo ny spring 2016 lecture youtube recitation 2016 assignment walkthroughs c 377 operating system fall 16 uma 6828 operating system engineering fall 2014 6s081 operating system engineering fall 2020 cse 30341 operating system spr 2008 csep 551 operating system autumn 2014 university washington introduction operating system iit madras cs194 advanced operating system structure implementation spring 2013 infocobuild uc berkeley cse 60641 graduate operating system fall 08 advanced programming unix environment distributed system c 677 distributed operating system spring 16 uma c 436 distributed computer system u waterloo 6824 distributed system spring 2015 mit 6824 distributed system spring 2020 mit youtube distributed system lecture series distributed algorithm csep 552 pmp distributed system spring 2013 university washington video cse 490h scalable system design implementation use large scale cluster autumn 2008 university washington video mooc cloud computing concept uiuc distributed system prof pallab dasgupta edx kthx id2203 reliable distributed algorithm distributed data management technische universitat braunschweig germany information retrieval web search engine technische universitat braunschweig germany middleware distributed system w 200910 dr martin von lowis hpi cse 138 distributed system uc santa cruz spring 2020 2021 realtime system cpcs 663 realtime system video material tamu real time system iit kharagpur 6172 performance engineering software system mit ocw performance evaluation computer system iit madras storage system iisc bangalore map6264 queueing theory fau lecture ee 380 colloquium computer system stanford university lecture video database system cmpsc 431w database management system fall 2015 penn state university lecture youtube cs121 introduction relational database system fall 2016 caltech c 5530 database system spring 2016 university utah distributed data management wt 201819 hpi university potsdam mooc database stanford dbclass csep 544 database management system au 2015 university washington database design iit madras fundamental database system iit kanpur principle database management bart baesens fit9003 database system design monash university 15445 introduction database system cmu youtube2017 youtube2018 youtube2019 youtube2021 youtube2022 15721 database system cmu youtube2017 youtube2016 15721 advanced database system spring 2019 cmu cs122 relational database system implementation winter 20142015 caltech c 186 database system uc berkeley spring 2015 lecture infocobuild c 6530 graduatelevel database system fall 2016 university utah lecture youtube 68306814 database system fall 2014 informaticsdata analysis 201415 university edinburgh database management system aduni d4m signal processing database inmemory data management 2013prof hasso plattner hpi distributed data management wt 201920 dr thorsten papenbrock hpi cs122d nosql data management spring 21 prof mike carey uc irvine software engineering object oriented design ece 462 objectoriented programming using c java purdue objectoriented program design software engineering aduni oose objectoriented software engineering dr tim lethbridge object oriented system analysis design system analysis design changing world c 251 intermediate software design c version vanderbilt university oose software dev using uml java objectoriented analysis design iit kharagpur cs3 design computing richard buckland unsw informaticsobjectoriented programming 201415 university edinburgh software engineering object component 201516 university edinburgh software engineering computer science 169 software engineering spring 2015 ucberkeley computer science 169 software engineering fall 2019 ucberkeley c 5150 software engineering fall 2014 cornell university introduction service design engineering university trento italy c 164 software engineering harvard system analysis design iisc bangalore software engineering iit bombay dependable system 2014 hpi university potsdam software testing iit kharagpur software testing udacity coursecs258 2015 software debugging udacity coursecs259 2015 software engineering bauhausuni weimar software architecture c 411 software architecture design bilkent university mooc software architecture design udacity concurrency cs176 multiprocessor synchronization brown university video 2012 c 282 2014 concurrent java network programming android cse p 506 concurrency spring 2011 university washington video csep 524 parallel computation university washington video parallel programming concept wt 201314 hpi university potsdam parallel programming concept wt 201213 hpi university potsdam mobile application development mooc programming mobile application android handheld system university maryland c 193p developing application io stanford university c s76 building mobile application harvard c 251 2015 intermediate software design android app development beginner playlist thenewboston android application development tutorial thenewboston mooc developing android apps udacity mooc advanced android app development udacity csse490 android development rosehulman winter 20102011 dave fisher io course dave fisher developing ipad application visualization insight carnegie mellon university mobile computing iit madras mobile information system bauhausuni weimar artificial intelligence cs50 introduction artificial intelligence python machine learning harvard ocw c 188 introduction artificial intelligence uc berkeley spring 2015 6034 artificial intelligence mit ocw cs221 artificial intelligence principle technique autumn 2019 stanford university 15780 graduate artificial intelligence spring 14 cmu cse 592 application artificial intelligence winter 2003 university washington cs322 introduction artificial intelligence winter 201213 ubc youtube c 4804 introduction artificial intelligence fall 2016 c 5804 introduction artificial intelligence spring 2015 artificial intelligence iit kharagpur artificial intelligence iit madras artificial intelligenceprofpdasgupta iit kharagpur mooc intro artificial intelligence udacity mooc artificial intelligence robotics udacity graduate course artificial intelligence autumn 2012 university washington agentbased system 201516 university edinburgh informatics 2d reasoning agent 201415 university edinburgh artificial intelligence hochschule ravensburgweingarten deductive database knowledgebased system technische universitat braunschweig germany artificial intelligence knowledge representation reasoning iit madras semantic web technology dr harald sack hpi knowledge engineering semantic web technology dr harald sack hpi t81558 application deep neural network jeff heaton 2022 washington university st louis machine learning introduction machine learning introduction machine learning coder mooc statistical learning stanford university foundation machine learning boot camp berkeley simon institute cs155 machine learning data mining 2017 caltech note 2016 c 156 learning data caltech 10601 introduction machine learning tom mitchell 2015 cmu youtube 10601 machine learning cmu fall 2017 10701 introduction machine learning phd tom mitchell spring 2011 cmu fall 2014 spring 2015 alex smola 10 301601 introduction machine learning spring 2020 cmu 6036 machine learning broderick mit fall 2020 applied machine learning cornell tech c 5787 fall 2020 stanford cs229 machine learning course summer 2019 anand avati spring 2022 cm 165 foundation machine learning statistical inference 2020 caltech microsoft research machine learning course c 446 machine learning fall 2016 uiuc undergraduate machine learning ubc 2012 nando de freitas c 229 machine learning stanford university autumn 2018 c 189289a introduction machine learning prof jonathan shewchuk ucberkeley cpsc 340 machine learning data mining 2018 ubc cs47805780 machine learning fall 2013 cornell university cs47805780 machine learning fall 2018 cornell university youtube cse474574 introduction machine learning suny university buffalo c 53506350 machine learning fall 2016 university utah ece 5984 introduction machine learning spring 2015 virginia tech csx824ecex242 machine learning bert huang fall 2015 virginia tech sta 4273h large scale machine learning winter 2015 university toronto c 485685 machine learning shai bendavid university waterloo stat 441841 classification winter 2017 waterloo 10605 machine learning large datasets fall 2016 cmu information theory pattern recognition neural network university cambridge python machine learning stanford crowd course initiative mooc machine learning part 1a udacitygeorgia tech part 1b partpartmachine learning pattern recognition 201516 university edinburgh introductory applied machine learning 201516 university edinburgh pattern recognition class 2012 universitat heidelberg introduction machine learning pattern recognition cbcsl osu introduction machine learning iit kharagpur introduction machine learning iit madras pattern recognition iisc bangalore pattern recognition application iit kharagpur pattern recognition iit madras machine learning summer school 2013 max planck institute intelligent system tubingen machine learning professor kogan spring 2016 rutgers cs273a introduction machine learning youtube machine learning crash course 2015 com4509com6509 machine learning adaptive intelligence 201516 10715 advanced introduction machine learning introduction machine learning spring 2018 eth zurich machine learning pedro domingo university washington advanced machine learning 2019 eth zurich machine learning comp09012 probabilistic machine learning 2020 university tubingen statistical machine learning 2020 ulrike von luxburg university tubingen coms w4995 applied machine learning spring 2020 columbia university machine learning engineer 2022 youtube 10418 10618 fall 2019 machine learning structured data orie 47415741 learning big messy data cornell machine learning iot stanford cs229m machine learning theory fall 2021 intro machine learning statistical pattern classification prof sebastian raschka cmu multimodal machine learning course 11777 fall 2020 ee104 introduction machine learning stanford university cpsc 330 applied machine learning 2020 ubc machine learning 2013 nando de freitas ubc machine learning 20142015 university oxford 1070236702 statistical machine learning larry wasserman spring 2016 cmu spring 2015 10715 advanced introduction machine learning cmu youtube c 281b scalable machine learning alex smola uc berkeley 100 day machine learning campusx hindi campusx data science mentorship program 202223 hindi statistical machine learning s2023 benyamin ghojogh mit 65940 efficientmlai lecture fall 2023 tinyml tiny machine learning upenn data mining csep 546 data mining pedro domingo sp 2016 university washington youtube c 51406140 data mining spring 2016 university utah youtube c 59556955 data mining university utah youtube statistic 202 statistical aspect data mining summer 2007 google youtube mooc text mining analytics chengxiang zhai information retrieval 2014 itunes hpi mooc data mining weka c 290 datamining lecture cs246 mining massive data set winter 2016 stanford university youtube data mining learning large datasets fall 2017 eth zurich information retrieval spring 2018 eth zurich cap6673 data mining machine learning fau lecture data warehousing data mining technique technische universitat braunschweig germany data science datathe foundation data science uc berkeley summer 17 cse519 data science fall 2016 skiena sbu c 109 data science harvard university youtube 60002 introduction computational thinking data science mit ocw data 100 summer 19 uc berkeley distributed data analytics wt 201718 hpi university potsdam statistic 133 concept computing data fall 2013 uc berkeley data profiling data cleansing w 201415 hpi university potsdam c 229r algorithm big data harvard university youtube algorithm big data iit madras python data science tclab youtube probabilistic graphical modeling mooc probabilistic graphical model coursera c 6190 probabilistic modeling spring 2016 university utah 10708 probabilistic graphical model carnegie mellon university probabilistic graphical model daphne koller stanford university probabilistic model university helsinki probabilistic modelling reasoning 201516 university edinburgh probabilistic graphical model spring 2018 notre dame deep learning full stack deep learning course 2022 full stack deep learning course 2021 nyu deep learning spring 2020 nyu deep learning spring 2021 6s191 introduction deep learning mit intro deep learning generative model course prof sebastian raschka deep learning cmu cs231n deep learning computer vision winter 2016 andrej karpathy stanford university deep learning c 182 spring 2021 10414714 deep learning system cmu youtube partpractical deep learning coder v3 fastai partdeep learning foundation fastai deep learning oxford 2015 nando de freitas selfdriving car andreas geiger 202122 youtube 6s094 deep learning selfdriving car mit cs294129 designing visualizing understanding deep neural network youtube cs230 deep learning autumn 2018 stanford university stat157 deep learning 2019 uc berkeley full stack dl bootcamp 2019 uc berkeley deep learning stanford university mooc neural network machine learning geoffrey hinton 2016 coursera deep unsupervised learning berkeley spring 2020 stat 946 deep learning university waterloo neural network class universite de sherbrooke youtube cs294158 deep unsupervised learning sp19 dlcv deep learning computer vision upc barcelona dlai deep learning artificial intelligence upc barcelona neural network application iit kharagpur uva deep learning course nvidia machine learning class deep learning winter 202021 tubingen machine learning geometric deep learning ammi math deep learning andreas geiger applied deep learning 2022 tu wien neural network zero hero andrej karpathy ci 522 deep learning u penn uva deep learning course deep learning fall 2020 georgia tech cs7015 deep learning prof mitesh khapra iit madras eth zurich deep learning scientific computing 2023 reinforcement learning cs234 reinforcement learning winter 2019 stanford university introduction reinforcement learning ucl advanced deep learning reinforcement learning ucl reinforcement learning iit madras cs885 reinforcement learning spring 2018 university waterloo c 285 deep reinforcement learning uc berkeley c 294 112 reinforcement learning nu c 6101 deep reinforcement learning ece 8851 reinforcement learning cs294112 deep reinforcement learning sp17 youtube ucl course 2015 reinforcement learning david silver deepmind youtube deep rl bootcamp berkeley aug 2017 reinforcement learning iit madras reinforcement learning course kth fdd3359 2022 reinforcement learning course asu spring 2022 c 47895789 introduction reinforcement learning cornell s20ie613 online machine learning bandit algorithm reinforcement learning fall 2021 chandarlab advanced machine learning advanced machine learning 20212022 sem prof madhavan mukund cmi 18409 algorithmic aspect machine learning spring 2015 mit c 330 deep multitask meta learning fall 2019 stanford university youtube stanford cs330 deep multitask meta learning autumn 2022 natural language processing c 224n natural language processing deep learning stanford university lecture winter 2019 lecture winter 2021 c 224n natural language processing stanford university lecture video stanford xcs224u natural language understanding spring 2023 c 124 language information stanford university fastai codefirst intro natural language processing github mooc natural language processing coursera university michigan natural language processing ut austin greg durrett cs224u natural language understanding spring 2019 stanford university deep learning natural language processing 2017 oxford university accelerated natural language processing 201516 university edinburgh natural language processing iit bombay cmu advanced nlp 2021 cmu neural net nlp 2021 natural language processing michael collins columbia university cmu cs11737 multilingual natural language processing uma cs685 advanced natural language processing spring 2022 natural language processing cmsc 470 ml based computer vision c 231n convolutional neural network visual recognition stanford university c 198126 modern computer vision fall 2022 uc berkeley machine learning robotics computer vision w 20132014 tu munchen youtube informaticscognitive science 201516 university edinburgh informatics 2a processing formal natural language 201617 university edinburgh computational cognitive science 201516 university edinburgh nocdeep learning visual computing iit kharagpur deep learning computer vision university michigan time series analysis 02417 time series analysis applied time series analysis optimization optimisation machine learning theory implementation hindi iit ee364a convex optimization stanford university 10725 convex optimization spring 2015 cmu 10725 convex optimization fall 2016 cmu 10725 optimization fall 2012 cmu 10801 advanced optimization randomized method cmu youtube 207 stochastic method data analysis inference optimization harvard university misc machine learning topic quantum machine learning 2021 qiskit global summer school c 6955 clustering spring 2015 university utah info 290 analyzing big data twitter uc berkeley school information youtube cam 383m statistical discrete method scientific computing university texas cs224w machine learning graph spring 2021 stanford university 9520 statistical learning theory application fall 2015 mit reinforcement learning ucl regularization method machine learning 2016 youtube statistical inference big data university toronto reinforcement learning 201516 university edinburgh reinforcement learning iit madras statistical rethinking winter 2015 richard mcelreath music information retrieval university victoria 2014 purdue machine learning summer school 2011 foundation machine learning blmmoberg edu introduction reinforcement learning ucl advanced deep learning reinforcement learning ucl web information retrieval proff l becchetti vitaletti big data system wt 201920 prof dr tilmann rabl hpi distributed data analytics wt 201718 dr thorsten papenbrock hpi introduction datacentric ai mit parallel computing scientific machine learning machine learning system design system design fight club computer network c 144 introduction computer networking stanford university fall 2013 lecture video computer networking topdown approach computer communication network rensselaer polytechnic institute fall 2001 video slide audiovideo recording podcasts professor raj jain lecture washington university st louis youtube computer network tanenbaum wetherall computer network 5e video lecture csep 561 pmp network system fall 2013 university washington video csep 561 network system autumn 2008 university washington video computer network iit kharagpur introduction data communication 2013 steven gordon thammasat university thailand introduction complex network rit structural analysis visualization network data communication iit kharagpur error correcting code iisc bangalore information theory coding iit bombay complex network theory application iit kharagpur advanced 3g 4g wireless mobile communication iit kanpur broadband network concept technology iit bombay coding theory iit madras digital communication iit bombay digital voice picture communication iit kharagpur wireless ad hoc sensor network iit kharagpur internetworking tcpip prof dr christoph meinel hpi cs798 mathematical foundation computer networking university waterloo math computer scientist math course topic covered calculus 1801 single variable calculus fall 2006 mit ocw 1802 multivariable calculus fall 2007 mit ocw 1803 differential equation spring 2010 mit ocw highlight calculus gilbert strang mit ocw vector calculus engineer hkust discrete math 6042j mathematics computer science mit ocw computer science 70 001 spring 2015 cse 547 discrete mathematics prof skiena university stony brook discrete structure summer 2011 rutgers state university new jersey discrete mathematics mathematical reasoning 201516 university edinburgh discrete mathematical structure iit madras discrete structure pepperdine university probability statistic statistic crashcourse 6041 probabilistic system analysis applied probability mit ocw mit res6012 introduction probability spring 2018 mit statistic 110 probability harvard university stat 21x descriptive statistic uc berkeley stat 22x probability uc berkeley mooc statistic making sense data coursera mooc statistic one coursera probability random process iit kharagpur mooc statistical inference coursera 131b introduction probability statistic uci stats 250 introduction statistic data analysis umichigan set counting probability harvard opinionated lesson statistic youtube statistic brandon foltz statistical rethinking bayesian course using r stan lecture book 02402 introduction statistic e12 technical university denmark f17 engineering probability ecse2500 rpi purdue ece302 introduction probability data science undergraduate probability professor roman vershynin highdimensional probability mathematical statistic bayesian data analysis markov process spring 2023 causal inference course brady neal causal inference online lecture mscphd level machine learning causal inference short course causal inference jonas peter linear algebra mathematical foundation machine learning fall 2021 university chicago rebecca willett 1806 linear algebra prof gilbert strang mit ocw 18065 matrix method data analysis signal processing machine learning mit ocw linear algebra princeton university mooc coding matrix linear algebra computer science application coursera c 053 coding matrix brown university fall 14 video linear algebra review cmu first course linear algebra n j wildberger unsw introduction matrix algebra computational linear algebra fastai github engr108 introduction applied linear algebravectors matrix least square stanford university 10600 math background ml cmu mit 18065 matrix method data analysis signal processing machine learning direct method sparse linear system prof tim davis ufl 36705 intermediate statistic larry wasserman cmu youtube combinatorics iisc bangalore advanced engineering mathematics notre dame statistical computing scientist engineer notre dame statistical computing fall 2017 notre dame mathematics machine learning lecture ulrike von luxburg tubingen machine learning essential mathematics machine learning july 2018 iit roorkee youtube lecture numerics machine learning winter 202223 tubingen machine learning nonlinear dynamic chaos steven strogatz cornell university nonlinear dynamic chaos virginia tech introduction optimization smooth manifold book epfl web programming internet technology cs50 web programming python javascript web design decal htmlcssjavascript course university california berkeley c 75 building dynamic website harvard university internet technology iit kharagpur introduction modern application development iit madras cse 199 internet work fall 2016 university buffalo open sourced elective database rail intro ruby rail university texas lecture youtube csep545 transaction processing ecommerce winter 2012 university washington video ct 310 web development colorado state university internet technology application 2012 steven gordon thammasat university thailand csci 3110 advanced topic web development fall 2011 etsu itunes csci 5710 ecommerce implementation fall 2015 etsu itunes mooc web development udacity web technology prof dr christoph meinel hpi theoretical c programming language mooc compiler stanford university c 6120 advanced compiler selfguided online course cornell university c 164 hack language uc berkeley lecture youtube theory computation shai simonson c 173 programming language brown university book c 421 programming language compiler uiuc csc 253 cpython internals tenhour codewalk python interpreter source code university rochester cse341 programming language dan grossman spring 2013 university washington csep 501 compiler construction university washington lecture youtube csep 505 programming language winter 2015 university washington dmfp discrete mathematics functional programming wheaton college c 374 algorithm model computation fall 2014 uiuc lecture video 6045 automaton computability complexity mit lecture video mooc automaton jeffrey ullman coursera cs581 theory computation portland state university lecture youtube theory computation fall 2011 uc davis tda555 introduction functional programming chalmers university technology lecture youtube philip wadler haskell lecture recording functional programming 2021 university nottingham functional programming university edinburgh 201617 mooc functional programming principle scala martin odersky cs294 program synthesis everyone mooc principle reactive programming scala coursera category theory programmer 2014 bartosz milewski youtube oregon programming language summer school proof theory type theory category theory verification 2012 lecture 2013 lecture 2014 lecture 2015 lecture 2016 lecture inf1 computation logic 2015 university edinburgh informaticsfunctional programming university edinburgh video compiler design iisc bangalore compiler design iit kanpur principle programming language iit delhi principle compiler design iisc bangalore functional programming haskell iit madras theory computation iit kanpur theory automaton formal language computation iit madras theory computation iit kanpur logic c iit delhi principle compiler design swarthmore college undergrad complexity theory cmu graduate complexity theory cmu great idea theoretical computer science cmu another link analysis boolean function cmu theoretical computer science bridging coursetutorial 2015 language translator uclouvain linfo2132 compiler design sorav bansal embedded system ee319k embedded system ut austin ee445l embedded system design lab fall 2015 utexas cs149 introduction embedded system spring 2011 ucberkeley ece 4760 designing microcontrollers fall 2016 cornell university lecture youtube ece 5760 advanced microcontroller design systemonchip spring 2016 cornell university internet thing prof dring dietmar p f moller cse 351 hardwaresoftware interface spring 16 university washington coursera ece 5030 electronic bioinstrumentation spring 2014 cornell university ececs 57806780 embedded system design spring 14 university utah embedded system class version2011 uncc embedded system using renesas rx63n processor versionuncc software engineering embedded system w 201112 hpi university potsdam embedded software testing iit madras embedded system iit delhi embedded system design iit kharagpur arm based development iit madras software engineering self adaptive system itunes hpi university potsdam ee260 embedded system robert paz iot summer school ecse 421 embedded system mcgill nocadvanced iot application iisc bangalore nocdesign internet thing iisc bangalore real time system evaluation performance evaluation computer system iit madras real time system iit karaghpur ee 380 colloquium computer system stanford university system storage iisc bangalore computer organization architecture computer organization computer work aduni c 61c machine structure uc berkeley lecture infocobuild 6004 computation structure spring 2013 mit csece 3810 computer organization fall 2015 university utah youtube digital computer organization iit kharagpur computer organization iit madras cs224 computer organization 20092010 spring bilkent university youtube playlist informatics 2c introduction computer system autumn 2016 university edinburgh computer architecture 18447 introduction computer architecture cmu lecture youtube fall 15 c 152 computer architecture engineering uc berkeley csep 548 computer architecture autumn 2012 university washington csece 6810 computer architecture spring 2016 university utah youtube mooc computer architecture david wentzlaff princeton universitycoursera computer architecture eth zurich fall 2019 digital circuit computer architecture eth zurich spring 2017 computer architecture iit delhi computer architecture iit kanpur computer architecture iit madras high performance computer architecture iit kharagpur be5b35apo computer architecture spring 2022 ctu fee youtube spring 2022 riscv simulator qtrvsim parallel computer architecture 15418 parallel computer architecture programming cmu lecture video c 267 application parallel computer spring 16 uc berkeley youtube mooc heterogeneous parallel programming coursera ece 498al programming massively parallel processor parallel computing iit delhi parallel architecture 201213 university edinburgh digital system design elec2141 digital circuit design unsw digital system design iit kharagpur digital design course 2015 uncc cs1 higher computing richard buckland unsw mooc nand tetri building modern computer first principle youtube system validation tu delft high performance computing iisc bangalore introduction arm open securitytraining intro x86 32 bit open securitytraining intermediate x86 32 bit open securitytraining design digital circuit eth zurich spring 2019 onur mutlu tu wien 2019 memory system memory system course technion summer 2018 security internet security wt 201819 hpi university potsdam 6858 computer system security mit ocw c 253 web security stanford university c 161 computer security uc berkeley 6875 cryptography spring 2018 mit csep590a practical aspect modern cryptography winter 2011 university washington video cs461ece422 computer security university illinois urbanachampaign video introduction cryptography christof paar ruhr university bochum germany ecs235b foundation computer information security uc davis ci 4930 ci 5930 offensive computer security florida state university introduction information security iit madras information security ii iit madras introduction cryptology iit roorkee cryptography network security iit kharagpur 18636 browser security stanford internet security weakness target wt 201516 wt 201213 youtube security steven gordon thammasat university thailand security cryptography steven gordon thammasat university thailand mooc cryptography coursera mooc intro information security udacity ic 444 computer network security privacy security online social network iit madras malware dynamic analysis open securitytraining youtube csn09112 network security cryptography bill buchanan edinburgh napier csn10107 security testing network forensics bill buchanan edinburgh napier csn11123 advanced cloud network forensics bill buchanan edinburgh napier csn11117 esecurity bill buchanan edinburgh napier csn08704 telecommunication bill buchanan edinburgh napier csn11128 incident response malware analysis bill buchanan edinburgh napier internet security beginner dr christoph meinel hpi offensive security reverse engineering chaplain university ali hadi computer graphic cs184 computer graphic fall 2012 uc berkeley ec 175 computer graphic fall 2009 uc davis 6837 computer graphic spring 2017 mit 6838 shape analysis spring 2017 mit introduction computer graphic iit delhi computer graphic iit madras computer graphic 2012 wolfgang huerst utrecht university c 56306630 visualization fall 2016 university utah lecture youtube advanced visualization uc davis csci e234 introduction computer graphic gpu programming harvard extension school computer graphic fall 2011 barbara hecker introduction graphic architecture ray tracing global illumination ucdavis rendering ray tracing course 2015 tu wien ec 178 introduction geometric modeling fall 2012 uc davis itunes computational geometry iit delhi c 468 differential geometry computer science stanford university lecture video cmu 15462662 computer graphic image processing computer vision mooc digital image processing dukecoursera digital image processing iit kharagpur image processing analysis uc davis c 543 computer vision spring 2017 recording cap 5415 computer vision university central florida lecture ee225b digital image processing spring 2014 uc berkeley video spring 2006 ee637 digital image processing purdue university video sp 2011 sp 2007 computer vision variational method tu munchen youtube computer vision ii multiple view geometry in2228 2016 tu munchen youtube eggn 510 image multidimensional signal processing colorado school mine eeng 512csci 512 computer vision colorado school mine computer vision visual effect rpi youtube introduction image processing rpi youtube cap 6412 advanced computer vision university central florida lecture spring 2018 digital signal processing rpi advanced vision 2014 university edinburgh photogrammetry course 201516 university bonn germany mooc introduction computer vision udacity ecse4540 intro digital image processing spring 2015 rpi machine learning computer vision winter 20172018 uniheidelberg highlevel vision cbcsl osu advanced computer vision cbcsl osu introduction image processing computer vision cbcsl osu machine learning computer vision tu munich biometrics iit kanpur quantitative big imaging 2019 eth zurich multiple view geometry computer vision 3d coordinate system remote course ge 2020 university bonn 2013 lecture modern c course cv 2020 university bonn photogrammetrycourse 2020 university bonn photogrammetry ii course 202021 university bonn 3d computer vision national university singapore computational physic astronomical data analysis using python 2021 nrc iucaa sparc workshop machine learning solar physic space weather cessi iiser kolkata datadriven method machine learning atmospheric science iisc computational astrophysics astrotwincolo 2015 astroinformatics 2019 conference caltech space science python astroniz computational biology ec 124 foundation algorithm bioinformatics dan gusfield uc davis youtube cse549 computational biology steven skiena 2010 sbu 732 system biology fall 2014 mit ocw 6802j 6874j foundation computational system biology mit ocw 6s897 machine learning healthcare 60476878 machine learning genomics fall 2020 mit 6874 mit deep learning life science spring 2021 mit 60476878 public lecture computational biology genome network evolution mit bio 84 gene health stanford university biomedical informatics 231 computational molecular biology stanford university biomedical informatics 258 genomics bioinformatics medicine stanford university 03251 introduction computational molecular biology carnegie mellon university 03712 biological modeling simulation carnegie mellon university mooc bioinformatics algorithm active learning approach uc san diegocoursera neural network biological modeling lecturer prof wulfram gerstner epfl video lecture wulfram gerstner computational neuroscience epfl introduction system biology introduction bioinformatics metuopencourseware mooc algorithm dna sequencing coursera frontier biomedical engineering w mark saltzman yale noccomputational system biology iit madras nocbioinformaticsalgorithms application iit madras data science ai neuroscience summer school caltech neuroscience quantum computing 15859bb quantum computation quantum information 2018 cmu youtube phcs 219a quantum computation prof preskill caltech quantum mechanic quantum computation umesh vazirani introduction quantum computing course 2022 nyu phys 1470 foundation quantum computing quantum information u pittsburgh introduction quantum computing layperson programmer 30 step ee225 sjsu quantum computing hardware architecture ee274 sjsu quantum physic nonphysicists 2021 eth zurich 2020 introduction quantum computing quantum hardware qiskit understanding quantum information computation qiskit lecture quantum computation quantum information iit madras quantum information computing prof dk ghosh quantum computing prof debabrata goswami building block quantum computer parttu delft building block quantum computer parttu delft quantum cryptography tu delft introduction quantum information quantum computing everyone partpartquantum computer system uchicago quantum computing determined michael nielsen quantum computing robotics rob 101 computational linear algebra university michigan youtube fall 2021 rob 102 introduction ai programming university michigan rob 311 build robot make move university michigan rob 320 robot operating system university michigan rob 501 mathematics robotics university michigan youtube rob 530 mobile robotics u michigan winter 2022 instructor maani ghaffari autorob winter 2022 university michigan deeprob winter 2023 university michigan c 223a introduction robotics stanford university 6832 underactuated robotics mit ocw cs287 advanced robotics uc berkeley fall 2019 instructor pieter abbeel c 287 advanced robotics fall 2011 uc berkeley video cmu 16715 robot dynamic 2022 cmu cmu 16745 optimal control 2023 cmu cs235 applied robot design nonrobotdesigners stanford university lecture visual navigation flying robot youtube c 205a mathematical method robotics vision graphic fall 2013 roboticsprof de luca universita di rom youtube roboticsprof de luca universita di rom youtube robot mechanic control snu introduction robotics course uncc slam lecture introduction vision robotics 201516 university edinburgh 597 autonomous mobile robotics fall 2014 780 perception autonomous driving spring 2017 me780 nonlinear state estimation robotics computer vision spring 2017 metr 42027202 robotics automation university queensland robotics iit bombay introduction machine vision 6834j cognitive robotics mit ocw hello real world robot operating system tu delft programming robotics eth zurich mechatronic system design tu delft c 206 evolutionary robotics course spring 2020 foundation robotics utec 2018i robotics youtube robotics control theory practice iit roorkee mechatronics me142 mechatronics spring 2020 uc merced mobile sensing robotics bonn university msr2 sensor state estimation course 2020 bonn university slam course 2013 bonn university engr486 robot modeling control 2014w robotics prof k pratihar iit kharagpur introduction mobile robotics 2019 universitat freiburg robot mapping w 201819 universitat freiburg mechanism robot kinematics iit kharagpur selfdriving car cyrill stachniss winter 202021 university bonn mobile sensing roboticspart stachniss jointly taught phors university bonn mobile sensing roboticsstachniss klingbeilholst university bonn aerial robotics university pennsylvania upenn modern robotics northwestern university mit 6421064212 robotic manipulation mit youtube industrial robotics automation iit ism dhanbad mee5114 advanced control robotics southern university science technology selfdriving car andreas geiger computational finance comp510 computational finance steven skiena 2007 hkust computational finance course prof grzelak financial engineering course interest rate xva prof grzelak mooc mathematical method quantitative finance university washingtoncoursera 18s096 topic mathematics application finance mit ocw computational finance universitat leipzig machine learning trading udacity act 460 sta 2502 stochastic method actuarial science university toronto mmf1928h sta 2503f pricing theory applied probability mathematical finance university toronto sta 4505h high frequency algorithmic trading university toronto mathematical finance iit guwahati quantitative finance iit kanpur financial derivative risk management iit roorkee financial mathematics iit roorkee blockchain development blockchain cryptocurrencies blockchain solidity full stack web3 development javascript blockchain fundamental decal 2018 berkeley decal blockchain developer decal spring 2018 berkeley decal cryptocurrency engineering design spring 2018 mit 15s12 blockchain money fall 2018 mit blockchain foundation use case become blockchain developer solidity beginner dapp university master solidity dapp university ipfs inter planetary file system dapp university solidity blockchain smart contract course beginner expert python tutorial freecodingcamp web 30 build realtime decentralized application misc hci cs147 introduction humancomputer interaction design stanford csep 510 human computer interaction programming designer comp1400t2 2010 unsw 08763 intro hci technology executive fall 2015 cmu 05600 hci pro seminar fall 2015 cmu game development cs50 introduction game development mit cms611j creating video game fall 2014 mooc beginning game programming c coursera geospatial introduction spatial data science autumn 2016 university chicago spatial regression analysis spring 2017 university chicago spatial data science autumn 2017 university chicago introduction geographic information system iit roorkee scicomp introduction efficient scientific computation universitat bremen c e259 xml java java servlet jsp harvard cse 40373 spr 2009 multimedia system exposing digital photography harvard extension school mooc matlab coursera computing computer scientist university michigan linux implementationadministration practicum redhat tulio llosa sims 141 search engine fall 2005 ucberkeley innovative computing harvard university linux programming scripting iit madras model checking iit madras virtual reality iit madras c 195 social implication computing spring 2015 uc berkeley youtube spatial database geographic information system technische universitat braunschweig germany german dependable system 2014 hpi university potsdam business process compliance wt 201314 hpi university potsdam design thinking digital engineering 2018 dr julia von thienen hpi cs224w social network analysis autumn 2017 stanford university missing semester c education,"[('machine', 'learning'), ('iit', 'madras')]"
vimalabs/VIMA,Python,vima general robot manipulation multimodal prompt icml 2023 website arxiv pdf pretrained modelspretrainedmodels baseline implementationbaselinesimplementation vimabench training data model cardmodelcardmd python version img src github license imagespullpng div promptbased learning ha emerged successful paradigm natural language processing single generalpurpose language model instructed perform task specified input prompt however different robotics task still tackled specialized model work show express wide spectrum robot manipulation task multimodal prompt interleaving textual visual token introduce vima visuomotor attention agent novel scalable multitask robot learner uniform sequence io interface achieved multimodal prompt architecture follows encoderdecoder transformer design proven effective scalable nlp vima encodes input sequence interleaving textual visual prompt token pretrained language model decodes robot control action autoregressively environment interaction step transformer decoder conditioned prompt via crossattention layer alternate usual causal selfattention instead operating raw pixel vima adopts objectcentric approach parse image prompt observation object offtheshelf detector flatten sequence object token design choice combined deliver conceptually simple architecture strong model data scaling property repo provide vima model code pretrained checkpoint covering spectrum model size demo eval script codebase mit licenselicense installation vima requires python 39 tested ubuntu 2004 installing vima codebase simple bash pip install git pretrained model host pretrained model covering spectrum model capacity hugging face download link listed mask rcnn model found 200m 92m 43m 20m 9m 4m 2m baseline implementation prior method work box multimodal prompting setup make best effort select number representative transformerbased agent architecture baseline reinterpret compatible vimabench include vimagato vimaflamingo vimagpt implementation found policy folder demo run live demonstration first follow instruction install vimabench run live demo bash python3 scriptsexamplepy ckptckptpath devicedevice partitionevallevel tasktask evallevel mean one four evaluation level chosen placementgeneralization combinatorialgeneralization novelobjectgeneralization noveltaskgeneralization task mean specific task template please refer task suite benchmark detail example bash python3 scriptsexamplepy ckpt200mckpt partitionplacementgeneralization taskfolloworder running command see pybullet gui pop alongside small window showing multimodal prompt robot arm move complete corresponding task note demo may work headless machine since pybullet gui requires display paper citation paper posted arxiv find work useful please consider citing u bibtex inproceedingsjiang2023vima title vima general robot manipulation multimodal prompt author yunfan jiang agrim gupta zichen zhang guanzhi wang yongqiang dou yanjun chen li feifei anima anandkumar yuke zhu linxi fan booktitle fortieth international conference machine learning year 2023,"[('multimodal', 'prompt'), ('robot', 'manipulation')]"
AnyLoc/AnyLoc,Python,anyloc towards universal visual place recognition license bsd3 star arxiv githubio github youtube hugging face space open colab global descriptor open colab cluster visualization public release iiithonedrive hugging face paper publicreleaselink table content anyloc towards universal visual place recognition table content content included repository included datasets paperswithcode badge getting started using sota anylocvladdinov2 using apis dinov2 vlad dinov1 validating result nvidia ngc singularity container setup dataset setup reference cite work content content repository follows item description demo contains standalone demo script quick start jupyter notebook gradio app run anylocvladdinov2 method also contains guide apis folder selfcontained use anything outside script contains script development use h option argument information configspy global configuration repository utility utility class function includes dinov2 hook vlad condaenvironmentyml conda environment could fail install openai clip includes git url suggest use setupcondash script requirementstxt requirement file pip virtual environment probably date customdatasets custom datalaoder implementation vpr example miscellaneous example script mixvpr minimal mixvpr inference code 10 clipwrapperpy wrapper around two clip implementation openai openclip 11 modelsmaepy mae implementation 12 dinoextractorpy dino v1 feature extractor 13 contributingmd note contributor 14 paperutils paper script formatting figure etc included repository includes following repository currently submodules subfolders directory link cloned description dvglbenchmark gmbertondeepvisualgeolocalizationbenchmark 20230212 benchmarking datasetsvg gmbertondatasetsvg 20230213 dataset download formatting cosplace gmbertoncosplace 20230320 baseline comparison included datasets release benchmarking datasets public releasepublicreleaselink download targz file herepublicreleaselink datasetsall datasets want use unzip using tar xvzf nametargz unzip directory name using benchmarking script directory storing datasets parameter progdatavgdir script see dataset setup detailed information including data directory structure look unzipping thank following source rich datasets baidu autonomous driving business unit baidu mall dataset present baidudatasetstargz queensland university technology garden point dataset present gardenstargz york university 17 place dataset present 17placestargz tokyo institute technology inria ctu prague pitts30k dataset present pitts30ktargz queensland university technology st lucia dataset present stluciatargz university oxford oxford dataset present oxfordrobotcartargz airlab cmu hawkins dataset present hawkinslongcorridortargz laurel cavern dataset present laurelcavernstargz nardo air dataset present test40midrefrot0targz rotated test40midrefrot90targz rotated fraunhofer fkie tu munich vpair dataset present vpairtargz ifremer university toulon midatlantic ridge dataset present eiffeltargz content zipped folder original source generate ground truth datasets npy file see issue information copyright dataset held original source paperswithcode badge pwc pwc pwc pwc pwc pwc pwc pwc pwc pwc pwc pwc getting started tip explore huggingface space colab notebook gpu needed clone repository bash git clone cd anyloc set conda environment also use mamba instead conda script automatically detect bash conda create n anyloc python39 conda activate anyloc bash setupcondash want install developer tool well bash setupcondash dev setup take 11 gb disk space also use existing conda environment say vlvpr bash bash setupcondash vlvpr note following public release file found public releasepublicreleaselink conda environment setup taking time could unzip condaenvtargz gb anaconda3envs folder compatibility guaranteed script folder validating result seeing main script application demo folder see list demo running anything running something script folder run pwd repository folder example python script run python scriptsscriptpy bash script run bash scriptsscriptsh demo baseline cd respective folder utilitiespy file mainly script file demo actually use demoutilitiespy file distilled minimal using latter enough implement sota method using sota anylocvladdinov2 open colab local python script using apis import utility py utility import dinov2extractfeatures utility import vlad dinov2 dinov2 feature extractor used follows py extractor dinov2extractfeaturesdinov2vitg14 desclayer descfacet devicedevice get descriptor using py make image patchable 14 14 patch c h w imgptshape hnew wnew h 14 14 w 14 14 imgpt tvfcentercrophnew wnewimgptnone main extraction ret extractorimgptnumpatches descdim vlad vlad aggregator loaded vocabulary cluster center ccenterspt file py main vlad object vlad vladnumc descdimnone cachedirospathdirnameccentersfile vladfitnone load vocabulary autodetect descdim cluster center shape numc descdim numc number cluster descdim descriptor dimension database descriptor want fit use py vladfiteinrearrangefulldbvlad n k n k n number image k number patchesdescriptors per image descriptor dimension get vlad representation multiple image use py dbvlads torchtensor vladgeneratemultifulldb shape fulldb ndb nd ddim ndb number image database nd number descriptor per image ddim descriptor dimension shape dbvlads ndb numc ddim numc number cluster center dinov1 present dinoextractorpy part demoutilitiespy initialize use follows extractor py import dinoextractor import vitextractor initialize layer key extracting descriptor extractor vitextractordinovits8 stride4 devicedevice use extract patch descriptor img einrearrangeimg c h wc h wtodevice img finterpolateimg 224 298 43 image desc extractorextractdescriptorsimg layer11 facetkey1 numdescs ddim validating result need read experimentally validating entire result enjoy demo instead building repository source following section curious mind want reproduce result note tofor contributor please follow contributing guideline mainly developersauthors pushing repository run done machine following specification cpu two intel xeon gold 5317 cpu 12c24t cpu ram 256 gb gpus four nvidia rtx 3090 gpus 24 gb 10496 cuda core storage 35 tb hdd scratch however datasets take 32 gb requirement vlad cluster center caching model etc noticed singularity sif cache tmp used 90 gb driver version nvidiasmi 5704703 cuda smi 116 use one gpu however experiment large datasets might need cpu ram efficientfast nearest neighbor search ideally 16 gb gpu also work following clone repository setup nvidia ngc container run everything inside setup datasets download format extract run script want test script folder start cloningsetting repository bash cd document git clone vlvpr nvidia ngc singularity container setup despite using recommended practice reproducibility see function seedeverything utilitiespy pytorch noticed minor change across gpu type cuda version mitigate recommend using singularity container setting environment singularity container slurm environment tldr run following system different one wa tested cmu bridges2 partition psc hpc bash salloc p gpusmall 010000 ntaskspernode5 gresgpuv100321 cd oceancontainersngcpytorch singularity instance start nv pytorch2212py3sif vlvpr singularity run nv instancevlvpr cd oceanprojectscis220039pnkeethadatasingularityvenv source vlvprbinactivate cd oceanprojectscis220039ppath vlvpr script folder main setup singularity iiith ada hpc ubuntu 1804 main setup validation use want replicate table paper hardware listed script assumes repository cloned documentsvlvpr readme documentsvlvprreadmemd bash load module configuration module load u18singularityce396 mkdir p scratchusersingularity cd mkdir cache tmp venvs export singularitycachedirscratchusersingularitycache export singularitytmpdirscratchusersingularitytmp ensure next command give outputor anything thancat procsyskernelunprivilegedusernsclone setup container download image already 15 gb cache 75 gb file singularity pull ngcpytorch2212py3 dockernvcrionvidiapytorch2212py3 test container shell singularity shell nv ngcpytorch2212py3 start run container mount symlinked scratch folder singularity instance start mount typebindsourcescratchuserdestinationscratchuser nv ngcpytorch2212py3 vlvpr singularity run nv instancevlvpr create virtual environment cd documentsvlvpr pip install virtualenv cd venvs virtualenv systemsitepackages vlvpr activate virtualenv install package cd documentsvlvpr source venvsvlvprbinactivate bash setupvirtualenvngcsh run anything want find file script cd documentsvlvpr python scriptspy baseline script run folder example run cosplace cd documentsvlvpr cd cosplace python,"[('dataset', 'present'), ('pwc', 'pwc')]"
rishabh1b/RealTimePathPlanning,C++,realtimepathplanning sampling based rewiring approach solve realtime path planning problem holonomic robot presence dynamic obstacle installation instruction exisiting codebase ha dependency openframeworks open source c toolkit gui experimentation current implementation work well vs2015 make sure install vs2015 install openframeworks plugin visual studio following step documented installed follow step download openframeworks binary window herecreate openframeworks based project visual studio point path openframeworks wa installed stepmake sure tick ofxgui addon creating projectclone repository copy code src add item using add existing item option visual studiobuild solutionrun ofappcpp application live demonstration demonstration available youtube link,"[('visual', 'studio'), ('realtimepathplanning', 'sampling')]"
cra-ros-pkg/robot_localization,C++,robotlocalization robotlocalization package nonlinear state estimation node package wa developed charles river analytics inc please see documentation,"[('robotlocalization', 'robotlocalization'), ('robotlocalization', 'package')]"
OpenOCL/OpenOCL,Other,open optimal control library visit website openoclgithubio download toolbox look api doc example get started doc ocl oclexamplescartpole open oclexamplescartpole contribute would like participate project welcome contribution guideline model robotics experimental airborne wind energy outdated experimental citing publication use openocl please cite u consider giving u star repository legal notice please see license information license file github project program distributed hope useful without warranty without even implied warranty merchantability fitness particular purpose project ha received funding european union horizon 2020 research innovation programme marie sklodowskacurie grant agreement 642682 use without warranty info openoclorg,"[('without', 'warranty'), ('open', 'optimal')]"
folke/devmoji,Other,sparkle devmoji node ci npm github github top language renovate using conventional commits star standard commit message make semantic versioning bookmark easy tool like conventional changelog pagefacingup standard version bookmark semantic release packagerocket devmoji command line tool add color rainbow conventional commits using emojis inspired gitmoji stuckouttonguewinkingeye thing devmoji emojify convert input diferent emoji format unicode shortcode devmoji devmoji easy remember alias like test refactor doc security instead hard remember emoji code git commit install preparecommitmsg commit hook sparkle automagically emojify lint commit message git log emojify colorify output git log even project using emojis doe look like see commit message devmoji github repository generated devmoji changelogmd package installation install npm yarn globally sh npm install g devmoji yarn global add devmoji locally inside project use npx devmoji shell npm install dev devmoji yarn add dev devmoji see edit information setup git commit hook boom usage devmoji help console devmoji help usage devmoji option option cconfig location devmojiconfigjs file llist list known devmojis ttext text format read stdin omitted lint lint conventional commit disabled log fformat format one unicode shortcode devmoji default unicode commit automatically add devmoji conventional commit header default true nocommit process conventional commit header eedit read last commit message gitcommiteditmsg git root log format conventional commits text similar git log color use color formatting color enabled default unless output piped another command default true nocolor use color version output version number h help output usage information devmoji emojify emojify text using text piping stdin input combination using valid format output format format description shortcode output github markdown short code like sparkle rocket unicode output emoji unicode symbol like sparkle rocket devmoji output devmoji shortcodes like feat chorerelease strip remove emoji input default format unicode since used pretty much everywhere ha shortest text length relevant commit message console echo test first release boom devmoji format shortcode rotatinglight first rocket boom sparkle echo test first release boom sparkle devmoji format unicode first echo boom sparkle devmoji format devmoji chorerelease breaking feat echo test boom sparkle security devmoji format strip test devmoji commit automagically sparkle emojifies conventional commit message format typescope something useful using following pseudo code j existstypescope return emojitypescope existstype existsscope return emojitype emojiscope existstype return emojitype example ouput console echo feat added new feature smile devmoji commit feat added new feature echo chorerelease 111 devmoji commit chorerelease 111 echo fixsecurity upgraded lodash devmoji commit fixsecurity upgraded lodash devmoji lint lint commit message see valid conventional commits devmoji edit format save current commit message gitcommiteditmsg really useful preparecommitmsg commitmsg hook use hook preparecommitmsg use use devmnojis lint option want use something like commitlint instead commitmsg use hook also want use devmoji linting configuration using husky shell make sure husky hook installed npx husky install add hook devmoji npx husky add huskypreparecommitmsg npx devmoji e lint configuration using yorkie j packagejson githooks preparecommitmsg devmoji e lint installed devmoji locally project dev dependency use something like npx noinstall devmoji e instead command alternatively want use husky yorkie manually create git hook devmoji log work similar commit format typescope something useful anywhere input instead beginning first line useful format output git log git log option work favorite alias shell git log graph prettyformat credhcreset cyellowdcreset cgreencr cbold blueancreset abbrevcommit decorate dateshort use alias git l instead clarity devmoji format strip demonstration purpose since devmoji commits already emoji devmoji list using devmoji log devmoji list devmoji list get list available devmoji run list see also default devmoji devmoji list gear configuration devmoji us config file specified config option look devmojiconfigjs following path current directory parent directory contains packagejson file parent directory git repository home directory example config file j moduleexports extra type used commit message type lint custom devmoji devmoji use boom instead sparkle type feat code feat emoji boom add custom devmoji code fail emoji poop description something bad happened add new devmoji based existing gitmoji description taken gitmoji code cs gitmoji art emoji gitmoji overriden well code config gitmoji wrench emoji gear default devmoji reference emoji devmoji code description sparkle feat feat new feature bug fix fix bug fix book doc doc documentation change art style style change affect meaning code whitespace formatting missing semicolon etc recycle refactor refactor code change neither fix bug add feature zap perf perf code change improves performance rotatinglight test test adding missing correcting existing test wrench chore chore change build process auxiliary tool library documentation generation rocket chorerelease chorerelease code deployment publishing external repository link choredeps choredeps add delete dependency package build build change related build process constructionworker ci ci update continuous integration system rocket release code deployment publishing external repository lock security fixing security issue globewithmeridians i18n internationalization localization boom breaking introducing breaking change gear config changing configuration file heavyplussign add add something heavyminussign remove remove something,"[('commit', 'message'), ('git', 'log')]"
lihuang3/ur5_ROS-Gazebo,Python,implementation ur5 pick place rosgazebo usb cam vacuum grippers repository demonstrates ur5 pickandplace gazebo ur5 us usb cam detect red box conveyor ur5visionpy publish position ur5 plan motion ur5mppy follow box endeffector get close enough box approach box vacuum grippers turning ur5gripperpy since vacuum gripper provides limited force placed multiple grippers order lift object video demo simulation video hardware video hardware implementation ur3 ur3roshardware update based feebacks community made several key change repository 09162018 please update code case trouble reproducing result cite repository huang l zhao h implementation ur5 pick place rosgazebo usb cam vacuum grippers 2018 github repository bibtex mischuang2018 author huang l zhao h title implementation ur5 pick place rosgazebo usb cam vacuum grippers year 2018 publisher github journal github repository howpublished url use repository project wa tested ubuntu 1604 kinetic make sure installed python27 useful librariespackages numpy cv2 etc install kinetic gazebo universal robot moveit rviz assuming universal robot workspace named urws download repository urwssrc cd urwssrc git clone urwssrc two folder one official universalrobot ur5rosgazebo open file ur5jointlimitedroboturdfxacro urwssrcuniversalroboturdescriptionurdf make following change joint limit shoulderpanlowerlimit2pi shoulderpanupperlimit2pi directory make copy commongazeboxacro ur5urdfxacro case malfunction two default file include camera vacuum gripper module would replace two file customized file directory urwssrcur5rosgazebosrcurdescription copy commongazeboxacro ur5urdfxacro urwssrcuniversalroboturdescriptionurdf build code directory urws catkinmake source develsetupbash run code gazebo roslaunch ur5notebook initializelaunch thing work onvacuum grippers provide limited force lifting use many order pick light box suggestion please let u knowur5 motion planning realtime hence ovserve nonsmooth motion endeffect camera view reference github utecroboticsur5 testing ur5 motion useful blog rosmoveitur5 ur industrial modern driver urhardwareinterfacecpp replace cpp hardware interface error catkin make warning rest readme still construction universal robotinstallation official installation tutorial following command line ur5 installation roskinetic angularjs mkdir p ur5wssrc cd ur5wssrc retrieve source git clone b kineticdevel cd ur5ws checking dependency rosdep install frompaths src ignoresrc rosdistro kinetic buildin catkinmake error try pip uninstall em pip install empy source workspace careful also sourcing others cd ur5ws source develsetupbash run ur5 gazebo rviz source develsetupbash angularjs roslaunch urgazebo ur5launch limitedtrue roslaunch ur5moveitconfig ur5moveitplanningexecutionlaunch simtrue limitedtrue roslaunch ur5moveitconfig moveitrvizlaunch configtrue test ur5 motion run testmotionpysrctestmotionpy look link straight line motion moveit official tutorial 20 install moveit sudo aptget install roskineticmoveit launch teh moveit setup assistant roslaunch moveitsetupassistant setupassistantlaunch click create new moveit configuration package buttonclick browse button select xacro file created previous chapter click load file button path srcuniversalroboturdescriptionurdfur5urdfxacro go selfcollisions tab click regenerate collision matrix button move virtual joint tab define virtual joint base robot click add virtual joint button set name joint fixedbase parent world open planning group tab click add group button create new group called manipulator us kdlkinematicsplugin move group python interface tutorialofficial tutorial 21 use moveit interface move group interface tutorial 22 use moveit python cartesian path planningsrcmotionplanner2py using ur5 moveit motion planning framework quick motion planning install package package management run moveit planning demo angularjs sudo aptget install roskineticur5moveitconfig roslaunch ur5moveitconfig demolaunch goal move universal robot ur5 end effector moving straight line cartesian path moveitpython interface reference cmobley7 commented rosplanningmoveitcommanderhomesicknick ur5cubicinterpolationmove group python interface tutorial urmoderndriver usb camera installation reference link list video device picked kernel angularjs l ltrh devvideo angularjs cd ur5wssrc git clone cd catkinmake source develsetupbash roscd usbcam run roscore new terminal make sure usb cam connected connect external cam locate usbcamtestlaunch file folder cd ur5wssrcusbcamlaunch change cd catkinwssrcusbcamlaunch run roslaunch usbcamtestlaunch work quit test program open rviz angularjs rosrun rviz rviz run following command ur5ws folder source develsetupbash angularjs rosrun usbcam usbcamnode revoluterevolute manipulator robot rrbot revoluterevolute manipulator robot simple 3linkage 2joint arm use demonstrate various feature gazebo urdfs essentially double inverted pendulum demonstrates fun control concept within simulator get rrbot clone gazeborosdemos github repo src folder catkin workspace rebuild workspace angularjs cd catkinwssrc git clone cd catkinmake source develsetupbash quick start rviz angularjs roslaunch rrbotdescription rrbotrvizlaunch gazebo angularjs roslaunch rrbotgazebo rrbotworldlaunch control angularjs roslaunch rrbotcontrol rrbotcontrollaunch example moving joint angularjs rostopic pub rrbotjoint2positioncontrollercommand stdmsgsfloat64 data 09 using gazebo camera plugins tutorial using urdf gazebo prerequisite gazebo plugins tutorial using gazebo plugins learning use gazebo plugins viewer image topic camera implementation iris drone urdescription wiki view manipulate arm model rviz install package package management launch following angularjs roslaunch urdescription ur5uploadlaunch roslaunch urdescription testlaunch probably need install urdftutorial angularjs cd catkinwssrc git clone cd catkinmake source develsetupbash rviz first task choose frame reference visualization left panel global optionsfixed frame choose proper frame e g world next want view 3d model robot accomplish insert instance robot model plugin add robot model rviz scene click add button choose robotmodel test ur5 usb cam run testvisionpysrctestvisionpy gazebo world launch defining joint solidworks urdf exporter conveyor belt tutorial simulator gazebo launch gazebo file angularjs roslaunch ur5notebook initializelaunch change object pose twist command line angularjs rosservice call gazebosetmodelstate modelstate modelname redbox pose position xyzorientation xyzwtwist linear x 01 yzangular x 00 yz 00 referenceframe world opencv detect red circle image using opencv opencv moment opencv moment cv2contourarea example ariac ariac 2017 install 42 43,"[('source', 'develsetupbash'), ('usb', 'cam')]"
Acmece/rl-collision-avoidance,Python,rlcollisionavoidance pytorch implementation paper towards optimally decentralized multirobot collision avoidance via deep reinforcement learning requirement python27 kinetic mpi4py stage pytorch train may start training stage1 welltrained transfer stage2 base policy model stage1 exactly curriculum learning mean training stage2 scratch may converge lower performance even converge please note motivation training stage2 generalize model hopefully work well real environment please use stagerosaddposeandcrash package instead default package provided mkdir p catkinwssrc cp stagerosaddposeandcrash catkinwssrc cd catkinws catkinmake source develsetupbash train stage1 modify hyperparameters ppostage1py like running following command leave g want see gui training rosrun stagerosaddposeandcrash stageros g worldsstage1world mpiexec np 24 python ppostage1py train stage2 modify hyperparameters ppostage2py like running following command rosrun stagerosaddposeandcrash stageros g worldsstage2world mpiexec np 44 python ppostage2py test rosrun stagerosaddposeandcrash stageros worldscircleworld mpiexec np 50 python circletestpy notice author paper group either may contact jia pan jpancshkuhk paper related issue find useful use project please consider citing misctianyu2018 author tianyu liu title robot collision avoidance via deep reinforcement learning year 2018 publisher github journal github repository howpublished url commit 7bc682403cb9a327377481be1f110debc16babbd,"[('rosrun', 'stagerosaddposeandcrash'), ('stagerosaddposeandcrash', 'stageros')]"
DLR-RM/stable-baselines3,Python,ci documentation status coverage report codestyle stable baselines3 stable baselines3 sb3 set reliable implementation reinforcement learning algorithm pytorch next major version stable baseline read detailed presentation stable baselines3 v10 blog post jmlr paper algorithm make easier research community industry replicate refine identify new idea create good baseline build project top expect tool used base around new idea added tool comparing new approach existing one also hope simplicity tool allow beginner experiment advanced toolset without buried implementation detail note despite simplicity use stable baselines3 sb3 assumes knowledge reinforcement learning rl utilize library without practice extent provide good resource documentation get started rl main feature performance algorithm wa tested see result section respective page take look issue 48 49 detail feature stablebaselines3 state art rl method heavycheckmark documentation heavycheckmark custom environment heavycheckmark custom policy heavycheckmark common interface heavycheckmark dict observation space support heavycheckmark ipython notebook friendly heavycheckmark tensorboard support heavycheckmark pep8 code style heavycheckmark custom callback heavycheckmark high code coverage heavycheckmark type hint heavycheckmark planned feature please take look roadmap milestone migration guide stablebaselines sb2 stablebaselines3 sb3 migration guide sb2 sb3 found documentation documentation documentation available online integration stablebaselines3 ha integration librariesservices like weight bias experiment tracking hugging face storingsharing trained model find dedicated section documentation rl baselines3 zoo training framework stable baselines3 reinforcement learning agent rl baselines3 zoo training framework reinforcement learning rl provides script training evaluating agent tuning hyperparameters plotting result recording video addition includes collection tuned hyperparameters common environment rl algorithm agent trained setting goal repository provide simple interface train enjoy rl agent benchmark different reinforcement learning algorithm provide tuned hyperparameters environment rl algorithm fun trained agent github repo documentation sb3contrib experimental rl feature implement experimental feature separate contrib repository sb3contrib allows sb3 maintain stable compact core still providing latest feature like recurrent ppo ppo lstm truncated quantile critic tqc quantile regression dqn qrdqn ppo invalid action masking maskable ppo documentation available online stablebaselines jax sbx stable baseline jax sbx proof concept version stablebaselines3 jax provides minimal number feature compared sb3 much faster 20x time installation note stablebaselines3 support pytorch 113 prerequisite stable baselines3 requires python 38 window 10 install stablebaselines window please look documentation install using pip install stable baselines3 package pip install stablebaselines3extra note shell zsh require quotation mark around bracket ie pip install stablebaselines3extra info includes optional dependency like tensorboard opencv ataripy train atari game need use sh pip install stablebaselines3 please read documentation detail alternative source using docker example code library try follow sklearnlike syntax reinforcement learning algorithm quick example train run ppo cartpole environment python import gymnasium gym stablebaselines3 import ppo env gymmakecartpolev1 model ppomlppolicy env verbose1 modellearntotaltimesteps10000 vecenv modelgetenv ob vecenvreset range1000 action state modelpredictobs deterministictrue ob reward done info vecenvstepaction vecenvrender vecenv reset automatically done ob envreset envclose train model one liner environment registered gymnasium policy registered python stablebaselines3 import ppo model ppomlppolicy cartpolev1learn10000 please read documentation example try online colab notebook following example executed online using google colab notebook full tutorial notebook getting started training saving loading multiprocessing monitor training plotting atari game rl baseline zoo pybullet implemented algorithm name recurrent box discrete multidiscrete multibinary multi processing ars1 x heavycheckmark heavycheckmark x x heavycheckmark a2c x heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark ddpg x heavycheckmark x x x heavycheckmark dqn x x heavycheckmark x x heavycheckmark x heavycheckmark heavycheckmark x x heavycheckmark ppo x heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark qrdqn1 x x heavycheckmark x x heavycheckmark recurrentppo1 heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark sac x heavycheckmark x x x heavycheckmark td3 x heavycheckmark x x x heavycheckmark tqc1 x heavycheckmark x x x heavycheckmark trpo1 x heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark maskable ppo1 x x heavycheckmark heavycheckmark heavycheckmark heavycheckmark implemented sb3 contrib github repository action gymspaces box ndimensional box containes every point action space discrete list possible action timestep one action used multidiscrete list possible action timestep one action discrete set used multibinary list possible action timestep action used combination testing installation install dependency sh pip install e docstestsextra run test unit test stable baselines3 run using pytest runner sh make pytest run single test file sh python3 pytest v teststestenvcheckerpy run single test sh python3 pytest v k testcheckenvdictaction also static type check using pytype mypy sh pip install pytype mypy make type codestyle check ruff sh pip install ruff make lint project using stablebaselines3 try maintain list project using stablebaselines3 documentation citing project cite repository publication bibtex articlestablebaselines3 author antonin raffin ashley hill adam gleave anssi kanervisto maximilian ernestus noah dormann title stablebaselines3 reliable reinforcement learning implementation journal journal machine learning research year 2021 volume 22 number 268 page 18 url maintainer stablebaselines3 currently maintained ashley hill aka hilla antonin raffin aka araffin maximilian ernestus aka ernestum adam gleave adamgleave anssi kanervisto miffyli quentin gallouedec qgallouedec important note provide technical support consulting answer personal question via email please post question rl discord reddit stack overflow case contribute interested making baseline better still documentation need done want contribute please read contributingmd guide first acknowledgment initial work develop stable baselines3 wa partially funded project reduced complexity model helmholtzgemeinschaft deutscher forschungszentren eu horizon 2020 research innovation programme grant number 951992 veridream original version stable baseline wa created robotics lab u2is inria flower ensta paristech logo credit lm tenkes,"[('heavycheckmark', 'heavycheckmark'), ('x', 'heavycheckmark')]"
MIT-SPARK/Kimera-VIO,C++,kimeravio opensource visual inertial odometry build status evaluation plot check jenkins server author antoni rosinol yun chang marcus abate sandro berchier luca carlone kimeravio kimeravio visual inertial odometry pipeline accurate state estimation stereo imu data optionally use mono imu data instead stereo camera publication kindly ask cite paper find library useful rosinol abate chang l carlone kimera opensource library realtime metricsemantic localization mapping ieee intl conf robotics automation icra 2020 arxiv191002490 bibtex inproceedingsrosinol20icrakimera title kimera opensource library realtime metricsemantic localization mapping author rosinol antoni abate marcus chang yun carlone luca year 2020 booktitle ieee intl conf robotics automation icra url pdf related publication backend optimization based c forster l carlone f dellaert scaramuzza onmanifold preintegration theory fast accurate visualinertial navigation ieee trans robotics 331121 2016 l carlone z kira c beall v indelman f dellaert eliminating conditionally independent set factor graph unifying perspective based smart factor ieee intl conf robotics automation icra 2014 alternatively regular vio backend using structural regularity described paper rosinol sattler pollefeys l carlone incremental visualinertial 3d mesh generation structural regularity ieee int conf robotics automation icra 2019 demo installation tested mac ubuntu 1404 1604 1804 prerequisite gtsam 40 opencv 331 opengv glog gflags gtest installed automagically dbow2 kimerarpgo anms source file srcfrontendfeaturedetectoranms used adaptive nonmax suppression note want avoid building dependency provide docker image install check installation instruction docskimeravioinstallmd noteif use kimeravioros install dependency kimera inside catkin workspace installation instruction find install kimeravio dependency installation instructionsusage general tip loopclosuredetector pgo module disabled default wish run pipeline loopclosure detection enabled set uselcd flag true example script done passing lcd commandline like bash scriptsstereovioeurocbash lcd log output set logoutput flag true script done log commandline argument default log file saved outputlogs run pipeline sequential mode one thread set parallelrunto false done example script argument commandline euroc dataset download euroc dataset download one euroc datasets example v101easyzip datasets mh04 v203 different number leftright frame suggest using instead version euroc unzip dataset preferred directory example eurocv101easy bash mkdir p eurocv101easy unzip downloadsv101easyzip eurocv101easy yamelize euroc dataset add yaml10 top yaml file inside euroc manually run yamelizebash script indicating dataset assumed pathtoeuroc need yamelize dataset download version bash cd kimeravio bash scriptseurocyamelizebash p pathtoeuroc run kimeravio euroc dataset using bash script bundling commandline option gflags bash cd kimeravio bash scriptsstereovioeurocbash p pathtodatasetv101easy alternatively one may directly use executable build folder buildstereovioeuroc nevertheless check script scriptsstereovioeurocbash understand parameter expected check parameter section kimera also run monocular mode euroc mean processing left image use simply use parameter paramseurocmono bash script paramspath variable set point parameter instead ii using wrapper provide wrapper kimeravio find library cloned catkin workspace built alongside wrapper iii evaluation debugging information tool debugging evaluating pipeline see documentation iv unit testing use gtest unit testing run unit test build code navigate inside build folder run testkimeravio bash cd build testkimeravio useful flag testkimeravio gtestfilterfoo run test interested regex also valid alternatively run rosrun kimeravio rungtestpy anywhere system built kimeravio sourced workspace containing kimeravio script pass argument testkimeravio feel free use whatever flag would normally useparameters kimeravio accepts two independent source parameter yaml file contains parameter backend frontend gflags contains parameter rest get help gflag parameter doe run executable help flag buildstereovioeuroc help get list gflags similar one optionally try vio using structural regularity icra 2019 paper specifying option r stereovioeurocbash p pathtodatasetv101easy r opencv 3d visualization also ha shortcut interaction check tip usagecontribution guideline strongly encourage submit issue feedback potential improvement follow branch open pr review merge workflow contribute repo ensure commits pas linter precommit check enable check need install linter also provide clangformat file style rule repo us use clangformat reformat code also check tip development developer guidefaq issue problem building running pipeline andor issue dependency might find useful information faq issue tracker interpret console output i0512 210555136549 21233 pipelinecpp449 statistic log hz avg std minmax data provider display 146 365421 828082 240370 3213 viobackend 73 194868 152192 975712 039 viofrontend frame rate 222 593276 577027 151571 312 viofrontend keyframe rate 73 196235 314110 729504 2462 viofrontend 295 779727 121593 107279 362 visualizer 73 194639 382192 0805234 27 backendinputqueue size 73 183878 100000 000000 11 dataproviderleftframequeue size 663 165202 182265 145110 1359 dataproviderrightframequeue size 663 165084 182029 145150 1359 displayinputqueue size 146 365428 168493 000000 112 stereofrontendinputqueue size 301 753519 484718 0219043 15 visualizerbackendqueue size 73 183208 100000 000000 11 visualizerfrontendqueue size 295 739984 421695 124381 17 number sample taken log hz average number sample taken per second hz avg average actual value logged unit logged quantity std standard deviation value logged minmax minimum maximum value logged value took two main thing logged time take pipeline module run ie viobackend visualizer etc size queue pipeline module ie backendinputqueue example viobackend 73 194868 152192 975712 039 show backend runtime got sampled 73 time rate 1948hz account time backend wait input consume time take process take 1521ms consume input standard deviation 975ms least took run one input wa 0ms took far 39ms queue example stereofrontendinputqueue size 301 753519 484718 0219043 15 show frontend input queue got sampled 301 time rate 7538hz store average 484 element standard deviation 021 element min size waselement max size stored wa ofelementschart bsd license kimeravio open source bsd license see licensebsd file,"[('l', 'carlone'), ('conf', 'robotics')]"
nonebot/nonebot,Python,nonebot license pypi python version onebot version qq telegram discord server nonebot onebot cq python qq qq nonebot nonebot onebot aiocq quart onebot python asyncio nonebot onebot websocket nonebot http io http nonebot python 37 api issue fork pull request pull request pepnonebot description nonebot asynchronous onebot qq robot framework written python nonebot receives new message par message pas userdefined command handler natural language processor accordingly using plugin system accomplish various task beside message processing nonebot present amount useful builtin action permission handling feature command processor provide simple comprehensive sessioning calling mechanism handle continuous interaction reusing functionality inside plugins respectively nonebot communicates onebot implementation using aiocq wrapper based quart lowerlevel protocol work thanks asyncio websocket messaging method recommended nonebot ensures maximum possible message throughput twice fast http messaging great performance leap compared traditional synchronous io nonebot support python 37 documentation guide api manual check page contributing encounter problem using project submit issue fork project submit pull request pull request please sure consistent style existing module follow pephave clear identifier naming proper comment,"[('pull', 'request'), ('nonebot', 'onebot')]"
yuce/pyswip,Python,href src href src href src pyswip installing latest version latest swiprolog supported ubuntu 1804 2004 764 generally want support lts release ubuntu compatibility pyswip 764 master broken able release new version fixed meantime use following install pyswip master branch pip install git end pythonsupport pythonhas reached end life january 1st 2020 documented pyswip 0210 last version officially support pythondo still require pythonsupport let u know new see changelog warning pyswip ha window installers window user see install free download site claim hosting pyswip installers trust thanks contributor introduction pyswip python swiprolog bridge enabling query swiprolog python program feature incomplete swiprolog foreign language interface utility class make easy querying prolog also pythonic interface since pyswip us swiprolog shared library ctypes access require compilation installed requirement python 36 higher pypy currently supported swiprolog 82 higher libswipl shared library default platform work linux window macos freebsd work posix install important make sure swiprolog architecture python architecture using 64bit build python use 64bit build swiprolog etc see install instruction example using prolog python pyswip import prolog prolog prolog prologassertzfathermichaeljohn prologassertzfathermichaelgina listprologqueryfathermichaelx x john x gina soln prologqueryfatherxy printsolnx father solny michael father john michael father gina existing knowledge base stored prolog file also consulted queried assuming filename knowledgebasepl python run working directory consulted like pyswip import prolog prolog prolog prologconsultknowledgebasepl foreign function python future import printfunction pyswip import prolog registerforeign def hellot printhello helloarityregisterforeignhello prolog prolog prologassertzfathermichaeljohn prologassertzfathermichaelgina printlistprologqueryfathermichaelx hellox pythonic interface experimental python future import printfunction pyswip import functor variable query call assertz functorassertzfather functorfathercallassertzfathermichaeljohn callassertzfathermichaelgina x variable q queryfathermichaelx qnextsolution printhello xvalue qclosequery output hello john hello gina core functionality prologquery based nathan denny public domain prologpy help support forum stack overflow projectspublications use reference pyswip project video publication usesmentions pyswip file issue send pull request would like reference pyswip latex document use provided bibtex file book beginning artificial intelligence raspberry pi publication assessment graph database viable materiel solution army dynamic force structure dfs portal implementation partrisks mitigation approach roadmap tackling complexity high performance computing application social humanrobot interaction new cognitive affective interactionoriented architecture planning module rosbased ubiquitous robot control system pdf pilot framework developed common platform integrating diverse element computer aided fixture design integration von prolog und cliopatria python pdf german selectscript query language robotic world model simulation concept declarative information acquisition smart environment pdf implementation adhd diagnostic expert system based dsm diagnostic criterion pdf korean wie sehen krebsmolekule au vergleich der gute der klassifizierung potenziell krebserregender molekule durch induktiv logische und merkmalsbasierte lernverfahren pdf german companion robot behaving style towards plasticity social humanrobot interaction pdf semiautomatically augmenting attack tree using annotated attack tree library learning framework tool creation robot pdf conceptual map first step ontology construction method factbased expert system supplier selection erp data interactive text graph mining prologbased dialog engine detection conflict requirement specification based ontological model production rule system dependencybased text graph keyphrase summary extraction application interactive content retrieval pdf information retrieval based knowledgeenhanced word embedding dialog case study exploring world declarative programming video ai block world solver interactive planner pyswip prolog javascript html spanish get maze prolog python spanish le robot deviennent vraiment intelligents nao discute avec kylo ren project noworkflow supporting infrastructure run scientific experiment without scientific workflow management system super pacman pokemon weak detector food recommendation hyderabad india food recommendation ai expert system using gui hosted flask backend developed pyswip native prolog pyswipenvctrl environment control module expert system written pyswip tictactoe tictactoe game ai prolog gui python kivy framework pyswip tbm1 getting know home prolog natural language parsing component control scribbler ii robot bluetooth cosmos new logic programming language libannotatedattacktrees script resource creating library annotated attack tree using refine annotated attack tree clide commandline intelligent development environment artificial intelligence inf1771 pucrio project artificial intelligence class pucrio automobileadvisor projekt na systemy ekspertowe pomagajacy wybrac odpowiedni samochod dla danego klienta na podstawie preferencji polish prolog tetri ai jupyter swi prolog jupyter kernel swiprolog block world planner program allows user solve block world problem interacting using natural language deeptalk pythonprolog based dialog engine using python package textgraphcrafts extract highest ranked sentence answering query deeprank system us dependency link building text graph help centrality algorithm like pagerank extract relevant keyphrases summary relation text document prolog tictactoe fullstack tictactoe game ai prolog backend python3 flask frontend vuejsmidsi project solution data discovery project applicable semantic web enabling loading ontology inference result using wsml language popper inductive logic programming system blog post calling prolog python python v prolog roundfight path follower arduinorasp project code 10 minute make gui swiprolog app via python company using pyswip magazino gmbh magazino develops build intelligent mobile robot intralogistics license copyright c 20072020 yuce tekol pyswip contributor permission hereby granted free charge person obtaining copy software associated documentation file software deal software without restriction including without limitation right use copy modify merge publish distribute sublicense andor sell copy software permit person software furnished subject following condition copyright notice permission notice shall included copy substantial portion software software provided without warranty kind express implied including limited warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arising connection software use dealing software,"[('prolog', 'prolog'), ('pyswip', 'import')]"
w111liang222/lidar-slam-detection,C++,lsd lidar slam detection lsd open source perception architecture autonomous vehicle robotics lsd currently support many feature x support multiple lidar camera radar insimu sensor x support userfriendly calibration lidar camera etc x support software time sync data record playback x support voxel 3dcnn based pointcloud object detection tracking prediction x support gicp floam fastlio based frontend odometry g2o based pose graph optimization x support web based interactive map correction tooleditor x support communication todo x support traffic light detection x support giou twostage association object tracking support voxel 3dcnn based freespace detection support transformer based motion prediction overview quick demo architecture mapping localization object detection tracking changelog 20231008 better 3dmot giou twostage association performance wod val amota amotp id ab3dmot 4784 02584 067 giou twostage 5479 02492 019 20230706 new detection model centerpointvoxelnet support run realtime 30fps performance wod val vecl1 vecl2 pedl1 pedl2 cycl1 cycl2 pointpillar 7371731265716517717060906352537865306377 63126164 centerpointvoxelnetframe 7475742466096563776671546857630272037093 69636857 centerpointvoxelnetframe 7755770369656917807277807291701572637172 70556967 note centerpointvoxelnet built libspconv gpu sm80 required 20230601 web uijs code preview tviz map editor uploaded prerequisite lsd worked x86 pcwith gpu sm 80 nvidia orin old version basic enviroment ubuntu2004 python38 eigen 337 cere 1140 protobuf 380 nlopt 242 g2o opencv 455 pcl 191 gtsam 40 getting started nvidiadocker2 needed install firstly installation x8664 docker image provided test bash sudo docker pull 15liangwanglsdcuda sudo docker pull 15liangwangautoipu gpu sudo docker run gpus nethost privileged shmsize4g namelsd v mediarootexchange 15liangwanglsdcuda sudo docker exec lsd binbash clone repository build source code bash cd homeznqcwork git clone cd lidarslamdetection unzip slamdataorbvoczip slamdata python setuppy install bash sensorinferencepytorchmodelexportgeneratetrtsh run lsd bash toolsscriptsstartsystemsh open browser eg chrome see screen example data download demo data google drive sk5h unzip bash unzip demodatazip homeznqcwork toolsscriptsstartsystemsh rerun lsd usage found lsd built robot operating system provides tool bridge communication rosbag proxy tool send topic data lsd pickle rosbag convenient tool convert pickle file recorded lsd rosbag embedded platform lsd tested orin jetpack502 installation license lsd released apache 20 license acknowledgment development lsd stand shoulder following repository lidaralign simple method finding extrinsic calibration 3d lidar 6dof pose sensor lidarimucalib automatic calibration 3d lidar imu extrinsics openpcdet openpcdet toolbox lidarbased 3d object detection ab3dmot 3d multiobject tracking baseline new evaluation metric fastlio computationally efficient robust lidarinertial odometry package r3live robust realtime rgbcolored lidarinertialvisual tightlycoupled state estimation mapping package floam fast optimized lidar odometry mapping indooroutdoor localization hdlgraphslam open source package realtime 6dof slam using 3d lidar hdllocalization realtime 3d localization using velodyne 3d lidar orbslam2 realtime slam monocular stereo rgbd camera loop detection relocalization capability scancontext global lidar descriptor place recognition longterm localization citation find project useful research please consider cite star project misclidarslamdetection titlelidar slam detection open source perception architecture autonomous vehicle robotics authorliangwang howpublished url year2023 contact liangwang 15lwangalumnitongjieducn,"[('x', 'support'), ('sudo', 'docker')]"
yangyanli/PointCNN,Python,pointcnn convolution xtransformed point created yangyan li rui bu mingchao sun wei wu xinhan di baoquan chen introduction pointcnn simple general framework feature learning point cloud refreshed five benchmark record point cloud processing jan 23 2018 including classification accuracy modelnet40 917 1024 input point classification accuracy scannet 779 segmentation part averaged iou shapenet part 8613 segmentation mean iou s3dis 6539 per voxel labelling accuracy scannet 851 see preprint arxiv accepted neurips 2018 detail pretrained model downloaded performance recent benchmark revisiting point cloud classification new benchmark dataset classification model realworld data partnet largescale benchmark finegrained hierarchical partlevel 3d object understanding abc big cad model dataset geometric deep learning practical application 3d city deep learning threedimensional space esri pointcnn replacing 50000 man hour ai esri point cloud segmentation using pointcnn arcgis api python esri implementation pytorch implementation pytorch geometric pytorch implementation berkeley cs294131 course proj mxnet implementation jittor implementation highly welcome issue rather email pointcnn related question license code released mit license see license file detail code organization core xconv pointcnn architecture defined pointcnnpy networktrainingdata augmentation hyper parameter classification task defined pointcnncls segmentation task defined pointcnnseg explanation xconv xdeconv parameter take xconvparams xdconvparams shapenetx82048fpspy example xconvparamname k p c link xconvparams dictzipxconvparamname xconvparam xconvparam 132 x 12768 32 x 16384 64 x 16128 128 x xdconvparamname k ptslayeridx qrslayeridx xdconvparams dictzipxdconvparamname xdconvparam xdconvparam 163 12260 40 element xconvparams tuple k p c link k neighborhood size dilation rate p representative point number outputmeans input point output representative point c output channel number link used adding densenet style link eg2 tell current layer receive input previous two layer element specifies parameter one xconv layer stacked create deep network element xdconvparams tuple k ptslayeridx qrslayeridx k meaning xconvparams ptslayeridx specifies output xconv layer xconvparams input xdeconv layer qrslayeridx specifies output xconv layer xconvparams forwarded fused output xdeconv layer p c parameter xdeconv layer also determined qrslayeridx similarly element specifies parameter one xdeconv layer stacked create deep network pointcnn usage pointcnn implemented tested tensorflow 16 python3 script tensorflow 15 version recommended api ha dependency python package transforms3d h5py plyfile maybe complains install package use pointcnn use tensorflow 15 factorubuntu 1404please modify isnan stdnan usrlocallibpython35distpackagestensorflowincludetensorflowcoreframeworknumerictypesh line 49 list command trainingevaluating pointcnn classification segmentation task multiple datasets classification modelnet40 cd dataconversions python3 downloaddatasetspy modelnet cd pointcnncls trainvalmodelnetsh gx modelnetx3l4 scannet please refer downloading scannet task data scannetlabelmap refer downloading scannet benchmark file scannetdatasetdownload data scannetlabelmap benchmark cd datascannetscannetdatasetdownload mv scannetlabelmapscannetlabelscombinedtsv benchmark pointcnnroot cd pointcnndataconversions python extractscannetobjspy f datascannetscannetdatasetdownloaddata b datascannetscannetdatasetdownloadbenchmark datascannetcls python preparescannetclsdatapy f datascannetcls cd pointcnncls trainvalscannetsh gx scannetx3l4 tuberlin cd dataconversions python3 downloaddatasetspy tuberlin python3 preparetuberlindatapy f datatuberlin createtraintest cd pointcnncls trainvaltuberlinsh gx tuberlinx3l4 quickdraw note trainingevaluation quickdraw requires large ram load stokes ram converting point cloud onthefly cd dataconversions python3 downloaddatasetspy quickdraw cd pointcnncls trainvalquickdrawsh gx quickdrawfullx2l6 mnist cd dataconversions python3 downloaddatasetspy mnist python3 preparemnistdatapy f datamnist cd pointcnncls trainvalmnistsh gx mnistx2l4 cifar10 cd dataconversions python3 downloaddatasetspy cifar10 python3 preparecifar10datapy cd pointcnncls trainvalcifar10sh gx cifar10x3l4 segmentation use farthest point sampling implementation pointnet segmentation task compile fps trainingevaluation cd sampling bash tfsamplingcompilesh shapenet cd dataconversions python3 downloaddatasetspy shapenetpartseg python3 preparepartsegdatapy f datashapenetpartseg cd pointcnnseg trainvalshapenetsh gx shapenetx82048fps testshapenetsh gx shapenetx82048fps l modelssegpointcnnsegshapenetx82048fpsxxxxckptsiterxxxxx r 10 cd evaluation python3 evalshapenetsegpy g datashapenetpartsegtestlabel p datashapenetpartsegtestdatapred10 s3dis please refer dataconversions downloading s3dis cd dataconversions python3 prepares3dislabelpy python3 prepares3disdatapy python3 prepares3disfilelistspy mv s3disfiles datas3disoutpartrgb trainvals3dissh gx s3disx82048fps tests3dissh gx s3disx82048fps al modelssegs3disx82048fpsxxxxckptsiterxxxxx r cd evaluation python3 s3dismergepy path predh5 python3 evals3dispy use hidden marker file note prepare finished avoid reprocessing cache invalidated deleting marker please notice command areaspecified aoption validation result area computed iterating option scannet please refer dataconversions downloading scannet cd dataconversions python3 preparescannetsegdatapy python3 preparescannetsegfilelistspy cd pointcnnseg trainvalscannetsh gx scannetx82048k8fps testscannetsh gx scannetx82048k8fps l modelssegpointcnnsegscannetx82048k8fpsxxxxckptsiterxxxxx r cd evaluation python3 evalscannetpy path predh5 p path scannettestpickle semantic3d please check free disk space start 900 gb required cd dataconversions bash downloadsemantic3dsh bash un7zsemantic3dsh python3 preparesemantic3ddatapy mkdir datasemantic3dfilelists python3 preparesemantic3dfilelistspy cd pointcnnseg trainvalsemantic3dsh gx semantic3dx42048fps testsemantic3dsh gx semantic3dx42048fps l path ckpt cd evaluation python3 semantic3dmergepy path predh5 v reduced full tensorboard want monitor train step recommend use following command cd pathpointcnn tensorboard logdirmodelssegcls port6006,"[('cd', 'dataconversions'), ('dataconversions', 'python3')]"
erwincoumans/pybullet_robots,Python,pybulletrobots prototyping robot pybullet f110 mit racecar sawyer baxter dobot arm boston dynamic atlas cassie laikago botlab environment install pybullet pip install pybullet see also pybullet quickstart guide picture robot alt text cassie biped alt text boston dynamic atlas alt text unitree laikago alt text f110 racecar alt text dobot alt text turtebot alt text baxter alt text sawyer alt text,"[('alt', 'text'), ('boston', 'dynamic')]"
devendrachaplot/Neural-SLAM,Python,active neural slam pytorch implementation iclr20 paper learning explore using active neural slam devendra singh chaplot dhiraj gandhi saurabh gupta abhinav gupta ruslan salakhutdinov carnegie mellon university facebook ai research uiuc project website overview active neural slam model consists three module global policy local policy neural slam module shown neuralslam module predicts map agent pose estimate incoming rgb observation sensor reading map pose used global policy output longterm goal converted shortterm goal using analytic path planner local policy trained navigate shortterm goal installing dependency use earlier version habitatsim habitatapi specific commits mentioned installing habitatsim git clone cd habitatsim git checkout 9575dcd45fe6f55d2a44043833af08972a7895a9 pip install r requirementstxt python setuppy install headless python setuppy install mac installing habitatapi git clone cd habitatapi git checkout b5f2b00a25627ecb52b43b13ea96b05998d9a121 pip install e install pytorch according system configuration code tested pytorch v120 using conda conda install pytorch120 torchvision cudatoolkit100 c pytorch linux gpu conda install pytorch120 torchvision040 c pytorch mac setup clone repository install requirement git clone recursesubmodules cd neuralslam pip install r requirementstxt code requires datasets data folder following format habitatapi neuralslam data scenedatasets gibson adrianglb adriannavmesh datasets pointnav gibson v1 train val please download data using instruction verify dependency correctly installed data setup correctly run python mainpy n1 autogpuconfigsplit val usage training training complete active neural slam model exploration task python mainpy downloading pretrained model mkdir pretrainedmodels wget nocheckcertificate pretrainedmodelsmodelbestglobal wget nocheckcertificate pretrainedmodelsmodelbestlocal wget nocheckcertificate pretrainedmodelsmodelbestslam evaluation evaluating pretrained model python mainpy split val evaltrainglobaltrainlocaltrainslam loadglobal pretrainedmodelsmodelbestglobal loadlocal pretrainedmodelsmodelbestlocal loadslam pretrainedmodelsmodelbestslam visualizing agent observation predicted map pose add va argument detailed instruction see instruction cite chaplot gandhi gupta gupta salakhutdinov r 2020 learning explore using active neural slam international conference learning representation iclr pdf bibtex inproceedingschaplot2020learning titlelearning explore using active neural slam authorchaplot devendra singh gandhi dhiraj gupta saurabh gupta abhinav salakhutdinov ruslan booktitleinternational conference learning representation iclr year2020 acknowledgement repository us habitat api part code api implementation ppo borrowed thank guillaume lample discussion coding initial stage project,"[('neural', 'slam'), ('active', 'neural')]"
spencer-project/spencer_people_tracking,C++,spencer multimodal people detection tracking framework build status multimodal rosbased people group detection tracking framework mobile robot developed within context eu fp7 project spencer feature glance multimodal detection multiple rgbd 2d laser detector one common framework people tracking efficient tracker based upon nearestneighbor data association social relation estimate spatial relation people via coherent motion indicator group tracking detection tracking group people based upon social relation robustness various extension imm track initiation logic highrecall detector input make people tracker work relatively robustly even dynamic environment realtime run 2030 hz gaming laptop tracker requires 10 ofcpu core extensible reusable wellstructured message type clearly defined interface make easy integrate custom detection tracking component powerful visualization series reusable rviz plugins configured via mouse click plus script generating animated 2d svg file evaluation tool metric clearmot ospa evaluation tracking performance integration component fully integrated written c python kinetic melodic noetic supported motivation aim eu fp7 research project spencer wa develop algorithm service robot guide group people highly dynamic crowded pedestrian environment airport shopping mall behaving socially compliant manner eg crossing family couple exemplary situation robot could encounter visualized image right end robust computationally efficient component perception human robot surroundings needed developed architecture following figure show realtime people group detection tracking pipeline developed context spencer project entire communication different stage pipeline occurs via message encourage reuse component custom setup modular architecture allows easy interchangeability individual component stage pipeline overview available component message definition provide set reusable message type definition successfully applied across various people detection tracking scenario different sensor modality tracking approach relevant message found inside spencertrackingmsgs package highly encourage reuse message benefit rich infrastructure detection tracking filtering visualization component existing detection tracking algorithm often easily integrated publishing additional message format writing simple c python node convert message format people detection integrated following person detection module reimplementation boosted 2d laser segment classifier based upon method arras et al rgbd upperbody detector described closely inwhich slide normalized depth template roi depth image monocularvision fullbody hog detector groundhogwhich based upon given ground plane estimate determines image corridor pedestrian expected detector gpuaccelerated using cuda contained cudahog library requires manual compilation recent cuda sdk well nvidia graphic card rgbd detector pcl extract candidate roi groundplane applies linear hog classifierfurther external detector output geometrymsgsposearray peoplemsgspositionmeasurementarray message easily integrated framework using script package example detector include laserbased leg detector wgperception might work better laser detector sensor located close ground see wrapper package legdetectorslaunch replaces laserdetectorslaunch deep learningbased drow drspaam person detector 2d laser range data beyer et aland jia et alwhich fuse information multiple successive frame multimodal detection fusion detectiontodetection fusion implemented series nodelets used flexibly compose fusion pipeline mean roslaunch xml file detail found spencerdetectedpersonassociation package following figure show example configuration wa used experiment spencer case detectiontotrack fusion currently implemented still advisable publish compositedetectedperson message via compositedetectedpersons set detection associated track later possible go back original detection track lookup associated image bounding box etc via associated detectionid person group tracking person group tracking currently provide exemplary code based upon nearestneighbor standard filter data association robust enough use case especially multimodal detector used people tracker ha enhanced track initiation logic anddifferent immbased motion model constant velocity low process noise high process noise coordinated turn brownian motion make tracking robust group tracker relies socialspatial relation determined via coherent motion indicator feature described ininternally already integrated advanced method including trackoriented multihypothesis person trackerand hypothesisoriented multimodel multihypothesis person group trackerthese component use exactly message definition however yet publicly available component available originally implemented baseline method comparison filtering tracked person tracking metric spencertrackingutils package contains number standalone node filter incoming set trackedperson message based upon different criterion eg distance sensorrobot visually confirmed track etc spencertrackingmetrics wrapped publicly available implementation different tracking metric clearmot ospa compatible message definition useful evaluating tracking performance given groundtruth import old annotated logfiles srltrackinglogfileimport package provides python script importing old 2d laserscan logfiles carmen format annotated groundtruth person track datasets visualization srltrackingexporter package contains useful python script rendering track trajectory detection robot odometry 2d topdown perspective scalable vector graphic svgs optionally animated visualize evolution one multiple track time one major highlight framework reusable highly configurable set custom rviz plugins visualization detected person tracked person including occlusion state associated detection id covariance ellipsis social relation tracked group example feature tracked person display different visual style 3d bounding box cylinder animated human mesh coloringdifferent color palette display velocity arrow visualization 99 covariance ellipse display track id status matched occluded associated detection id configurable reduction opacity track occluded track history trajectory display dot line configurable font size line width following screenshots generated using plugins example screenshots system action following screenshots show system action playing back recorded data crowded airport environment multimodal people detection orange 2d lasercyan upperbody rgbdyellow monocular vision hoggrey fused detection using detectiontodetection fusion people tracking red track visually confirmed imagebased detector group tracking via coherent motion indicator feature described demo video video people detection tracking system action found spencer youtube channel realtime multimodal people tracking crowded airport environment rgbd 2d laser single person guidance scenario prototype 2d laser group guidance scenario prototype 2d laser runtime performance spencer robot platform equipped front rear rgbd sensor asus xtion pro live two sick lms500 laser scanner distributed people group detection tracking system two highend gaming laptop intel core i74700mq nvidia geforce 765m detector frontal sensor executed one laptop along detectionfusion pipeline detector rearfacing sensor people group tracking module executed second laptop laptop connected rest platform via gigabit ethernet configuration component run realtime 2025 hz visualization offloaded separate computer even crowded environment 30 person concurrently visible installation lcas package repository packaged version entire framework kinetic ubuntu 1604 xenial melodic ubuntu 1804 bionic kindly provided lincoln research centre autonomous system lcas built continuous integration system must first add package repository aptsourceslist described install framework via sudo aptget install rosrosdistrospencerpeopletrackingfull note groundhog detector packaged version nonfunctional building source paragraph describe build framework source code useful example want conduct larger change supplied launch file either follow stepbystep guide use one exemplary docker file automate step isolate build process existing installation people group detection tracking framework ha tested ubuntu 1604 kinetic ubuntu 1804 melodic ubuntu 2004 noetic information robot operating system please refer rosorg note entire framework work 64bit system 32bit system encounter eigenrelated alignment issue failed assertion see issue1 cloning source code repository first create empty folder new catkin workspace clone github repository src subfolder cd code mkdir p spencerpeopletrackingwssrc cd spencerpeopletrackingwssrc git clone git checkout rosdistro last step rosdistro refer one available git branch specific particular distribution kinetic melodic noeticinstalling required dependency assuming already installed recommend installing required depencencies framework via rosdep update rosdep install r frompaths ignoresrc initializing catkin workspace next suggest use catkin available via sudo aptget install pythoncatkintools python3catkintools noetic setup workspace cd catkin config init cmakeargs dcmakebuildtyperelwithdebinfo building package finally build package via catkin build c sourcing workspace building workspace source via source develsetupbash special note cuda sdk groundhog farrange detector cudahog library used rwthgroundhog requires nvidia graphic card installed cuda sdk recommended version 65 installing cuda especially laptop optimusbumblebee compiling library straightforward detailled installation instruction provided instruction followed rwthgroundhog package need rebuilt using catkin cuda sdk installed package still compile provide functionality detector slightly outdated recommend ignore unless really needed hope incorporate recent farrange person detector based upon modern deep learning framework future quick start tutorial following demo three tutorial help easily get started using framework demo multimodal tracking rgbd 2d laser bagfile short exemplary bagfile 2d laser rgbd sensor data test framework downloaded running rosrun spencerpeopletrackinglaunch downloadexamplebagfilessh launch roslaunch spencerpeopletrackinglaunch trackingonbagfilelaunch start playing back bagfile soon unpause pressing space run rviz visualization everything went well see detection upperbody detector 2d laser detector resulting person track using pcl people detector instead upperbody detector alternative depth templatebased upperbody detector choose use slightly modified version person detector point cloud library detector first performs euclidean clustering head subcluster extraction validating candidate roi using hog svm pas usepcldetectortrue launch file enabling groundhog detector compiled cudahog library see description optionally enable groundhog detector passing usehogdetectortrue launch file detectiontodetection fusion pipeline automatically fuse detection detector tutorialpeople group tracking visualization single rgbd sensor easiest way get started using single rgbd sensor connected locally computer place asus xtion pro live sensor horizontally flat surface connect computer play example bagfile linked section run following launch file people tracking workspace make sure sourced eg source develsetupbash roslaunch spencerpeopletrackinglaunch trackingsinglergbdsensorlaunch heightaboveground16 following start openni2 driver asus xtion pro publish rgbd point cloud spencersensorsrgbdfronttop camera namespace run upperbody rgbd detector assuming horizontal ground plane 16 meter sensor height may work well detector ha trained approximately height run simple detectiontodetection fusion pipeline run srlnearestneighbortracker subscribe spencerperceptiondetectedpersons publish track spencerperceptiontrackedpersons run rviz predefined configuration show point cloud sensor view frustum detected tracked person using custom rviz plugins using kinect v1 original kinect v1 sensor doe support openni2 case append useopenni1true commandline launch file fall back openni1 troubleshooting cannot see detection bounding box first check point cloud displayed properly rviz probably problem rgbd sensor usb openni issue tutorialtracking front rear laser rgbd sensor try sensor configuration similar spencer robot platform run roslaunch spencerpeopletrackinglaunch trackingonrobotlaunch assumes rgbd sensor mounted horizontally 16m ground sensor data published following topic spencersensorslaserfrontecho0 sensormsgslaserscan spencersensorslaserrearecho0 sensormsgslaserscan spencersensorsrgbdfronttoprgbimagerawdepthimagerect sensormsgsimage spencersensorsrgbdfronttoprgbcamerainfo sensormsgscamerainfo spencersensorsrgbdreartoprgbimagerawdepthimagerect sensormsgsimage spencersensorsrgbdreartoprgbcamerainfo sensormsgscamerainfo launch file start pipeline similar tutorialabove includes second set rgbd detector rear sensor well person detector two 2d laser scanner sensor driver publish rgbd laser data listed started automatically launch file also manually start rviz using subset sensor note fusion pipeline reconfigures automatically subset person detector running eg rear rgbd sensor comment line includes rearrgbddetectorslaunch trackingonrobotlaunch tutorialfully customized sensor configuration start launch file starting person detector use combination launch file provide spencerpeopletrackinglaunchlaunchdetectors may remap input output topic needed create copy detectiontodetectionfusionpipelinelaunch child fuselasersandrgbdlaunch spencerdetectedpersonassociation based upon provided example create pipeline stepbystep fuse detection different detector information see corresponding package create copy freiburgpeopletrackinglaunch file spencerpeopletrackinglaunch adjust refer fusion launch file created stepstart copy freiburgpeopletrackinglaunch needed start group tracking via roslaunch spencerpeopletrackinglaunch grouptrackinglaunch multimodal datasets evaluation multimodal motion capture sequence icra 2016 paper available upon request let evaluate detection tracking algorithm dataset fair comparison please use clearmot metric implementation contained repository possible raw data airport sequence cannot shared privacy reason though might provide extracted detection later point credit cite software repository maintained timm linder formerly social robotics lab albertludwigsuniversitat freiburg stefan breuer formerly computer vision group rwth aachen university credit different package go particular author listed respective readmemd packagexml file see also authorsmd file list contributor work ha supported european commission contract number fp7ict600877 spencer ha received additional funding european union horizon 2020 research innovation programme grant agreement 732737 iliad use software contained repository research please cite following publication multimodal people tracking mobile platform crowded dynamic environment linder breuer leibe b arras ko ieee international conference robotics automation icra 2016 also optionally people detection tracking visualization using mobile service robot linder arras ko robot operating system complete reference vol springer study system decision control 2016 framework described phd thesis multimodal human detection tracking analysis robot crowded environment linder phd thesis technical faculty university freiburg 2020 license disclaimer software research prototype ready production use however license condition applicable open source license allow adapt software need using safety relevant setting make sure software fulfills requirement adjust according applicable safety standard eg iso 26262 package repository released bsd license detail however please check individual package packagexml license file exception referenceslinder arras ko multimodel hypothesis tracking group people rgbd data ieee int conference information fusion fusion 14 salamanca spain 2014jafari hosseini mitzel leibe b realtime rgbd based people detection tracking mobile robot headworn camera ieee international conference robotics automation icra 14 2014arras ko martinez mozos burgard w using boosted feature detection people 2d range data ieee international conference robotics automation icra 07 rome italy 2007munaro menegatti e fast rgbd people tracking service robot autonomous robot volume 37 issuepp 227242 springer 2014beyer l herman linder arras k leibe b deep person detection 2d range data ieee robotics automation letter 33 pp 27262733 2018jia herman leibe b drspaam spatialattention autoregressive model person detection 2d range data ieeersj international conference intelligent robot system iros 20 2020,"[('detection', 'tracking'), ('2d', 'laser')]"
facebookresearch/differentiable-robot-model,Python,differentiable robot model circleci code style black differentiable learnable robot model differentiable robot model implement computation forward kinematics inverse dynamic fully differentiable way also allow specify parameter kinematics dynamic parameter identified data see example folder currently code work kinematic tree package come wrapper specifically trifinger edu kuka iiwa franka panda allegro hand fetch arm 2link toy robot find documentation differentiablerobotmodel documentation installation requirement python 37 clone repo install source git clone gitgithubcomfacebookresearchdifferentiablerobotmodelgit cd differentiablerobotmodel python setuppy develop examplesexamples script show learning kinematics parameter python exampleslearnkinematicsofiiwapy learning dynamic parameter python exampleslearndynamicsofiiwapy l4dc paper experiment notebook experimentsl4dcsimexperiments show set experiment similar presented l4dc paper inproceedingspmlrv120sutanto20a title encoding physical constraint differentiable newtoneuler algorithm author sutanto giovanni wang austin lin yixin mukadam mustafa sukhatme gaurav rai akshara meier franziska page 804813 year 2020 editor alexandre bayen ali jadbabaie george pappa pablo parrilo benjamin recht claire tomlin melanie zeilinger volume 120 series proceeding machine learning research address cloud month 1011 jun publisher pmlr pdf url testing running pytest toplevel folder run differentiable robot model test compare computation pybullet code contribution enforce linters code formatting test pas code doe conform make easy either add formatting ide install git precommit hook running bash pip install precommit precommit install python code use black enforce vscode install black set python formatter black set format save true format manually run black license differentiablerobotmodel released mit license see license additional detail see also term use privacy policy,"[('robot', 'model'), ('differentiable', 'robot')]"
shannon112/awesome-ros-mobile-robot,Other,awesomerosmobilerobot awesome repository provides useful resource information autonomous mobile robot amr research based would mainly focus basic function mobile robotslike odometry slam navigation manipulation including chinese english material index 0robotics 1robotoperatingsystemros 2roboticplatform 3roboticsensing 4calibration 5odometry 6slam 7localization 8mapping 9navigation 10manipulation 11others nontech 111 famous robotics company 112 famous robotics conferencejournal 113 famous robotics competition taiwan 114 famous organization activity 0robotics book introduction algorithm thomas h cormen charles e leiserson ronald l rivest clifford stein multiple view geometry computer vision richard hartley andrew zisserman probabilistic robotics sebastian thrun introduction linear algebra five edition gilbert strang pattern recognition machine learning christopher bishop introduction autonomous mobile robot siegwart roland illah reza nourbakhsh davide scaramuzza slam course minute cyrill cyrill stachniss cyrill stachniss matlab lecture matlab control system lecture brian douglas brian douglas robotics sensing related lecture cyrill stachniss cyrill stachniss robot mapping universitat freiburg cyrill stachniss introduction mobile robotics universitat freiburg wolfram burgard et al roboticsntu pei chun lin control mobile robot georgia tech magnus egerstedt modern robotics mechanic planning control northwestern university kevin lynch robotics upenn vijay kumar et al linear algebra ntu hungyi lee linear algebra mit gilbert strang machine learning ntu hungyi lee machine learning stanford andrew ng probabilistic system analysis applied probability mit john tsitsiklis deep reinforcement learning ucb sergey levine vision algorithm mobile robotics ethz scaramuzza selfdriving car toronto paper library ieee xplore digital library arxivorg eprint archive open review cvf open access google scholar scihub airiti library national digital library thesis dissertation taiwan 1robotoperatingsystem official website status check server website home wiki pkg info documentation site msg info answer qa related blog channel forum construct jetsonhacks linux book c primer stanley b lippman josee lajoie barbara e moo c concurrency action 2nd edition anthony williams design pattern element reusable objectoriented software gang four erich gamma richard helm ralph johnson john vlissides head first design pattern 2nd edition eric freeman elisabeth robson clean code handbook agile software craftsmanship robert c martin example python patrick goebel mastering robotics programming lentin joseph learning robotics programming enrique fernandez et al programming robot practical introduction robot operating system morgan quigley et al jason kane 36 system integration tool multiple machine multimaster multiple machine one master multiple task smachstate machine bridge nonros programsjson api bridge communication rosand 2roboticplatform robot overview aerial ground marine manipulator component wheel robot configuration ref siegwart roland illah reza nourbakhsh davide scaramuzza introduction autonomous mobile robot mit press 2011 table 21 p3436 race car project mit penn without slam nav ucb without laser georgia tech outdoor taiwan hypharos mobile robot github turtlebot turtlebot3 clearpath husky clearpath jackel robotnik xlgen summitxlcommon robotnik rbkairos rbkairoscommon mobile manipulator github personal robotpr2 kuka youbot fetch robotics clearpath huskyur5 clearpath huskydualur5 robotnik rb1 rb1common manipulator github franka emika panda universal robot 3510e techman robot processing unit sbcipc raspberry pirpi beaglebone blackbbb odroid xu4 odroid n2 asus tinker board nvidia jetson tx1 nvidia jetson tx2 nvidia jetson nano nvidia jetson xavier adlink neuron motor controller encoder elmo motion control ltd rls doo rotary linear motion sensor dr fritz faulhaber gmbh co kg maxon group motor driver dexmart motor driver trumman technology corp 3roboticsensing rgb camera usb camera gstreambased camera opencv camera rgbd camera microsoft kinectv1 openni microsoft kinectv1 freenect microsoft kinect onev2 asus xtion openni2 intel realsense d455d435d435id415 occipital structure sensorcore stereo camera stereolabs zed carnegie robotics multisense s7 econ system tara stereo camera nerian sp1 laser rangefinder laser scanner scanning rangefinder often represent 2d laser scanning hokuyourg old hokuyoutm old ydlidar rplidar sick lidar light detection ranging light imaging detection ranging 3d laser scanning often represent 3d laser scanning velodyne livox imu inertial measurement unit xsense microstrain 3dmgx2 sparkfun 9dof razor imum0 3d scanning novel sensing device kaarta matterport microsoft azurekinectdk intel realsense tracking camera t265 intel realsense lidar camera l515 microphone array respeaker mic array v20 text speech tt gtts soundplay speech recognition speech text stt speechrecognition vocal assistant amazon alexa google nest apple homepod mi ai speaker asus smart speaker pyaiml python aiml interpreter matrix barcode fiducial marker system artag auxiliary marker artag apriltag caltag comparison sagitov artur et al artag apriltag caltag fiducial marker system comparison presence partial marker occlusion rotation icinco2017 learningbased feature extractor alexnet vgg resnet inceptionv3 densenet googlenet mobilenet squeezenet etc pytorch implementation learningbased object detection faster rcnn ren shaoqing et al faster rcnn towards realtime object detection region proposal network advance neural information processing system 2015 ssd liu wei et al ssd single shot multibox detector european conference computer vision springer cham 2016 yolov3 v4 bochkovskiy alexey chienyao wang hongyuan mark liao yolov4 optimal speed accuracy object detection arxiv preprint arxiv200410934 2020 v3 redmon joseph ali farhadi yolov3 incremental improvement arxiv preprint arxiv180402767 2018 v2 redmon joseph ali farhadi yolo9000 better faster stronger proceeding ieee conference computer vision pattern recognition 2017 v1 redmon joseph et al look unified realtime object detection proceeding ieee conference computer vision pattern recognition 2016 learningbased human pose estimation openpose openposeplugin 4calibration camera calibration intrinsic extrinsic parameter cameracalibration format converter handeye calibration easyhandeye imu sparkfun razer 9dofrazorimum0 calibration github wiki wiki sparkfun official guide calibration guide 5odometry visual based egomotion backbone component feature keypoint desciptor surf sift orb feature matching bruteforce flann optical flow lucaskanade lk motion estimation 2d2d epipolar geometry triangulation 2d3d perspectivenpoint pnp p3p dlt epnp upnp ba 3d3d iterative closest point icp icpsvd gicp ndt ipda nonlinearopt point2point point2plane direct method dense semidense sparse solution extract feature keypoint desciptor matching motion estimation extract feature keypoint optical flow motion estimation extract feature keypoint sparse direct method semidensedense direct method odometry survey paper delmerico jeffrey davide scaramuzza benchmark comparison monocular visualinertial odometry algorithm flying robot 2018 ieee international conference robotics automation icra ieee 2018 g huang visualinertial navigation concise review 2019 international conference robotics automation icra montreal qc canada 2019 pp 95729582 odometry algorithm ranking kitti wheel odometry roscontrol chitta sachin et al roscontrol generic simple control framework 2017 2d laser based odometry rf2o jaimez j monroy j gonzalezjimenez planar odometry radial laser scanner range flowbased approach ieee international conference robotics automation icra stockholm sweden pp 44794485 2016 3d visual based odometry mono vinsmono qin tong peiliang li shaojie shen vinsmono robust versatile monocular visualinertial state estimator ieee transaction robotics 344 2018 10041020 svo sparse direct method forster christian matia pizzoli davide scaramuzza svo fast semidirect monocular visual odometry 2014 ieee international conference robotics automation icra ieee 2014 dso sparse direct method engel jakob vladlen koltun daniel cremers direct sparse odometry ieee transaction pattern analysis machine intelligence 403 2017 611625 viso2 geiger andreas julius ziegler christoph stiller stereoscan dense 3d reconstruction realtime 2011 ieee intelligent vehicle symposium iv ieee 2011 kitt bernd andreas geiger henning lategahn visual odometry based stereo image sequence ransacbased outlier rejection scheme 2010 ieee intelligent vehicle symposium ieee 2010 okvis leutenegger stefan et al keyframebased visualinertial odometry using nonlinear optimization international journal robotics research 343 2015 314334 rovio bloesch michael et al robust visual inertial odometry using direct ekfbased approach 2015 ieeersj international conference intelligent robot system iros ieee 2015 bloesch michael et al iterated extended kalman filter based visualinertial odometry using direct photometric feedback international journal robotics research 3610 2017 10531072 rotrocc rotrocc rocc monorocc buczko v willert flowdecoupled normalized reprojection error visual odometry 19th ieee intelligent transportation system conference itsc 2016 buczko v willert j schwehr j adamy selfvalidation automotive visual odometry ieee intelligent vehicle symposium iv 2018 buczko v willert monocular outlier detection visual odometry ieee intelligent vehicle symposium iv 2017 buczko v willert distinguish inliers outlier visual odometry highspeed automotive application ieee intelligent vehicle symposium iv 2016 3d rgbdstereo based odometry vinsfusion qin tong shaojie shen online temporal calibration monocular visualinertial system 2018 ieeersj international conference intelligent robot system iros ieee 2018 dvo kerl christian jurgen sturm daniel cremers robust odometry estimation rgbd camera 2013 ieee international conference robotics automation ieee 2013 steinbrucker frank jurgen sturm daniel cremers realtime visual odometry dense rgbd image 2011 ieee international conference computer vision workshop iccv workshop ieee 2011 soft cvisic igor et al softslam computationally efficient stereo visual slam autonomous uavs journal field robotics 2017 cvisic igor ivan petrovic stereo odometry based careful feature selection tracking 2015 european conference mobile robot ecmr ieee 2015 viso2 geiger andreas julius ziegler christoph stiller stereoscan dense 3d reconstruction realtime 2011 ieee intelligent vehicle symposium iv ieee 2011 kitt bernd andreas geiger henning lategahn visual odometry based stereo image sequence ransacbased outlier rejection scheme 2010 ieee intelligent vehicle symposium ieee 2010 3d lidar based odometry loam vloam j zhang singh loam lidar odometry mapping realtime robotics science system conference r 2014 j zhang singh visuallidar odometry mapping lowdrift robust fast ieee international conference robotics automation icra j zhang kaess singh realtime depth enhanced monocular odometry ieeersj international conference intelligent robot system iros 2014 limo graeter johannes alexander wilczynski martin lauer limo lidarmonocular visual odometry 2018 ieeersj international conference intelligent robot system iros ieee 2018 learning based odometry deepvo wang r clark h wen n trigoni deepvo towards endtoend visual odometry deep recurrent convolutional neural network 2017 ieee international conference robotics automation icra singapore 2017 pp 20432050 vinet clark ronald et al vinet visualinertial odometry sequencetosequence learning problem aaai 2017 odometry fusion ekf robotposeekf ekf ukf robotlocalization moore thomas daniel stouch generalized extended kalman filter implementation robot operating system intelligent autonomous system 13 springer cham 2016 335348 6slam slam theorem tutorial bailey h f durrantwhyte simultaneous localisation map ping slam part ii ieee robot auton syst vol 13 nopp 108117 2006 h f durrantwhyte bailey simultaneous localisation map ping slam part ieee robot autom mag vol 13 nopp 99110 jun 2006 strasdat hauke jose mm montiel andrew j davison visual slam filter image vision computing 302 2012 6577 comparison filter graph grisetti giorgio et al tutorial graphbased slam ieee intelligent transportation system magazine 24 2010 3143 slam survey paper cesar cadena luca carlone henry carrillo yasir latif davide scaramuzza jose neira ian reid john j leonard past present future simultaneous localization mapping towards robustperception age ieee transaction roboticsyear 2016 volume 32 issue 6pages 1309 1332 jamiruddin redhwan et al rgbdepth slam review arxiv preprint arxiv180507696 2018 zollhofer michael et al state art 3d reconstruction rgbd camera computer graphic forum vol 37 no2018 slam backbone backend kalman filter based kalman filter kf extend kalman filte ekf unscented kalman filte ukf extended information filter eif sparse extended information filter seif particle filter based gmapping fastslam fastslam20 graph optimization based method bundle adjustmentba pose graph factor graph regression solution gaussian netwon gn leverberg marquertlm efficiently solving cholesky factorization qr decomposition conjugate gradient cere solver libraryd slam benchmark dataset kitti vision benchmark dataset geiger andreas philip lenz raquel urtasun ready autonomous driving kitti vision benchmark suite 2012 ieee conference computer vision pattern recognition ieee 2012 mit stata center dataset fallon maurice et al mit stata center dataset international journal robotics research 3214 2013 16951699 radish dataset howard n roy robotics data set repository radish2003 online available tum rgbd slam benchmark dataset sturm jurgen et al benchmark evaluation rgbd slam system 2012 ieeersj international conference intelligent robot system ieee 2012 iclnuim rgbd benchmark dataset handa whelan j mcdonald j davison benchmark rgbd visual odometry 3d reconstruction slam inrobotics automation icra 2014 ieee international conferenceon ieee 2014 pp 15241531 euroc mav dataset burri michael et al euroc micro aerial vehicle datasets international journal robotics research 3510 2016 11571163 benchmark rk ummerle bsteder cdornhege mruhnke ggrisetti cstachniss akleiner measuring accuracy slam algorithm autonomous robot vol 27 nopp 387407 2009 survey paper cai ziyun et al rgbd datasets using microsoft kinect similar sensor survey multimedia tool application 763 2017 43134355 2d laser based slam cartographer wolfgang hess damon kohler holger rapp daniel andor realtime loop closure 2d lidar slam 2016 ieee international conference robotics automation icra stockholm 2016 pp 12711278 gmapping g grisetti c stachniss w burgard improved technique grid mapping raoblackwellized particle filter ieee transaction robotics vol 23 nopp 3446 feb 2007 hector kohlbrecher von stryk j meyer u klingauf flexible scalable slam system full 3d motion estimation 2011 ieee international symposium safety security rescue robotics kyoto 2011 pp 155160 karto vincent r limketkai b eriksen 2010 april comparison indoor robot localization technique absence gps detection sensing mine explosive object obscured target xv vol 7664 p 76641z international society optic photonics fastslam montemerlo michael et al fastslam factored solution simultaneous localization mapping problem aaaiiaai 593598 2002 montemerlo michael et al fastslam 20 improved particle filtering algorithm simultaneous localization mapping provably converges ijcai 2003 3d visual based slam mono monoslam feature ekf davison andrew j et al monoslam realtime single camera slam ieee transaction pattern analysis machine intelligence 296 2007 10521067 ptam feature ba klein georg david murray parallel tracking mapping small ar workspace 2007 6th ieee acm international symposium mixed augmented reality ieee 2007 orbslam feature ba posegraph raul murartal j montiel juan tardos orbslam versatile accurate monocular slam system ieee transaction robotics vol 31 nopp 11471163 2015 dorian galvezlopez juan tardos bag binary word fast place recognition image sequence ieee transaction robotics vol 28 nopp 11881197 2012 lsdslam semidense direct method posegraph engel jakob thomas schops daniel cremers lsdslam largescale direct monocular slam european conference computer vision springer cham 2014 3d rgbdstereo based slam dtam newcombe richard steven j lovegrove andrew j davison dtam dense tracking mapping realtime 2011 international conference computer vision ieee 2011 orbslam2 raul murartal juan tardos orbslam2 opensource slam system monocular stereo rgbd camera ieee transaction robotics vol 33 nopp 12551262 2017 orbslam3 orbslam3 carlos campos richard elvira juan j gomez rodriguez jose montiel juan tardos orbslam3 accurate opensource library visual visualinertial multimap slam review imuinitialization carlos campos j montiel juan tardos inertialonly optimization visualinertial initialization icra 2020 orbslamatlas richard elvira j montiel juan tardos orbslamatlas robust accurate multimap system iros 2019 orbslamvi raul murartal juan tardos visualinertial monocular slam map reuse ieee robotics automation letter volnopp 796803 2017 dvoslam kerl christian jurgen sturm daniel cremers dense visual slam rgbd camera 2013 ieeersj international conference intelligent robot system ieee 2013 rgbdslamv2 endres felix et al 3d mapping rgbd camera ieee transaction robotics 301 2013 177187 rtabmap labbe f michaud rtabmap opensource lidar visual slam library largescale longterm online operation journal field robotics vol 36 nopp 416446 2019 wiley universit e de sherbrooke labbe f michaud longterm online multisession graphbased splam memory management autonomous robot vol 42 nopp 11331150 2018 labbe f michaud online global loop closure detection largescale multisession graphbased slam proceeding ieeersj international conference intelligent robot system 2014 labbe f michaud appearancebased loop closure detection online largescale longterm operation ieee transaction robotics vol 29 nopp 734745 2013 labbe f michaud memory management realtime appearancebased loop closure detection proceeding ieeersj international conference intelligent robot system 2011 pp 12711276 kinectfusion izadi shahram et al kinectfusion realtime 3d reconstruction interaction using moving depth camera proceeding 24th annual acm symposium user interface software technology acm 2011 newcombe richard et al kinectfusion realtime dense surface mapping tracking ismar vol 11 2011 2011 elasticfusion whelan thomas et al elasticfusion dense slam without pose graph robotics science system 2015 bundlefusion dai angela et al bundlefusion realtime globally consistent 3d reconstruction using onthefly surface reintegration acm transaction graphic tog 363 2017 24 kofusion mobile manipulator houseago charlie michael bloesch stefan leutenegger kofusion dense visual slam tightlycoupled kinematic odometric tracking 2019 international conference robotics automation icra ieee 2019 armslam manipulator klingensmith sirinivasa kaess articulated robot motion simultaneous localization mapping armslam ieee robotics automation letter volnopp 11561163 july 2016 3d lidar based slam zebedee handheld device bosse r zlot p flick zebedee design springmounted 3d range sensor application mobile mapping ieee transaction robotics vol 28 nopp 11041119 oct 2012 kaarta handheld device zhang ji sanjiv singh laservisualinertial odometry mapping high robustness low drift journal field robotics 358 2018 12421264 liosam handheld device tixiao englot brendan meyers drew wang wei ratti carlo ru daniela liosam tightlycoupled lidar inertial odometry via smoothing mapping 2020 ieeersj international conference intelligent robot system iros la vega 2020 hdlgraphslam kenji koide jun miura emanuele menegatti portable 3d lidarbased system longterm widearea people behavior measurement advanced robotic system 2019 blam e nelson blam berkeley localization mapping online available legoloam b englot legoloam lightweight ground optimized lidar odometry mapping variable terrain 2018 ieeersj international conference intelligent robot system iros madrid 2018 pp 4758 4765 cartographer wolfgang hess damon kohler holger rapp daniel andor realtime loop closure 2d lidar slam 2016 ieee international conference robotics automation icra stockholm 2016 pp 12711278 imlsslam deschaud jeanemmanuel imlsslam scantomodel matching based 3d data 2018 ieee international conference robotics automation icra ieee 2018 cognitive related slam vitaslam struckmeier oliver et al vitaslam bioinspired visuotactile slam navigation interacting aliased environment 2019 ieee international conference cyborg bionic system cbs ieee 2019 semantic related slam kimera rosinol antoni et al kimera opensource library realtime metricsemantic localization mapping arxiv preprint arxiv191002490 2019 7localization localization 2d occupancy grid map amcl adaptive kldsampling monte carlo localization thrun w burgard fox probabilistic robotics mit press 2005 mrptlocalization jl blanco j gonzalezjimenez ja fernandezmadrigal optimal filtering nonparametric observation model application localization slam international journal robotics research ijrr vol 29 14 2010 j gonzalezjimenez jl blanco c galindo ortizdegalisteo ja fernandezmadrigal fa moreno j martinez mobile robot localization based ultrawideband ranging particle filter approach robotics autonomous system vol 57 nopp 496507 2009 slam algorithm support pure localization cartographer orbslam2 rtabmap 8mapping basic mapping backbone 2d occupancy grid map binary probability 3d occupancy grid map binary probability octomap collision checking efficient probabilistic 3d mapping framework based octrees 3d probability occupancy grid map hornung armin wurm kai bennewitz maren stachniss cyrill burgard wolfram octomap efficient probabilistic 3d mapping framework based octrees autonomous robot autonomous robot journal 2013 34 101007s1051401293210 basic mapping method mapserver loading saving octomapserver loading saving mapping advanced 3d mapping backbone surfels pfister hanspeter et al surfels surface element rendering primitive proceeding 27th annual conference computer graphic interactive technique 2000 truncated signed distance function sdf curless brian marc levoy volumetric method building complex model range image proceeding 23rd annual conference computer graphic interactive technique 1996 truncated signed distance function tsdf r newcombe izadi hilliges molyneaux kim jdavison p kohi j shotton hodges fitzgibbon kinectfusion realtime dense surface mapping tracking mixed augmented reality ismar 2011 10th ieee international symposiumon pp 127136 ieee 2011 euclidean signed distance field esdf collision checking ratliff nathan et al chomp gradient optimization technique efficient motion planning 2009 ieee international conference robotics automation ieee 2009 advanced 3d mapping method voxblox esdftsdf based helen oleynikova et al voxblox incremental 3d euclidean signed distance field onboard mav planning ieeersj international conference intelligent robot system iros 2017 openchisel tsdf based klingensmith matthew et al chisel real time large scale 3d reconstruction onboard mobile device using spatially hashed signed distance field robotics science system vol2015 densesurfelmapping surfel based wang kaixuan fei gao shaojie shen realtime scalable dense surfel mapping 2019 international conference robotics automation icra ieee 2019 9navigation navigation stack movebase architecture movebase movebaseflex star hart peter e nil j nilsson bertram raphael formal basis heuristic determination minimum cost path ieee transaction system science cybernetics 42 1968 100107 dijkstra dijkstra edsger w note two problem connexion graph numerische mathematik 11 1959 269271 local planner dwalocalplanner teblocalplanner baselocalplanner ebandlocalplanner robotinolocalplanner asrftclocalplanner simplelocalplanner timed elastic band teb c rosmann w feiten wosch f hoffmann bertram efficient trajectory optimization using sparse model proc ieee european conference mobile robot spain barcelona sept 2013 pp 138143 c rosmann f hoffmann bertram integrated online trajectory planning optimization distinctive topology robotics autonomous system vol 88 2017 pp 142153 c rosmann f hoffmann bertram kinodynamic trajectory optimization control carlike robot ieeersj international conference intelligent robot system iros vancouver bc canada sept 2017 dynamic window approach dwa fox w burgard thrun dynamic window approach collision avoidance ieee robotics automation magazine volnopp 2333 march 1997 advanced local planner velocity obstacle vo fiorini paolo zvi shiller motion planning dynamic environment using velocity obstacle international journal robotics research 177 1998 760772 reciprocal velocity obstacle rvo van den berg jur ming lin dinesh manocha reciprocal velocity obstacle realtime multiagent navigation 2008 ieee international conference robotics automation ieee 2008 optimal reciprocal collision avoidance orca van den berg jur et al reciprocal nbody collision avoidance robotics research springer berlin heidelberg 2011 319 recovery behavior rotaterecovery moveslowandclear stepbackandsteerturnrecovery novel navigation strategy mit aerospacecontrolslab drl navigation chen f liu sy liu miller j j p motion planning diffusion map ieeersj international conference intelligent robot system iros daejeon korea 2016 chen yu fan et al decentralized noncommunicating multiagent collision avoidance deep reinforcement learning 2017 ieee international conference robotics automation icra ieee 2017 chen yu fan et al socially aware motion planning deep reinforcement learning 2017 ieeersj international conference intelligent robot system iros ieee 2017 everett et al motion planning among dynamic decisionmaking agent deep reinforcement learning 2018 ieeersj international conference intelligent robot system iros madrid spain 2018 google ai research prmrl navigation faust et al prmrl longrange robotic navigation task combining reinforcement learning samplingbased planning 2018 ieee international conference robotics automation icra brisbane qld 2018 pp 51135120 h l chiang et al learning navigation behavior endtoend autorl ieee robotics automation letter volnopp 20072014 april 2019 francis anthony et al longrange indoor navigation prmrl ieee transaction robotics 2020 ethz autonomous system lab navigation pfeiffer mark et al predicting action act predictably cooperative partial motion planning maximum entropy model 2016 ieeersj international conference intelligent robot system iros ieee 2016 pfeiffer mark et al perception decision datadriven approach endtoend motion planning autonomous ground robot 2017 ieee international conference robotics automation icra ieee 2017 coverage navigation cleaning weeding robot survey paper galceran enric marc carreras survey coverage path planning robotics robotics autonomous system 6112 2013 12581276 10manipulation moveit movegroup architecture prmprobabilistic roadmap prm lazyprm lazyprm tree based planner rrtconnect default rrtrapidlyexploring random tree rrt trrt bitrrt lbtrrt sbl stride kpiece bkpiece lbkpiece est biest projest pdst spar spars2 search based planning library sbpl website intro search based planner ara anytime r covariant hamiltonian optimization motion planning chomp intro orocos kinematics dynamic library kdl fkik modeling 11othersnontechpart 111famous robotics related company robotic company category company research center toyotaresearchinstitutetri microsoftresearch googleai deepmind facebookartificialintelligenceresearchfair berkeleyartificialintelligenceresearch bair nvidiaresearch manipulator abb fanuc kuka yaskawa techmanrobot hiwin universalrobots innfos mobile robotagv base omronrobotics clearpathroboticsottomotors amazonroboticskivasystemcanvastech yujinrobotics robotis fetchrobotics greentrans kuka irobot palrobotics robotnik service robotwith torso willowgarage softbankrobotics fetchrobotics palrobotics innfos robotnik dual arm abb rethinkrobotics humanoid bostondynamics softbankrobotics palrobotics ubtechrobotics quadruped bostondynamics unitreerobotics mitcheetah anyroboticsanymal standforddoggo innfos research robot willowgaragepr2 facebookpyrobot robotisturtlebot3 fetchrobotics robotnikrb1 educational robot kit trossenrobotics niryo ozrobotics drone dji tello ros20 adlinkdds robotisturtlebot3 cleaningbot irobot xiaomi gripper robotiq toyo selfdriving car alphabetwaymo uberatg appleprojecttitan tesla toyotaresearchinstitutetri baiduapollo autox delivery robot starship amazonroboticsscoutdispatch 112famous robotics publication top conference ieee international conference robotics automation icra ieeersj international conference intelligent robot system iros related society society website conference transaction ieee robotics automation society ra ieee industrial electronics society ieee control system society cs ieee system man cybernetics smc aaa science robotics conference robot learning corl tool google scholar rank h5index h5median journal citation report jcr impact factor eigenfactor score article influence score compress pdf online 113famous robotics competition global darpa robotics challenge robocup amazon roboticspicking challenge icra robot competition including lot competition would different every year iros robot competition including lot competition would different every year taiwan sks pmc robot competition hiwin siliconawards 114famous organization activity related work rosindustrial ros20 rosh organizationscommunities open source robotics foundation osrf open source robotics corporation osrc rostaiwan rostaipei activity roscon rosdevcon summer schoolcn summer schooltw license cc0,"[('et', 'al'), ('international', 'conference')]"
NVIDIA-ISAAC-ROS/isaac_ros_nvblox,C++,isaac nvblox nvblox rosintegration local 3d scene reconstruction mapping overview isaac nvblox contains rospackages 3d reconstruction cost map navigation isaacrosnvblox process depth pose reconstruct 3d scene realtime output 2d costmap nav2 costmap used planning navigation visionbased solution avoid obstacle isaacrosnvblox designed work depthcameras andor 3d lidar package us gpu acceleration compute 3d reconstruction 2d costmaps using nvblox underlying frameworkindependent c library typical graph us isaacrosnvblox nvblox take depth image color image pose input computes 3d scene reconstruction gpu graph pose computed using visualslam pose estimation node reconstruction sliced output cost map provided cost map plugin nav2 optional colorized 3d reconstruction delivered rviz using mesh visualization plugin nvblox stream mesh update rviz update reconstruction realtime built isaacrosnvblox offer several mode operation default mode environment assumed static two additional mode operation provided support mapping scene contain dynamic element human reconstruction mapping scene containing human dynamic reconstruction mapping scene containing general dynamic object graph show isaacrosnvblox operating human reconstruction mode color image corresponding depth image processed unet using peoplesemsegnet dnn model estimate segmentation mask person color image nvblox us mask separate reconstructed person separate humansonly part reconstruction technical detail provide information three type mapping performance following table provides timing various function nvblox core various platform dataset voxel size component x8664 w 4090 ti desktop x8664 w rtx3000 ti laptop agx orin replica 005 tsdf 04 36 16 color 17 25 42 meshing 16 40 123 esdf 19 84 84 redwood 005 tsdf 02 02 05 color 11 16 24 meshing 06 15 27 esdf 15 26 42 documentation please visit isaac documentation learn use repository package isaacrosnvblox quickstart try example api parameter topic service troubleshooting isaac sim issue realsense issue communication issue nvbloxexamplesbringup nvbloximagepadding nvbloxisaacsim nvbloxmsgs nvbloxnav2 nvbloxperformancemeasurement nvbloxros nvbloxroscommon nvbloxrvizplugin realsensesplitter semanticlabelconversion latest update 20231018 general dynamic reconstruction,"[('3d', 'scene'), ('reconstruction', 'mapping')]"
benct/lovelace-xiaomi-vacuum-card,Other,xiaomivacuumcard simple card various robot vacuum home assistant lovelace ui ghrelease ghdownloads ghlastcommit ghcodesize hacsbadge integrated support vacuum following brandsmodels xiaomi roomba neato robovac valetudo ecovacs deebot installation manually add xiaomivacuumcardjs config folder add following theconfigurationyaml file yaml lovelace resource url localxiaomivacuumcardjsv450 type module install using hacs add yaml mode yaml lovelace resource url hacsfileslovelacexiaomivacuumcardxiaomivacuumcardjs type module configuration managed directly configuration lovelace dashboard resource panel using yaml mode added clicking add lovelace button hacs dashboard installing plugin want use vacuum background image download add imgvacuumpng configure preferred path configuration name type default description type string required customxiaomivacuumcard entity string required vacuummyxiaomivacuum name stringbool friendlyname override friendly name set false hide image stringbool false set pathfilename background image ie localimgvacuumpng state entity data see set false hide state attribute entity data see set false hide attribute button button data see set false hide button row entity data default vacuum attribute list state left list include status battery mode attribute right list include mainbrush sidebrush filter sensor see example customize hide add custom attribute name type default description key string required attributestate key vacuum entity icon string optional icon label string optional label text unit string optional unit button data default button include start pause stop spot hidden locate return see example customize hide add custom buttonsactions name type default description icon string required show hide stop button service string required service call ie vacuumstart show bool true show hide button label string optional label hover servicedata object data applied service call vendor card wa originally written xiaomi roborock vacuum cleaner version 20 later ha added support vendor want vendor added feel free open issue contribute directly pr name type default description vendor string xiaomi supported vendor xiaomi xiaomimi valetudo ecovacs deebot deebotslim robovac roomba neato note default attribute button may change vendor integration screenshots xiaomivacuumcard xiaomivacuumcardnotitle xiaomivacuumcardimage xiaomivacuumcardnobuttons example basic configuration yaml type customxiaomivacuumcard entity vacuumxiaomivacuumcleaner yaml type customxiaomivacuumcard entity vacuumxiaomivacuumcleaner image localcustomfolderbackgroundpng name vacuum vendor xiaomi hide state attribute andor button yaml type customxiaomivacuumcard entity vacuumxiaomivacuumcleaner state false attribute false button false hide specific state value attribute andor button yaml type customxiaomivacuumcard entity vacuumxiaomivacuumcleaner state mode false attribute mainbrush false sidebrush false button pause false locate false customize specific state value attribute andor button yaml type customxiaomivacuumcard entity vacuumxiaomivacuumcleaner state status key state mode icon mdirobotvacuum label fan speed unit percent attribute mainbrush key componentmainbrush sidebrush key componentsidebrush button pause icon mdistop label hold service vacuumstop show default clean spot button yaml type customxiaomivacuumcard entity vacuumxiaomivacuumcleaner button spot show true add custom attribute yaml type customxiaomivacuumcard entity vacuumxiaomivacuumcleaner attribute cleanarea key cleanarea label cleaned area unit m2 add custom button service call yaml type customxiaomivacuumcard entity vacuumxiaomivacuumcleaner button newbutton icon mdilightswitch label custom button service lightturnoff servicedata entityid lightlivingroom translation yaml type customxiaomivacuumcard entity vacuumxiaomivacuumcleaner attribute mainbrush label hovedkost unit timer sidebrush label sidekost unit timer filter label filtere sensor label sensorer button start label start pause label stopp stop label hammertime disclaimer project affiliated associated authorized endorsed way officially connected xiaomi corporation subsidiary affiliate official xiaomi website found card xiaomivacuumcard multipleentityrow githubentityrow batteryentityrow attributeentityrow bmc,"[('customxiaomivacuumcard', 'entity'), ('yaml', 'type')]"
chriskiehl/pyrobot,Python,pyrobot hear ye hear ye pyrobot wa written fun long weekend development stopped long ago looking pure python automation library actively developed work window osx linux checkout pyautogui pyrobot lightweight pure python window automation library loosely modeled java robot class used drive application provide api way hooking programatically good want install great bit hefty pywin32 library check couple use case pyrobot installation pyrobot single python file either download directly github page clone repo git clone usage similar java everything controlled via single class python import robot class pyrobot module pyrobot import robot create instance class robot robot launch program robotstartprogram programname cool stuff locationoffield 340 400 expectedcolor 255255255 pixel robotgetpixellocationoffield pixel expectedcolor robotsetmouseposlocationoffield robotclickmousebutton left robotaddtoclipboard hello world ya robotpaste etc need take screengrabs pil installed pyrobot extends default behavior pil allowing entire virtual screen targeted rather primary return list screen rects attached device monitorscoords robotgetdisplaymonitors take screenshot desktop return pil image object im robottakescreenshotmonitorscoords1 coordinate last monitor also arbitrarily sized box left 100 top 430 width 1000 height 750 im robottakescreenshotleft top width height save pil image disk imsave myawesomescreenshotpng png update added ability read data clipboard myvar robotgetclipboarddata convenience method pressandrelease robotpressandrelease capslock added key class pyrobot import robot key robot robot robotpressandreleasekeysforwardslash doc mouse method summary getmousepos return tuple current mouse coordinate setmouseposx move mouse pointer given screen coordinate clickmousebutton simulates full mouse click one event one event button left right middle doubleclickmousebutton two full mouse click one event one event moveandclickxybutton convenience function move coordinate click mouse mousedownbutton press one mouse button button left right middle mouseupbutton release mouse button button left right middle scrollmousewheeldirection click scroll mouse wheel either x number click key method summary keypresskey press given key input string key constant keyreleasekey release given key input string key constant pressandrelease simulates pressing key one event one release event clipboard method summary addtoclipboardstring copy text clip board later pasting clearclipboard clear everything clipboard getclipboarddata retrieves text window clipboard string paste paste content clipboard screen method summary getdisplaymonitors enumerates return list virtual screen coordinate attached display devicesoutput left top right bottom monitorleft top right bottom monitoretc getpixelx return pixel color tuplergb given screen coordinate takescreenshotboundsnone note requires python image librarytakes screenshot entire desktop return pil image objectuse getdisplaymonitors target specific screen pas tuple consisting left top width height misc method summary sleepduration pause robot duration number second startprogramfullpath launch window application input type string typebackwardsinputstring delay05 type right left typestringinputstring delay005 convenience function typing stringsdelay time keystroke special takesnapshot note python ha built image library know seemed little use include snapshot method simply save picture disk 90 program automation find querying pixel work fairly well eg robotgetpixel however need advanced display searching want template matching need external library method contruct pil image object course requires pil installed dependency free todo allow specific windowprogram targeting relative coordinate used scripting contact feature request bug hate drop line audionauticgmailcom twitter thechriskiehl,"[('method', 'summary'), ('one', 'event')]"
dfki-ric/phobos,Python,latestrelease doi license madewithsphinxdoc apidocs phobos phobos cli tool addon opensource 3d modeling software blender v33lts support robot model creation editing blender addon enables creation wysiwyg robot model use robot framework like rock realtime simulation mar gazebo phobos export format urdf sdf smurf common mesh format stereolithography stl wavefront obj collada dae phobos wa initiated currently developed robotics innovation center german research center artificial intelligence dfki bremen together robotics group university bremen please contact henning wiedemann inquiry question feedback suited issue page version 200 version 200 refactoring phobos possible use phobos normal python package command line tool see running new phobos model created older version phobos make sure backup case able update model simply exporting smurf importing smurf file due change blendertoit might necessary check whether material already use specular bsdf principled bsdf shaders update manually encounter problem new version please hesitate open issue question idea want discus please look github discussion found bug want request feature please let u know opening issue documentation user documentation phobos wiki source documentation phobos github page citing phobos ha published journal open source software ask user cite use phobos allows u keep project alive citing please provide information phobos version using see wiki using additional phobos plugins configuration general phobos paper hunt bibtex entry check faq section installation blender updating already phobos installed want update remove old version phobos first close blender proceed installation step explained note window using blender window make sure latest version microsoft visual c redistributable installed otherwise blender python work properly install phobos blender download phoboszip release zip phobos subdirectory eg zip r phoboszip phobos phobos ha several python dependency installed blender use phobos two way installing phobos recommended directly install phoboszip blender blendereditpreferencesaddonsinstall activate restart blender activate phobos addon offer inspection requirement installing installing phoboszip run script installrequirementspy blender python bash blenderexecutable b python installrequirementspy install phoboszip blender blendereditpreferencesaddonsinstall activate installation phobos main menu found right hand side 3d viewport already visible one find small arrow open blender toolbar purple circle showing image small arrow open phobos toolbar widget phobos currently tested running blender v33 lts cli install requirement executing installrequirementspy python want install phobos bash cd phobos python3 installrequirementspy install using pip bash cd phobos pip install autoprojadd package buildconfpackagesetinstall via amake overview blender model spaceclimber robot blender next phobos toolbar displayed left model spaceclimber robot blender next phobos toolbar displayed left phobos make use blender hierarchical object graph bone object object normally used animating 3d character allow store 3d coordinate system apply constraint movement instance restrict movement object certain range specific axis allows replicate link joint defined urdf model together hierarchical tree parent child object complete branching kinematic chain robot represented attaching mesh primitive bone phobos allows add visual collision object model additional object allow storing information eg center mass part robot thus refining physical representation sensor object added correctly place orient device laser scanner camera contact sensor making use blender custom object property necessary information added model inertia tensor opening angle camera decomposition different element phobos model composed blender decomposition different element phobos model composed blender element arranged blender different layer thus avoiding confusion obstruction view editing complex model cli either use cliphobos normal python package use script provided latter phobos help get list currently available script also tell dependency missing script feature wysiwyg editor robot model using blender cli tool fast easy model handling inspection ci tool run phobos headless cipipeline atomated model processing maintenance import export urdf sdf smurf format easy definition robot kinematics link joint visualisation different model component even joint constraint numerous tool fast editing batch editing object property autogeneration collision object autogeneration inertia tensor mass shape calculation merged inertia complex link verbose logging saving loading model pose annotation object motorssensors jointslinks saveload different export configuration model export defined floating point precision model integrity check tool maintaining model database library containing python example automatic model adaption cool feature blender already provides rendering animation etc license phobos distributed 3clause bsd license,"[('robot', 'model'), ('use', 'phobos')]"
wkentaro/morefusion,Python,morefusion multiobject reasoning 6d pose estimation volumetric fusion daniel lenton installation usage morefusion objectlevel reconstruction system build map knownshaped object exploiting volumetric reconstruction detected object realtime incremental scene reconstruction senario key component occupancybased volumetric reconstruction detected object model alignment later stage volumetric pose prediction exploit volumetric reconstruction cnn feature extraction image observation joint pose refinement object based geometric consistency among object impenetrable space installation several option installation python project python framework pose estimation eg training inference refinement project camera demonstration framework objectlevel mapping live camera project robotic demonstration framework robotic demonstration objectlevel mapping note developed project ubuntu 1604 kinetic cuda 101 several code change may needed adapt cuda version python project bash make install source anaconda3binactivate project camera demonstration bash cd make install source anaconda3binactivate source develsetupsh project robotic demonstration robotagent computer cuda gpu visual processing robotnode computer realtime panda robot robotagent instruction project camera demonstration robotnode bash cd catkin build morefusionrospanda source develsetupsh rosrun morefusionrospanda createudevrulessh usage training inference pretrained model provided demo following process optional run demo pretrained instance segmentation model pretrained 6d pose prediction model instance segmentation bash cd examplesycbvideoinstancesegm downloaddatasetpy mpirun npython trainmultipy 4gpu training imagedemopy model logsxxxxxxnpz 6d pose prediction bash baseline model pointcloudbased cd examplesycbvideosingleviewpcd downloaddatasetpy trainpy gpucenterizepcd pretrainedresnet18 1gpu mpirun ntrainpy multinode centerizepcd pretrainedresnet18 4gpu volumetric prediction model 3dcnnbased cd examplesycbvideosingleview3d downloaddatasetpy trainpy gpupretrainedresnet18 withoccupancy 1gpu mpirun ntrainpy multinode pretrainedresnet18 withoccupancy 4gpu mpirun ntrainpy multinode pretrainedresnet18 wo occupancy inference downloadpretrainedmodelpy downloading pretrained model demopy logsxxxxxxnpz evaluatepy logsxxx joint pose refinement bash cd examplesycbvideoposerefinement checkicpvsiccpy press start camera demonstration static scene bash using orbslam2 camera tracking roslaunch morefusionros rsrgbdlaunch roslaunch morefusionros rvizstaticdesklaunch roslaunch morefusionros setupstaticdesklaunch figurestatic scene reconstruction human handmounted camera bash using robotic kinematics camera tracking roslaunch morefusionros rsrgbdrobotlaunch roslaunch morefusionros rvizstaticrobotlaunch roslaunch morefusionros setupstaticrobotlaunch figurestatic scene reconstruction robotic handmounted camera dynamic scene bash roslaunch morefusionros rsrgbdlaunch roslaunch morefusionros rvizdynamicdesklaunch roslaunch morefusionros setupdynamicdesklaunch roslaunch morefusionros rsrgbdrobotlaunch roslaunch morefusionros rvizdynamicrobotlaunch roslaunch morefusionros setupdynamicrobotlaunch figuredynamic scene reconstruction human handmounted camera robotic demonstration robotic pickandplace bash robotagent sudo ntpdate 0ukpoolntporg time synchronization robotnode sudo ntpdate 0ukpoolntporg time synchronization robotnode roscore robotagent roslaunch morefusionrospanda pandalaunch robotnode roslaunch morefusionros rsrgbdrobotlaunch robotnode roslaunch morefusionros rvizstaticlaunch robotnode roslaunch morefusionros setupstaticrobotlaunch target2 robotnode rosrun morefusionros robotdemonodepy rirun figuretargetted object pickandplace scanning scene b removing distractor object c picking target object citation find morefusion useful please consider citing paper inproceedingswadaetalcvpr2020 titlemorefusion multiobject reasoning 6d pose estimation volumetric fusion authorkentaro wada edgar sucar stephen james daniel lenton andrew j davison booktitleproceedings ieee conference computer vision pattern recognition cvpr year2020,"[('roslaunch', 'morefusionros'), ('6d', 'pose')]"
Tai-Wang/Depth-from-Motion,Python,depth motion dfm repository official implementation dfm mvfcos3d pvdemo 3ddemo318 3ddemo2318 introduction official release paper monocular 3d object detection depth motion mvfcos3d multiview cameraonly 4d object detection pretrained monocular backbone code still going large refactoring plan reorganize repo combination core code project mmdet3d requirement finally please stay tuned clean release configs model note also release refactored code official mmdet3d soon monocular 3d object detection depth motion tai wang jiangmiao pang dahua lin proc european conference computer vision eccv 2022 arxiv mvfcos3d multiview cameraonly 4d object detection pretrained monocular backbone tai wang qing lian chenming zhu xinge zhu wenwei zhang arxiv 2022 arxiv result dfm result dfm corresponding config shown released preliminary model reproducing result kitti validation set complete model checkpoint log released soon backbone lr schd mem gb inf time fps easy moderate hard download resnet34 291232 198970 1739101 model log bev apiou 07 389137 272843 248381 3d apiou 05 674935 512602 474430 bev apiou 05 725696 554583 524735 reproduced performance may degree fluctuation due limited training sample sensitive metric experience multiple run average performance may vary 261816 292017 depending effect corner case caused matrix inverse computation reason please stay tuned stable version model log updated soon mvfcos3d result mvfcos3d baseline version corresponding config shown released preliminary config reproducing result waymo validation set comply license agreement waymo dataset pretrained model waymo dataset released complete model configs log released soon pretrained fcos3d without customized finetuning backbone lr schd mem gb inf time fps mapl map maph download resnet101dcn 2041 286 2701 log car 4105 5574 5483 pedestrian 1877 2785 2421 cyclist 143 221 20 mvfcos3d pretrained fcos3d backbone lr schd mem gb inf time fps mapl map maph download resnet101dcn 338 4665 4425 log car 5269 6836 6747 pedestrian 2682 3847 341 cyclist 219 3311 3116 resnet101dcn10 sweep 3514 4798 4549 log1 log2 car 5544 7072 6979 pedestrian 276 395 351 cyclist 2239 3372 3159 resnet101dcnslow infer2 379 5215 4884 car 5624 7315 7207 pedestrian 346 4901 4225 cyclist 2284 3429 3218 slow infer refers changing nm setting nmspre4096 maxnum500 increase number prediction inference get better recall performance slow inference procedure significantly improves final performance waymo metric trick also applied 10sweep config model installation requires following openmmlab package mmcvfull v160 recommended latest iou3d computation mmdetection v2240 mmsegmentation v0200 version recommended except mmcv lower version mmdet mmseg may also work tested temporarily example command shown follows bash conda create name dfm python37 conda activate dfm conda install pytorch190 torchvision0100 cudatoolkit113 c pytorch c condaforge pip install mmcvfull160 pip install mmdet2240 pip install mmsegmentation0200 git clone cd depthfrommotion pip install v e license project released apache 20 license usage data preparation first prepare raw data kitti waymo data following mmdetection3d prepare data related temporally consecutive frame kitti need additionally download pose label file raw data official mapping raw data 3d detection benchmark split run data converter script python toolscreatedatapy kitti rootpath datakitti outdir datakitti extratag kitti waymo need additionally generate ground truth bin file cameraonly setting box covered perception range camera considered besides recommend use latest waymo dataset includes camera synced annotation tailored setting python toolscreatewaymogtbinpy please follow mmdet3d tutorial waymo dataset preprocessing step final data structure look like text mmdetection3d mmdet3d tool configs data kitti imagesets testing calib image2 prev2 velodyne training calib image2 prev2 label2 velodyne raw 20110926drive0001sync xxxx raw data file devkit mapping trainmappingtxt trainrandtxt waymo waymoformat training validation testing gtbin camgtbin kittiformat imagesets training calib image0 image1 image2 image3 image4 label0 label1 label2 label3 label4 labelall pose velodyne testing training waymogtdatabase waymoinfostrainvalpkl waymoinfostrainpkl waymoinfosvalpkl waymoinfostestpkl waymodbinfostrainpkl pretrained model kitti implementation dfm keep ligastereo setting ha lidarbased teacher better supervision training please download teacher checkpoint ha converted mmdet3dstyle make network converge faster bringap performance gain consider replace direct supervision simpler usage near future demo test dfm image data simply run shell python demomonodetdemopy imagefile annotationfile configfile checkpointfile device gpuid outdir outdir show annotationfile provide 3d 2d projection matrix camera intrinsic matrix visualization result including image predicted 3d bounding box projected image saved outdirimagename example kitti data using dfm model shell python demomonodetdemopy demodatakitti000008png demodatakittikitti000008infospkl configsdfmdfmr341x8kitti3d3classpy checkpointsdfmpth training testing training testing follow standard command mmdet train test model bash train dfm kitti toolsslurmtrainsh partition jobname configfile workdir simple inference evaluation use command bash evaluate dfm kitti mvfcos3d waymo toolsslurmtestsh partition jobname configfile ckptpath eval map faq use waymo letap metric evaluate performance mvfcos3d follow instruction compiling original waymo detection metric compile file get computedetectionletmetricsmain file letap metric evaluation besides refer official tutorial cameraonly 3d detection detail python example code acknowledgement codebase based mmdet3d benefit lot ligastereo citation bibtex inproceedingswang2022dfm titlemonocular 3d object detection depth motion authorwang tai pang jiangmiao lin dahua year2022 booktitleeuropean conference computer vision eccv articlewang2022mvfcos3d titlemvfcos3d multiview cameraonly 4d object detection pretrained monocular backbone authorwang tai lian qing zhu chenming zhu xinge zhang wenwei journalarxiv preprint year2022,"[('object', 'detection'), ('depth', 'motion')]"
beardicus/awesome-plotters,Other,awesome plotter awesome curated list code resource computercontrolled drawing machine visual art robot content hardware plotter motor controller accessory adapter pen software hpgl gcode plotter control vector creation vector utility font inspiration instruction research manual ephemera manual ephemera community plotter art sale awesomes hardware plotter axidraw pen plotter evil mad scientist popular plottertwitter lineus cute little kickstarted robotic drawing arm drawing robot 3dprintable axidraw clone w arduino cnc shield controller running grbl firmware 4xidraw yet another 3dprintable axidraw clone w arduino cnc shield controller running grbl firmware watercolorbot xy art robot software plot watercolor paint eggbot pen plotter eggshaped spherical object hp pen plotter vintage desktop floorstanding pen plotter creator hpgl standard model 7475a common usually found ebay roland pen plotter vintage flatbed hpgl pen plotter search ebay roland dxy brachiograph arduino cnc drawing machine fairly simple 3dprinted axidrawstyle plotter good video documentation motor controller grblshield stepper motor control hardware needed turn arduino gcodebased motion controller using grbl firmware adafruit tinyg featureful robust 6axis gcodebased motion control hardware adafruit arduino cnc shield grblcompatible stepper motor control shield arduino similar grblshield raspberry pi cnc hat raspberry pi addon board w stepper controller microcontroller running grbl interface pi serial pin ebb driver board usbbased dual stepper motor controller board originally designed eggbot accessory adapter wifi232 wifi rs232 serial via db25 plug control serial plotter wirelessly plotter cable pinout schematic plotter cable work hp roland plotter search ebay amazon db9 db25 serial null modem cable similar find sale plotadapter serialgpib converter hp plotter us arduino microcontroller convert serial hpgl gpibhpib expected older hp plotter pen sharpie fine point plotter adapter 3dprinted adapter fit standard sharpie hpgl plotter parametric 3dprintable plotter pen adapter adjustable model print adapter various pen plotter pen stl model accurate stl model short long standard plotter pen pen axidraw list pen suitable general plotter abuse pen eggbot egg glassfocused pen recommendation still generally applicable information jetpens best white ink pen comprehensive review many white ink pen picture coverage characteristic software hpgl hpgl serialtextbased protocol used old pen plotter even many new vinyl cutter chiplotle python library generating hpgl interfacing serial plotter hpgl reference guide htmlbased hpgl reference hp 7475a interfacing programming manual scanned pdf manual contains full hpgl reference djipcohpgl nodejs library communicate hpglcompatible plotter printer hp2xx gnu tool convert hpgl vector raster format also used previewing x11 vec example c code generating hpgl turtle graphic interface d3hpgl adapter html canvas api output hpgl using popular d3 library hpgl viewer hpgl viewer using javascript html5 canvas hpgl sender web interface previewing hpgl sending plotter hpglgraphics processing library writing hpgl file gcode gcode textbased standard controlling cnc machine though wa designed industrial machine use many hobbyist 3d printer firmware ha made ubiquitous smallscale diy project well grbl highperformance gcode interpreting firmware atmega 328 microcontroller arduino cncjs webbased interface controlling cnc machine running grbl tinyg gcodebased firmware nodegcode nodejs gcode interpreter simulator svg2gcode nodejs command line utility converting svg gcode svg2gcode python utility fast svg gcode conversion jscut webbased utility converting svg gcode universalgcodesender javabased grblcompatible crossplatform gcode sender chilipeppr hardware fiddle modular webbased workspace visualize gcode control hardware gcodegenerativeforprocessing processing library aiming create gcode simple shape designed usage creality cr10 gcodeplot python utility convert svg hpgl gcode 3axis cnc machine plotter control software controlling plotter hardware axidraw official axidraw extension inkscape axi unofficial python library axidraw v3 xy utility makeblock xy plotter robot kit lasergrbl laseroptimized window gui grbl controller could repurposed diy pen plotter use solenoid pen updown movement lineus inkscape plugin sends drawing lineus plotter directly inkscape lineus api example example code lineus plotter gcodebased api beardicuslineus javascript library controlling lineus machine node browser penplotter polargraph controller us repetier firmware makelangelofirmware firmware makelangelo polargraph robot robopaint software watercolorbot axiturtle turtle graphic axidraw processing grblplotter plotteroptimized window gui grbl controller svg dxf import flexible pen updown control saxi driver library axidraw us constantacceleration motion planning automatically resizes paper mp2300tools software converting hpgl graphtec gpgl format well cad file graphtec plotter pen adapter inkcut application controlling 2d plotter cutter engraver cnc machine vector creation tool create vector artwork scratch conversion format inkscape popular crossplatform open source vector graphic editor p5js javascript library make coding accessible artist designer educator beginner paperjs swiss army knife vector graphic scripting ln vectorbased 3d renderer written go autotrace convert bitmap image vector graphic stipplegen creates interesting stippled drawing bitmap image blog post squiggledraw squiggledraw create svg file image using brightness change amplitude sine wave svgurt webbased png svg creative noodler maptrace produce watertight polygonal vector map tracing raster image drawbotimagetogcodev2 creates gcode use drawbots blackstripes turn png image svg line drawing ribbon ribbon diagram protein written go penplot development environment plotter art javascript penkit python library creating linebased svg graphic generativeexamples example processing code generates plottable pdfs let make map webbased tool export svg map mapzen tile linedream generative art library python export svgs superformulasvg web generative line art web app scribbleplot scribbly image transformation processing makerjs library creating 2d vector drawing cnc laser cutter machine turtletoy browserbased javascript turtle graphic api svg export cozyvec webstandalone terminal environment plotter art tweet plot makio135plotter observable notebook collection full plotteroriented work plotterfun browserbased image svg converter similar squiggledraw svgjs dependencyfree lightweight library creating manipulating animating svg component ai experimental computational design platform exploring generative space drawingbotv3 crossplatform software converting image line drawing linedraw python tool convert image sketchy vector line drawing plottervision interactive website hidden line removal stl file generate plottable svg also support redblue 3d glass vector utility tool manipulate optimize vectorbased file format svgsort path planning plotting svg file reduces time spent moving pen svgo nodejsbased tool optimizing svg file polargraph optimizer optimize drawing plan polargraph penkitoptimize svg optimizer us vehicle routing solver minimize plot time svgcrowbar chromeonly bookmarklet extracting svg html document vpype plotterfocused pythonbased cli utility generating manipulating svgs including scaling optimizing path svg cropper browserbased tool crop svgs using different primitive custom shape svgs font singleline vector font engraving font summary single line font good information link resource font hershey vector font fnt format vector font 60 includes good overview original data format font hersheyfonts c library original font data hershey font svgfonts singleline font svg format mainly use hershey text inkscape plugin cnc text tool browserbased hershey text tool export svg inspiration instruction research blog post article tutorial gallery video et cetera intro pen plotter good info getting started old hpgl plotter introduction pen plotting another getting started article modern pen plotter pen plotter programming basic basic programming vector path including sorting joining simplifying generative algorithm nice 13part walkthrough interesting algorithm roland dg dxy990 quickstart guide roland flatbed plotter cohensutherland line clipping algorithm detailed explanation example interesting algorithm vera molnar og plotter artist hektor original cablebased drawbot 2002 pen plotter art algorithm twopart intro creating generative graphic plotting surface projection deep dive surface projection hidden line removal using python penplot fractal generation lsystems technique creating linebased fractal graphic introduction tsp art resource traveling salesman problem single path art hidden wireframe removal discussion link code wireframe removal stl file draw generative art axidraw pen plotter lot nice tip specific axidraw plus pen review handy 3dprinted tool best xy plotter 2020 good overview axidraw clone plus diy option pen plotter 2022 nice video introduction modern plotter 2022 tool trick hack exploring novel digital fabrication workflow plottertwitter research paper novel workflow plotter community video summary orbis tertius immersive digital installation plotter output martian topography tech tangent plotting first time hp 7470a nice video showing hp 7470a operated hp 85 computer curiousmarc hp 7475a plotter hpgl demo video hp 7475a plotting demo curiousmarc refilling replacing vintage hp plotter pen video showing open clean refill vintage hp plotter pen commodore 1520 plotter demonstration video commodore 1520 plotter action including coveroff shot mechanism vera molnar toward aesthetic guideline painting aid computer tech tangent gold standard plotter hp 7475a video hpgl plotter history plus operating hp 7475a ibm 5160 microcomputer curiousmarccom hp 7475a plotter great collection info ephemera plot file three youtube video 3dprintable replacement part hp 7475a manual ephemera scanned plotter manual marketing ephemera mostly internet archive manual apple color plotter user manual atari 1020 color printer owner guide 1982 atari 1020 color printer field service manual 1983 programming calcomp pen plotter 1968 commodore 1520 printer plotter manual 1983 commodore 1520 printer plotter manual control data 1651652 plotter manual gerber gs750 plus user manual 1995 manualslib gerber signmaker ivb user manual 1983 manualslib houston instrument dmp160 plotter operation manual houston instrument dmpl command language 1984 houston instrument dmp40v operation manual 1988 houston instrument hiplot dmp5152 operation manual 1985 houston instrument interface note dmpl intelligent plotter 1983 houston instrument stand assembly procedure dmp50 series plotter hp 7470a interconnection guide hp 7470a operator manual manualslib hp 7475a graphic plotter operation interconnection manual hp 7570a draftpro plotter hardware support manual hp 7585b drafting plotter service manual 1983 hp draftpro plotter user guide 1986 hp draftpro plotter programmer reference 1986 olivetti pl10 microplotter user guide 1983 radio shack trs80 plotter printer manual radio shack trs80 color graphic printer operation manual radio shack trs80 color graphic printer service manual roland dxy880 operation manual 1984 roland dxy980 operation manual 1985 roland dxy990 operation manual 1986 roland dxy1300 1200 1100 command reference manual roland dxy1350a 1150a user manual 1997 manualslib roland dpx2000 user manual roland dpx3300 operation manual github roland dpx3300 service note 1987 roland dpx3300 schematic 1987 roland dpx3700a dpx2700a user manual roland direct download rotring tubular plotter point practical tip information rotring ncscriber c 50 operating instruction 1989 siemens c1613 plotter manual german silver reed colour pengraph eb50 operating manual 1984 tectronix hc100 instruction manual 1987 panasonic rkp400c 4color graphic penwriter manual unknown brand lp 2002 photo plotter attachment operating manual german ephemera time share peripheral tsp212 brochure hewlettpackard journal volume 29 numbermultiple article development hp model 9872a 7221a pen plotter hewlettpackard journal volume 32 number 10 multiple article development hp model 7580a plotter hewlettpackard journal volume 32 number 11 multiple article development hp model 7580a plotter calcomp precision graphic system 900728 brochure 1970 digital plotting newsletter 1967 versatec printer plotter brochure 1977 versatec printerplotters plotter output system 1981 roland user group volumenumber1984 computer plotter take place drafting table pencil article page 36 pdf page 40 omegat system fasplot plotter brochure commodore computer plotter cbm 8075 brochure german strobe model 100 graphic plotter brochure 1980 roland dg plotter ad byte magazine vol 12 no1987 via oldtechadverts auerbach digital plotter image digitizer 1972 book plotter digitizer calcomp graphic product brochure 1981 calcomp plotter 1968 promotional video showing flatbed calcomp plotter output houston instrument dmp41 dmp42 plotter brochure houston instrument dmp5152 series brochure houston instrument omnigraphic plotter brochure community find plotter drawbot friend plotterart subreddit axidraw subreddit generative art subreddit plotter people inperson meetups sf nyc far talk plotter art gallery drawingbots discord forum discord forum active community plotterfiles community sharing svg file plotter penplotter mastodonactivitypub hashtag plotter folk mostly congregating plotter art sale paul rickards michael fogleman inconvergent monica rizzolli emergentdesign bustbright martin leary geoffrey bradway brubsby arjan van der meij nadieh bremer michelle chandra pedro alcocer andymakes marcel schwittlick awesomes awesomegenerativeart awesomecreativecoding awesome3denginesforplotters,"[('pen', 'plotter'), ('houston', 'instrument')]"
dji-sdk/Onboard-SDK,C++,dji onboard sdk osdk 410 join chat dji onboard sdk dji onboard sdk allows connect onboard computer supported dji vehicle flight controller using serial port ttl uart full documentation please visit dji developer documentation documentation regarding code found osdk api reference section developer website latest release osdk 410 wa released onfebruary 2021this version add usb reconnection function provides basic interface flightcontroller camera verifies battery module partially support m300 fixed problem waypoint v2 camera image decoding camera file download mop function time optimized implementation flightcontroller activation interface included osdk lib included added last major release osdk 401 wa released 21 august 2020 version mainly fix osdk 400 issue camera stream related problem download function optimization mop optimization waypoint 20 problem repair etc time also add automatic code porting script assist porting freertos firmware compatibility chart show latest firmware available supported time 410 release drone drone firmware controller firmware m300 rtk 02020102 34869 m210 rtk v2 01000710 34344 m210 v2 01000710 34344 support get support dji community following method post question developer forum dji sdk developer forumcn dji sdk developer forumen submit request describing problem developer support dji sdk developer supportcn dji sdk developer supporten github issue gitterim post question stackoverflow using djisdk tag,"[('dji', 'sdk'), ('sdk', 'developer')]"
pal-robotics/aruco_ros,C++,arucoros software package wrapper aruco1 augmented reality marker detector library feature test reem open reem simulation marker floating front robot start stereo camera robot since vision test nothing else world apart robot marker floating front extra light source added compensate default darkness roslaunch reemgazebo reemgazebolaunch worldfloatingmarker launch imageproc node get undistorted image camera robot rosnamespacestereoright rosrun imageproc imageproc imagerawimage start single node start tracking specified marker publish pose camera frame roslaunch arucoros singlelaunch markerid26 markersize008 eyeright frame pose refered chosen refframe argument next example force marker pose published respect robot baselink frame roslaunch arucoros singlelaunch markerid26 markersize008 eyeright refframebaselink visualize result rosrun imageview imageview imagearucosingleresult img alignright srcautomatic generation detection highly reliable fiducial marker occlusion garridojurado r munozsalinas fj madridcuevas mj marinjimenez 2014,"[('marker', 'floating'), ('floating', 'front')]"
RoboJackets/rrt,C++,rrt circleci c rrt rapidlyexploring random tree implementation interactive rrt viewer project contains interactive rrt viewer source destination point dragged mouse screenshot dependency following required order build project cmake 320 qt 55 following dependency needed rrt viewer qtdeclarativeqtquick25 qtquick control qtquick dialog eigen ninja ccache libflanndev libboostalldev install needed dependency ubuntu 1604 run sh sudo aptget install qt5default libeigen3dev g ninjabuild cmake clangformat36 ccache libflanndev qtdeclarative5dev qtdeclarative5qtquick2plugin qmlmoduleqtquickcontrolsdialogs libboostalldev building run make main directory build rrtviewer program testrunner program placed build folder sh git submodule update init make buildrrtviewer resource good resource learning rrts wikipedia license project licensed apache license v20 see license file information,"[('rrt', 'viewer'), ('interactive', 'rrt')]"
WPIRoboticsProjects/GRIP,Other,logo join chat build status codecovio github release grip computer vision engine grip graphically represented image processing engine application rapidly prototyping deploying computer vision algorithm primarily robotics application developing vision program difficult hard visualize intermediate result grip simplifies accelerates creation vision system experienced user reduces barrier entry inexperienced user result many team minimal computer vision knowledge successfully used grip since 2016 first robotics competition game feature intuitive drag drop ui active development community generates java c python code directly pipeline example usage extensible deploys run headless support various network protocol network table robot operating system http cuda acceleration support window osx linux minimum ubuntu 1804 libc version 227 embedded linux arm ni roborio getting started download newest release operating system run included installer open grip check release note wiki information note linux user grip requires gtk2 installed ubuntubased distribution include distros arch may require manually installed grip also requires libc version 227 higher ubuntubased distribution requires ubuntu 1804 newer building grip source build run use included gradle wrapper script unix system gradlew uirun window gradlew uirun internet connection build using offline flag built grip running test complete check functionality grip use included gradle wrapper script unix system gradlew check window gradlew check cuda support enable cuda acceleration cuda 100 need installed computer cuda 101 may work linux system window must use 100 running building source add gradle flag pcuda enable cuda acceleration eg gradlew uirun pcuda note cuda acceleration available operation code generation doe support cuda used operation running grip contributing see guide setting build tool wiki,"[('cuda', 'acceleration'), ('computer', 'vision')]"
TianhongDai/hindsight-experience-replay,Python,hindsight experience replay pytorch implementation hindsight experience replay acknowledgement openai baseline requirement python352 openaigym0125 mujoco200 supported need use gym 0125 ha bug previous version mujocopy150156 please use version use mujoco200 may failed fetchslidev1 pytorch100 use pytorch041 may data type error fix later mpi4py todo list x support gpu acceleration although added gpu support still recommend powerful machine x add multienv per mpi x add plot demo fetchslidev1 instruction run code want use gpu add flag cuda recommended better use cputrain fetchreachv1 bash mpirun nppython u trainpy envname fetchreachv1 ncycles10 21 tee reachlogtrain fetchpushv1 bash mpirun nppython u trainpy envname fetchpushv1 21 tee pushlogtrain fetchpickandplacev1 bash mpirun np 16 python u trainpy envname fetchpickandplacev1 21 tee picklogtrain fetchslidev1 bash mpirun nppython u trainpy envname fetchslidev1 nepochs200 21 tee slidelog play demo bash python demopy envnameenvironment name download pretrained model please download google driver put savedmodels current folder result training performance wa plotted usingdifferent seed solid line median value demo tip watch demo press tab switch camera mujoco fetchpushv1 fetchpickandplacev1 fetchslidev1,"[('bash', 'mpirun'), ('u', 'trainpy')]"
nebrius/raspi,Other,raspijs gitter raspijs provides initialization base support raspberry pi module along raspi board raspi peripheral provide support various peripheral raspberry pi library form basis raspi io io plugin add support raspberry pi johnnyfive check following peripheral api module raspi gpio raspi pwm raspi software pwm raspi i2c raspi led raspi serial bug report feature request wish contribute code please sure check raspi io contributing guide system requirement raspberry pi model b revor newer sorry model user raspbian jessie newer nodered work finicky difficult debug see info support os node 400 newer detailed instruction getting raspberry pi ready nodebots including install nodejs found wiki warning using module must installed userlevel permission run root permission eg sudo node indexjs installation install npm shell npm install raspi note project written typescript includes type definition packagejson file mean want use typescript need install separate type module example usage typescriptes6 typescript import init raspi import digitalinput digitaloutput raspigpio init const input new digitalinput p13 const output new digitaloutput p15 outputwriteinputread javascript javascript const raspi require raspi const gpio require raspigpio raspiinit const input new gpiodigitalinput p13 const output new gpiodigitaloutput p15 outputwriteinputread api module constant constant description module easily consumable object indirectly passing module around intended specifically use core io detail coming soon property type description init alias init method initcb init method initializes library suite method must called using peripheral argument argument type description cb function callback called board ha initialized take argument take argument return none license mit license mit copyright c 20142017 bryan hughes bryannebrius permission hereby granted free charge person obtaining copy software associated documentation file software deal software without restriction including without limitation right use copy modify merge publish distribute sublicense andor sell copy software permit person software furnished subject following condition copyright notice permission notice shall included copy substantial portion software software provided without warranty kind express implied including limited warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arising connection software use dealing software,"[('raspberry', 'pi'), ('support', 'raspberry')]"
p-org/P,Other,formal modeling analysis distributed eventdriven system nuget github license github action ci window github action ci ubuntu github action ci macos tutorial psym pcover challenge distributed system notoriously hard get right programming system challenging need reason correctness presence myriad possible interleaving message failure unsurprisingly common service team uncover correctness bug deployment formal method play important role addressing challenge p overview p state machine based programming language formally modeling specifying complex distributed system p allows programmer model system design collection communicating state machine p support several backend analysis engine based automated reasoning technique like model checking symbolic execution check distributed system modeled p satisfy desired correctness specification following talk provides overview p impact academia industry answer main question get asked time service team developer formal modeling p strangeloop formal modeling analysis distributed system finding critical bug early impact p currently used extensively inside amazon aws analysis complex distributed system example amazon s3 used p formally reason core distributed protocol involved strong consistency launch team across aws using p thinking reasoning system formally p also used programming safe robotics system academia p wa first used implement validate usb device driver stack ship microsoft windowsand window phone experience lesson learned experience using p inside aws academia microsoft observed p ha helped developer three critical waysp thinking tool writing formal specification p force developer think system design rigorously turn helped bridging gap understanding system large fraction bug eliminated process writing specification itselfp bug finder model checking helped find corner case bug system design missed stress integration testingp helped boost developer velocity initial overhead creating formal model future update feature addition could rolled faster nontrivial change rigorously validated implementation sparkle programming concurrent distributed system fun challenging however pinch programming language design dash automated reasoning go long way addressing challenge amplify fun sparkle let fun begin find information p framework p getting started tutorial case study related research publication question please feel free create issue ask discussion email u p ha always collaborative project industry academia since 2013 drum p team welcome contribution suggestion punch see contributing information,"[('distributed', 'system'), ('formal', 'modeling')]"
izhengfan/se2lam,C++,se2lam onse2 localization mapping ground vehicle fusing odometry vision related publication fan zheng yunhui liu visualodometric localization mapping ground vehicle using se2xyz constraint proc ieee international conference robotics automation icra 2019 pdf poster cite bib inproceedingsfzheng2019icra author fan zheng yunhui liu title visualodometric localization mapping ground vehicle using se2xyz constraint booktitle proc ieee int conf robot autom icra year 2019 result rviz dependency tested kineticmelodic opencv 24x 31 g2o 2016 version build build project package demo download datasetroomzip extract terminal cd datasetroom prepare two package odometry measurement data one accurate odorawaccutxt le accurate odorawrougtxt use either one copy odorawtxt datasetroom download orbvocbin run rviz roscd se2lam rosrun rviz rviz rvizrviz run se2lam rosrun se2lam testvn pathtodatasetroom pathtoorbvocbin related project izhengfanse2clam izhengfanorbslam2 license mit,"[('localization', 'mapping'), ('mapping', 'ground')]"
ArghyaChatterjee/gps-waypoint-based-autonomous-navigation-in-ros,C++,gpswaypointbasedautonomousnavigationinros gps point predefined robot navigate destination avoiding obstacle repo package wa tested custom rover ha nvidia jetson tx2 ubuntu 1804 razor 9dof imu zed f9p rtk2 gps rplidar a1 lidar base station ha laptop ubuntu 1804 motivation work wa performed participate university rover challenge urc 2019 team interplanetar buet mar rover robotics team special thanks go daniel snider open sourcing work rover code simple drive code wiki follow waypoints code wiki gps goal code wiki offline google map mapviz code advanced terminal organization code1 code2 run package terminal navigate catkinws source src directory run cd catkinwssrc git clone gpswaypointnav cd catkinmake onlypkgwithdeps gpswaypointnav terminal launch navigation file source develsetupbash roslaunch gpswaypointnav gpswaypointnavlaunch another terminal launch joystick controller file source develsetupbash roslaunch gpswaypointnav joylaunchcontrollaunch run rover joystick run press lb start collecting waypoints waypoints saved inside pointsoutdoortxt run finished press rb start following waypoints package description package us combination following package ekflocalization fuse odometry data imu gps data navsattransform convert gps data odometry convert latitude longitude point robot odometry coordinate system gmapping create map detect obstacle movebase navigate goal avoiding obstacle goal set using recorded inputted waypoints node description navigation package within repo includes following custom node gpswaypoint read waypoint file convert waypoints point map frame send goal movebase gpswaypointcontinuous1 continuous navigation waypoints using one controller gpswaypointcontinuous2 continuous navigation waypoints using another seperate controller collectgpswaypoint allow user drive robot around collect waypoints calibrateheading set heading robot startup fix issue poor magnetometer data plotgpswaypoints save raw data gps plotting purpose gpswaypointmapping combine waypoint navigation mandala robotics 3d mapping software 3d mapping convert lattitudelongitude local odometry message want convert navsatfix topic gps sensor navsatodom topic local cordinate frame use thesepackages directly geonav transform code wiki geographic info code wiki website wiki2 lattitude longitude altitude pose stamped code eagle eye gps imu fused odometry code youtube imu gps localization using ekf fuse imu gps data code detail understanding package extra classhow use gps autonomous robot navigation gps related driver gpsd code tutorial related issue robot localization navsat transform node doe publish imu gps fusion without odom robot localization package fuse imu gps using robot localization package gps navigation mobile robot related implementation robot robot localization using gps website user interface demo mapviz package used mapviz package visualize path cordinates binary install sudo aptget install rosmelodicmapviz rosmelodicmapvizplugins rosmelodictilemap rosmelodicmultiresimage source install cd catkinwssrc git clone rosdep install frompaths src ignoresrc catkinmake delete previous configuration file worked sequence plugins panel vital mapviz draw plugins order listed plugin panel navsat listed first draw first draw tilemap would able see fix sudo rm mapvizconfig one terminal run roscore another terminal launch mapviz file mapvizlaunch file look like name swri latitude 2945196669 longitude 9861370577 altitude 233719 heading 00 name back40 latitude 29447507 longitude 98629367 altitude 2000 heading 00 rosparam remap fromfix tonavsatfix use following command launch mapvizlaunch file cd catkinws source develsetupbash roslaunch mapviz mapvizlaunch panel leave 1st box fixed frame map target frame none add tilemap add navsat plugin select topic navsatfix perform sequencially mapviz testing need sample bag file publish gps navsatfix topic download rosbag run rosbag another terminal rosbag play ca20190828184706bluralignbag rviz satellite package source install cd catkinwssrc git clone catkinmake use following command launch rvizlaunch file cd catkinws source develsetupbash roslaunch rvizsatellite demolaunch rviz satellite testing need sample bag file publish gps navsatfix topic download rosbag run rosbag another terminal rosbag play ca20190828184706bluralignbag rosboard package install source install cd catkinwssrc git clone catkinmake use following command launch rvizlaunch file cd catkinws source develsetupbash rosrun rosboard rosboardnode rosbaord testing need sample bag file publish gps navsatfix topic download rosbag run rosbag another terminal rosbag play ca20190828184706bluralignbag go case robot local browser add topic want visualize top left menu able visualize topic gratitude would like acknowledge contribution website helped making repo,"[('code', 'wiki'), ('source', 'develsetupbash')]"
Doragd/Chinese-Chatbot-PyTorch-Implementation,Python,yum qingyundoragd snowman musclepawprints codingsparklingheart starstar nlprunner rainbow adjlyadv reactdjango doragd repo star2 floppydisk gitignore configpy corpuspth dataloadpy dataloader datapreprocesspy license mainpy modelpy readmemd requirementstxt trainevalpy checkpoint chatbot05091437 cleanchatcorpus qingyuntsv qadata qadb qatestpy stopwordstxt initpy utils beamsearchpy greedysearchpy initpy couple torch torchnet fire jieba shell pip install r requirementstxt sparklingheart shell python datapreprocesspy corpuspth corpuspth datapreprocesspy corpusfile cleanchatcorpusqingyuntsv maxvoclength 10000 minwordappear 10 maxsentencelength 50 savepath corpuspth useqafirsttrue 100 shell python mainpy chat useqafirsttrue useqafirstfalse true shell python mainpy chat useqafirstfalse shell python mainpy chat exit quit q configpy shell python mainpy chat modelckpt checkpointschatbot05091437 useqafirstfalse cherryblossom qingyun 10w q seq2seq encodergru decodergru attention global attentiondot ref constructionworker shell python trainevalpy train option shell python trainevalpy eval option sob ngpu pytorch tutorialchatbotdebuggputodevice modeltodevicegputensorforward gpumodelmodeltodevice gputensor batchsizebatchsizeminibatchbug torchlongint64bug api pray chatbot tutorial chatbot tutorial,"[('shell', 'python'), ('python', 'mainpy')]"
VitoVan/cl-dino,Other,cldino chrome dinosaur robot written common lisp explanation video wow dino,"[('cldino', 'chrome'), ('chrome', 'dinosaur')]"
Unity-Technologies/ROS-TCP-Connector,Other,tcp connector version license unity currently working lot thing please take short moment fill survey help u identify product package build next introduction repository contains two unity package tcp connector sendingreceiving message visualization package adding visualization incoming outgoing message unity scene installation using unity 20202 later open package manager window package manager package manager window find click button upper lefthand corner window select add package git url image enter git url desired package note append version tag end git url like v040 v050 declare specific package version exclude tag get latest package main branch rostcpconnector enter visualization enter click add install local clone repository see installing local package unity manual tutorial unity package provides four main feature rosconnection component set communication unity see unity robotics hub information tutorial message generation tool generate c class message type visualization suite default configuration apis visualize incoming outgoing information see nav2 slam example tutorial using visualization package also view package usage information detail using package project rosgeometry set extension convert geometry unity coordinate frame special thanks siemens project team driving rosunity integration open source since 2017 community feedback unity robotics project opensource encourage welcome contribution wish contribute sure review contribution guideline code conduct support question discussion unity robotics package installation best set integrate robotics project please create new thread unity robotics forum make sure include much detail possible feature request bug issue please file github issue using provided template robotics team investigate soon possible question feedback connect directly robotics team unityroboticsunity3dcom license apache license 20,"[('unity', 'robotics'), ('package', 'manager')]"
AcutronicRobotics/gym-gazebo2,Python,gymgazebo2 gymgazebo2 toolkit developing comparing reinforcement learning algorithm using rosand gazebo built extension gymgazebo gymgazebo2 ha redesigned community feedback adopts standalone architecture mantaining core concept previous work inspired originally openai gym travis article work present upgraded real world application oriented version gymgazebo robot operating system gazebo based reinforcement learning rl toolkit complies openai gym whitepaper work available please use following bibtex entry cite work misc190306278 author nestor gonzalez lopez yue leire erro nuin elia barba moral lander usategui san juan alejandro solano rueda victor mayoral vilches risto kojcev title gymgazebo2 toolkit reinforcement learning using rosand gazebo year 2019 eprint arxiv190306278 whitepaper regarding previous work gymgazebo available gymgazebo2 complex piece software roboticists put together simulation tool robot middlewares rosmachine learning reinforcement learning technique together create environment benchmark develop behavior robot setting gymgazebo2 appropriately requires relevant familiarity tool doc indepth explanation actively growing tutorial found following example achieve using gymgazebo2 submodule ros2learn repository goal reach green target left image show start training right execute already trained policy table content environment mara real robot simulated robot installation usage executing algorithm script parameter gzservergzclient environment code environment group housed subdirectory gymgazebo2envs robot specific simulation file housed robot specific ros2 package mara real robot mara stand modular articulated robotic arm collaborative robotic arm rosin actuator sensor representative module module ha native rossupport physically extended seamless manner delivers industrialgrade feature including synchronization deterministic communication latency rossoftware hardware component lifecycle altogether mara empowers new possibility application professional landscape robotics learn even order one acutronicroboticscom simulated robot mara also provides accurate simulated version gazebo allows translate behavior simulated environment real robot version training gymgazebo2 please refer githubcomacutronicroboticsmara additional simulation related content gazebo moveit rviz2 installation please refer installmd install source refer dockerreadmemd gymgazebo2 docker container installation usage instruction usage executing algorithm note dashing need use opensplice implementation dd since fastrtps others still buggy supported well use case please export opensplice dd implementation manually use provisioning script runningtraining example mara enviroment sh export rmwimplementationrmwopensplicecpp added privisioning script bashrc directly execute algorithm load environment variable manually otherwise sh cd gymgazebo2examplesmara python3 ggrandompy g script parameter every mara environment provides three commandline customization argument read detail using h option marascript eg python3 gazebomara4actionspy h help message following sh usage ggrandompy h g r v velocity p port mara environment argument provider optional argument h help show help message exit g gzclient run user interface r realspeed execute simulation real speed using running specific driver v velocity velocity velocity set servo motor velocity keep 157 real speed applies r realspeed option multiinstance provide network segmentation allow multiple instance p port port port provide exact port network segmentation allow multiple instance gzservergzclient want get faster simulation speed launch simulation withouht visual interface gazebo possible want check learnt policy point without stoping training launch visual interfaze gazebo sh gzclient used multiinstance option provide network segmentation following new terminal set corresponding gazebomasteruri convinience environment variable printed beginning every env execution copy export also find information related running execution inside tmpgymgazebo2running folder example sh export gazebomasteruri finally launch client sh gzclient final note launch many gzserver gzclient instance want long manage properly gazebomasteruri environment variable new 20190315 release gymgazebo2 ros2 compatibility mara environment 20190327 improve observation mara environment check published article,"[('reinforcement', 'learning'), ('mara', 'environment')]"
RobotWebTools/rclnodejs,Other,rclnodejs rosclient library javascript npm status license type definition style prettier distro linux window rolling github workflow status github workflow status humble github workflow status github workflow status iron github workflow status github workflow status rclnodejs development maintenance limited roslts release rolling development branch rclnodejs nodejs client library robot operating system rosit provides tooling comprehensive javascript typescript apis developing rossolutions capable interoperating rosnodes implemented language c python example creating rosnode publishes string message line javascript javascript const rclnodejs require rclnodejs rclnodejsinitthen const node new rclnodejsnode publisherexamplenode const publisher nodecreatepublisher stdmsgsmsgstring topic publisherpublishhello rosfrom rclnodejs nodespin documentation installation rclnodejscli api documentation using typescript example efficient usage tip faq known issue building scratch contributing installation prerequisite installing rclnodejs please ensure following software installed configured system nodejs version 16130 rossdk installing rclnodejs install rclnodejs version compatible version rossee table current version rclnodejs run bash npm rclnodejs install specific version rclnodejs use bash npm rclnodejsxyz note install rclnodejs github add rclnodejsrobotwebtoolsrclnodejsbranch packagejson dependency section rclnodejscli rclnodejscli companion project recently launched provide commandline interface set developer tool working rclnodejs may find rclnodejscli particularly useful plan create rosnodes launch file working multiple node orchestration usage rclnodejs command option option h help display help command command createpackage option create ros2 package nodejs development generaterosmessages generate javascript code ros2 idl interface help command display help command api documentation api documentation generated jsdoc viewed doc folder online doc create local copy documentation run npm run doc using rclnodejs typescript rclnodejs api used typescript project find typescript declaration file dts type folder tsconfigjson file include following compiler option jsonc compileroptions module commonjs moduleresolution node target es6 additional option short rclnodejs typescript example typescript import rclnodejs rclnodejs rclnodejsinitthen const node new rclnodejsnode publisherexamplenode const publisher nodecreatepublisher stdmsgsmsgstring topic publisherpublishhello rosfrom rclnodejs nodespin benefit using typescript become evident working complex usecases message defined typesinterfacesdts module module updated part generaterosmessages process described next section ros2 interface message generation important component communicate sending receiving message described interface definition language idl client library rclnodejs responsible converting idl message description source code target language rclnodejs provides npm binarygeneraterosmessages script read idl message file environment generates corresponding javascript message interface file additionally tool generates typescript interfacedts file containing declaration idl message file learn interface idl following example rclnodejs load generated javascript message file corresponding stdmsgsmsgstring definition import rclnodejs rclnodejs let stringmsgobject rclnodejscreatemessageobject stdmsgsmsgstring stringmsgobjectdata hello world maintaining generated javascript message file message file generated postinstall step rclnodejs installation process thereafter need manually run rclnodejs message generation script new message package installed ros2nodejs project ha dependency running generaterosmessages utility run generaterosmessages script nodejs package use npx utility included nodejs installation npx generaterosmessages newly generated javascript file found yourprojectnodemodulesrclnodejsgenerated contributing please read contributing guide making pull request thank people already contributed rclnodejs license project abides apache license 20,"[('github', 'workflow'), ('workflow', 'status')]"
nvidia-isaac/nvblox,C++,nvblox signed distance function sdfs nvidia gpus gpu sdf library offer gpu accelerated algorithm tsdf construction occupancy mapping esdf construction meshing rosinterface see isaacrosnvblox support storage various voxel type easily extended custom voxel type show reconstruction using data 3dmatch dataset specifically sun3d mit76studyroom scene table content nvblox table content nvblox use nvblox outofthebox reconstructionrosinterface public datasets c interface native installation install dependency build run test benchmark run example docker additional instruction jetson xavier open3d jetson building multiple gpu architecture building redistributable binary static dependency license nvblox need another sdf library depends use case interested path planning provide gpu accelerated incremental algorithm calculating euclidean signed distance field esdf useful collision checking robotic pathplanning gpu acceleration previous work voxblox voxgraph used pathplanning however utilize cpu compute limit speed toolbox therefore resolution map build realtime nvblox much faster jetson platform nvblox written nvidia jetson mind want run reconstruction embedded gpu right place visualize slice distance function esdf use nvblox use nvblox depends want outofthebox reconstructionrosinterface user would like use nvblox robotic system connect easily sensor suggest using rosinterface rosinterface includes example allow build reconstruction realsense camera using nvblox nvidia vslam navigate robot isaac sim combine 3d reconstruction image segmentation realsense data simulation rosinterface downloads build library contained repository installation need clone build repository public datasets would like run nvblox public datasets include executables running reconstruction 3dmatch replica redwood datasets please see tutorial running c interface want build nvblox larger project without would like make modification nvblox core reconstruction feature repository contains code need tutorial provides brief detail interact reconstruction c native installation want build natively please follow instruction instruction docker install dependency depend gtest glog gflags sqlite cuda 110 118 others might work untested eigen need explicitly install recent version built library stdgpu downloaded compilation please run sudo aptget install libgoogleglogdev libgtestdev libgflagsdev python3dev libsqlite3dev libbenchmarkdev cd usrsrcgoogletest sudo cmake sudo cmake build target install build run test benchmark build cd nvbloxnvblox mkdir build cd build cmake make run test benchmark build dir ctest executablesbenchmark run example example fuse data 3dmatch dataset first let grab dataset downloading dataset folder datasets3dmatch wget p datasets3dmatch unzip datasets3dmatchsun3dmit76studyroom761studyroom2zip datasets3dmatch navigate run fuse3dmatch binary nvblox base folder run cd nvbloxbuildexecutables fuse3dmatch datasets3dmatchsun3dmit76studyroom761studyroom2 meshply done view output mesh using open3d viewer instruction installing open3dviewer found open3d meshply see mesh room docker several dockerfiles docker subfolder layer top one another following purpose dockerdeps installs dependency used ci later step building testing taken care jenkins docker dockerjetsondeps jetson jetpackand dockerbuild layer top dockerdeps build package get layer train wanna run stuff care tested dockertest layer top dockerbuild run test useful checking thing likely pas test ci rely nvidia docker install nvidia container toolkit following instruction website use gpu build run time default configuration gpu used runtime one must therefore set default runtime add defaultruntime nvidia etcdockerdaemonjson look like runtimes nvidia path usrbinnvidiacontainerruntime runtimeargs defaultruntime nvidia restart docker sudo systemctl restart docker let build dockerfiledeps docker image image install contains dependency docker build nvbloxdeps f dockerdockerfiledeps case running jetson substitute dockerfile dockerdockerfilejetsondeps let build dockerfilebuild image layer last actually build nvblox library docker build nvblox f dockerdockerfilebuild let run 3dmatch example inside docker note additional complexity docker run command forward x11 host going view reconstruction gui run container using xhost localdocker docker run nethost envdisplay v homexauthorityrootxauthorityrw v tmpx11unixtmpx11unixrw nvblox let download dataset run example largely repeat run example aptget update aptget install unzip wget p datasets3dmatch unzip datasets3dmatchsun3dmit76studyroom761studyroom2zip datasets3dmatch cd nvbloxnvbloxbuildexecutables fuse3dmatch datasets3dmatchsun3dmit76studyroom761studyroom2 meshply let visualize executable folder run aptget install libgl1mesaglx libc1 libc110 libcabi110 libglfw3 libpng1616 wget dpkg open3dapp0130ubuntu2004deb open3d meshply visualize jetson see additional instruction jetson xavier instruction native build jetson xavier see instruction running docker instruction native build work one exception build using cmake modern cuda integration therefore require modern version cmake currently ship jetpack luckily cmake developer team provide mean obtaining recent version cmake apt obtain copy signing key wget qo sudo aptkey add add repository source list update sudo aptaddrepository deb focal main sudo aptget update update sudo aptget install cmake use python example also necessary make numpy play nice jetson adding following bashrc export openblascoretypearmv8 open3d jetson open3d available precompiled jetson detail install via pip aptget install python3pip pip3 install open3d0160 version 0160 available need upgrade pip pip3 install u pip may additionally need add upgraded pip version path view mesh via open3d draw meshply building multiple gpu architecture default library build compute capability cc machine built build binary used across multiple machine ie prebuilt binary ci example use buildforallarchs flag set true example cmake dbuildforallarchstrue dcmakeinstallprefixinstall make j8 make install building redistributable binary static dependency want include nvblox another cmake project simply findpackagenvblox bring correct library header however want include different build system bazel see instruction license code opensource license apache 20,"[('aptget', 'install'), ('use', 'nvblox')]"
star2dust/paper-simulation,Other,let reproduce paper simulation paper simulation matlab multirobot system formation control distributed optimization cooperative manipulation interesting paper hard reproduce simulation feel free share list paper simulation reproduced alonsomora j baker ru 2017 multirobot formation control object transport dynamic environment via constrained optimization international journal robotics research 369 10001021 farivarnejad h berman 2018 stability convergence analysis decentralized proportionalintegral control strategy collective transport proceeding american control conference 2018june 27942801 zhao 2018 affine formation maneuver control multiagent system ieee transaction automatic control 6312 41404155 ibuki wilson yamauchi j fujita egerstedt 2020 optimizationbased distributed flocking control multiple rigid body ieee robotics automation letter 52 18911898 kia cortes j martinez 2015 distributed convex optimization via continuoustime coordination algorithm discretetime communication automatica vol 55 pp 254264 elsevier ltd sun ren w 2020 distributed continuoustime optimization timevarying objective function inequality constraint retrieved antonelli g arrichiello f caccavale f marino 2013 decentralized controllerobserver scheme multiagent weighted centroid tracking ieee transaction automatic control 585 13101316 shi w ling q wu g yin w 2015 extra exact firstorder lgorithm decentralized consensus optimization siam journal optimization 252 944966 jakovetic 2019 unification generalization exact distributed firstorder method ieee transaction signal information processing network 51 3146 qu g li n 2018 harnessing smoothness accelerate distributed optimization ieee transaction control network system 53 12451260 zhang liu x liu j 2021 convergence analysis continuoustime distributed gradient descent algorithm ieee control system letter 54 13391344 requirement mosekmatlab cvx roboticstoolbox tutorial see csdn blog github page,"[('ieee', 'transaction'), ('paper', 'simulation')]"
ScienJus/smartqq,Other,smart qq java smart qqweb qq api api qq 20162ruby gui qq android qq qq smart qq api apimaven repository idscienjusmvnrepoid url snapshot enabledtrueenabled updatepolicyalwaysupdatepolicy snapshot repository dependency groupidcomscienjusgroupid artifactidsmartqqartifactid version10snapshotversion dependency clonemain public class application public static void mainstring args null smartqqclient client new smartqqclientnew messagecallback override public void onmessagemessage message systemoutprintlnmessagegetcontent override public void ongroupmessagegroupmessage message systemoutprintlnmessagegetcontent override public void ondiscussmessagediscussmessage message systemoutprintlnmessagegetcontent listcategory category clientgetfriendlistwithcategory category category category systemoutprintlncategorygetname friend friend categorygetfriends systemoutprintln friendgetnickname closetrywithresource try clientclose catch ioexception e eprintstacktrace api web qq web qq1 web qq web qq3 web qq web qq5 web qq 103smart qq 1000011000000cookieissue 6getgroupinfogroupidgroupcodecode 201622jarbugoldjunyi 201621 1544 wiseclock 2016113 lombok requests7 http lonhay request java9 88250 web b3logxiaov sjdy521 tjysunset c 12 web qq api issue iscienjuscom 12,"[('web', 'qq'), ('qq', 'api')]"
Simple-Robotics/proxsuite,C++,proxsuite collection opensource numerically robust precise efficient numerical solver eg lp qps etc rooted revisited primaldual proximal algorithm proxsuite aim offer community scalable optimizers deal dense sparse matrixfree problem first targeted application robotics proxsuite used context without limit proxsuite actively developped supported willow sierra research group joint research team inria ecole normale superieure de paris centre national de la recherche scientifique localized france proxsuite already integrated cvxpy modeling language convex optimization problem casadi symbolic framework numerical optimization general optimal control proxqp available casadi plugin solve quadratic program tsid robotic software efficient robot inverse dynamic contact based pinocchio ready integrate proxsuite within optimization ecosystem proxsuite main feature proxsuite fast c template library cachefriendly proxsuite versatile offering unified api advanced algorithm specialized efficiently exploiting problem structure dense sparse matrixfree matrix factorization backends advanced warmstarting option eg equalityconstrained initial guess warmstart coldstart option previous result dedicated feature handling efficiently box constraint linear program qp diagonal hessian far constraint primal variable proxsuite flexible header c 141720 compliant python julia binding easy code prototyping without sacrificing performance proxsuite ha dedicated feature solving batch qps proxsuite ha dedicated feature solving nonconvex qps proxsuite ha dedicated feature solving closest feasible qps appear primal infeasible proxsuite extensible proxsuite reliable extensively tested showing best performance hardest problem literature proxsuite supported tested window mac x unix linux documentation online proxsuite documentation last release available getting started proxsuite distributed many wellknown package manager quick install bash pip install proxsuite approach available linux window mac x quick install bash conda install proxsuite c condaforge approach available linux window mac x quick install bash brew install proxsuite approach available linux mac x alternative approach installation source presented compiling first example program fastest performance use following command enable vectorization compiling simple example bash g o3 marchnative dndebug stdgnu17 dproxsuitevectorize examplesfirstexampledensecpp firstexampledense pkgconfig cflags proxsuite using proxsuite cmake want use proxsuite cmake following tiny example help cmake cmakeminimumrequiredversion 310 projectexample cxx findpackageproxsuite required setcmakecxxstandard 17 setcmakecxxstandard 14 work addexecutableexample examplecpp targetlinklibrariesexample public proxsuiteproxsuite vectorization support via simde activated compilation option marchnative mavx2 mavx512f addexecutableexamplewithfullvectorizationsupport examplecpp targetlinklibrariesexamplewithfullvectorizationsupport public proxsuiteproxsuitevectorized targetcompileoptionsexamplewithfullvectorizationsupport public marchnative compiled proxsuite vectorization support might also use cmake targetproxsuiteproxsuitevectorizedto also link simde forget usemarchnative get best performance proxqp proxqp algorithm numerical optimization approach solving quadratic programming problem form beginalign minx frac12xthxgtx textst x b l leq c x leq u endalign x mathbbrn optimization variable objective function defined positive semidefinite matrix h mathcalsn vector g mathbbrn linear constraint defined equalitycontraint matrix mathbbrntexteq time n inequalityconstraint matrix c mathbbrntextin time n vector b mathbbrntexteq l mathbbrntextin u mathbbrntextin bi mathbbr forall 1ntexteq li mathbbr cup infty ui mathbbr cup infty forall 1ntextin citing proxqp using proxqp work encourage cite related paper numerical benchmark numerical benchmark proxqp commercial opensource solver available dense convex quadratic program inequality equality constraint asking relatively high accuracy eg 1e6 one obtains following result yaxis see timing second xaxis dimension wrt primal variable random quadratic problem generated number constraint generated problem half size primal dimension every dimension problem generated different seed timing obtained average successive run problem chart show every benchmarked solver random quadratic program generated barplot timing including median dot minimal maximal value obtained defining amplitude bar see proxqp always solver mean quickest test hard problem maros meszaros testset asking high accuracy eg 1e9 one obtains result chart report performance profile different solver classic benchmarking solver performance profile correspond fraction problem solved yaxis function certain runtime xaxis measured term multiple runtime fastest solver problem higher better see proxqp solves quickest 60 problem ie tau1 solving 90 problem mosttimes slower fastest solver solving problem ie tauapprox2 note result obtained 11th gen intelr coretm i711850h 250ghz cpu installation procedure please follow installation procedure,"[('dedicated', 'feature'), ('mac', 'x')]"
StanfordVL/GibsonEnv,Other,gibson environment embodied active agent realworld perception play video game day ai built virtual environment simulator gibson offer realworld experience learning perception summary perception active ie certain level motion freedom closely tied learning active perception sensorimotor control physical world cumbersome existing algorithm slow efficiently learn realtime robot fragile costly ha given fruitful rise learning simulation consequently cast question transferring realworld developed gibson environment following primary characteristic realworld reflecting semantic complexity virtualizing real space ii bakedin mechanism transferring realworld goggles function iii embodiment agent making subject constraint space physic via integrating physic engine bulletphysics naming gibson environment named james j gibson author ecological approach visual perception 1979 must perceive order move must also move order perceive jj gibson please see website technical detail repository intended distribution environment installationrunning instruction paper gibson env realworld perception embodied agent cvpr 2018 spotlight oral release 031 release bug report suggestion improvement well community development encouraged appreciated change log file database full database includes 572 space 1440 floor downloaded diverse set visualization space gibson seen table content installation quick installation docker building source uninstalling quick start gibson fps web user interface rendering semantics robotic agent configuration coding rl agent environment configuration goggles transferring agent realworld citation installation installation method two way install gibson using docker image recommended b building source system requirement minimum system requirement following docker installation ubuntu 1604 nvidia gpu vram 60gb nvidia driver 384 cuda 90 cudnn v7 building sourceb ubuntu 1404 nvidia gpu vram 60gb nvidia driver 375 cuda 80 cudnn v5 download data first environment core asset data available follow installation guide download set properly gibsonassets folder store necessary data agent model environment etc run gibson environment user add environment file gibsonassetsdataset run gibson environment visit database readme downloading space please sign license agreement using gibson database quick installation docker use docker distribute software need install docker nvidiadocker20 first run docker run runtimenvidia rm nvidiacuda nvidiasmi verify installation eitherpull docker image recommended orbuild docker image pull docker image recommended bash download dataset docker pull xf1280gibson031 xhost localroot docker run runtimenvidia ti rm e display v tmpx11unixtmpx11unix v rootmountgibsongibsonassetsdataset xf1280gibson031 build docker image bash git clone cd gibsonenv downloadsh script downloads asset data file decompress gibsonassets folder docker build gibson finish building inside docker note default dataset included docker image xhost localroot enable display docker installation successful able run docker run runtimenvidia ti rm e display v tmpx11unixtmpx11unix v host path dataset folderrootmountgibsongibsonassetsdataset gibson create container note include dataset file docker image keep image slim need mount container start container note deployment headless server gibson env support deployment headless server remote access x11vnc build docker image docker file dockerfile instruction run gibson headless server requires x server running install nvidiadocker2 dependency following starter guide install x11vnc sudo aptget install x11vnc xserver running host machine run x11vnc displaydocker run runtimenvidia ti rm e display v tmpx11unixx0tmpx11unixx0 v host path dataset folderrootmountgibsongibsonassetsdataset gibson image name run gibson python gibson example training inside docker visit host5900 able see gui x server running still run gibson see guide detail b building source want use docker image also install gibson locally require dependency installed first make sure nvidia driver cuda installed install source cudais necessary nvidiadocker 20 let install dependency bash aptget update aptget install libglewdev libglmdev libassimpdev xorgdev libglu1mesadev libboostdev mesacommondev freeglut3dev libopenmpidev cmake golang libjpegturbo8dev wmctrl xdotool libzmq3dev zlib1gdev install required deep learning library using python35 recommended create python35 environment first bash conda create n py35 python35 anaconda source activate py35 rest step need performed conda environment conda install c condaforge opencv pip install pip install torchvision020 pip install tensorflow13 clone repository download data build bash git clone cd gibsonenv downloadsh script downloads asset data file decompress gibsonassets folder buildsh buildlocal build c cuda file pip install e install python library install openai baseline need run training demo bash git clone pip install e baseline uninstalling uninstall gibson easy installed docker run docker image grep gibson awk print xargs docker rmi clean image installed source uninstall pip uninstall gibson quick start first run xhost localroot host machine enable display may need run export display0 first getting docker container docker run runtimenvidia ti rm e display v tmpx11unixtmpx11unix v host path dataset folderrootmountgibsongibsonassetsdataset gibson get interactive shell run demo installed source run directly using following command without using docker bash python examplesdemoplayhuskynonvizpy use aswd key keyboard control car navigate around gate building able use aswd key keyboard control car navigate around gate building camera output shown particular demo bash python examplesdemoplayhuskycamerapy use aswd key keyboard control car navigate around gate building rgb depth camera output also shown able use aswd key keyboard control car navigate around gate building also able see rgb depth camera output bash python examplestraintrainhuskynavigateppo2py use ppo2 train car navigate hallway gate building using visual input camera running command start training husky robot navigate gate building go corridor rgbd input see rl related statistic terminal episode bash python examplestraintrainantnavigateppo1py use ppo1 train ant navigate hallway gate building using visual input camera running command start training ant navigate gate building go corridor rgbd input see rl related statistic terminal episode gibson framerate gibson environment framerate benchmarked different platform please refer fps branch code reproduce result platform tested intel e52697 v4 nvidia tesla v100 resolution nxn 128 256 512 rgbd pre networkf 1091 585 265 rgbd post networkf 777 306 145 rgbd post small networkf 874 405 212 depth 2530 1979 1247 surface normal 2077 1297 572 semantic 1900 1442 556 nonvisual sensory 3961 3961 3961 also tested intel i7 7700 nvidia geforce gtx 1070ti tested intel i7 6580k nvidia gtx 1080ti platform fps difference within 10 task platform multiprocess fps tested intel e52697 v4 nvidia tesla v100 configuration 512x512 episode sync 512x512 frame sync 256x256 episode sync 256x256 frame sync 128x128 episode sync 128x128 frame sync process 128 1202 3298 3298 52 52 process 234 209 6089 5363 861 1018 process 424 3197 10526 7623 976 1459 process 725 481 1385 9772 113 151 web user interface running gibson start web user interface python gibsonutilswebuipy python gibsonutilswebuipy 5552 helpful cannot physically access machine running gibson running headless cloud environment need change mode configuration file webui use web user interface rendering semantics gibson provide pixelwise framebyframe semantic mask model semantically annotated incorporated model stanford 2d3dsemantics dataset matterport 3d purpose access within gibson refer original dataset reference list semantic class annotation detailed instruction rendering semantics gibson see semantic instruction one example starter dataset come installation space7 includes stanford 2d3dsemantics style annotation robotic agent gibson provides base set agent see video agent corresponding perceptual observation enable optionally abstracting away lowlevel control robot dynamic highlevel task also provide set practical ideal controller agent agent name dof information controller mujoco antopenai link torque mujoco humanoid 17 openai link torque husky robotros manufacturer torque velocity position minitaur robotrobot page manufacturer sine controller jackrabbotstanford project link torque velocity position turtlebotros manufacturer torque velocity position quadrotorpaper position starter code demonstration example found examplesdemo folder example explanation playantcamerapyuse 1234567890qwerty key keyboard control ant navigate around gate building rgb depth camera output also shown playantnonvizpy use 1234567890qwerty key keyboard control ant navigate around gate building playdronecamerapy use aswdzx key keyboard control drone navigate around gate building rgb depth camera output also shown playdronenonvizpy use aswdzx key keyboard control drone navigate around gate building playhumanoidcamerapy use 1234567890qwertyui key keyboard control humanoid navigate around gate building kidding controlling humaniod keyboard difficult watch fall press r reset rgb depth camera output also shown playhumanoidnonvizpy watch humanoid fall press r reset playhuskycamerapy use aswd key keyboard control car navigate around gate building rgb depth camera output also shown playhuskynonvizpy use aswd key keyboard control car navigate around gate building training code found examplestrain folder example explanation trainhuskynavigateppo2py use ppo2 train car navigate hallway gate building using rgbd input camera trainhuskynavigateppo1py use ppo1 train car navigate hallway gate building using rgbd input camera trainantnavigateppo1py use ppo1 train ant navigate hallway gate building using visual input camera trainantclimbppo1py use ppo1 train ant climb stair gate building using visual input camera trainantgibsonflagrunppo1py use ppo1 train ant chase target red cube gate building everytime ant get targetor time target change position trainhuskygibsonflagrunppo1pyuse ppo1 train car chase target red cube gate building everytime car get targetor time target change position configuration provide example configuring gibson use turtlebot example policy trained gibson requires minimal change deploy onto turtlebot see readme detail coding rl agent code rl agent following convention interface environment simple see example end section first create environment creating instance class gibsoncoreenvs folder python env antnavigateenvisdiscretefalse config configfile one step simulation envstep reset envreset python ob rew envdone info envstepaction ob give observation robot dictionary component key value pair key specified user inside config file eg ob nonvizsensor proprioceptive sensor data ob rgbfilled rgb camera data rew defined reward envdone mark end one episode example robot dy info give additional information step sometimes use pas additional nonvisual sensor value mostly followed openai gym convention designing interface rl algorithm environment order help user start environment quicker provide example examplestrain rl algorithm use openai baseline adaptation work hybrid visual nonvisual sensory data particular used ppo speed optimized version ppo environment configuration environment configured yaml file example yaml file found examplesconfigs folder parameter file explained informat specific bullet physic engine see documentation argument name example value explanation envname antclimbenv environment name make sure class name environment modelid space1space8 scene id beta release choose space1space8 targetorn0 314 eulerian angle radian target orientation navigating reference frame world frame nonnavigation task parameter ignored targetpos26 15 target position meter navigating reference frame world frame nonnavigation task parameter ignored initialorn0 314 initial orientation radian navigating reference frame world frame initialpos26 05 initial position meter navigating reference frame world frame fov 157 field view camera radian usefiller truefalse use neural network filler recommended leave argument true see gibson environment website making customized environment gibson provides set method define environment follow existing environment inside gibsoncoreenvs method name usage robotrenderobservationpose render new observation based pose return dictionary robotgetobservation get observation current pose need called robotrenderobservationpose doe induce extra computation robotgetposition get current robot position robotgetorientation get current robot orientation roboteyesgetposition get current robot perceptive camera position roboteyesgetorientation get current robot perceptive camera orientation robotgettargetposition get robot target position robotapplyactionaction apply action robot robotresetnewposepos orn reset robot pose robotdisttotarget get current distance robot target goggles transferring agent realworld gibson includes bakedin domain adaptation mechanism named goggles agent trained gibson going deployed realworld ie operate based image coming onboard camera mechanism essentially learned inverse function alters frame coming real camera would look like rendered via gibson hence disolve domain gap detail imperfection point cloud rendering ha proven difficult get completely photorealistic rendering neural network fix remaining issue make domain gap synthesized real image therefore formulate rendering problem forming joint space ensuring correspondence rendered real image rather trying unsuccessfully render image identical real one provides deterministic pathway traversing across domain hence undoing gap add another network u target image define rendering loss minimize distance fis uit f represent filler neural network point cloud rendering output respectively see loss figure use network structure f u function ui trained alter observation realworld look like corresponding consequently dissolve gap named u network goggles resembles corrective lens agent deployment realworld detailed formulation discussion mechanism found paper download function u apply deploy trained agent realworld order use goggle need preferably camera depth sensor provide example kinect trained goggle function stored assetsunfillerresolutionpth one paired one filler function need use correct one depending filler function used camera depth sensor also provide example rgb citation use gibson environment software database please cite inproceedingsxiazamirhe2018gibsonenv titlegibson env realworld perception embodied agent authorxia fei r zamir amir zhiyang sax alexander malik jitendra savarese silvio booktitlecomputer vision pattern recognition cvpr 2018 ieee conference year2018 organizationieee,"[('gate', 'building'), ('key', 'keyboard')]"
tinymovr/Tinymovr,Other,fw check build studio lint test doc build discord tinymovr affordable motor controller precise control 3phase brushless motor tinymovr work 38v input voltage drive motor 40a continuous phase current integrates absolute angle encoder mp ma702 feature rich connectivity repository hold open source firmware client library hardware design documentation source note latest stable version tinymovr firmware studio app legacy 0xx version check legacy branch getting started please visit quick start guide getting help full documentation available readthedocs please visit discussion page discord server ask question unable find answer question welcome start new discussion ask away discord server would like propose feature think found bug open new issue repository structure note main branch repository reflects latest release development take place develop branch repository organized follows firmware firmware pac5527 mcu tinymovr studio tinymovr studio client software library hardware design drawing related hardware documentation documentation source branching model main branch reflects latest release feature merged develop branch hotfixes merged directly main resulting new release try follow successful git branching model much possible within reason versioning use semver versioning version available see tag repository contributing pull request welcome major change please open issue first discus would like change license gplv3 external link tinymovr website store blog discord server project page hackaday bldcdesignhelp repository lot useful information tinymovr benchmark,"[('discord', 'server'), ('library', 'hardware')]"
ArduPilot/ardupilot,C++,ardupilot project test copter test plane test rover test sub test tracker test apperiph test chibios test linux sbc test replay test unit test test size test environment setup cygwin build macos build coverity scan build status test coverage autotest status ardupilot advanced fullfeatured reliable open source autopilot software available ha development since 2010 diverse team professional engineer computer scientist community contributor autopilot software capable controlling almost vehicle system imaginable conventional airplane quad plane multirotors helicopter rover boat balance bot even submarine continually expanded provide support new emerging vehicle type ardupilot project made arducopter code wiki arduplane code wiki rover code wiki ardusub code wiki antenna tracker code wiki user support discussion forum support forum community site developer information github repository main developer wiki developer discussion developer chat top contributor flight code contributor wiki contributor active support forum user partner contribute financially get involved ardupilot project open source encourage participation code contribution guideline contributor ardupilot codebase active group beta tester help u improve code release procedure desired enhancement bug posted issue list help user log analysis support forum improve wiki chat wiki editor discord documentation contact developer one communication channel license ardupilot project licensed gnu general public license version overview license full text maintainer ardupilot comprised several part vehicle board list contains people regularly contribute project responsible reviewing patch specific area andrew tridgell vehicle plane antennatracker board pixhawk pixhawk2 pixracer francisco ferreira bug master grant morphett vehicle rover willian galvani vehicle sub lucas de marchi subsystem linux michael du breuil subsystem battery subsystem gps subsystem scripting peter barker subsystem dataflash tool randy mackay vehicle copter rover antennatracker siddharth purohit subsystem compass board cube tom pittenger vehicle plane bill geyer vehicle tradheli emile castelnuovo board vrbrain georgii staroselskii board navio gustavo jose de sousa subsystem build system julien beraud board bebop bebopleonard hall subsystem copter attitude control navigation matt lawrence vehicle 3dr solo solo based vehicle matthias badaire subsystem frsky mirko denecke board bbbmini beaglebone blue pocketpilot paul riseborough subsystem apnavekf2 subsystem apnavekf3 victor mayoral vilches board pxf erlebrainpxfmini amilcar lucas subsystem marvelmind samuel tabor subsystem soaringgliding henry wurzburg subsystem osd site wiki peter hall vehicle tailsitters vehicle sailboat subsystem scripting andy piper subsystem crossfire subsystem esc subsystem osd subsystem smartaudio alessandro apostoli subsystem telemetry subsystem osd rishabh singh subsystem avoidanceproximity david bussenschutt subsystem esp32aphalesp32 charles villard subsystem esp32aphalesp32,"[('code', 'wiki'), ('ardupilot', 'project')]"
nickpettican/InstaBot,Python,code longer maintained bot longer safe could easily get banned big thanks everyone got involved project namely erleiuat instabot 130 codacy badge instabot 130 requirement nutshell instabot instabot run two mode install input set like set comment follow unfollow set instabot run day instabot smart motivation server future instabot warning automate instagram activity instabot customisable bot like follows comment instabot pythonbased automated instagram bot made social medium marketing campaign order reach desired audience saving time money need username password parameter api signup needed requirement python 27 server raspberry pi work great see installation bellow install library nutshell instabot x like post user want reach x comment post x follow user want reach x unfollow user follow back within x hour x like post news feed want x build profile object follower user follow instabot run two mode xxxx yyyy day 247 bot work 24hour military time input 0900 start 9am install download install python computer raspberry pi preinstalled install dependency running pip install r requirementstxt install lxml git clone repo download zip extract add input see bellow run python runpy input open config file insert credential preference username username password password timezone tag inputtagscsv tagstoavoid inputtagstoavoidcsv friend inputfriendscsv likenewsfeed true likesinday 500 mediamaxlikes 50 mediaminlikes followinday 50 unfollow true followtimehours commentsinday commentslist cool sweet awesome great botstartat 0700 botstopat 2300 variable default explanation username username instagram username password password instagram password timezoneyour timezone code order run local time tag inputtagscsv tag file alternatively use tag1 tag2 tag3 tagstoavoid inputtagstoavoidcsv tag avoid file also use tagx tagy friend inputfriendscsv friend file containing usernames one column alternatively use friend1 friend2 likenewsfeed true true false whether want like friend post likesinday 500 number like instabot day mediamaxlikes 50 maximum number like post instabot like mediaminlikesminimum number like post instabot like followinday 50 number user follow per day unfollow true true false whether want unfollow user followtimehourstime hour follow user commentsindaynumber comment leave per day commentslist cool awesome great word want shuffled post comment botstartat 0700 time instabot start botstopat 2300 time instabot stop set like tell instabot many post want like per day maximum get get banned 1000 default set 500 keep safe especially daytime run 7am 11pm instabot take random time break like make look like real person automated bot likesinday 500 set instabot like friend post friend usernames included friend list post liked friend inputfriendscsv likenewsfeed true tell instabot like post le minimum like number maximum like number property useful get feedback post lower number like mediamaxlikes 50 mediaminlikes give instabot list hashtags look post like recommend read article tip using hashtags either put tag inputtagscsv currently case default value tag inputtagscsv insert tag straight config file like tag tag1 tag2 friend list either leave default include friend usernames friendscsv file insert usernames straight config file friend inputfriendscsv finally negative keywords important help avoid liking post want like inserted way tag default file tagstoavoid inputtagstoavoidcsv set comment instabot comment randomly post liked comment generated list list get shuffled make comment add extra list increase comment reduce single list list eg want comment commentsindaycommentslist cool sweet awesome great follow unfollow follow user post liked followinday 50 set amount time want follow user followtimehours set instabot unfollow followed back unfollow true set instabot run day make instabot activity look real set bot run set time default 7am 11pm time bot either sleep carry unfollowing user followed day botstartat 0700 botstopat 2300 make sure use military time instabot smart unfollowing user instabot check user followed back person followed back instabot unfollow mean fair also check user potentially fake account unfollow user wa unfollowed recently followed back heshe followed back internet connection break problem instabot wait internet connection back order continue need shut quickly still following lot people problem instabot save list user followed unfollow next time turned motivation digital marketing becoming complicated new platform coming newer better competitor appearing left right center instabot wa created order save time reach potential audience liking post following interested service everyone instagram actively seeking interesting profile explore tab order reach like follow might enough spark extra interest visit profile server got server find raspberry pi work fine need follow installation guide run bot future instabot instabot written python2 meaning would need translated python3 feel free fork stats functionality something would also like work feel free collaborate make happen sooner warning instagram doe like spam bulk liking following keep like per day bellow 1000 24 hour period meaning use bot 12 hour day would suggest setting like 500 might risk ban bulk unfollow get 15 unfollows short time period bulk unfollowing risk instabot able unfollow couple hour choose tag wisely monitor post liking case instabot like unappropriate post rely instabot social medium digital marketeer social medium twoway conversation way gain audience talk mean sell,"[('like', 'post'), ('instabot', 'like')]"
MISTLab/Swarm-SLAM,Other,swarmslam sparse decentralized collaborative simultaneous localization mapping framework multirobot system swarmslam opensource cslam system designed scalable flexible decentralized sparse key property swarm robotics system support lidar stereo rgbd sensing includes novel interrobot loop closure prioritization technique reduces interrobot communication accelerates convergence look documentation startup instruction package summary cslam contains swarmslam node cslaminterfaces contains custom rosmessages cslamexperiments contains example launch file configuration different setup cslamvisualization contains online optional visualization tool run base station monitor mapping progress follow startup instruction install build run swarmslam cite paper articlelajoieswarmslamsparsedecentralized2023 title swarmslam sparse decentralized collaborative simultaneous localization mapping framework multirobot system author lajoie pierreyves beltrame giovanni year 2023 eprint 230106230 eprinttype arxiv clone code sudo apt install python3vcstool git clone cd swarmslam mkdir src vcs import src cslamrepos,"[('swarmslam', 'sparse'), ('sparse', 'decentralized')]"
ScienJus/qqbot,Other,qqbot smart qqweb qq qq java scienjussmartqq api web qq6 web qq web qq8 web qq web qq10 web qq11 gem gem install qqbot require qqbot require qqbot qqbot qqbotnew qqbotgetfriendlistwithcategoryeach category put categoryname categoryfriendseach friend put friendnickname end end console2 tuling123 api tuling4 11 api x x x x x x x x x x x x x x x x qq x x x issue iscienjuscom,"[('x', 'x'), ('web', 'qq')]"
simple-robot/simpler-robot,Other,simple robot simbot v3 github gitee catcode simbot logo jetbrainsjetbrains jetbrainsjetbrains jetbrains star history chart powered star history license program free software redistribute andor modify term gnu lesser general public license published free software foundation either versionof license option later version program distributed hope useful without warranty without even implied warranty merchantability fitness particular purpose see gnu lesser general public license detail received copy gnu lesser general public license along program see simple robotlgplv3 dochomepage,"[('gnu', 'lesser'), ('lesser', 'general')]"
RoboDK/RoboDK-API,Python,robodk api repository implementation robodk api different programming language simulation offline programming robodk api allows program industrial robot arm using preferred programming language robodk api available following programming language python c matlab c visual basic robodk api allows creating simulation industrial robot specific mechanism generating vendorspecific program robot robodk api possible simulate program industrial robot using preferred programming language robodk api provides alternative using vendorspecific programming language robodk graphical user interface used create program possible extend robot controller limitation using universal programming language python following page provides overview robodk api using python robodk used wide range robot manufacturing application robot machining 3d printing synchronizing multiple robot pick place industrial robot application example robot library robodk blog robodk forum important robodk api robodk plugin interface documentation package implement following modulesclasses robolink module link robodk item module item robodk item tree retrieved item represented object item item robot reference frame tool object specific project robodk find information robodk api documentation introduction robodk api introduction robodk robot simulation offline programming robodk package python c version api c version api nuget plugin interface c requirement robodk simulation software robodk api used free robodk license example following script show example us robodk package robot simulation offline programming example using api see documented example python robodkrobolink import robodk api robodkrobomath import math toolbox robot start robodk api rdk robolink get robot item name robot rdkitem fanuc lr mate 200id itemtyperobot get reference target name target rdkitem target targetpose targetpose xyzref targetposepos move robot reference point robotmovejtarget draw hexagon around reference target range7 ang i2pi6 ang60 120 360 calculate new position around reference x xyzref0 rcosang new x coordinate xyzref1 rsinang new coordinate z xyzref2 new z coordinate targetpossetposxyz move new target robotmoveltargetpos trigger program call end movement robotruncode programdone move back reference target robotmoveltarget post processor script used simulation used robot programming offline mean program automatically generated robot controller reproduce movement robot robodk support large number robot controller easy include compatibility new robot controller using post processor information robot post processor quick introduction robodk post processor use post processor technical reference find date list supported robot controller documentation post processor preview supported robot controller abb rapid irc5 abb irc5 robot controller abb rapid s4c abb s4c robot controller adept vplus adept v programming language allen bradley logix5000 allen bradley logix5000 plc aubo aubo robot controller cloos cloos robot controller comau c5g comau c5g robot controller denso pac denso rc7 older robot controller pac programming language denso rc8 denso rc8 newer robot controller pacscript programming language dobot educational dobot robot doosan doosan collaborative robot epson epson robot controller fanuc r30ia fanuc r30ia r30ib robot controller fanuc r30iaarc fanuc arc welding fanuc rj3 fanuc rj3 robot controller gcode bnr br robot controller gsk gsk robot hcr hanwha robot controller hiwin hr hiwin robot hyundai hyundai robot controller kairo keba kairo robot controller kinova kinova robot kawasaki kawasaki robot controller kuka iiwa kuka iiwa sunrise programming java kuka krc2 kuka krc2 robot controller kuka krc2camrob kuka camrob milling option kuka krc2dat kuka krc2 robot controller including dat data file kuka krc4 kuka krc4 robot controller kuka krc4config kuka krc4 robot controller configuration data line kuka krc4dat kuka krc4 robot controller including dat data file mecademic mecademic script code required meca500 robot mecademic python generates python script control mecademic meca500 robot remotely mitsubishi mitsubishi robot controller motomanyaskawa different motoman robot controller using inform ii inform iii jbi nachi ax fd nachi ax fd robot controller omron omrontechman robot controller otc daihen otc robot controller panasonic panasonic prg program requires panasonic g2pc tool compile ascii file binary file precise precise scara robot robostar robostar robot controller siasun siasun robot controller siemenssinumerik siemens sinumerik robx robot controller staubli val3 generate staubli val3 robot program cs8 controller later inlines robot movement staubli val3machining staubli val3 controller machining hsm option staubli s6 staubli s6 robot controller toshiba toshiba robot techman omrontechman robot controller universal robot ur robot generates linear movement pose target universal robot urp ur robot generates urp loaded modified polyscope ur robot controller universal robotsrobotiq ur robot including support robotiq gripper universal robotsmovep ur robot generates linear movement movep command yamaha yamaha robot robodk main website robodk documentation blog,"[('robot', 'controller'), ('robodk', 'api')]"
huihut/Facemoji,Other,facemoji voice chatbot imitate expression unity project android ha two module one facetracking using opencv dlib detects facial expression convert live2d model record gif ai chatbot us turing robot iflytek iat iflytek tt make voice chat english release google play facemoji facemoji github facemojireleases drivegoogle facemojiplatform panbaidu facemojiplatform setup download shapepredictor68facelandmarksdatfacial landmark detector facemojipluginsassets150unitypackagestreamlined opencv dlib live2d iflytek asset library drivegoogle panbaidu git clone create new unity project called facemojidemo copy facemojiassets facemojiprojectsettings unity project facemojidemo copy shapepredictor68facelandmarksdat facemojidemoassetsstreamingassets import facemojipluginsassets150unitypackage select android platform build run usage facetracking using opencv dlib detects facial expression convert live2d model move face try shaking head record gif middle record button recordseconds gif recorder state recordingready record preprocessingis recording pausedcompressing gif recordingready record save gif applicationdatapath android storageemulated0androiddatacomhuihutfacemojifiles voice text chat chatbot said ai robot hhhh using turing robot iflytek iat iflytek tt chat voice text great ai robot chat encyclopedia calculate tell story tell joke idiom solitaire horoscope weather forecast chinese robotturing robot support chinese chat chinese chat english later preview gif come wink license gpl v30,"[('unity', 'project'), ('opencv', 'dlib')]"
stil/curl-easy,Other,travis latest stable version total downloads license table content introduction description main feature installation example curlrequest requestconstruct requestgetoptions requestsetoptions requestgetcontent requestgetinfo requestsend curlrequestqueue requestsqueueconstruct requestsqueuegetdefaultoptions requestsqueuesetdefaultoptions requestsqueuesocketperform requestsqueuesocketselect requestsqueuesend curloptions optionsset optionstoarray introduction description small powerful robust library speed thing tired using php curl extension procedural interface want also keep control script execution great choice need high speed crawling project might interested stilcurleasy extension stilcurlrobot main feature widely unit tested lightweight library moderate level interface allinone library parallelasynchronous connection simple interface attachingdetaching request parallel run time support callback control execution process intelligent setter alternative curlopt constant know curl php extension learn thing beginning installation order use curlphp library need install libcurl package install library composer package following command bash composer require stilcurleasy example single blocking request php php check current bitcoin price via api request new curlrequest requestgetoptions setcurlopttimeout setcurloptreturntransfer true response requestsend feed jsondecoderesponsegetcontent true echo current bitcoin price feed data rate feed data code n example output current bitcoin price 199997 usd single nonblocking request php php check current bitcoin price via api request new curlrequest requestgetoptions setcurlopttimeout setcurloptreturntransfer true requestaddlistener complete function curlevent event response eventresponse feed jsondecoderesponsegetcontent true echo ncurrent bitcoin price feed data rate feed data code n requestsocketperform usleep1000 echo example output current bitcoin price 199748 usd request parallel php php download bitcoin rate usd eur parallel init request queue queue new curlrequestsqueue set default option request queue queuegetdefaultoptions setcurlopttimeout setcurloptreturntransfer true set function execute request complete queueaddlistener complete function curlevent event response eventresponse json responsegetcontent return content response feed jsondecodejson true echo current bitcoin price feed data rate feed data code n request new curlrequest add request queue queueattachrequest request new curlrequest queueattachrequest execute queue timestart microtimetrue queuesend elapsedms microtimetrue timestart 1000 echo elapsed time roundelapsedms msn example output current bitcoin price 1772850062 eur current bitcoin price 198701 usd elapsed time 284 nonblocking request parallel php php download bitcoin rate usd eur parallel init request queue queue new curlrequestsqueue set default option request queue queuegetdefaultoptions setcurlopttimeout setcurloptreturntransfer true set function execute request complete queueaddlistener complete function curlevent event response eventresponse json responsegetcontent return content response feed jsondecodejson true echo ncurrent bitcoin price feed data rate feed data code n request new curlrequest add request queue queueattachrequest request new curlrequest queueattachrequest execute queue timestart microtimetrue queuesocketperform usleep1000 echo elapsedms microtimetrue timestart 1000 echo elapsed time roundelapsedms msn example output something like current bitcoin price 1772145208 eur current bitcoin price 198622 usd elapsed time 374 processing queue multiple request maximumat executed moment php request currency usd eur jpy cny foreach currency code request new curlrequest code queue new curlrequestsqueue queue getdefaultoptions setcurloptreturntransfer true queueaddlistener complete function curlevent event use request response eventresponse json responsegetcontent return content response feed jsondecodejson true echo current bitcoin price feed data rate feed data code n next arraypoprequests eventqueueattachnext queueattacharraypoprequests queueattacharraypoprequests queuesend example output something like current bitcoin price 220861025 jpy current bitcoin price 1366781675 cny current bitcoin price 17710567 eur current bitcoin price 1985 usd intelligent option setting replace curlopt set receive method name example php opts new curloptions optssetcurlopturl url equivalent optsseturlurl optssetcurloptreturntransfer true equivalent optssetreturntransfertrue optssetreturntransfertrue character case doe matter optssetcurlopttimeout equivalent optssettimeout5 assign option request request new curlrequest requestsetoptionsopts make default requestsqueue queue new curlrequestsqueue queuesetdefaultoptionsopts error handling access curl error code response class example php request new curlrequest response requestsend responsehaserror error responsegeterror echo error code errorgetcode n echo message errorgetmessage n probably example output error codemessage could resolve host nonexistsingpage host found find curle error code curlrequest requestconstruct requestgetoptions requestsetoptions requestsqueuesocketperform requestsqueuesocketselect requestsend curlrequestqueue requestsqueueconstruct requestsqueuegetdefaultoptions requestsqueuesetdefaultoptions requestsqueuesocketperform requestsqueuesocketselect requestsqueuesend curlresponse responsegetcontent responsegetinfo responsehaserror responsegeterror curloptions optionsset optionstoarray curlerror errorgetcode errorgetmessage,"[('bitcoin', 'price'), ('current', 'bitcoin')]"
D4Vinci/elpscrk,Python,elpscrk v20 intelligent common userpassword profiler named tool mrrobot series s01e01 smile simple word elpscrk ask info know target try generate every possible password target could think depends information give flag activate level complication specify arelevels complication elpscrk type target start simple person default nerd person paranoid person till final bos level nuclear level could generate 1000000 password laughing elpscrk like cupp based permutation statistic memory efficient get result nearly time complication level type user customizable result see usage part screenshot usage simple run script prompt ask info know target make permutation list common mix data see next advanced usage customizations thing need pay attention tocomplication level say simple want generated password example given name levelwhich default name give converted uppercase lowercase first letter converted uppercase lowercase first two letter converted uppercase lowercase capitalized levelyou see thing levelbut also name reversed first two letter name reversed table explaining whole complication level note general idea column every thing mentioned used many commonnot common mixture alone level general idea simple person default level expect lot thing like name permutation explained date splited group day month year last two number year like 1990 90 phone number converted national format list firstlast four number commonly used average person using level add interesting thing like name name reversed first two letter name reversed dateswill appended day month lower 10 sowill 05of course lastnumbers year used also 1990 give 990 cyber awareness default old password give used given special char removed starting leveleach given old password converted uppercase lowercase capitalized reversed form paranoid person default used char flag elpscrk use 10 common char levelorbut starting withit use whole special character set allowed password see reference nerd person leveland lower elpscrk using order pair make sure permutation order cut lot uncommon password form mix using levelwill use common mixture without pair example instead getting password name date get mix name date name name date date nuclear shit hit fan laughing elpscrk starting using common realistic result complicated unhuman target lol note permutation level start elpscrk generate used form password using simple addition like cupp make sure result leet flag enable leet flag elpscrk work normal finishing exporting result start getting leet permutation password save new file example name like karim result k4r1m k4rim kar1m karim year number range using yyears option giving year like 1980 make elpscrk mix password year 1980 till 2022 year currently in1 expect password like text karim1980 1981karim karim2022 applies rnumrange option giving number like 100 add number fromtill 100 expect password like karim99 99karim karim100 installation run need python 36 clone repo directory install requirement like pip install r requirementstxt one python3 pip install r requirementstxt one version installed ready go contact twitter telegram donation tool ha useful feel free thank buying coffee coffee disclaimer elpscrk created raise cyber awareness importance strong unpredictable password responsible misuse illegal purpose used legal penetration test educational purposeetc copying code tool using another tool accepted mentioning source pull request always welcomed ofc reference allowed special character password frequentlyused special character password,"[('converted', 'uppercase'), ('uppercase', 'lowercase')]"
schodet/nxt-python,Python,nxtpython package controlling lego nxt robot using python programming language communicate using either usb bluetooth nxtpython pythonis longer supported nxtpython repository github mirror sourcehut github nxtpython repository github sourcehut nxtpython repository sourcehut requirement python 3x usb communication pyusb bluetooth communication pybluez installation install nxtpython pip python3 pip install upgrade nxtpython see installation instruction documentation information installation next step read documentation start directly tutorial upgrading code used previous version nxtpython pythonthe documentation includes migration guide migration guide contact mailing list question nxtpython repository maintainer nicolas schodet since 20211106 contact mailing list use github issue page report problem please use mailing list question mailing list github issue page thanks doug lau writing nxtpython starting point rhn creating would become v2 making lot smaller change reviewing ton code marcus wanner maintaining nxtpython v222 work ha amazing elvin luff taking project marcus making lot work port pythonmindsensorscom esp ryan kneip helping code lot sensor expanding sensor covered type checking database providing hardware testing hitechnic providing identification information sensor note included information website linus atorf samuel leemanmunk melducky simon levy steve castellotti paulo vieira zonedabone migpics tc wan jerradgenson henryacev paul hollensen anyone else forgot various fix addition goldsloth making useful change keeping ticket moving migration github user interest support license nxtpython free software redistribute andor modify term gnu general public license published free software foundation either versionof license option later version program distributed hope useful without warranty without even implied warranty merchantability fitness particular purpose see gnu general public license detail received copy gnu general public license along program see,"[('nxtpython', 'repository'), ('mailing', 'list')]"
HITSZ-NRSL/Dynamic-VINS,C++,dynamicvins rgbd inertial odometry resourcerestricted robot dynamic environmentsintroduction dynamicvins realtime rgbd inertial odometry system resourcerestricted robot dynamic environment dynamic feature recognition object detection depth information performance comparable semantic segmentation gridbased feature detection efficient highquality fast feature extraction competitive localization accuracy robustness dynamic environment shown realtime application resourcerestricted platform huawei atlas200 dk nvidia jetson agx xavier author jianheng liu xuanfu li yueqian liu haoyao chen networked robotics sytems lab hitsz use dynamicvins academic research please cite following paper pdf article9830851 authorliu jianheng li xuanfu liu yueqian chen haoyao journalieee robotics automation letter titlergbd inertial odometry resourcerestricted robot dynamic environment year2022 volume7 number4 pages95739580 doi101109lra20223191193 11 framework 12 related video video link youtube bilibiliinstallation tested ubuntu 1804 2004 find install dynamicvins dependency installation instructionsrun datasets example 31 openloris download openloris datasets take openloriscafe example tar xzvf cafe112rosbagtar cd cafe rosbag decompress cafe python yourpathtodynamicvinsscriptsmergeimutopicspy cafe11bag cafe12bag nvidia device pytorch bash roslaunch vinsestimator openlorisviopytorchlaunch roslaunch vinsestimator vinsrvizlaunch visualization rosbag play yourpathtodatasetcafebag nvidia device tensorrt bash roslaunch vinsestimator openlorisviotensorrtlaunch roslaunch vinsestimator vinsrvizlaunch visualization rosbag play yourpathtodatasetcafebag huawei atlas200dk bash roslaunch vinsestimator openlorisvioatlaslaunch running dynamicvins huawei atlas200dk requires multile device communication setting specific instruction please refer multipledevices kind edge device also could refer instruction 32 hitsz thusz datasets please prepare enough space datasets hitsz410gb x thusz513gb x download datasets vi dyanmicvinsdatasets run following cmd bash bash scriptsdownloadhitszsh bash scriptsdownloadthuszsh python3 sciptsrosbagmergechunkpy datasetshitsz00bag python3 sciptsrosbagmergechunkpy datasetshitsz00bag rm datasetshitszbag rm datasetsthuszbag roslaunch vinsestimator realsenseviocampuslaunch roslaunch vinsestimator vinsrvizlaunch rosbag play datasetshitszbag rosbag play thuszbag configuration detailed illustration configuration please refer realsense configuration running procedure across two different platform exampled multiple device runningprocedure huawei atlas200dk setup please refer huawei atlas200dk setup acknowledgment dynamicvins extended based vinsmono vinsrgbd yolov5 tensorrtyolov5 ascendyolo,"[('roslaunch', 'vinsestimator'), ('rosbag', 'play')]"
CopterExpress/clover,C++,clover create autonomous drone easily clover open source framework providing userfriendly tool control px4 drone clover available package shipped mainly preconfigured image raspberry pi installed raspberry pi drone flashed image microsd card taking drone air matter minute coex clover drone educational programmable drone kit suited perfectly running clover software kit shipped unassembled includes pixracercompatible autopilot running px4 firmware raspberry pia companion computer camera computer vision navigation well additional sensor peripheral device battery included main documentation available official website coextechclover support u kickstarter video compilation clover drone kit autonomy compilation clover drone used wide range educational event including copter hack worldskills drone operation competition autonomous vehicle track nti olympics 20162020 quadro hack 2019 national university science technology misis russian robot olympiad autonomous flight others raspberry pi image preconfigured image raspberry pi installed configured software ready fly available release section github workflow status github release image feature raspbian buster noetic configured networking opencv mavros periphery driver gpio led strip arucopose package markerassisted navigation clover package autonomous drone control api description autonomous flight available gitbook manual package installation running see clover package documentation support telegram support chat license clover platform source code available mit license note documentation licensed creative common attributionnoncommercialsharealike 40 international license,"[('raspberry', 'pi'), ('clover', 'drone')]"
reiniscimurs/DRL-robot-navigation,Python,drlrobotnavigation deep reinforcement learning mobile robot navigation gazebo simulator using twin delayed deep deterministic policy gradient td3 neural network robot learns navigate random goal point simulated environment avoiding obstacle obstacle detected laser reading goal given robot polar coordinate trained gazebo simulator pytorch tested noetic ubuntu 2004 python 3810 pytorch 110 installation code overview tutorial available training example img width80 src p,"[('gazebo', 'simulator'), ('drlrobotnavigation', 'deep')]"
facebookresearch/theseus,Python,library differentiable nonlinear optimization pip install e baspacho root dir must binary subdirectory build running unit test requires dev installation bash python pytest test default unit test include test cuda extension add option cudaext skip installing without cuda support additionally test sparse solver baspacho automatically skipped extlib compiled example simple example example fitting curve dataset n observation xy sim modeled objective single costfunction computes residual v ex objective gaussnewton optimizer encapsulated theseuslayer adam mse loss x learned differentiating theseuslayer python import torch import theseus th xtrue ytrue vtrue readdata shapesnn1 x thvariabletorchrandnlikextrue namex thvariableytrue namey v thvector1 namev manifold subclass variable optimvars def errorfnoptimvars auxvars return v expx x auxvars return ytensor optimvars0tensor torchexpxtensor objective thobjective costfunction thautodiffcostfunction v errorfn ytrueshape1 auxvarsx costweightthscalecostweight10 objectiveaddcostfunction layer ththeseuslayerthgaussnewtonobjective maxiterations10 phi torchnnparameterxtrue 01 torchoneslikextrue outeroptimizer torchoptimadamphi lr0001 epoch range10 solution info layerforward inputtensorsx phiclone v torchones1 optimizerkwargsbackwardmode implicit outerloss torchnnfunctionalmselosssolutionv vtrue outerlossbackward outeroptimizerstep see tutorial robotics vision example learn api usage citing theseus use theseus work please cite paper bibtex bibtex articlepineda2022theseus title theseus library differentiable nonlinear optimization author luis pineda taosha fan maurizio monge shobha venkataraman paloma sodhi ricky tq chen joseph ortiz daniel detone austin wang stuart anderson jing dong brandon amos mustafa mukadam journal advance neural information processing system year 2022 license theseus mit licensed see license detail additional information join community github discussion question sugesstions use github issue bug feature see contributing interested helping theseus made possible following contributor made contribrocks,"[('library', 'differentiable'), ('differentiable', 'nonlinear')]"
bmartin5692/bumper,Python,license gplv3 bumper bumper standalone selfhosted implementation central server used ecovacs vacuum robot bumper allows full control ecovacs robot without robot app talking ecovacs server transmitting data outside home note current master branch unstable active development build status master branch status appveyor win32 appveyor branch travisci linux travis org branch docker hub docker build codecov coverage codecov branch community gitter community ha created bumper user chat dig issue outside github join u gitter chat testing needed bumper need user assist testing order ensure compatability bumper move forward tested bumper bot please open issue detail success issue please note software experimental ready production use use risk fun mostly seriously several reason eliminating central server convenience work without internet connection ecovacs server performance need message travel ecovacs server back security completely isolate robot public internet compatibility work reverse protocol provide selfhosted central server still progress bumper ha limited testing number ecovacs model tested bumper compatible wifienabled robot use either ecovacs androidios app ecovacs home androidios app ha reported work model protocol used bumper version tested ecovacs app tested deebot 900901 mqtt master ecovacsecovacs home deebot 600 mqtt master ecovacs home deebot ozmo 950 mqtt master ecovacs home deebot ozmo 601 xmpp master ecovacs deebot ozmo 930 xmpp master ecovacs deebot m81 pro xmpp v010 ecovacs documentation getting started see documentation read doc thanks big thanks original project creator torbjornaxelsson without work project would taken much longer build bumper exist without suck open source client ecovacs robot thanks wpietri contributor,"[('master', 'ecovacs'), ('central', 'server')]"
aau-cns/mars_lib,C++,introduction cmakerelease cmakedebug doi ieee license modular robust stateestimation framework short mar recursive filtering framework allows truly modular multisensor integration framework enables handling multiple sensor dynamically performs selfcalibration auxiliary state defined respective sensor module feature trulymodular decoupling sensorstates essential navigationstates generalized covariance segmentation plug play state covariance block minimal staterepresentation point time integration removal sensor module runtime sequence sensor measurement handling developed computationally constrained platform efficient handling asynchronous multirate sensor information separation simple user interaction complexity information handling patent austrian patent published 50969 u patent pending us20220146264a1 code documentation find doxygen generated code documentation getting started setup building project commandline setup sh git clone url marscpp get code cd marscpp mkdir build cd build setup build dir cmake dcmakebuildtyperelease run cmake make j build project qtcreator setup sh mkdir marsws cd marsws setup workspace git clone url marscpp get code cd marscpp navigate code qtcreator run qtcreator press configure project dependency mar ha four dependency automatically downloaded linked eigen yamlcpp gtest boost thus dependency need installed hand code documentation find find doxygen generated code documentation project wa built sh marscppbuilddocsapidocshtmlindexhtml run test mar framework ha multiple option perform test code base individual test class endtoend test simulated data isolated compilation dependency check google test test suit marstest performs test class ensures member function perform according definition mar also provides two endtoend test combined marse2etest test suit two test consist imu propagation scenario imu pose update scenario input test case synthetically generated datasets end result test run compared ground truth sh cd build enter build directory run make test marstest test individual class make test marse2etest end end test simulated data end end test description test name description marse2eimuprop imu propagation marse2eimuposeupdate imu propagation pose update imu pose update synch isolated build test docker sh cd marscpp enter source directory docker build networkhost marstestenvlatest build docker image following run container map source code read executes script deployscriptsdockerapplicationtestsh docker run rm networkhost v pwdsourcero marstestenvlatest programming code base mostly c based follows c google style convention clang file formating definition auto formatting found root directory project marslibclangformat framework technology mar us covariance statevector segmentation allow modular structure removal integration covariance block given point time method particular allows removal state augmentation one sensor modality processing essential navigation state separation consecutive augmentation navigation state particular measurement become available majority previous framework would carry state augmentation individual sensor every processing step consumes additional computational power example image left side show layout covariance matrix system three main component component navigation state core state sensor calibration state sensor second sensor calibration state sensor b previous framework would handle fullsized covariance matrix throughout every filtering step includes propagation corestates update sensor sensor b well repropagation case delayed sensor measurement right side diagram show mar handling event navigation state updated isolation event sensor measurement corresponding sensor information state sensor covariance crosscorrelations core state merged core state updated update step important notice covariance element sensor propagated core state ha propagated mar framework correcting individual covariance element merging process hold multisensor system update sequence sensor sensorb sensora update sensorb would interfere straightforward covariance propagation covariance core state updated decupled stored information sensora wa updated accordingly mar us eigenvalue correction correct missing information updating sensora consecutive step thus property coherence covariance matrix guaranteed time full explanation technology please refer mar paper watch video animation youtube easier understanding covariancesegmentation process assumption important mention mar make one particular assumption method illustrated image covariance segment sensorcore crosscovariances purple element handled correctly however sensorsensor crosscovariance gray element assumed zero thus stored throughout process implementation system architecture system layout mar framework designed essential module interchangeable definition core logic agnostic sensor definition component ha generically defined interface simplified pseudo uml diagram system element shown class structure designed simplified userlevel interaction mean component likely change extended simple interact complex component le likely object modification graph show essential component complexity level important mention change addition sensor update module doe require modification component interested actual uml diagram mar look like look image check doxygen dependency graph described buffer data structure mar ha single buffer hold information needed operate framework perform outoforder update data outline single buffer entry look follows buffer entry ha timestamp coresensor data block metadata field indicating entry type eg measurement sensor update core state reference update sensor class instance processing coresensor data field note using provided buffer api order buffer entry guaranteed chronological mar us type erasure allow storage different sensor type even though sensor module derived abstract class overlaying structure change sensor type thus mar cast coresensor data block shared void pointer referenced sensor module instance used cast individual type correctly shared pointer heavily used framework especially storage state shared usage various module framework buffer hold shared pointer state element element referenced buffer passed sensor instance processing smart pointer passed function use move function generate copy pointer efficient make clear particular object partowner object particular important feature shared pointer shared void pointer last reference data element deleted shared pointer automatically call destructor void object normal pointer void object follow behavior normal void pointer go scope referenced data element remains allocated cause memory leak property important design framework make use type erasure thus store reference object void pointer thus state buffer removed exceed defined maximal storage state buffer destructed automatically measurement handling measurement handled fashion make simple middleware integration described section dedicated propagation sensor defined system start based system distinguish propagation update sensor process measurement following line need called c sensorsptr pointer corresponding sensor instance timestamp measurement timestamp data mar buffer data element corelogicprocessmeasurementsensorsptr timestamp data content mar buffer entry need available eg callback triggered specific sensor within processmeasurement function mar divide process propagation update performs routine shown point framework also applies logic determine measurement still meaningful system eg could order old process order update within limit accordingly see state propagation uml sensor update uml order update handling outoforder update within mar straightforward general buffer history ha one measurement followed state update entry outoforder measurement occurs added buffer depending timestamp following state entry current state deleted based metadata tag measurement feed processmeasurement function generate new state update current time advanced initialization mar ha second buffer instance used advanced initialization sensor data propagation update stored buffer used preprocessing step actual initialization default framework us latest propagation sensor initialization sequence event shown default navigation state navigationstates core state essential state localize robot world given fact state propagated imu measurement general nomenclature translation amathbfpbc defines frame c respect frame b expressed frame translation expressed frame b subscript defined quaternion mathbfqab describes rotation frame b respect frame mathbfrmathbfqabequivmathbfrmathbfab denotes conversion quaternion mathbfqab corresponding rotation matrix please note framework us hamilton notation quaternion representation symbol symbol description mathbfxcore navigation state mathbfpwi translation robot imubody frame expressed wrt world frame mathbfvwi velocity robot imubody frame expressed wrt world frame mathbfqwi orientation robot imubody frame expressed wrt world frame hamiltonian mathbfbomega gyroscopic bias mathbfba accelerometer bias mathbfnmathbftextbomega zero mean white gaussian noise gyroscope measurement mathbfnmathbftextba zero mean white gaussian noise accelerometer measurement boldsymbolomegaomega right side quaternion multiplication matrix omega statedefinition math mathbfxcore leftmathbfpwimathsft mathbfvwimathsft mathbfqwimathsft mathbfbomegamathsft mathbfbamathsft rightmathsft statedynamics math beginalign dotmathbfpwi mathbfvwi dotmathbfvwi mathbfrleftmathbfqwiright mathbfammathbfbamathbfnamathbfg dotmathbfqwi frac12 boldsymbolomegaboldsymbolomegammathbfbwmathbfnw mathbfqwi dotmathbfbomega mathbfnmathbfbomega dotmathbfba mathbfnmathbfba endalign provided sensor module plug play new sensor module added simple straightforward fashion please consult tutorial section use existing sensor module implement new sensor module please find list predefined sensor module positiondof symbol symbol definition mathbfpip translation position sensor wrt robot imubody frame measurement equation math z mathbfpwi mathbfrwi mathbfpip posedof symbol symbol definition mathbfpip translation pose sensor wrt robot imubody frame mathbfqip orientation pose sensor wrt robot imubody frame measurement equation math beginalign zp mathbfpwi mathbfrwi mathbfpip zq mathbfqwi otimes mathbfqip endalign looselycoupled visiondof symbol symbol definition mathbfpvw translation vision world frame wrt world frame mathbfrvw orientation vision world frame wrt world frame mathbfpic translation camera sensor wrt robot imubody frame l vision scale measurement equation math z leftmathbfpvw mathbfrvwleftmathbfpwi mathbfrwi mathbfpicrightrightl gnss local coordinate transformsdof symbol symbol definition mathbfpgww translation gnss world frame wrt world frame mathbfrgww orientation gnss world frame wrt world frame mathbfpig translation gnss sensor wrt robot imubody frame measurement equation math z mathbfpgww mathbfrgwwleftmathbfpwi mathbfrwi mathbfpigright gnss rotational constraint velocity symbol symbol definition mathbfrwi rotation imubody frame expressed wrt world frame mathbfvwi velocity imubody frame expressed wrt world frame mathbfpig translation gnss sensor wrt robot imubody frame omegai angular velocity imubody frame math mathbfz mathbfvwg mathbfrwialphaleftmuright math alphabeginbmatrix0endbmatrix alignment xaxis math mumathbfvwimathbfrwi omegaitimes mathbfpig thus math mathbfvwgmathbfrwibeginbmatrix0endbmatrixmathsft leftmathbfvwimathbfrwiomegaitimes mathbfpigright leading following derivative math beginalign fracmathrmdhxmathrmddeltarm mathbfrwialphaleftmurightmathbfrwialphafracmumathsftleftmurightmathbfrwileftleftomegairighttimes mathbfpigrighttimes fracmathrmdhxmathrmddeltamathbfvwi mathbfrwialphafracmumathsftleftmuright fracmathrmdhxmathrmddeltamathbfpig mathbfrwialphafracmumathsftleftmurightmathbfrwileftomegairighttimes endalign magnetometerdof symbol symbol definition mathbfrim orientation magnetometer wrt robot imubody frame wtexttextbfmag magnetic field vector expressed world frame measurement equation math z mathbfrimmathsft mathbfrwimathsft wtexttextbfmag barometric pressuredof symbol symbol definition mathbfpip translation pressure sensor wrt robot imubody frame measurement equation math z beginbmatrix0endbmatrix leftmathbfpwi mathbfrwi mathbfpip right body velocitydof symbol symbol definition mathbfpib translation bodyvel sensor wrt robot imubody frame mathbfrib orientation bodyvel sensor wrt robot imubody frame omegai angular velocity imubody frame measurement equation math z mathbfribmathsft mathbfrwimathsft mathbfvwi mathbfribmathsft leftomegairighttimes mathbfpib attitude 23 dof symbol symbol definition mathbfqaw orientation attitude origin wrt worldglobal frame mathbfqib orientation attitude sensor wrt robot imubody frame measurement equation math z mathbfrawmathbfrwimathbfrib csv file format sensor data individual symbol described section symbol sensor state described section provided sensor module plug play input file sensor csv file column entry imu time ax ay az wx wy wz position sensor time px py pz pose sensor time px py pz qw qx qy qz vision sensor time px py pz qw qx qy qz gnss time lat long alt gnss velocity time lat long alt vx vy vz magnetometer time mx mz pressure sensor time pressure output file sensor csv file column entry core state time wx wy wz ax ay az pwix pwiy pwiz vx vy vzqwiw qwix qwiy qwiz bwx bwy bwz bax bay baz position sensor time pipx pipy pipz pose sensor time pipx pipy pipz qipw qipx qipy qipz vision sensor time pipx pipy pipz qipw qipx qipy qipz gnss time pigx pigy pigz pgwwx pgwwy pgwwz qgwww qgwwx qgwwy qgwwz gnss velocity time pigx pigy pigz pgwwx pgwwy pgwwz qgwww qgwwx qgwwy qgwwz magnetometer time magwx magwy magwz qimw qimx qimy qimz pressure sensor time pipx pipy pipz bias package layoutcodebase generated tree lnoreport charset unicode layoutmd cmakeliststxt include mar bufferh corelogich corestateh datautils readcsvh readposedatah readsimdatah ekfh generalfunctions utilsh marsapih marsexporth marsfeaturesh nearestcovh sensormanagerh sensor bindsensordatah imu imumeasurementtypeh imusensorclassh pose posemeasurementtypecpp posemeasurementtypeh posesensorclasscpp posesensorclassh posesensorstatetypecpp posesensorstatetypeh position sensorabsclassh sensorinterfaceh updatesensorabsclassh tbufferh timeh timestamph typedefinitions basestatesh bufferdatatypeh bufferentrytypeh corestatetypeh coretypeh includelocal mar helperhpp utilshpp source buffercpp bufferentrytypecpp corelogiccpp corestatecalcqcpp corestatecpp ekfcpp nearestcovcpp sensorabsclasscpp sensorinterfacecpp sensormanagercpp timecpp timestampcpp utilscpp tutorial section explains interaction essential component mar framework customize component different stateestimation modularities standalone usage middleware integration due usage mar c api direct use mar library using library within middleware framework possible significant overhead difference two scenario method data passed framework use mar without middleware look one end2end test mar provides define executable fashion use outline sourcetestmarse2etestmarse2eimuposeupdatecpp reference mar already provides method read data csv file store result processing implementation mar wrapper use project reference mar section make use code snippet mar wrapper essential component instantiation mar need persistent component instantiation operate instantiation association component shown code c include include include include include include include include include include setup framework component imusensorsptr stdmakesharedimu corestatessptr stdmakeshared corestatessptrgetsetpropagationsensorimusensorsptr corelogic marscorelogiccorestatessptr corelogicbuffersetmaxbuffersize800 corestatessptrsetnoisestd eigenvector3d0013 0013 0013 eigenvector3d00013 00013 00013 eigenvector3d0083 0083 0083 eigenvector3d00083 00083 00083 sensor definition pose1sensorsptr stdmakesharedpose1 corestatessptr eigenmatrix posemeasstd posemeasstd 005 005 005mpi 180mpi 180mpi 180 pose1sensorsptrr posemeasstdcwiseproductposemeasstd sensor calibration posesensordata posecalibration posecalibrationstatepip eigenvector3d00 00 00 posecalibrationstateqip eigenquaterniondidentity eigenmatrix posecov posecovsetzero posecovdiagonal 00025 00025 00025 00076 00076 00076 5cm 5deg posecalibrationsensorcov posecov pose1sensorsptrsetinitialcalibstdmakesharedposecalibration sensor chi2 pose1sensorsptrchi2setchivalue005 pose1sensorsptrchi2activatetesttrue code explained c imusensorsptr stdmakesharedmarsimusensorclassimu line initialized imu sensor instance sensor class given name used log warning clarity c corestatessptr stdmakesharedmarscorestate line creates core state core state instantiated used provide method operate core state throughout framework c corestatessptrgetsetpropagationsensorimusensorsptr point connection core state propagation sensor made used eg definition incoming measurement handled information propagation process routed accordingly c sensor pose1sensorsptr stdmakesharedmarsposesensorclasspose1 corestatessptr eigenmatrixdouble1 posemeasstd posemeasstd 005 005 005mpi 180mpi 180mpi 180 pose1sensorsptrr posemeasstdcwiseproductposemeasstd line initialize single sensor first similar imu sensor instantiation shared pointer specific sensor object created update sensor compared propagation sensor require knowledge core state design thus shared pointer common core object need provided sensor instantiation second sensor ha measurement noise field depends state definition value measurement noise stored pose1sensorsptrr c sensor calibration posesensordata posecalibration posecalibrationstatepip eigenvector3d00 00 00 posecalibrationstateqip eigenquaterniondidentity eigenmatrixdouble6 posecov posecovsetzero posecovdiagonal 00025 00025 00025 00076 00076 00076 5cm 5deg posecalibrationsensorcov posecov pose1sensorsptrsetinitialcalibstdmakesharedposesensordataposecalibration sensor given ha calibration state ha option initialize calibration depending sensor module definition calibration state automatically calibrated sensorsetinitialcalib wa called first line instantiate sensor state object set consecutive line second part line generates covariance matrix map state object last line state object passed sensor instance set calibration parameter c sensor chi2 pose1sensorsptrchi2setchivalue005 pose1sensorsptrchi2activatetesttrue finally chi2 test activated per sensor perform measurement validation possible rejection update stage two option set confidence value check activate chi2rejection test deactivated default navigation state propagation routine propagation navigation state propagation sensor measurement generally different sensor update routine however routine includes initialization filter thus shown completeness code c void marswrapperposeimumeasurementcallbackconst sensormsgsimuconstptr meas map measutement mar type time timestampmeasheaderstamptosec generate measurement data block bufferdatatype data datasetsensordatastdmakeshared marsmsgconvimumsgtoimumeasmeas call process measurement corelogicprocessmeasurementimusensorsptr timestamp data initialize first time propagation sensor occures corelogiccoreisinitialized corelogicinitializepwiinit qwiinit publishonpropagation marsbufferentrytype lateststate corelogicbuffergetlateststatelateststate marscorestatetype latestcorestate staticcastmarscoretype lateststatedatacoregetstate pubextcorestatepublishmarsmsgconvextcorestatetomsg lateststatetimestampgetseconds latestcorestate code explained c map measutement mar type time timestampmeasheaderstamptosec generate measurement data block bufferdatatype data datasetsensordatastdmakeshared marsmsgconvimumsgtoimumeasmeas first line data type may specific middleware mapped internal mar type concern timestamp type sensor measurement wrapper mar framework already provides conversion message various sensor measurement type mapped buffer data field c call process measurement corelogicprocessmeasurementimusensorsptr timestamp data next step information passed processmeasurement routine routine requires shared pointer individual sensor instance timestamp associated measurement measurement form buffer element data type c initialize first time propagation sensor occures corelogiccoreisinitialized corelogicinitializepwiinit qwiinit processmeasurement routine doe start filtering process initialize member function called function altered default case us latest pose information initialization c marsbufferentrytype lateststate corelogicbuffergetlateststatelateststate marscorestatetype latestcorestate staticcast lateststatedatacoregetstate last segment cover call latest data entry consecutive publishing calling processmeasurement function buffer date latest entry contains latest state first instantiate variable buffer entry type receive latest state next step getlateststate get state element data field buffer since void type need cast coretype usage buffer entry data type described c pubextcorestatepublishmarsmsgconvextcorestatetomsg lateststatetimestampgetseconds latestcorestate final step convert state information message publish accordingly sensor update code c void marswrapperposeposemeasurementupdate stdsharedptr sensorsptr const posemeasurementtype posemeas const time timestamp tmp feedback init pose pwiinit posemeasposition qwiinit posemeasorientation generate measurement data block bufferdatatype data datasetsensordatastdmakesharedposemeas call process measurement corelogicprocessmeasurementsensorsptr timestampcorr data return publish latest sensor state marsbufferentrytype latestresult corelogicbuffergetlatestsensorhandlestate sensorsptr latestresult marscorestatetype latestcorestate staticcast lateststatedatacoregetstate pubextcorestatepublishmarsmsgconvextcorestatetomsg lateststatetimestampgetseconds latestcorestate marsposesensorstatetype posesensorstate sensorsptrgetgetstatelatestresultdatasensor pubpose1statepublishmarsmsgconvposestatetoposemsg latestresulttimestampgetseconds posesensorstate code explained c tmp feedback init pose pwiinit posemeasposition qwiinit posemeasorientation line depend specific usage filter general need information initialize filter case store latest pose pose sensor pas core state initialization routine filter initialized c generate measurement data block bufferdatatype data datasetsensordatastdmakesharedposemeasurementtypeposemeas point simply mapping sensor measurement already provided sensor measurement type c call process measurement corelogicprocessmeasurementsensorsptr timestampcorr data return similar propagation routine pas shared pointer specific sensor instance time stamp sensor measurement processmeasurement function function return true update wa successful c publish latest sensor state marsbufferentrytype latestresult corelogicbuffergetlatestsensorhandlestate sensorsptr latestresult point get latest core state state sensor sensor ha calibration state defined first generate buffer entry getlatestsensorhandlestate return latest state wa generated sensor associated shared pointer sensorsptr c marscorestatetype latestcorestate staticcastmarscoretype lateststatedatacoregetstate pubextcorestatepublishmarsmsgconvextcorestatetomsg lateststatetimestampgetseconds latestcorestate use buffer entry previous step extract core state information part buffer entry data field core state mar data type converted message published c marsposesensorstatetype posesensorstate sensorsptrgetgetstatelatestresultdatasensor pubpose1statepublishmarsmsgconvposestatetoposemsg latestresulttimestampgetseconds posesensorstate line act way core state publishing described difference accessing buffer data sensor field convert mar sensor data type another message type also instead casting type hand sensor class already provides getter function perform case implementation new sensor model definition sensor requires three essential file file placed dedicated folder file copygenerate sourcemarsincludemarssensorsyoursensor measurementtypeh sensorstatetypeh sensorclassh copy file pose sensor module use template step define data type sensor measurement yoursensormeasurementtypeh define sensor state yoursensorsensorstatetypeh yoursensorsensorclassh edit data type definition two file edit initialization routine edit measurement mapping edit definition jacobian edit definition residual edit definition applycorrection member function add file cmakelist cmakelists sourcemarscmakeliststxtadd sensorfiles cmake setheaders includepathsensorsyoursensoryoursensormeasurementtypeh includepathsensorsyoursensoryoursensorsensorclassh includepathsensorsyoursensoryoursensorsensorstatetypeh sensor requires helper class cpp file need add following section cmake setsources includepathsensorsyoursensor step completed use sensor generalized object mar framework demonstration closedloop modular position estimation setup ublox gps receiver 8hz pixhawk autopilot imu 200hz mar gnss poseestimation px4 stateestimation bridge clean direct interface mar estimator without chained ekf structure eg via buildin px4 ekf2 link complete flight setup aau cns flight package known issue process noise moment mar support definition dynamic process noise core state sensor auxiliarycalibration state contact information please contact christian brommer license software made available public use sourceavailable licensed term bsd2clauselicense commercial use allowed full term made available license file license patent granted usage academic purpose use software academic research setting please cite corresponding paper consult license file detailed explanation latex inproceedingsbrommer2020 author brommer christian jung roland steinbrener jan wei stephan doi 101109lra20203043195 journal ieee robotics automation letter title mar modular robust sensorfusion framework year 2020,"[('core', 'state'), ('imubody', 'frame')]"
ezelikman/parsel,Python,parsel parsel natural language framework writing program target language using code language model parsel considers multiple implementation function searching set implementation find program passing unit test generally program constraint used many kind algorithmic task eg code synthesis robotic planning theorem proving website preprint twitter thread current paper version automatic test generation automatic function naming installation get use repo enough git clone pip install openai notebook provide intro notebook showing interact parsel example order run project example command python parselpy programsproblemsolvingss run transpile program file programsproblemsolvingss python parselpy programscollatzrecursionss show example recursive function python parselpy programsproblemsolvingnotestsss g show use automatic test generation write program without test python parselpy programsgameoflifeinversenoargsss n show use natural language write program without argument name python parselpy programsproblemsolvingnoargsnotestsss g n show use automatic test generation write program without test argument name ie entirely natural language run python parselpy programsandcommutess change mode constsinitpy lean assuming lean installed generate lean file directory input file run gameoflifeinverseexpandss need use e flag automatically expand decompose run gameoflifeinversefillss need use autofill program function called used general configure parsel new target programming need create new file consts add constsinitpy addition use openai model need create keyscodexkeytxt file format organizationidapikey citation find repo paper useful research please feel free cite paper misczelikman2022parsel url author zelikman eric huang qian poesia gabriel goodman noah haber nick keywords computation language cscl artificial intelligence csai machine learning cslg title parsel decompositional framework algorithmic reasoning language model publisher arxiv year 2022 copyright arxivorg perpetual nonexclusive license,"[('python', 'parselpy'), ('natural', 'language')]"
ZJU-FAST-Lab/EGO-Planner-v2,C++,egoplannerv2 swarm playground codebase paper swarm micro flying robot wild installationfree usage please follow tutorial pdf file corresponding videos24 run code work wa born minco find interesting please give repos star generously thanks,"[('egoplannerv2', 'swarm'), ('swarm', 'playground')]"
koalazak/dorita980,Other,dorita980 build status npm version unofficial irobot roomba i7i7 980 960 e5 690 675 etc nodejs library sdk library send command wifi enabled roomba irobot cloud api directly lan integrate roboot home automation iot project see rest980 need http rest api interface advice enjoy dorita980 work nice recommend blocking internet access robot avoid ota firmware update new firmware change cause dorita980 stop working blocking firmware update performed using parental control option router new firmware published come verify dorita980 still compatible dorita980 compatible temporarily enable internet access robot get firmware upgrade firmware version 16x click see old documentation check robot version feature compatible robot 600 800 900 e5 i7i7 series home app braava m6 get usernamepassword easily auto discovery robot ip optional local api control lan simplified cleaning preference setting firmware 16x compatible firmware 2xx compatible latest serie 900 us firmware v2 v3 firmware 32x compatible latest serie 800 us firmware v3 see rest980 need http rest api interface use dorita980 latest firmware tested working v2416126 irobot roomba 980 cleaning map using dorita980 lib video realtime cleaning map using dorita980 lib rest980 supported feature firmware version 16x local 16x cloud 2xx local 2xx cloud 3xx local cleanstartstoppausedockresumecleanroomfind yes yes yes pending yes get preference yes yes yes pending yes set preference yes yes yes pending yes get xyd position yes yes yes pending get mission yes yes yes pending yes get mission number yes pending yes get general info yes yes yes pending yes get schedule yes yes yes pending yes set schedule yes yes yes pending yes set carpetboost performance eco auto yes yes yes pending set edge clean yes yes yes pending set cleaning pass auto two yes yes yes pending set always finish yes yes yes pending mqtt custom event yes pending yes http api yes yes discovery robot ip yes yes yes get blid password yes yes yes support multiple client time yes yes pending note new firmware reporting robot position pose property local env install first need nodejs installed bash npm install dorita980 save quick start via local request lan control robot local network create myappjs file content javascript var dorita980 require dorita980 var myrobotvialocal new dorita980local myusernameblid mypassword 1921681104 robot ip address myrobotvialocalon connect init function init myrobotvialocalclean myrobotvialocalend disconnect leave free channel mobile app catchconsolelog install dorita980 using npm run program bash npm install dorita980 save node myappjs example pause robot via local request javascript var dorita980 require dorita980 var myrobotvialocal new dorita980local myusernameblid mypassword 1921681104 robot ip address myrobotvialocalon connect init function init myrobotvialocalpause myrobotvialocalend disconnect leave free channel mobile app catchconsolelog get robot week schedule javascript var dorita980 require dorita980 var myrobotvialocal new dorita980local myusernameblid mypassword 1921681104 robot ip address myrobotvialocalon connect init function init myrobotvialocalgetweek thenweekconfig consolelogweekconfig myrobotvialocalend catchconsolelog get usernameblid password needed cloud local request need irobot account credential username password option install dorita980 globally run getroombapasswordcloud command bash npm install g dorita980 getroombapasswordcloud irobot username irobot password optional apikey option clone repo run npm script bash git clone cd dorita980 npm install npm run getpasswordcloud irobot username irobot password optional apikey option docker run command docker run node sh c npm install g dorita980 getroombapasswordcloud irobot username irobot password optional apikey example output npm install g dorita980 getroombapasswordcloud myemailexamplecom myeasypassword foundrobots robot dorita sku r98 softwarever v2416126 blid xxxxxxxxxxxxx password 11486937829gktkdoypwadxcfgh yes string use credential dorita980 lib show old firmware method local call method stop working latest firmware problem using method please use cloud method need know robot ip address look router scan lan network nmap find use dorita980getrobotip method local option install dorita980 globally run getroombapassword command bash npm install g dorita980 getroombapassword local option clone repo run npm script bash git clone cd dorita980 npm install npm run getpassword local option docker run command docker run node sh c npm install g dorita980 getroombapassword example output local method npm install g dorita980 getroombapassword 1921681103 make sure robot home base powered press hold home button robot play series tone aboutseconds release button robot flash wifi light press key ver hostname roombaxxxxxxxxxxxxx robotname dorita ip 1921681103 mac 121212121212 sw v20034 sku r98 nc proto mqtt blid xxxxxxxxxxxxx usernameblid password 11486937829gktkdoypwadxcfgh yes string use credential dorita980 lib troubleshoot getting password common issue getting password related mobile application open must close irobot mobile application phone robot support one connection time get connection error case application using robot close application script using robot frist bullet network connectivity issue make sure computer reach robot nc zv robotip 8883 command fails check network slow network using local method slow network need run getroombapassword couple time get udp package may lost nodejs version mostly tested v10 also work v12 v14 v16 try using v10 wrong button really common people touching clean button 980 robot instead home button prompted make sure pressing correct button model like 675 home button need press dockspot make sure robot docked home base powered short press clean button turn start cleaning session robot configured configure robot first time mobile app need first process set actual password sometimes robot hang reset robot pressing clean 10 second aprox wait restart try auto discover ip address local request known ip address use dorita980local use dorita980getrobotip find process take 12 second know ip use explicity need udp brodcast enable network javascript var dorita980 require dorita980 dorita980getrobotipierr ip ierr return consolelog error looking robot ip var myrobotvialocal new dorita980local myusernameblid mypassword ip myrobotvialocalgetmission thenmission consolelogmission catcherr consolelogerr also use discovery method get robot discovery data need udp brodcast enabled network javascript var dorita980 require dorita980 dorita980discoveryierr data consolelogdata print ver hostname roombaxxxxxxxxxxxxx robotname dorita ip 1921681103 mac 121212121212 sw v20034 sku r98 nc proto mqtt local api library send command directly wifi robot dont need internet connection dorita980localblid password ip firmwareversion myrobotend myrobotgetrobotstatewaitforfields myrobotgetpreferences myrobotsetpreferencesnewpreferences myrobotgetmission myrobotgetbasicmission myrobotgetwirelessstatus myrobotgettime myrobotgetbbrun myrobotgetlangs myrobotgetsys myrobotgetwirelesslaststatus myrobotgetweek myrobotsetweeknewweek myrobotgetcloudconfig myrobotstart myrobotclean myrobotcleanroomargs myrobotcleanroomargs multiple room myrobotpause myrobotstop myrobotresume myrobotdock myrobotsetcarpetboostauto myrobotsetcarpetboostperformance myrobotsetcarpetboosteco myrobotsetedgecleanon myrobotsetedgecleanoff myrobotsetcleaningpassesauto myrobotsetcleaningpassesone myrobotsetcleaningpassestwo myrobotsetalwaysfinishon myrobotsetalwaysfinishoff myroboton connect callback myroboton close callback myroboton offline callback myroboton update callback myroboton mission callback myroboton state callback myrobotpublish topic rawjsonmessageasstring callback method end close connection robot important want send command via official mobile app via local network maximum ofconnection time local network app connected official mobile app work via cloud access dorita980 connected call method send command listen event get data call end method want dorita980 connected official mobile app work via cloud send command robot getrobotstatearray waitforfields get robot state wait waitforfields field return state object start empty robot add data time javascript myrobotvialocalgetrobotstate batpct bbchg3 thenactualstate consolelogactualstate full state contain javascript netinfo dhcp true addr 4294967040 mask 4294967040 gw 4294967040 dns1 4294967040 dns2 bssid 121212121212 sec wifistat wifiuap false cloud wlcfg secssid 123123123123123123123123 mac 343434343434 country u cloudenv prod svcendpoints svcdeplid v005 localtimeoffset 180 utctime 1487103319 pose theta 61 point x 171 113 batpct 100 dock known true bin present true full false audio active false cleanmissionstatus cycle none phase charge expirem rechrgm error notready mssnm sqft 29 initiator manual nmssn 324 language noautopasses false nopp false ecocharge false vachigh false binpause false carpetboost true openonly false twopass false schedhold false lastcommand command dock time 1487103424 initiator manual langs enus frfr es dede itit bbnav amtrack 45 ngoodlmrks 15 12 aexpo bbpanic panics814 bbpause pause 150000 17 bbmssn nmssn 323 nmssnok 218 nmssnc 99 nmssnf amssnm 35 acyclem 31 bbrstinfo nnavrst 41 nmobrstcauses 0000 cap poseotamultipasscarpetboost sku r98 batterytype lith soundver 31 uiswver 4582 navswver 010909 wifiswver 20902 mobilityver 5309 bootloaderver 3580 umiver softwarever v20034 tz event dtoff 180 dtoff 180 dtoff ver timezone americabuenosaires name robotname cleanschedule cycle none none none none none none none h 17 10 10 12 10 13 17 m30 3030 30 bbchg3 avgmin 158 hondock 6110 navail 1280 estcap 12311 nlithchrg 233 nnimhchrg ndocks 98 bbchg nchgok 226 nlithfaborts4 bbswitch nbumper 55889 nclean 300 nspot 47 ndock 98 ndrops 300 bbrun hr 211 min 48 sqft 566 nstuck 17 nscrubs 85 npicks 592 npanics 178 ncliffsf 1532 ncliffsr 2224 nmbstll nwstll ncbump bbsys hr 6522 min 54 signal rssi 43 snr 40 getpreferences get full robot state wait cleanmissionstatus cleanschedule name vachigh pose field returning alias getrobotstate cleanmissionstatus cleanschedule name vachigh pose signal wait signal make sure full state object use getrobotstate cleanmissionstatus cleanschedule name vachigh signal without pose model without navigation like e6 model setpreferencesnewpreferences partially overwrites robot state configure javascript var newpreferences binpause false myrobotvialocalsetpreferencesnewpreferences response javascript oknull getmission draw map model position reporting use getbasicmission robot without position reporting feature like e5 model javascript cleanmissionstatus cycle none phase charge expirem rechrgm error notready mssnm 15 sqft initiator localapp nmssn 323 pose theta 160 point x 166 11 getbasicmission getmission wait pose information javascript cleanmissionstatus cycle none phase charge expirem rechrgm error notready mssnm 15 sqft initiator localapp nmssn 323 getwirelessstatus javascript wifistat wifiuap false cloud netinfo dhcp true addr 3232235880 mask 4294967040 gw 3232235777 dns1 3232235777 dns2 bssid c05627703bfe sec gettime javascript 1487100141 getbbrun javascript hr 211 min 48 sqft 566 nstuck 17 nscrubs 85 npicks 592 npanics 178 ncliffsf 1532 ncliffsr 2224 nmbstll nwstll ncbump getlangs javascript enus frfr es dede itit getsys javascript bbrstinfo nnavrst 41 nmobrstcauses 0000 cap poseotamultipasscarpetboost sku r98 batterytype lith soundver 31 uiswver 4582 navswver 010909 wifiswver 20902 mobilityver 5309 bootloaderver 3580 umiver softwarever v20034 audio active false bin present true full false getwirelesslaststatus javascript wifiuap false cloud wlcfg secssid 1234567890796857336364 getweek disable monday start every day 1030am javascript cycle none none none none none none none h 17 10 10 12 10 13 17 m30 3030 30 setweeknewweek disable sunday start every day 1030am javascript var newweek cyclenonestartstartstartstartstartstarth10101010101010m30303030303030 myrobotvialocalsetweeknewweek response javascript oknull getcloudconfig javascript prod start javascript oknull clean javascript oknull cleanroomargs cleanroom alias start argument clean room need structure similar javascript const args pmapid abcdefg123456fgks789 region regionidregionname hallway regiontype hallway type rid userpmapvid 190917t20125z myrobotvialocalcleanroomargs javascript oknull easiest way find information start clean using irobot app call getrobotstate method copy lastcommand value using derive pmapid userpmapvid region data looking pmaps property state cleanroomargs multiple room adding region region array set room cleaned least firmware version 383 set desired order cleaning multiple room adding orderedjavascript const args ordered pmapid abcdefg123456fgks789 region regionidregionname hallway regiontype hallway type rid regionidregionname living room regiontype familiy room type rid regionidregionname kitchen regiontype kitchen type rid userpmapvid 190917t20125z myrobotvialocalcleanroomargs javascript oknull pause javascript oknull stop javascript oknull resume javascript oknull dock note dock need pause stop robot javascript oknull find note sends locate request robot dock nothing happen otherwise beep javascript oknull simplification set cleaning preference method use setpreferences correct flag setting setcarpetboostauto javascript oknull setcarpetboostperformance setcarpetboosteco setedgecleanon setedgecleanoff setcleaningpassesauto setcleaningpassesone setcleaningpassestwo setalwaysfinishon setalwaysfinishoff publishtopic rawjsonmessageasstring callback experiment raw command using mqtt client known topic cmd delta experiment topic message format delta command tipicaly following json format state newstate cmd command tipicaly following json format command command time datenow 1000initiator localapp example send clean command javascript let mycommand command clean time datenow 1000initiator localapp myrobotvialocalpublish cmd jsonstringifymycommand functione ife consolelog error e dont forget stringify json message jsonstringifyrawjsonmessageasstring see undocument command preference thread event connect event emitted successful connection function put code inside callback close event emitted disconnection offline event emitted client go offline update event emitted every time robot publishes new message mqtt bus function data data data published robot javascript myrobotvialocalon update function data consolelogdata print javascript state reported soundver 31 uiswver 4582 navswver 010909 wifiswver 20902 mobilityver 5309 bootloaderver 3580 umiver softwarever v20034 mission event emitted every emitintervaltime millisecond mission data util mapping model position reporting function data data mission data cleanmissionstatus pose state property javascript var cleanmissionstatus 300 default 800ms var myrobotvialocal new dorita980local myusernameblid mypassword 1921681104 cleanmissionstatus note firmware version myrobotvialocalon mission function data consolelogdata print 300ms javascript cleanmissionstatus cycle none phase charge expirem rechrgm error notready mssnm 15 sqft initiator localapp nmssn 323 pose theta 160 point x 166 11 state event emitted every time robot publish new message mqtt bus function data data full robot state object javascript myrobotvialocalon state function data consolelogdata print full robot state cloud api implemented yet firmware 200 help wanted note nodejs v010 user dorita980 compatible nodejs 40 use getpassword feature nodejs 40 using harmony flag like bash node harmony bingetpasswordjs 1921681104 custom tl cipher set robotciphers environment variable overwrite cipher suit used tl connection robot default aes128sha256 bash robotciphersaes128sha node myscriptjs donation like help dorita980 stay updated support new robot firmware please consider making donation help purchase latest robot method wallet bitcoin bc1qepwdmdk25yxa39g9kerzw9m5y7nxztwkmcu3aa etherum 0x7ece75b4fc6a2109850a106b58dcf750c6b0cde3 opencolective opencollective paypal zaktuxgmailcom others ask thank much support author facu zak,"[('yes', 'yes'), ('yes', 'pending')]"
keenon/nimblephysics,C++,stanford nimble logo test stanford nimble pip3 install nimblephysics beta software read doc paper use physic nonlinearity neural network single timestep nimbletimestepstate control valid pytorch function forward pas illustration support analytical backwards pas work even contact friction backpropagation illustration easy python nimble import timestep everything pytorch tensor differentiable nextstate timestepworld currentstate controlforces nimble started life fork popular dart physic engine analytical gradient pytorch binding worked hard maintain much backwards compatability many simulation worked dart translate directly nimble check website information installing arm64 mac m1 m2 etc yet publish arm64 binary pypi ci system may able pip3 install nimblephysics new arm64 mac endeavor manually push binary occassionally github action support using arm64 mac runner may run bit behind currently prebuilt arm64 binary available python 39 create virtual environment python 39 pip3 install nimblephysics work really need another python version reason solution clone repo run cimacinstalldependenciessh cimacmanuallybuildarm64wheelssh install dependency need build install python package please create issue run problem best fix,"[('pip3', 'install'), ('install', 'nimblephysics')]"
schroederdewitt/multiagent_mujoco,Python,maintained fork maintained version environment include numerous fix comprehensive documentation support installation via pip support current version python available gymnasium robotics multiagent mujoco benchmark continuous multiagent robotic control based openai mujoco gym environment described paper deep multiagent reinforcement learning decentralized continuous cooperative control christian schroeder de witt bei peng pierrealexandre kamienny philip torr wendelin bohmer shimon whiteson torr vision group whiteson research lab university oxford 2020 installation note require openai gym version 0108 mujoco 21 simply clone repository put src pythonpath render please also set following environment variable ldlibrarypathhomemujocomujoco210bin ldpreloadusrlibx8664linuxgnulibglewso example python multiagentmujocomujocomulti import mujocomulti import numpy np import time def main envargs scenario halfcheetahv2 agentconf 2x3 agentobsk episodelimit 1000 env mujocomultienvargsenvargs envinfo envgetenvinfo nactions envinfonactions nagents envinfonagents nepisodes 10 e rangenepisodes envreset terminated false episodereward terminated ob envgetobs state envgetstate action agentid rangenagents availactions envgetavailagentactionsagentid availactionsind npnonzeroavailactions0 action nprandomuniform10 10 nactions actionsappendaction reward terminated envstepactions episodereward reward timesleep01 envrender printtotal reward episode formate episodereward envclose name main main documentation environment config envargsscenario determines underlying singleagent openai gym mujoco environment envargsagentconf determines partitioning see environment section fixed nagents x motorsperagent envargsagentobsk determines connection distance k agent able form observationsagents observe state joint bodiesagents observe immediate neighbour joint body envargskcategories string describing property observable connection distance commaseparated list separated vertical bar example qposqvelcfrcextcvelcinertqfrcactuatorqpos mean k0 observe property qposqvelcfrcextcvelcinertqfrcactuator k1 ie immediate distant neighbour observed property qpos note property requested available given agent silently omitted envargsglobalcategories envargskcategories concern global property otherwise observed agent switched default ie agent nonlocal observation extending task task trivially extended adding entry srcmultiagentmujocoobskpy task configuration unless stated otherwise parameter given used multiagentmujocomujocomulti 2agent ant python envargsscenarioantv2 envargsagentconf2x4 envargsagentobsk1 2agent ant diag python envargsscenarioantv2 envargsagentconf2x4d envargsagentobsk1 4agent ant python envargsscenarioantv2 envargsagentconf4x2 envargsagentobsk1 2agent halfcheetah python envargsscenariohalfcheetahv2 envargsagentconf2x3 envargsagentobsk1 6agent halfcheetah python envargsscenariohalfcheetahv2 envargsagentconf6x1 envargsagentobsk1 3agent hopper python envargsscenariohopperv2 envargsagentconf3x1 envargsagentobsk1 2agent humanoid python envargsscenariohumanoidv2 envargsagentconf98 envargsagentobsk1 2agent humanoidstandup python envargsscenariohumanoidstandupv2 envargsagentconf98 envargsagentobsk1 2agent reacher python envargsscenarioreacherv2 envargsagentconf2x1 envargsagentobsk1 2agent swimmer python envargsscenarioswimmerv2 envargsagentconf2x1 envargsagentobsk1 2agent walker python envargsscenariowalker2dv2 envargsagentconf2x3 envargsagentobsk1 manyagent swimmer python envargsscenariomanyagentswimmer envargsagentconf10x2 envargsagentobsk1 manyagent ant python envargsscenariomanyagentant envargsagentconf2x3 envargsagentobsk1 coupled halfcheetah new python envargsscenariocoupledhalfcheetah envargsagentconf1p1 envargsagentobsk1 coupledhalfcheetah feature two separate halfcheetah agent coupled elastic tendon add tendon novel coupled scenario creating new gym environment define reward function coupled scenario consult coupledhalfcheetahpy create new mujoco environment xml file insert agent tendon see assetscoupledhalfcheetahxml register env scenario mujocomulti environment need special default observability params,"[('envargsagentobsk1', '2agent'), ('ant', 'python')]"
Hypfer/lovelace-valetudo-map-card,Other,valetudo map card display map valetudoenabled robot home assistant dashboard card installation highly recommended use hacs managing custom extension home assistant follow hacs installation instruction open hacs go frontend click explore download repository search valetudo map card select choose download configuration mqtt card make use valetudo mqtt support mqtt ha configured home assistant valetudo custom card get card running head short walkthrough note lovelace must set storage mode see installation instruction work usage example displaying vacuum entity image easy control vacuum consider using verticalstack entity card like type verticalstack card vacuum valetudothirstyserpentinestingray type customvaletudomapcard entity vacuumvaletudothirstyserpentinestingray type entity displaying overlay combining card home assistant pictureelements could use show vacuum position top house make sure set showfloor false backgroundcolor transparent card type pictureelements image element type customvaletudomapcard vacuum valetudothirstyserpentinestingray showfloor false backgroundcolor transparent use mapscale crop make fit option name type default description type string required customvaletudomapcard vacuum string required name vacuum mqtt without vacuum prefix title string vacuum title show card header showmap boolean true show map backgroundcolor string background color card floorcolor string valetudomapfloorcolor secondarybackgroundcolor floor color flooropacity numberfloor opacity wallcolor string valetudomapwallcolor accentcolor wall wallopacity numberwall opacity currentlycleanedzonecolor string valetudocurrentlycleanedzonecolor secondarytextcolor color zone selected cleanup currentlycleanedzoneopacity number 05 opacity currently cleaned zone nogoareacolor string valetudonogoareacolor accentcolor go area color nogoareaopacity number 05 opacity go area nomopareacolor string valetudonomopareacolor secondarytextcolor mop area color nomopareaopacity number 05 opacity mop area virtualwallcolor string valetudovirtualwallcolor accentcolor virtual wall color virtualwallopacity numbervirtual wall opacity virtualwallwidth numbervirtual wall line width pathcolor string valetudomappathcolor primarytextcolor path color pathopacity numberpath opacity pathwidth numberpath line width segmentcolors array 19a1a1 7ac037 df5618 f7c841 segment color segmentopacity number 075 segment opacity showfloor boolean true draw floor map showdock boolean true draw charging dock map showvacuum boolean true draw vacuum map showwalls boolean true draw wall map showcurrentlycleanedzones boolean true show zone selected zoned cleanup map shownogoareas boolean true draw go area map shownomopareas boolean true draw mop area map showvirtualwalls boolean true draw virtual wall map showpath boolean true draw path vacuum took showcurrentlycleanedzonesborder boolean true draw border around currently cleaned zone shownogoborder boolean true draw border around go area shownomopborder boolean true draw border around mop area showpredictedpath boolean true draw predicted path vacuum showgototarget boolean true draw go target showsegments boolean true draw floor segment map showstatus boolean true show status vacuumentity showbatterylevel boolean true show battery level vacuumentity showstartbutton boolean true show start button vacuumentity showpausebutton boolean true show pause button vacuumentity showstopbutton boolean true show stop button vacuumentity showhomebutton boolean true show home button vacuumentity showlocatebutton boolean true show locate button vacuumentity gototargeticon string mdipin icon use go target gototargetcolor string blue color use go target icon dockicon string mdiflash icon use charging dock dockcolor string green color use charging dock icon vacuumicon string mdirobotvacuum icon use vacuum vacuumcolor string primarytextcolor color use vacuum icon mapscale numberscale map value iconscale numberscale icon vacuum dock value rotate numbervalue rotate map default deg value like 2rad valid leftpadding numbervalue move map number pixel left right crop object topbottomleftrightcrop map minheight stringthe minimum height card map displayed regardless map size suffix w want time width ex 05625w equivalent picture card 16x9 aspectratio custombuttons array array custom button option detailed color valid cs value card config like name red hex code ff0000 rgb255255255 rgba25525525508 custom button custom button added card vacuumentity set custom button support following option name type default description service string required service call button pressed servicedata object optional service data passed service icon string mdiradioboxblank icon represent custom button text string optional text display next icon license lovelace valetudo map card licensed mit license,"[('boolean', 'true'), ('true', 'draw')]"
jesseweisberg/moveo_ros,Python,moveoros package used plan execute motion trajectory bcn3d moveo robotic arm simulation reallife video demo new feature objectspecific pick place ordinary webcam tensorflow opencv pick place sort object detected realtime video demo use use getting bcn3d simulation working motion planning make sure installed correctly functioning workspace used kinetic ubuntu 1604 different distro may need change thing currently moveoros src folder catkin workspace plan execute trajectory moveo simulation rviz moveit plugin execute following terminal command roslaunch moveomoveitconfig demolaunch window load bottomleft corner check allow approximate ik solution click planning tab motionplanning panel rviz select new goal state either dragging interactive marker light blue ball end effector select goal state goal state updated plan execute plan execute trajectory start state updated goal state moving real robot synced simulated robot trajectory make sure download accelstepper accelstepper library download roslib rosserialarduino tutorial library arduino environment roslib already exists arduino library library follow last troubleshooting tip get error saying armjointstateh file make remove roslib regenerate every time introduce new custom message change pin layout robot ramp 14 moveomoveitarduinoino upload file arduino using mega 2560 make sure robot simulation position set simulation upright initially select upright select goal state rviz moveitconvertcpp replace stepsperrevolution array stepsrevolution microstepsrevolution motor note already know value experimentally get many microstepsrevolution motor using multisteppertestino recordingeyeballing result simulation already running execute following command separate terminal rosrun rosserialpython serialnodepy devttyusb0establishes rosserial node communicates arduino rosrun moveomoveit moveitconvert convert simulation jointstate rotation step publishes jointsteps topic arduino script subscribes rostopic pub gripperangle stdmsgsuint16 angle 0180publishes gripperangle whatever trajectory planned executed simulation echoed real robot directory moveourdf contains urdf unified robot description file bcn3d moveo necessary simulation rviz moveit configuration moveomoveitconfig configuration moveit motion planning framework ha plugin rviz using moveomoveit moveitconvertcpp convert simulation jointstate rotation movegroupfakecontrollerjointstates topic step publishes jointsteps topic jointsteps array ofint16 value though havejoints case represent accumulated step executed joint since moveitconvert node ha started running movegroupinterfacecoor1cpp hardcode poseposition end effector script planexecute trajectory also readsoutputs current poseposition end effector troubleshooting stepthere benew topic created jointsteps step necessary move motor desired position jointstepsfeedback jointsteps except published back arduino check information received arduino correctly gripperangle current angle gripper move moveo command line rostopic pub jointsteps moveomoveitarmjointstate joint1 joint2 joint3 joint4 joint5 change joint1 joint2 etc number step want joint move use rostopic list search topic check currently running use rostopic echo topic view data terminal get following error moveomoveitarmjointstateh file directory perform following step terminal cd arduino sketchbooklibraries rm rf roslib rosrun rosserialarduino makelibrariespy info wiki section 22 current layout wiring schematic reference,"[('goal', 'state'), ('plan', 'execute')]"
changh95/visual-slam-roadmap,Other,roadmap becoming visualslam developer 2022 inspired webdeveloperroadmap gamedeveloperroadmap visualslam special case simultaneous localization mapping use camera device gather exteroceptive sensory data set chart demonstrating topic need understand visualslam absolute beginner difficulty getting ready become visualslam engineer researcher visualslam often portrayed rather difficult topic many think good c programming skill deep understanding mathematics necessary hand many course provided beginner especially nonenglish language made chart share thought experience studying visualslam hopefully beginner learner get grasp start purpose roadmaps purpose roadmaps give idea general overview visualslam guide confused start note beginner acknowledge slam ha relatively high entry barrier requirement undertanding difficult mathematics requirement equipping various type skill feel overwhelmed need learn everything getting started instead enjoy journey progress topic topic result rewarding beginner getting familiar slam disclaimer need know every single element chart advance next level monocular visualslam rgbd visualslam applying deep learning todo last updated 20230114 stereo slam vio vins collaborative slam visuallidar fusion eventbased vision useful link learning wrap think roadmaps improved please open pr update submit issue also continue improve might want watchstar repository revisit also check github blog smileycat contribution roadmaps built using balsamiq project file found projectfiles directory modify roadmaps open balsamiq click project import mockup json open roadmap update upload update image readme create pr open pull request improvement discus idea issue spread word reach directly hyunggichang95atgmailcom rocket discussion discus topic ask question please use issue tab license img alignright src class licensed mit license copyright 2020 hyunggi chang permission hereby granted free charge person obtaining copy software associated documentation file software deal software without restriction including without limitation right use copy modify merge publish distribute sublicense andor sell copy software permit person software furnished subject following condition copyright notice permission notice shall included copy substantial portion software software provided without warranty kind express implied including limited warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arising connection software use dealing software,"[('purpose', 'roadmaps'), ('copy', 'software')]"
robosoft-ai/SMACC,C++,continuous integration distro code format quality documentation binary package melodic docker container docker automated build docker pull docker star smacc smacc eventdriven asynchronous behavioral state machine library realtime robotic operating system application written c designed allow programmer build robot control application multicomponent robot intuitive systematic manner smacc wa inspired harel statecharts smach package smacc built top boost statechart library feature powered smacc ha developed specifically work support topic service action right box written c ha lacked library develop tasklevel behavioral state machine c although library developed scripting language python unsuitable realworld industrial environment realtime requirement demanded orthogonals originally conceived david harel 1987 orthogonality absolutely crucial developing state machine complex robotic system complex robot always collection hardware device require communication protocol startup determinism etc orthogonals intuitive relatively straight forward exercise least conceptually code state machine robot comprising mobile base robotic arm gripper two lidar sensor gps transceiver imu instance static state machine checking one feature smacc inherits boost statechart get compile time validation checking benefit developer amount runtime testing necessary ship quality software stable safe dramatically reduced philosophy wherever possible let compiler state machine reference library constantly growing library outofthebox reference state machine found folder smreferencelibrary guaranteed compile run jumpstart development effort choosing reference machine closest need customize extend meet specific requirement robotic application knowing library support advanced functionality practically universal among actual working robot smacc client library smacc also feature constantly growing library client support action server service server node right outofthe box client within smacc client library built utilizing component based architecture allows developer build powerful client current client note include movebasez full featured action client built integrate navigation stack rostimerclient multirolesensorclient keyboardclient used extensively state machine drafting debugging extensive documentation although many user familiar doxygen development team ha spent lot time researching advanced feature doxygen uml style class diagram call graph used document smacc library look doxygen site smacc1 runtime analyzer smacc library ros1 work box smacc1 rta allows developer visualize runtime debug state machine working smacc1 rta closed source free individual academic use found along installation instruction found smacc application inception smacc wa written support programming multicomponent complex robot project involves small solarpowered insect robot simply navigate towards light source smacc might right choice trying program robot mobile base robotic arm gripper two lidar sensor gps transceiver imu come right place getting started easiest way get started selecting one state machine reference library hacking meet need state machine reference library come readmemd file contains appropriate operating instruction simply copy paste command terminal looking minimal example recommend smatomic looking slightly complicated still simple example try smcalendarweek looking minimal example looping superstate try smthreesome want get started navigation stack right away try smdancebot want get started navigation exploring orthogonal readwrite cycle try smdancebotstrikesback operating instruction found reference state machine readme file happy coding support interested getting involved need little support feel free contact u emailing brettrobosoftai,"[('state', 'machine'), ('machine', 'reference')]"
NVIDIA-ISAAC-ROS/isaac_ros_visual_slam,C++,isaac visual slam hardwareaccelerated simultaneous localization mapping slam using stereo visual inertial odometry svio webinar available learn use package watching ondemand webinar pinpoint 250 fps roslocalization vslam jetson overview isaac visual slam provides highperformance bestinclass rospackage vslam visual simultaneous localization mapping package us stereo camera imu estimate odometry input navigation gpu accelerated provide realtime lowlatency result robotics application vslam provides additional odometry source mobile robot ground based primary odometry source drone vslam provides method visually estimating position robot relative start position known vo visual odometry particularly useful environment gps available indoors intermittent urban location structure blocking line sight gps satellite method designed use left right stereo camera frame imu inertial measurement unit input us input stereo image pair find matching key point left right image using baseline left right camera estimate distance key point using two consecutive input stereo image pair vslam track 3d motion key point two consecutive image estimate 3d motion camerawhich used compute odometry output navigation compared classic approach vslam method us gpu acceleration find match key point realtime fine tuning minimize overall reprojection error key point depend distinctive feature left right camera image repeatedly detected change size orientation perspective lighting image noise instance number key point may limited entirely absent example camera field view looking large solid colored wall key point may detected insufficient key point module us motion sensed imu provide sensor motion measured provide estimate odometry method known vio visualinertial odometry improves estimation performance lack distinctive feature scene track motion visually slam simultaneous localization mapping built top vio creating map key point used determine area previously seen vslam determines area previously seen reduces uncertainty map estimate known loop closure vslam us statistical approach loop closure compute efficient provide real time solution improving convergence loop closure multiple method estimating odometry input navigation none method perfect ha limitation systematic flaw sensor providing measured observation missing lidar return absorbed black surface inaccurate wheel tick wheel slip ground lack distinctive feature scene limiting key point camera image practical approach tracking odometry use multiple sensor diverse method systemic issue one method compensated another method three separate estimate odometry failure single method detected allowing fusion multiple method single higher quality result vslam provides vision imubased solution estimating odometry different common practice using lidar wheel odometry vslam even used improve diversity multiple stereo camera positioned different direction provide multiple concurrent visual estimate odometry learn vslam refer cuvslam slam documentation accuracy vslam bestinclass package lowest translation rotational error measured kitti visual odometry slam evaluation 2012 realtime application method runtime translation rotation platform vslam 0007s 094 00019 degm jetson agx xavier aarch64 orbslam2 006s 115 00027 degmcores 35 ghz x8664 addition result standard benchmark test loop closure vslam sequence 1000 meter coverage indoor outdoor scene performance sample graph input size agx orin orin nx orin nano 8gb x8664 w rtx 4060 ti visual slam node 720p 228 fps 127 fps 113 fps 456 fps documentation please visit isaac documentation learn use repository package isaacrosvisualslam quickstart try example coordinate frame troubleshooting api isaacrosvisualslaminterfaces latest update 20231018 improved stability,"[('key', 'point'), ('estimate', 'odometry')]"
yybawang/laravel-ebank,Other,laravelebank php 72 mysql 57 redis composer require yybawanglaravelebankphp artisan ebankinstallphp artisan migratephp artisan ebankpurseinit configebankphp php artisan makepayment classname env appurl ebank 403 gate true appprovidersebankserviceproviderphp gitbook document appurlebank dashboardreason php reason userid0 reason ebankreason userid id1 10063 yybawangebankfacadesebanktransfer0 userid 10063 reason id1 9943 yybawangebankfacadesebanktransferuserid9943 reason 100redis lock lock purse yybawangebankfacadesebankwalletuserid cash cashmodel freezeid yybawangebankfacadesebankfreezepurseid 100 int id yybawangebankfacadesebankunfreezefreezeid yybawangebankfacadesebanktransferuserid100 reason,"[('laravelebank', 'php'), ('php', '72')]"
google-research/ravens,Python,raven transporter network raven collection simulated task pybullet learning visionbased robotic manipulation emphasis pick place feature gymlike api 10 tabletop rearrangement task scripted oracle provides expert demonstration imitation learning ii reward function provide partial credit reinforcement learning blockinsertion pick lshaped red block place lshaped fixture b placeredingreen pick red block place green bowl amidst object c towersofhanoi sequentially move disk one tower anotheronly smaller disk top larger one alignboxcorner pick randomly sized box align one corner lshaped marker tabletop e stackblockpyramid sequentially stackblocks pyramid 321 rainbow colored ordering f palletizingboxes pick homogeneous fixedsized box stack transposed layer pallet g assemblingkits pick different object arrange board marked corresponding silhouette h packingboxes pick randomly sized box place tightly container manipulatingrope rearrange deformable rope connects two endpoint 3sided square j sweepingpiles push pile small object target goal zone marked tabletop task require generalizing unseen object dgh multistep sequencing closedloop feedback cefhij team repository developed maintained andy zeng pete florence daniel seita jonathan tompson ayzaan wahid reference repository paper transporter network rearranging visual world robotic manipulation project website robot learning corl 2020 andy zeng pete florence jonathan tompson stefan welker jonathan chien maria attarian travis armstrongivan krasin dan duong vikas sindhwani johnny lee abstract robotic manipulation formulated inducing sequence spatial displacement space moved encompass object part object end effector work propose transporter network simple model architecture rearranges deep feature infer spatial displacement visual inputwhich parameterize robot action make assumption objectness eg canonical pose model keypoints exploit spatial symmetry order magnitude sample efficient benchmarked alternative learning visionbased manipulation task stacking pyramid block assembling kit unseen object manipulating deformable rope pushing pile small object closedloop feedback method represent complex multimodal policy distribution generalizes multistep sequential task well 6dof pickandplace experiment 10 simulated task show learns faster generalizes better variety endtoend baseline including policy use groundtruth object pose validate method hardware real world installation steprecommended install miniconda python 37 shell curl bash miniconda3latestlinuxx8664sh b u echo nexport pathminiconda3binpathn profile add conda path source profile conda init stepcreate activate conda environment install gcc python package shell cd raven conda create name raven python37 conda activate raven sudo aptget update sudo aptget install gcc libgl1mesadev pip install r requirementstxt python setuppy install user steprecommended install gpu acceleration nvidia cuda 101 cudnn 765 tensorflow shell ossscriptsinstallcudash ubuntu 1604 1804 conda install cudatoolkit101243 conda install cudnn765 alternative pure pip example ubuntu 1804 shell osssciptsinstallcudash ubuntu 1604 1804 sudo apt install gcc libgl1mesadev python38venv python38 venv venv source venvbinactivate pip install u pip pip install scikitbuild pip install r requirementstxt export pythonpathpwd getting started stepgenerate training testing data saved locally note remove disp headless mode shell python ravensdemospy assetsrootravensenvironmentsassets disptrue taskblockinsertion modetrain n10 python ravensdemospy assetsrootravensenvironmentsassets disptrue taskblockinsertion modetest n100 run shared memory open separate terminal window run python3 pybulletutilsrunserver add sharedmemory flag command steptrain model eg transporter network model model checkpoint saved checkpoint directory optional may exit training prematurely 1000 iteration skip next step shell python ravenstrainpy taskblockinsertion agenttransporter ndemos10 stepevaluate transporter network agent using model trained 1000 iteration result saved locally pkl file shell python ravenstestpy assetsrootravensenvironmentsassets disptrue taskblockinsertion agenttransporter ndemos10 nsteps1000 stepplot print result shell python ravensplotpy disptrue taskblockinsertion agenttransporter ndemos10 optional track training validation loss tensorboard shell python tensorboardmain logdirlogs open browser tell datasets pretrained model download generated train test datasets pretrained model shell wget wget wget wget wget wget wget wget wget wget wget mdp formulation task us transition following structure observation raw rgbd image camera parameter pose intrinsics action primitive function called robot parameter reward total sum reward successful episode beinfo 6d pose size color object,"[('wget', 'wget'), ('transporter', 'network')]"
loco-3d/crocoddyl,C++,img aligncenter height20 src introduction crocoddyl optimal control library robot control contact sequence solver based novel efficient differential dynamic programming ddp algorithm crocoddyl computes optimal trajectory feedback gain us pinocchio fast computation robot dynamic analytical derivative want learn crocoddyl solver suggest reading2and visiting publicationsmd want follow current development contribute please directly refer devel branch crocodile crocoddyl feature crocoddyl versatile various optimal control solver ddp fddp boxfddp ipopt etc analytical sparse derivative via pinocchio differential geometry support leveraging pinocchio various integrator dynamic cost constraint numerical differentiation support automatic differentiation support via cppad crocoddyl efficient flexible cache friendly multithreading support via openmp python binding including abstraction via boost python c141720 compliant extensively tested automatic code generation support via cppadcodegen penguin installation crocoddyl easily installed various linux ubuntu fedora etc unix distribution mac x bsd etc different way install crocoddyl dragon run following command terminal bash conda install crocoddyl c condaforge conda installation support conda install snake run following command terminal bash pip install user crocoddyl turtle clone recursive catkin workspace compile package debian ubuntu package robotpkg never added robotpkg software repository bash sudo tee etcaptsourceslistdrobotpkglist eof deb archamd64 lsbrelease sc robotpkg eof curl sudo aptkey add sudo apt update install crocoddyl python bindingsbash sudo apt install robotpkgpy3crocoddyl configure environment variablesbash export pathoptopenrobotsbinpath export pkgconfigpathoptopenrobotslibpkgconfigpkgconfigpath export ldlibrarypathoptopenrobotslibldlibrarypath export pythonpathoptopenrobotslibpython310sitepackagespythonpath filefolder source install crocoddyl mandatory dependency pinocchio eigen eigenpy boost optional install crocoddyl optional dependency openmp multithreading support cppadcogen codegeneration support ipopt ipopt support examplerobotdata robotic example install python loader gepettoviewercorba display meshcatpython display jupyter notebook matplotlib plotting clone recursive create build directory inside bash cmake make make install mag documentation crocoddyl doxygen documentation available alternatively also check jupyter notebook start following order examplesnotebooksunicycletowardsoriginipynb examplesnotebookscartpoleswingupipynb examplesnotebooksarmmanipulationipynb examplesnotebookswholebodymanipulationipynb examplesnotebooksbipedalwalkingipynb examplesnotebooksintroductiontocrocoddylipynb moreover installation could run example follows bash python crocoddylexamplesquadrupedalgaits display plot enable display plot run example unit test benchmark build directory bash cd build make test make examplesquadrupedalgaits inputdisplay plot enable display plot make benchmarkscppquadrupedalgaits input100 walk number trial type gait possible enable display andor plot generated example using environment variable bash export crocoddyldisplay1 export crocoddylplot1 telescope citing crocoddyl cite crocoddyl academic research please use following bibtex line bibtex inproceedingsmastalli20crocoddyl authormastalli carlos budhiraja rohan merkt wolfgang saurel guilhem hammoud bilal naveau maximilien carpentier justin righetti ludovic vijayakumar sethu mansard nicolas titlecrocoddyl efficient versatile framework multicontact optimal control booktitle ieee international conference robotics automation icra year2020 please consider citing selected publication contribution described publicationsmd crocoddyl contribution extend beyond efficient software development please also consider citing algorithm contribution different solver formulation feasibilitydriven ddp fddp controllimited feasibilitydriven ddp boxfddp inversedynamics trajectory optimization equalityconstrained ddp solver intro solverfinally please also consider citing pinocchio contributes efficient implementation rigid body algorithm derivative detail cite pinocchio visit openbook selected publicationsc mastalli r budhiraja w merkt g saurel b hammoud naveau j carpentier l righetti vijayakumar n mansard crocoddyl efficient versatile framework multicontact optimal control ieee international conference robotics automation icra 2020c mastalli w merkt j martisaumell h ferrolho j sola n mansard vijayakumar feasibilitydriven approach controllimited ddp autonomous robot 2022c mastalli p chhatoi corberes tonneau vijayakumar inversedynamics mpc via nullspace resolution ieee transaction robotics 2023 computer question issue question issue please open new issue mag steering committee crocoddyl managed steering committee meet every two week discus ongoing development committee led carlos mastalli nicolas mansard guilhem saurel justin carpentier member committee copyright credit writinghand written carlos mastalli heriotwatt university uk project manager nicolas mansard laascnrs fr rohan budhiraja laascnrs fr alumnus constructionworker contribution guilhem saurel laascnrs fr wolfgang merkt university oxford uk justin carpentier inria fr andrea del prete universita degli studi di trento wilson jallet inria fr maximilien naveau mpi de josep marti saumell iri csicupc e bilal hammoud mpi de julian eer fraunhofer de trophy acknowledgment crocoddyl development wa supported eu memmo project eu robocom project maintained robot motor intelligence romi lab heriotwatt university gepetto team laascnrs willow team inria,"[('install', 'crocoddyl'), ('optimal', 'control')]"
MetaSLAM/AutoMerge_Docker,Other,sectnums sectnumlevelstoc macro toclevelsifdefenvgithub image endif ifdefenvgithub image endif ifndefenvgithub videorategra5xmyoutube endif overview automerge autonomous multiagent map merging system provide offlineonline data association global mapping estimation without gps assistance automerge server platform provide service automerge user upload individual trajectory segment automerge help generate target global map support release version automerge support following lidar odometry also think expending support visual odometry long largescale map merging potential list includes citation use code research please cite paper quote articleyin2022automerge titleautomerge framework map assembling smoothing cityscale environment authoryin peng lai haowen zhao shiqi fu ruijie cisneros ivan ge ruohai zhang ji choset howie scherer sebastian journalarxiv preprint arxiv220706965 year2022,"[('image', 'endif'), ('map', 'merging')]"
m2n037/awesome-mecheng,Other,awesome mechanical engineering resource many free resource available computer science student jealous therefore started making list mechanical engineering student section contains overview resource rule regulation advice check contribution guideline discus list hacker news discus list reddit rengineering 83k view 770 upvotes licensed gnu general public license v30 table content hideshow preamblepreamble open coursesopencourse generalgeneral mechanical engineering knowledge mapsmechengmap databasesdatabase online calculatorscalculator tool programstool useful websitesuseful patentspatents blog forumsblog mathematicsmath calculus linear algebracalculus numerical analysisnumerical programmingprogramming ccpp pythonpython juliajulia microsoft excelexcel matlabmatlab rr fortranfortran latexlatex mechanicsmechanics continuum mechanicscontinuum static dynamicsstaticsdynamics strength materialsstrength plasticityplasticity theory machinesmachine mechanism designmechanismdesign control engineeringcontrolengineering roboticsrobotics thermal engineeringthermo thermodynamicsthermodynamics heat transferheattransfer fluid mechanicsfluidmechanics gas dynamicsgasdynamics manufacturingmanufacturing cadcamcadcam sheet metal formingsheetmetalforming plasticplastic finite element analysisfea software packagessoftware finite element analysisforfea control engineeringforcontrol roboticsforrobotics cadforcad sub redditssubreddits top publication venue different fieldspublication journalsjournals magazinesmagazines competitionscompetitions open source design projectsopenprojects qualifyingcertification examinationscertification preamble got inspiration countless awesome list github open course mit opencourseware mit online textbook edx intech open ace book publisher general asme unwritten law engineering kj king jg skakoon 1944 dictionary unit measurement uncedu star engineer kelley complex system fail ri cook revd good graduate student desjardins art insight science engineering mahajan 2014 mitpress isbn 9780262526548 mechanical engineering knowledge map mechanical engineering design knowledge map selectable link aircraft missile design knowledge map selectable link structural dynamic knowledge map selectable link vibration fatigue knowledge map selectable link database matweb database material property matbase database material property mcmastercarr component supplier 3d model drawing traceparts online cad part library 3d cad browser 3d model grabcad model library tutorial thingiverse cad part especially 3d printing direct industry online catalog online calculator desmos online graphing calculator fxsolver solver engineering scientific equation mechanicalc mechanical calculator extensive documentation wolframalpha tool program linkage quick prototyping linkage mechanism lyx document processor based latex sumatrapdf lightweight pdf reader pandoc universal document converter useful website american society mechanical engineer asme efunda engineering fundamental ryerson stock list structural profile stuff work article explaining everyday thing work google scholar classic paper 507 mechanical movement animated movement animated engine animated engine thang010146 2100 animated mechanism downloadable youtube dmg lib digital mechanism gear library kmoddl collection mechanism machine cornelledu engineering toolbox thermopedia wolverine industry omega engineering electrical training nasa technical report server patent google patent european patent office united state patent trademark office blog forum engineering stackexchange imechanica engtips forum physic forum ieee spectrum scarbstech everything technical f1 globalspec hackaday plastic engineering blog 3d cad world engineer rule blog solidwork airshaper blog aerodynamics back toptoc hat mathematics calculus linear algebra calculus g strang direct download mitedu online mathematics textbook list free book cured g cain essential linear algebra 3blue1brown youtube introduction tensor analysis hd block print cornelledu matrix cookbook kb petersen pedersen 2012 dtudk fundamental linear algebra optimization j gallier j quaintance 2017 upennedu numerical analysis numerical analysis engineering dw harder r khoury uwaterlooca numerical recipe c wh press bp flannery sa teukolsky wt vetterly 1992 free personal use numerical method pdes qiqi wang mitedu youtube math numerics programming mechanical engineer yano jd penn g konidaris patera 2013 draft v21 mitedu iterative method sparse linear system saad 2003 umnedu fundamental numerical method data analysis gw collins 1990 harvardedu pragmatic introduction signal processing programming free programming book github project euler mathprogramming problem archive programming note professional book compiled stackoverflow documentation goalkicker rosetta code implementation common algorithm many programmming language c definitive c book guide list stackoverflow ebookfoundation c github python byte python ch swaroop 2013 free copy copy dive pythonlearn x minute xpython automate boring stuff python great book getting handle writing python script ebookfoundation python github julia learning julia official learning resource learn x minute xjulia ebookfoundation julia github microsoft excel vba excel vba programming dummy vba note professinals goalkicker matlab awesome matlab list mikecroucher github learn x minute xmatlab matlab toolbox tutorial control tutorial matlab simulink brief introduction engineering computation matlab bccampusca stuart matlab video blog mathworkscom ebookfoundation matlab github r statistic intro r data science edx microsoft ebookfoundation r github fortran introduction programming fortran 95 ebookfoundation fortran github latex wikibooks latex pdf wikibooks latex note professional goalkicker learn latex 30 min sharelatex ebookfoundation latex github back toptoc hat mechanic continuum mechanic introduction mechanic continuous medium le malvern 1969 copyright archiveorg many lecture note link available imechanica 2007 applied mechanic solid af bower 2012 amazon isbn 9781439802472 continuum mechanic b mcginty 2012 introduction continuum mechanic engineer rm bowen 1989 tamuedu theory plate shell theory plate shell timoshenko woinowskykrieger 1959 archiveorg isbn 9780070647794 static dynamic introduction static dynamic cornelledu bolted joint analysis lug analysis strength material mechanical metallurgy ge dieter 1961 archiveorg applied strength material engineering technology b dupen 2017 ipfwedu mechanic material jm gere bj goodno 2012 amazon isbn 9781111577735 mechanical behavior material ne dowling 2012 amazon isbn 9780131395060 roark formula stress strain wc young rg budynas 2001 amazon isbn 9780070725423 strength material beam stress deflection column buckling engineering structure around u edx dartmouth element structure edx mit mechanical property material mechanic material vable 2009 mtuedu mechanical property material roylance 2008 direct mitedu plasticity mathematical theory plasticity r hill 1950 archiveorg computational method plasticity ea de souza neto peric drj owen amazon isbn 9780470694527 theory machine mechanism design shigley mechanical engineering design rgbudynas jk nisbett 2014 amazon isbn 9780073398204 introduction mechanism yi zhang finger behrens cmuedu mechanismsmachines l teel 1972 archiveorg u minessota youtube nptel iit kgp mechanism robot kinematics nptel mit fundamental design mit nptel kinematics machine courseware middle east tu mechanism courseware kinematic model design digital library kmoddl cornell u mechanism design vanalysis synthesis arthur g erdman george n sandor sridhar kota amazon isbn 9780130408723 mechanism design vanalysis synthesis arthur g erdman george n sandor sridhar kota amazon isbn 9780130408723 design machinery robert l norton amazon isbn 9780071236713 mechanism mechanical device sourcebook nicholas paul chironis neil sclater amazon isbn 9780070113565 control engineering modern control engineering k ogata 2009 amazon isbn 9780136156734 automatic control system f golnaraghi bc kuo 2017 amazon isbn 9781259643835 control system engineering n nise 2015 amazon isbn 9781118170519 linear robust control green djn limebeer 1994 amazon isbn 9780131022782 essential robust control k zhou jc doyle 1997 amazon isbn 9780135258330 feedback control theory jc doyle ba francis ar tannenbaum 2009 amazon isbn 9780486469331 feedback system kj astrom r murray 2011 caltechedu classical control theory brian douglas youtube control system wikibooks system design uncertainty f hover triantafyllou 2009 mitedu robotics awesome robotics list kiloreux github mathematical introduction robotic manipulation caltechedu back toptoc hat thermal engineering thermodynamics nasa introductory thermodynamics note nasa mit opencourseware thermodynamics kinematics lecture series mitedu wikibooks engineering thermodynamics wikibooks fundamental engineering thermodynamics mj moran hn shapiro amazon isbn 9780471274711 thermodynamics engineering approach ya cengel bole amazon isbn 9780073398174 heat transfer mit opencourseware introduction heat transfer mitedu heat transfer textbook jh lienhard iv jh lienhard v 2017 mitedu wikibooks heat transfer wikibooks fundamental heat mass transfer fp incropera dp dewitt amazon isbn 9780471386506 fluid mechanic nasa basic fluid mechanic note nasa mit opencourseware fluid dynamic mitedu wikibooks fluid mechanic wikibooks thermophysical property water steam international association property water steam fundamental fluid mechanic br munson dr young th okiishi amazon isbn 9780471442509 gas dynamic nasa compressible fluidsaerodynamics note nasa modern compressible flow historical perspective jd anderson amazon isbn 9780072424430 back toptoc hat manufacturing fundamental manufacturing process edx mit aj hart presentation slideshare building prototype gelbart youtube fabrication lab lab available globally cadcam theory shape interrogation cad manufacturing nm patrikalakis maekawa w cho 2009 mitedu amazon isbn 9783540424543 geometric solid modeling cm hoffman 1992 print purdueedu computer aided geometric design tw sederberg 2006 byuedu curve surface geometric modeling j gallier 1999 print upennedu isbn 9781558605992 geometric modeling first course requicha 1996 draft uscedu computer aided design mechanical engineering slide uliegebe learning tutorial vertanux1 training guide creo solidworks nx inventor rhino3d vertanux1 channel youtube technique resilient modeling strategy rms resilient modeling strategy r gebhard slide siemens rms presentation youtube learn rms horizontal modeling horizontally structured cadcam modelingvertical horizontal conversion u 7472044 b2 patent productprocess design using horizontally structured modeling delphi automotive dezignstuffcom going horizontal failed promise parametric cad part3dcadworldcom sheet metal forming mechanic sheet metal forming z marciniak jl duncan sj hu 2002 amazon isbn 9780750653008 mdlpostech mechanical property steel youtube sheetmetalme plastic polymer processing umichedu basf snapfit design manual bayer snapfit joint plastic living hinge design guide mitedu bayer part mold design guide dupont general design principle engineering polymer bayer reaction injection molding polyurethane part mold design guide 3d hub knowledge base back toptoc hat finite element analysis finite element procedure kj bathe 2014 mitedu isbn 9780979004957 introduction finite element method c jog introduction finite element method coloradoedu advance fem nonlinear fem finite element modeling continuous improvement nasa femci book good read meshing complex geometrical domain stackexchange good linear finite element jr shewchuk 2002 berkeleyedu learn finite element analysis simscale cad surface geometry inexact pointwise code dealii c library fenics project c python library list fe package wikipedia back toptoc hat software package finite element analysis codeaster calculix elmer reading awesomecae github ansys studentfree version available anyone limited capability usage learning purpose video explaining download install ansys student release 172 ansys official channel edx mooc handson introduction engineering simulation university alberta ansys tutorial cornell university ansys tutorial ansys support resource abaqus studentfree version available 1000 node limit l dyna studentfree version available student license obtained le 150 afaik l dyna official example site l prepost tutorial jim day faq comsol comsol wa known femlab academic spinoff stanford university comsol integrated multiphysics simulation capability first time commercial package pretty popular many unconventional industry studentfree version available comsol blog comsol technical paper presentation hyperworks radio optistruct hyperworks complete commercial suite preprocessing solving postprocessing tool fea altair engineering flagship product hypermesh meshing software widely popular cae industry challenged ansa new entrant beta cae system hyperworks includes many software different purpose though mostly used one optistruct radio solver besides hypermesh studentfree version available student limited capability hypermesh pre processing 2d 3d meshing ansys tutorial hypermesh optistruct solved tutorial aoc2016 contest optistruct optimization aoc2016 contest optistruct anil kumar hyperworks optistruct tutorial manuel ramsaier hyperworks tip trick altair hypermesh basic apoorv bapat hypermesh tutorial thescientifica hypermesh tutorial collection fazle ahad saeindia baja 2016 online training session dynamic analysis roll cage supra sae india 2016 previrtual online training session formula student india online training series baja student india online training series altair hyperworks online training series meshing analysis postprocessing simscale website cloud based feacfd control engineering matlab control tutorial matlab simulink robotics learning robotics programming mastering robotics programming learning robotics using python robotics example cad modeling catia website student edition nov 26th promo code catia4free17 nx formely known unigraphics website student edition na nx resource siemens creo formerly known proengineer website student edition solidworks website student edition request 60 day solidworks resource solidworks solid edge website student edition request 45 day solid edge resource siemens onshape website cloud based cad opensource freecad geometric kernel opencascade website freecad manual gitbook cadquery plugin freecad python based language building parametric model wiki cadquery documentation openscad website script based modeller geometric kernel opencsg cgal brlcad website coming soon spaceclaim autocad surface modelling blender sketchup rhinoceros 3d back toptoc hat subreddits related mechanical engineering raskengineers nonschool qa rcad computer aided design rcfd computational fluid dynamic rengineering thing related engineering rengineeringstudents wee engineerlings rfea finite element analysis rfluidmechanics rcivilengineering civil engineering rmanufacturing manufacturing industry rmaterials material engineering rmechanicalengineering mechanical engineering misc rengineeringporn porn engineer safe work rmechanicalgifs perfect loop mechanical thing rspecializedtools rmachineporn rtoolporn rthingscutinhalfporn raerospace aerospace engineering raskelectronics ceee qa raskscience nononsense science qa rbioengineering biological rbiology rbiotech biotechnology rcheme chemical engineering rchemistry rcoding rcomputerscience rconstruction construction rcsbooks computer science rece general ee ce discussion rececomponentexchange part swap ree electrical engineering reebooks electrical engineering relectronics rlectures rmath rmathbooks mathematics rphysics rphysicsbooks physic rprogramming rscience back toptoc hat top publication venue different field journal open access doaj directory open ace journal scirp modern mechanical engineering sage journal advance mechanical engineering royal society magazine machine design mechanical engineering magazine popular mechanic popular science back toptoc hat competition altair contest altair optimization contest aoc asme competition robotics competition robocup virtual robot competition robocup 2017 robocup soccer robocup rescue robocup home robocup industrial robocup junior first robotics competition wearable robotics innovation competition wearracon 17 wearable robotics association added competition elsevier 3d printing grand challenge challenge cad grabcad challenge product design challenge fusion360 monthly challenge autodesk community philippine video playlist youtube model mania challenge solidworks world reddit cad challenge inactive rcad archived version github misc hackaday contest instructables contest open source design project civilization starter kit mechanical design project open source ecologybuild open source ecology wiki global village construction set back toptoc hat qualifyingcertification examination qualifying examination kind certification engineer pe usa gate india note another country usa india feel free add section relavant country professional certification equivalent examination sure github send email altair certification certification website mechanical engineering related pe license usa pe license probably useful certification mechanical engineer obtain pe license actually requirement want provide service directly public still good thing regardless sign employer client competent engineer act studying exam sharpen skill examination organized ncees national council examiner engineering surveying official practice engineeringpe license examination website information exam ncees examinee guide passing pe exam pe specific book michael r lindeburg mechanical engineering reference manual pe exam amazon isbn 9781591264149 michael r lindeburg mechanical pe practice examination amazon isbn 9781591264170 michael r lindeburg practice problem mechanical engineering pe exam amazon isbn 9781591264156 ncees pe mechanical engineering machine design material practice exam amazon gate india gate official website gate graduate aptitute test engineering qualifying examination conducted consortium indian institute technology indian institute science bangalore even though official reason conduct gate postgraduate admission psus govt research entity often recruit student basis gate score information exam topper story prepare gate 2015 topper interview ravi shankar mishra airin cse although interview cse topper happens mechanical engineer education show power strategy clearing examination like gate gate specific book gate yearwise topicwise solved paper 2003 gate specific website mechanical gate overflow psu govt entity recruiting gate company recruit engineering management trainee using gate score qualifier ordered alphabeticallly recruit every year indicated yn exhaustive list available list 40 psus recruitment gate 2017 aai airport authority india n ntpc national thermal power corporation barc bhaba atomic research centre bbnl bharat broadband network limited n,"[('amazon', 'isbn'), ('mechanical', 'engineering')]"
openrr/urdf-viz,Other,urdfviz build status cratesio doc discord visualize urdfunified robot description format file urdfviz written rustlang install install cargo using rustlang already cargo installed install cargo install bash cargo install urdfviz use mesh obj stl dae file skip install assimp disabling assimp feature like bash cargo install urdfviz nodefaultfeatures note assimp feature disabled material fully supported yet prerequirements build common need cmake use assimp mesh loader skipped use nodefaultfeatures make fail show mesh file obj stl dae linux installed may need cmake xorgdev glu compile assimpsys glfwsys bash sudo aptget install cmake xorgdev libglu1mesadev window need freetypelib path required freetypesys find binary macos install freetype brew bash brew install freetype download binary download prebuilt binary release page prebuilt binary available macos linux window install via homebrew install urdfviz using homebrew tap macos linux sh brew install openrrtapurdfviz use urdfviz command installed need rosrun rospack resolve package mesh tag us xacro convert xacro file urdf file mean need source catkinwsdevelsetupbash something using urdfviz bash urdfviz urdffileurdf possible use xacro file directly converted rosrun xacro xacro inside urdfviz bash urdfviz xacrofileurdfxacro xacro file ha argument pas xacroargs option bash urdfviz xacrofileurdfxacro xacroargs arg1value arg2value option please read output h option bash urdfviz h package mesh tag use xacro skip install package mesh tag path url package known use xacro also skip install replacing package path url gui usage gui operation keyboard mouse l key reload urdf file c key toggle collision model visual mode move joint set angle joint updown key ctrl drag move angle joint change joint moved p inverse kinematics position shift drag use inverse kinematicsy z axis shift ctrl drag use inverse kinematicsx z axis change move target inverse kinematics r key set random joint z key reset joint position origin move view point mouse right drag translate view camera position mouse left drag look around scroll zoom inout web io interface setget joint angle using default port number 7777 change p option jq used json formatter following example set joint angle post json data format like specify name joint position angle length name position need write joint name mean specify part joint json name jointname1 jointname2 position 05 01 try using curl bash curl h accept applicationjson h contenttype applicationjson x post name rshoulderyaw rshoulderpitch position 08 08 jq isok true reason get joint angle json result json format getting joint angle set method bash curl jq name rshoulderyaw rshoulderpitch rshoulderroll relbowpitch rwristyaw rwristpitch lshoulderyaw lshoulderpitch lshoulderroll lelbowpitch lwristyaw lwristpitch position 08 08 13447506 16683152 1786362 10689334 011638665 05987091 07868867 0027412653 0019940138 06975361 set robot origin bash curl h accept applicationjson h contenttype applicationjson x post position020000quaternion00000010 isoktruereason order quaternion element w j k get robot origin bash curl position020000quaternion10000000 get urdf text bash curl gallery dependency kiss3d urdfviz strongly depend kiss3d super easy use great 3d graphic engine nalgebra linear algebra library k kinematics library based nalgebra load urdf file using urdfrs assimprs assimp rust interface kiss3d support obj file natively urdf contains dae stl file file converted kiss3d mesh model assimprs urdfrs urdf file loader structopt super easy command line argument parser openrr community discord server openrr user developer,"[('bash', 'curl'), ('urdf', 'file')]"
poppy-project/pypot,Python,pypi build status doi pypot python library dynamixel motor control pypot crossplatform python library making easy fast control custom robot based multiple model dynamixel motor use pypot control robotis motor usb2dynamixel usb2ax pixlraspberry pi device define kinematic chain custom robot control highlevel command forward inverse kinematics define primitive motion applying motor group easily combine create custom complex behavior robot dance arm shaking writing pen define sensor access processing qrcode detection force sensor rgbd pypot also compatible coppeliasim simulator formerly vrep embeds rest api webbased control support visual programming via scratch snap compatible hardware compatible motor mx106 mx64 mx28 mx12 ax12 ax18 rx24 rx28 rx64 xl320 srrh4d ex106 derivated version also supported eg mx28at mx28r mx28t protocol v1 v2 supported v2 used xl320 use herborist help detect id baudrates motor compatible sensor kinectqrcode rgb camera sonar microswitch raspberry pi gpio digital analog sensor connected arduino compatible interpreter python 36 37 38 39 model motor sensor integrated little effort time programming language may connected rest api read documentation get assistance pypot part opensource poppy project pypot part poppy project aiming developing robotic creation easy build customize deploy share promotes opensource sharing 3dprinted hardware software web tool poppy creature poppy humanoid kidsize humanoid robot designed biped locomotion physical humanrobot interaction 25 dof biped research university workshop poppy torso torso humanoid robot suction pad stick attach firmly desk 13 dof hri research university high school workshop poppy ergo jr lowcost robotic arm primary middle schooldof primary middle school workshop creature based combination standard dynamixel actuator 3d printed part opensource electronics arduino board hardware 3d model electronics software freely used modified duplicated installation using poppy robot embedding raspberry pi pypot already shipped custom robot type pip install pypot system terminal intend modify add feature pypot create virtual environment install source instead bash git clone cd pypotpypot pip install additional driver may needed usb2serial depending check usb2ax device designed manage ttl communication usb2dynamixel device manage ttl rs485 communication pixl board raspberrypi contributing first time contribute pypot good idea share work forum first happy give hand contribute opensource project,"[('custom', 'robot'), ('python', 'library')]"
artivis/manif,C++,manif small headeronly library lie theory ghabadgeciimg appveyorbadgeciwinimg badgecov githubbadgelicense jossbadgejossimgderay20 package summary manif lie theory library stateestimation targeted robotics application developed headeronly c11 library pythonwrappers moment provides group n euclidean space addition so2 rotation plane se2 rigid motion rotation translation plane so3 rotation 3d space se3 rigid motion rotation translation 3d space se23 extended pose rotation translation velocity 3d space introduced best knowledge paper note implementation differs slightly development paper bundle allows manipulating manifold bundle single lie group referred composite manifold section iv reference paper lie group added contribution welcome manif based mathematical presentation lie theory available paper recommend every user manif read paper 17 page starting use library paper provides thorough introduction lie theory simplified way make entrance lie theory easy average roboticist interested designing rigorous elegant state estimation algorithm may also find following video online lie theory roboticist lecture given iriupciriupc rush check lie group cheat sheet provides analytic computation jacobians operation listed detail maintainer status maintained maintainer jeremie deray author jeremie deray derayjeremiegmailcom joan sola jsolairiupcedu license mit bug feature tracker githubcomartivismanifissuesmanifissue source githubcomartivismanifgit branch devel quick start get quickly started manif following quick start guide c python feature available operation operation code base operation inverse xinverse composition mathbfmathcalxcircmathbfmathcalylatex2 x yxcomposey hat act vector mathbfmathcalxcircmathbf vlatex4 xactv retract group element wexp lift tangent space logmathbfmathcalxveelatex6 xlog manifold adjoint xadj tangent adjoint operatornameadjmathbfvarphiwedgelatex8 wsmalladj composed operation manifold right plus x wxpluswxrplusw manifold left plus expmathbfvarphiwedgecircmathbfmathcalxlatex10 w xwplusxwlplusx manifold right minus x yxminusyxrminusy manifold left minus logmathbfmathcalxcircmathbfmathcaly1veelatex12 xlminusy xbetweeny inner product langlevarphitauranglelatex14 winnert norm wweightednormwsquaredweightednorm mathbfmathcalxmathbfmathcalylatex16 represent group element represent element lie algebra lie group mathbfvarphitaulatex18 wt represent element tangent space expressed cartesian coordinate mathbfvlatex20 v represents element jacobians operation come respective analytical jacobian matrix throughout manif jacobians differentiated respect local perturbation tangent space jacobians map tangent space described paper currently manif implement right jacobian whose definition read fracdelta fmathbfmathcalxdeltamathbfmathcalxlatex22 jacobians aforementionned operation evaluated c cpp se3d x se3drandom se3tangentd w se3tangentdrandom se3djacobian jox jow auto xplusw xplusw jox jow python python x se3random w se3tangentdrandom jox npzerosse3dof se3dof jow npzerosse3dof se3dof xplusw xplusw jox jow note jacobians manif differentiated respect local perturbation tangent space many nonlinear solver eg ceresceres expect function differentiated respect underlying representation vector group element eg respect quaternion vector so3 reason manif compliant autodifferentiation library ceresjet autodiffdualautodiff autodiffrealautodiff documentation documentation available online accompanying website cmanifdoccpp pythonmanifdocpython apis documented want build locally find dedicated page note throughout code documentation refer paper find dedicated page tutorial application demo provide selfcontained selfexplained c example help get started prefer python example also available python publication check related publication cite use manif find already using manif contributing want contribute great check contribution guideline iriupc crtp manifdocpython optionalrepo pybind11 gitworkflow latex23,"[('lie', 'theory'), ('tangent', 'space')]"
bolderflight/sbus,C++,license mit sbus library communicates sbus receiver servo compatible arduino cmake build system license changelog contributing guide description sbus bus protocol receiver send command servo unlike pwm sbus us bus architecture single serial line connected 16 servo receiving unique command sbus protocol us inverted serial logic baud rate 100000data bit even parity andstop bit sbus packet 25 byte long consisting byte0 sbus header 0x0f byte1 22 16 servo channel 11 bit byte23 bitchannel 17 0x01 bitchannel 18 0x02 bitframe lost 0x04 bitfailsafe activated 0x08 byte24 sbus footer note lost frame indicated frame lost transmitter receiver failsafe activation typically requires many frame lost row indicates receiver ha moved failsafe mode packet sent approximately every 10 20 depending system configuration variation sbus called fast sbus ha started used us baudrate 200000 quicker update rate note ch17 ch18 channel 17 channel 18 digital onoff channel universally available sbus receiver servo frsky receiver output range 172 1811 channel set range 100 100 using extended limit 150 150 output range ofto 2047 maximum range acheivable 11 bit data sbus digital bus format excellent mean receiving pilot command transmitter sbus capable receiver sbus servo used aircraft sbus also excellent mean sending actuator command servo command often sent lower latency using single pin command 16 servo additional microcontroller pin freed us inverted serial sbus us inverted serial protocol commonly supported arduino library able use inverted serial following microcontrollers teensy 3x teensy 4x teensy lc stm32l496xx stm32l476xx stm32l433xx stm32l432xx esp32 microcontrollers must use serial inverter modified library work microcontrollers please submit pull request installation arduino simply clone download extract zipped library arduinolibraries folder library added c include sbush example located examplesarduinosbusexamplesbusexampleino library tested teensy 3x 4x lc device work arduino device cmake cmake used build library exported library target called sbus header added c include sbush library also compiled standalone using cmake idiom creating build directory within directory issuing cmake dmcumk66fx1m0 make build library example executable called sbusexample example executable source file located examplescmakesbusexamplecc notice cmake command includes define specifying microcontroller code compiled required correctly configure code cpu frequency compilelinker option available mcus mk64fx512 mk66fx1m0 mkl26z64 imxrt1062t40 imxrt1062t41 imxrt1062mmod known work package used teensy product also switching package known work well long package change sbusexample target creates executable communicating sbus receiver servo target also ha hex creating hex file upload using teensy cli uploader flash teensy instruction setting build environment found buildtools repo namespace library within namespace bfs sbusdata struct defines sbus data read returned sbusrx object set sent sbustx object data member bool lostframe whether frame ha lost bool failsafe whether receiver ha entered failsafe mode command servo enter failsafe mode bool ch17 ch18 state channel 17 channel 18 static constexpr int8t numch 16 number sbus channel int16t chnumch array sbus channel data sbusrx class used receiving sbus data sbus capable receiver sbusrxhardwareserial bus creates sbusrx object pointer serial object corresponding serial port used passed rx pin serial port receive sbus packet c bfssbusrx sbusserial1 sbusrxhardwareserial bus const bool inv creates sbusrx object pointer serial object corresponding serial port used passed along second parameter inv set whether inverted serial used inv true signal standard inverted sbus otherwise noninverted sbus c bfssbusrx sbusserial1 false sbusrxhardwareserial bus const bool inv const bool fast constructor enables selecting fast sbus baudrate 200000 fast true esp32 sbusrxhardwareserial bus const int8t rxpin const int8t txpin const bool inv creates sbusrx object pointer serial object corresponding serial port used passed along rx pin number rxpin tx pin number txpin whether inverted serial used inv inv true signal standard inverted sbus otherwise noninverted sbus esp32 sbusrxhardwareserial bus const int8t rxpin const int8t txpin const bool inv const bool fast constructor enables selecting fast sbus baudrate 200000 fast true void begin initializes sbus communication c sbusbegin bool read par sbus packet return true successfully receiving sbus packet c sbusread something received data sbusdata data return sbusdata structure populated data last received packet c sbusread bfssbusdata data sbusdata sbustx class used transmitting sbus data sbus capable servo sbustxhardwareserial bus creates sbustx object pointer serial object corresponding serial port used passed tx pin serial port receive sbus packet c bfssbustx sbusserial1 sbustxhardwareserial bus const bool inv creates sbustx object pointer serial object corresponding serial port used passed along second parameter inv set whether inverted serial used inv true signal standard inverted sbus otherwise noninverted sbus c bfssbustx sbusserial1 false esp32 sbustxhardwareserial bus const int8t rxpin const int8t txpin const bool inv creates sbustx object pointer serial object corresponding serial port used passed along rx pin number rxpin tx pin number txpin whether inverted serial used inv inv true signal standard inverted sbus otherwise noninverted sbus void begin initializes sbus communication c sbusbegin void write writes sbus packet packet written immediately regulate timing sending packet servo maintain frequency approximately 100 hz 50 hz depending setup sbus system c sbuswrite void dataconst sbusdata data set sbus data transmitted next write method c bfssbusdata data datach0 900 sbusdatadata sbusdata data return sbus data buffered sbustx object transmitted next write method c bfssbusdata data sbusdata,"[('inverted', 'serial'), ('serial', 'port')]"
ros-controls/ros2_control,C++,ros2control licence package part ros2control framework please check documentation build status ros2 distro branch build status documentation released package rolling master rolling binary build rolling semibinary build documentation api reference ros2control iron master iron binary build iron semibinary build documentation api reference ros2control humble humble humble binary build humble semibinary build documentation api reference ros2control detailed build status explanation different build type note three build stage checking current future compatibility package binary build released package main testing distribution show direct local build possible us repos file srcnamenamenotreleasedrosdistrorepos semibinary build released core package main testing immediate dependency pulled source show local build dependency possible fails expect next package sync able build us repos file srcnamenamerepos source build also core package build source show potential issue mid future docker image published docker image come latest release information found docker folder pull tag ghcrioroscontrolsros2controlrelease ghcrioroscontrolsros2controlsource acknowledgement href supported rosin rosindustrial qualityassured robot software component information href project ha received funding european union horizon 2020 research innovation programme grant agreement 732287,"[('binary', 'build'), ('semibinary', 'build')]"
dusty-nv/jetson-inference,C++,deploying deep learning welcome instructional guide inference realtime vision dnn library nvidia jetson device project us tensorrt run optimized network gpus c python pytorch training model supported dnn vision primitive include imagenet image classification detectnet object detection segnet semantic segmentation posenet pose estimation actionnet action recognition example provided streaming live camera feed making webapps webrtc support rosros2 img src follow hello ai world tutorial running inference transfer learning onboard jetson including collecting datasets training model pytorch deploying tensorrt table content hello ai world video walkthroughs api reference code example pretrained model system requirement change log jetpackis supported along jetson orin nano recent post deploying edge ai web apps see webrtc support see change log latest update new feature hello ai world hello ai world run completely onboard jetson including live inferencing tensorrt transfer learning pytorch installation instruction see system setup recommended start inference section familiarize concept diving training model system setup setting jetson jetpack running docker container building project source inference image classification using imagenet program jetson coding image recognition program python coding image recognition program c running live camera recognition demo multilabel classification image tagging object detection detecting object image running live camera detection demo coding object detection program using tao detection model object tracking video semantic segmentation segmenting image command line running live camera segmentation demo pose estimation action recognition background removal monocular depth training transfer learning pytorch classificationrecognition resnet18 retraining catdog dataset retraining plantclef dataset collecting classification datasets object detection ssdmobilenet retraining ssdmobilenet collecting detection datasets webapp framework webrtc server html javascript flask rest plotly dashboard recognizer interactive training appendix camera streaming multimedia image manipulation cuda dnn inference node rosros2 video walkthroughs screencasts hello ai world recorded jetson ai certification course description video hello ai world setupdownload run hello ai world container jetson nano test camera feed see stream network via rtp image classification inferencecode python program image classification using jetson nano deep learning experiment realtime classification live camera stream training image classification modelslearn train image classification model pytorch onboard jetson nano collect classification datasets create custom model object detection inferencecode python program object detection using jetson nano deep learning experiment realtime detection live camera stream training object detection modelslearn train object detection model pytorch onboard jetson nano collect detection datasets create custom model semantic segmentationexperiment fullyconvolutional semantic segmentation network jetson nano run realtime segmentation live camera stream api reference link reference documentation c python library repo jetsoninference c python image recognition imagenet imagenet object detection detectnet detectnet segmentation segnet segnet pose estimation posenet posenet action recognition actionnet actionnet background removal backgroundnet actionnet monocular depth depthnet depthnet jetsonutils c python library able used external project linking libjetsoninference libjetsonutils code example introductory code walkthroughs using library covered step hello ai world tutorial coding image recognition program python coding image recognition program c additional c python sample running network image live camera stream found c python image recognition imagenetcpp imagenetpy object detection detectnetcpp detectnetpy segmentation segnetcpp segnetpy pose estimation posenetcpp posenetpy action recognition actionnetcpp actionnetpy background removal backgroundnetcpp backgroundnetpy monocular depth depthnetcpp depthnetpy note see array interface section using memory python library like numpy pytorch ect example automatically compiled building project source able run pretrained model listed addition custom model provided user launch example help usage info pretrained model project come number pretrained model available use automatically downloaded image recognition network cli argument networktype enum alexnet alexnet alexnet googlenet googlenet googlenet googlenet12 googlenet12 googlenet12 resnet18 resnet18 resnet18 resnet50 resnet50 resnet50 resnet101 resnet101 resnet101 resnet152 resnet152 resnet152 vgg16 vgg16 vgg16 vgg19 vgg19 vgg19 inceptionv4 inceptionv4 inceptionv4 object detection model cli argument networktype enum object class ssdmobilenetv1 ssdmobilenetv1 ssdmobilenetv1 91 coco class ssdmobilenetv2 ssdmobilenetv2 ssdmobilenetv2 91 coco class ssdinceptionv2 ssdinceptionv2 ssdinceptionv2 91 coco class tao peoplenet peoplenet peoplenet person bag face tao peoplenet pruned peoplenetpruned peoplenetpruned person bag face tao dashcamnet dashcamnet dashcamnet person car bike sign tao trafficcamnet trafficcamnet trafficcamnet person car bike sign tao facedetect facedetect facedetect face legacy detection model model cli argument networktype enum object class detectnetcocodog cocodog cocodog dog detectnetcocobottle cocobottle cocobottle bottle detectnetcocochair cocochair cocochair chair detectnetcocoairplane cocoairplane cocoairplane airplane ped100 pednet pednet pedestrian multiped500 multiped pednetmulti pedestrian luggage facenet120 facenet facenet face semantic segmentation dataset resolution cli argument accuracy jetson nano jetson xavier cityscape 512x256 fcnresnet18cityscapes512x256 833 48 fps 480 fps cityscape 1024x512 fcnresnet18cityscapes1024x512 873 12 fps 175 fps cityscape 2048x1024 fcnresnet18cityscapes2048x1024 896fps 47 fps deepscene 576x320 fcnresnet18deepscene576x320 964 26 fps 360 fps deepscene 864x480 fcnresnet18deepscene864x480 969 14 fps 190 fps multihuman 512x320 fcnresnet18mhp512x320 865 34 fps 370 fps multihuman 640x360 fcnresnet18mhp512x320 871 23 fps 325 fps pascal voc 320x320 fcnresnet18voc320x320 859 45 fps 508 fps pascal voc 512x320 fcnresnet18voc512x320 885 34 fps 375 fps sun rgbd 512x400 fcnresnet18sun512x400 643 28 fps 340 fps sun rgbd 640x512 fcnresnet18sun640x512 651 17 fps 224 fps resolution omitted cli argument lowest resolution model loaded accuracy indicates pixel classification accuracy across model validation dataset performance measured gpu fp16 mode jetpack 421 nvpmodelmaxn legacy segmentation model network cli argument networktype enum class cityscape 2048x2048 fcnalexnetcityscapeshd fcnalexnetcityscapeshd 21 cityscape 1024x1024 fcnalexnetcityscapessd fcnalexnetcityscapessd 21 pascal voc 500x356 fcnalexnetpascalvoc fcnalexnetpascalvoc 21 synthia cvpr16 fcnalexnetsynthiacvpr fcnalexnetsynthiacvpr 14 synthia summerhd fcnalexnetsynthiasummerhd fcnalexnetsynthiasummerhd 14 synthia summersd fcnalexnetsynthiasummersd fcnalexnetsynthiasummersd 14 aerialfpv 1280x720 fcnalexnetaerialfpv720p fcnalexnetaerialfpv720p pose estimation model cli argument networktype enum keypoints poseresnet18body resnet18body resnet18body 18 poseresnet18hand resnet18hand resnet18hand 21 posedensenet121body densenet121body densenet121body 18 action recognition model cli argument class actionresnet18kinetics resnet18 1040 actionresnet34kinetics resnet34 1040 recommended system requirement jetson nano developer kit jetpack 42 newer ubuntu 1804 aarch64 jetson nano 2gb developer kit jetpack 441 newer ubuntu 1804 aarch64 jetson xavier nx developer kit jetpack 44 newer ubuntu 1804 aarch64 jetson agx xavier developer kit jetpack 40 newer ubuntu 1804 aarch64 jetson agx orin developer kit jetpack 50 newer ubuntu 2004 aarch64 jetson tx2 developer kit jetpack 30 newer ubuntu 1604 aarch64 jetson tx1 developer kit jetpack 23 newer ubuntu 1604 aarch64 transfer learning pytorch section tutorial speaks perspective running pytorch onboard jetson training dnns however pytorch code used pc server cloud instance nvidia discrete gpu faster training extra resource area link resource deep learning listed rosdeeplearning tensorrt inference node nvidia ai iot nvidia jetson github repository jetson elinux wiki jetson elinux wiki two day demo digit note digitscaffe tutorial deprecated recommended follow transfer learning pytorch tutorial hello ai world expand section see original digit tutorial deprecated digit tutorial includes training dnn cloud pc inference jetson tensorrt take roughly two day depending system setup downloading datasets training speed gpu digit workflowdocsdigitsworkflowmd digit system setupdocsdigitssetupmd setting jetson jetpackdocsjetpacksetupmd building project sourcedocsbuildingrepomd classifying image imagenetdocsimagenetconsolemd using console program jetsondocsimagenetconsolemdusingtheconsoleprogramonjetson coding image recognition programdocsimagenetexamplemd running live camera recognition demodocsimagenetcameramd retraining network digitsdocsimagenettrainingmd downloading image recognition datasetdocsimagenettrainingmddownloadingimagerecognitiondataset customizing object classesdocsimagenettrainingmdcustomizingtheobjectclasses importing classification dataset digitsdocsimagenettrainingmdimportingclassificationdatasetintodigits creating image classification model digitsdocsimagenettrainingmdcreatingimageclassificationmodelwithdigits testing classification model digitsdocsimagenettrainingmdtestingclassificationmodelindigits downloading model snapshot jetsondocsimagenetsnapshotmd loading custom model jetsondocsimagenetcustommd locating object detectnetdocsdetectnettrainingmd detection data formatting digitsdocsdetectnettrainingmddetectiondataformattingindigits downloading detection datasetdocsdetectnettrainingmddownloadingthedetectiondataset importing detection dataset digitsdocsdetectnettrainingmdimportingthedetectiondatasetintodigits creating detectnet model digitsdocsdetectnettrainingmdcreatingdetectnetmodelwithdigits testing detectnet model inference digitsdocsdetectnettrainingmdtestingdetectnetmodelinferenceindigits downloading detection model jetsondocsdetectnetsnapshotmd detectnet patch tensorrtdocsdetectnetsnapshotmddetectnetpatchesfortensorrt detecting object command linedocsdetectnetconsolemd multiclass object detection modelsdocsdetectnetconsolemdmulticlassobjectdetectionmodels running live camera detection demo jetsondocsdetectnetcameramd semantic segmentation segnetdocssegnetdatasetmd downloading aerial drone datasetdocssegnetdatasetmddownloadingaerialdronedataset importing aerial dataset digitsdocssegnetdatasetmdimportingtheaerialdatasetintodigits generating pretrained fcnalexnetdocssegnetpretrainedmd training fcnalexnet digitsdocssegnettrainingmd testing inference model digitsdocssegnettrainingmdtestinginferencemodelindigits fcnalexnet patch tensorrtdocssegnetpatchesmd running segmentation model jetsondocssegnetconsolemd 20162019 nvidia table content,"[('object', 'detection'), ('live', 'camera')]"
NaiboWang/EasySpider,Other,starplease star starstar think tool good please gently click star button upper right corner page increase project exposure thank software completely free except commercial use ask everyone star promote friend need thank official website visit official website easyspider easyspider visual codefree web crawler visual codefreenocode web crawlerspider select content want crawl web page operate according prompt box complete design execution crawler time software executed command line alone easily embedded system 1example right click select large product block software automatically detect similar block click select option click select child element option click collect data option collect information product saved subfield 2example right click select product title type title automatically matched click select option click collect data option collect title information product time select loopclick every element option selecting automatically open detail page product set collect information detail page feature feature please scroll bottom page view download easyspider release page refer release page download latest version easyspider support author easyspider naibowangfoxmailcom paypalnaibowang support author paypal like software use make profit naibowang documentation ebay documentation found github wiki video tutorial bilibilib easyspider j 58 macosebay j ocr ipip python mysql cloudflare refer youtube playlist see video tutorial easyspider sample task examples0easyspidertaskseasyspider download sample task example folder project rename number greater thanimport task folder easyspider open easyspider declaration software learning communication strictly forbidden use software illegal operation crawling governmentmilitary website allowed crawled consequence caused use software user risk author responsible consequence crawler operation government military website author answer question order avoid violating relevant national law regulation policy time software protected patent right used commercial purpose using software make profit selling collected data etc please contact hangzhou tianqin intellectual property agency co ltd patent authorization paid operation qq 682921940githubissueqq publication software ha accepted web conference 2023 ccf easyspider nocode visual system crawling web april 2023 20225 compilation instruction refer compilation instruction supported feature 58 58,"[('click', 'select'), ('option', 'click')]"
DJTobias/Cherry-Autonomous-Racecar,Python,cherry autonomous racecar car ncat ece senior design project article jetsonhacks trial run trial run car tear tear car hardware schematic,"[('trial', 'run'), ('cherry', 'autonomous')]"
vectr-ucla/direct_lidar_odometry,C++,direct lidar odometry fast localization dense point cloud ieee ral arxiv video code dlo lightweight computationallyefficient frontend lidar odometry solution consistent accurate localization feature several algorithmic innovation increase speed accuracy robustness pose estimation perceptuallychallenging environment ha extensively tested aerial legged robot work wa part nasa jpl team costar research development effort darpa subterranean challenge dlo wa primary state estimation component fleet autonomous aerial vehicle instruction dlo requires input point cloud type sensormsgspointcloud2 optional imu input type sensormsgsimu note although imu data required used initial gravity alignment help point cloud registration dependency system ha tested extensively ubuntu 1804 bionic melodic ubuntu 2004 focal noetic although version may work following configuration required dependency ha verified compatible ubuntu 1804 2004 melodic noetic roscpp stdmsgs sensormsgs geometrymsgs pclros c 14 cmake 3163 openmp 45 point cloud library 1100 eigen 337 installing binary aptitude work though sh sudo apt install libompdev libpcldev libeigen3dev compiling create catkin workspace clone directlidarodometry repository src folder compile via catkintools package catkinmake sh mkdir w cd w mkdir src catkin init cd src git clone catkin build execution sourcing workspace launch dlo odometry mapping node via sh roslaunch directlidarodometry dlolaunch pointcloudtopicrobotvelodynepoints imutopicrobotvn100imu make sure edit pointcloudtopic imutopic input argument specific topic imu used set dloimu param false cfgdloyaml however imu data available please allow dlo calibrate gravity align three second moving note current implementation assumes lidar imu coordinate frame coincide please make sure sensor physically mounted near successful rviz open see similar terminal output following service save dlo generated map pcd format call following service sh rosservice call robotdlomapsavepcd leafsize savepath save trajectory kitti format call following service sh rosservice call robotdloodomsavetraj savepath test data convenience provide example test data hereminutes 42gb run first launch dlo default point cloud imu topic via sh roslaunch directlidarodometry dlolaunch separate terminal session play back downloaded bag sh rosbag play dlotestbag citation found work useful please cite manuscript bibtex articlechen2022direct authorchen kenny lopez brett aghamohammadi aliakbar mehta ankur journalieee robotics automation letter titledirect lidar odometry fast localization dense point cloud year2022 volume7 number2 pages20002007 doi101109lra20223142739 acknowledgement thank author fastgicp nanoflann opensource package kenji koide masashi yokozuka shuji oishi atsuhiko banno voxelized gicp fast accurate 3d point cloud registration ieee international conference robotics automation icra ieee 2021 pp 11 05411 059 jose luis blanco pranjal kumar rai nanoflann c headeronly fork flann library nearest neighbor nn kdtrees 2014 license work licensed term mit license,"[('point', 'cloud'), ('lidar', 'odometry')]"
ugurkanates/awesome-real-world-rl,Other,awesome real world rl awesome great resource making reinforcement learning work real life situation papersprojects list big compilation thing trying adapt reinforcement learning technique real worldeither mixing real world data mix trying adapt simulation better wayit also include imitation learning meta learning along way anything missing feel free open pri community contribution content paper book conference talk education simulation real gans meta reinforcement learning imitation learning multi agent real world real world example offline rl datasets project library prominent researcher company follow paper academic work done related rl real worldthis part listanything fit still related get domain randomization transferring deep neural network simulation real world asymmetric actor critic imagebased robot learning towards learning robot adapt fly thinking moving deep rl concurrent control towards visionbased deep reinforcement learning robotic motion control quantifying reality gap robotic manipulation task transferring endtoend visuomotor control simulation real world multistage task simtoreal robot learning pixel progressive net practical approach insertion variable socket position using deep reinforcement learning modelling generalized force reinforcement learning simtoreal transfer offdynamics reinforcement learning training transfer domain classifier emergent realworld robotic skill via unsupervised offpolicy reinforcement learning ingredient realworld robotic reinforcement learning learning personalized treatment via irl reinforcement learning application challenge realworld reinforcement learning empirical investigation challenge realworld reinforcement learning generalized statedependent exploration deep reinforcement learning robotics learning navigate synthetically accessible chemical space using reinforcement learning scaling simulationtoreal transfer learning composable robot skill importance limitation sim2real robotic manipulation precision agriculture decentralized reinforcement learning global decisionmaking via local economic transaction book book dedicated rl real world book part contains related content deep rl hand 2nd edition packt edition ha entire chapter dedicated real world robotics agent foundation deep reinforcement learning theory practice python chapter related real world application conference talk recorded talk related subject go gpu technology conference 2017 sim2real collision avoidance indoor navigation mobile robot reinforcement learning growing role ai real world example microsoft 2020 rl real world 2020 conference rl real life panel discussion june 2728 2020 rl health care panel discussion june 28 2020 learning dock robustly demand ride sharing rl badgr autonomous selfsupervised learningbased navigation system empirical investigation challenge real world reinforcement learning sim2real july 10 2020 visual learning reasoning robotic manipulation education free paid course related subject go stanford cs330 meta rl multi task chelsea finn 20192020 cmu real life reinforcement learning 2015 lot advanced topic well talk darpa rl challenge reinforcement learning robot course cmput 652 fall 2019 simulation real gans paper us gans generate realistic simulation image adaptation policy go using simulation domain adaptation improve efficiency deep robotic grasping graspgan cyclegan rlcyclegan reinforcement learning aware simulationtoreal meta reinforcement learning anything meta rl go metareinforcement learning robotic industrial insertion task simtoreal transfer accurate grasping eyeinhand observation continuous control metareinforcement learning robust distributional shift via model identification experience relabeling imitation learning anything imitation learning go reinforcement imitation learning diverse visuomotor skill learning agile robotic locomotion skill imitating animal multi agent real world anything multi agent real world rl related go python marl real world example real world news project deployed rl real life go heremostly newscommentsblog post etc reinforcement learning real world article reinforcement learning application real life june 2019 offline rl anything offline reinforcement learning go scaling datadriven robotics reward sketching batch reinforcement learning accelerating online reinforcement learning offline datasets mopo modelbased offline policy optimization offline reinforcement learning tutorial review perspective open problem datasets saved datasets go robonet large scale multi robot learning gqcnn training datasets gqcnn object mesh datasets hdf5 database 3d object paralleljaw grasp yumi robustness metric google robotics dataset includes graspingpushdepth imagepouring3dmodels d4rl datasets deep datadriven reinforcement learning project project link available internet related go dexterity network grasp quality convolutional neural network gqcnn library open source library related go state representation learning zoo implement srl algorithm robotic setting robotics reinforcement learning customizable pybullet gym robotic environment rl bench includes object oriented approach robotic rl task rl garage includes common rl real world robotic benchmark rl robotic meta world robotic manipulation task real world example regarding meta learning gym sawyer robot environment sawyer robot rl prominent researcher company follow sergey levine google roboticsuc berkeley chelsea finn stanford unigoogle brain ashvin nair uc berkeley 99andbeyond chemical company us rl researchbiomedical chemistry google brain robotics mostly real life rl robotics project x company lot physic real life based problem rl damien ernst real life solution energy related problem xinyang geng lot meta learning locomotion rl maxim lapan author deep rl handson book scott fujimoto one prominent offline rl researcher talkrl podcast includes lot new rl research contribute contribution welcome read contribution guideline first extent possible law ugurkan ate ha waived copyright related neighboring right work contributor ugurkan ate,"[('reinforcement', 'learning'), ('real', 'world')]"
xinshuoweng/AB3DMOT,Python,ab3dmot 3d multiobject tracking baseline new evaluation metric iros 2020 eccvw 2020 repository contains official python implementation full paper iros 2020 3d multiobject tracking baseline new evaluation metric articleweng2020ab3dmot author weng xinshuo wang jianren held david kitani kris journal iros title 3d multiobject tracking baseline new evaluation metric year 2020 articleweng2020ab3dmoteccvw author weng xinshuo wang jianren held david kitani kris journal eccvw title ab3dmot baseline 3d multiobject tracking new evaluation metric year 2020 img aligncenter width100 src img aligncenter width100 src overview news introduction installation quick demo kitti benchmarking acknowledgement news feb 27 2022 added support nuscenes dataset updated readme feb 26 2022 refactored code library signficantly improved performance kitti 3d mot aug 06 2020 extend abstract one oral accepted two eccv workshop wicv pad jul 05 2020 2d mot result kitti three category released jul 04 2020 code modularized minor bug kitti evaluation dontcare object fixed jun 30 2020 paper accepted iros 2020 jan 10 2020 new metric samota added result updated aug 21 2019 pythonsupported aug 21 2019 3d mot result kitti pedestrian cyclist category released aug 19 2019 minor bug orientation correction fixed jul2019 code 3d mot result kitti car category released support pythononly introduction 3d multiobject tracking mot essential component technology many realtime application autonomous driving assistive robotics however recent work 3d mot tend focus developing accurate system giving le regard computational cost system complexity contrast work proposes simple yet accurate realtime baseline 3d mot system use offtheshelf 3d object detector obtain oriented 3d bounding box lidar point cloud combination 3d kalman filter hungarian algorithm used state estimation data association although baseline system straightforward combination standard method obtain stateoftheart result evaluate baseline system propose new 3d mot extension official kitti 2d mot evaluation along two new metric proposed baseline method 3d mot establishes new stateoftheart performance 3d mot kitti improving 3d mota 7223 prior art 7647 surprisingly projecting 3d tracking result 2d image plane compare published 2d mot method system place 2nd official kitti leaderboard also proposed 3d mot method run rate 2147 fps 65 time faster stateoftheart 2d mot system installation please follow carefully provided installation instruction avoid error running code quick demo kitti quickly get sense method performance kitti dataset one run following command installation code step doe require download dataset small set data already included code repository python3 mainpy dataset kitti split val detname pointrcnn python3 scriptspostprocessingtrkconfthresholdpy dataset kitti resultsha pointrcnnvalh1 python3 scriptspostprocessingvisualizationpy resultsha pointrcnnvalh1thres split val benchmarking provide instruction inference evaluation visualization reproducing method performance various supported datasets kitti nuscenes benchmarking purpose realtime tracking special thanks pardis development realtime version running code found acknowledgement idea method inspired sort,"[('3d', 'mot'), ('3d', 'multiobject')]"
chapulina/dolly,C++,build test dolly robot sheep dolly following robot born cloned package launching dolly demo us rosand either gazebo ignition gazebo ignition version dolly known work following system branch gazeboclassic ignition crystal crystal gazebox ubuntu bionic dashing dashing gazebox ubuntu bionic macos sierra eloquent eloquent gazebogazebo 11 citadel ubuntu bionic foxy foxy gazebo 11 citadel ubuntu focal galactic galactic rolling gazebo 11 edifice fortress ubuntu focal package repository contains following package dolly metapackage provides package dollyfollow provides node follow logic dollygazebo robot model simulation world launch script gazeboclassic dollyignition robot model simulation world launch script ignition dollytests simulationbased automated test install encouraged build dolly source learn develop package case want give quick try binary available binary dolly ha released several distros currently supported one package foxy rosfoxydolly rosfoxydollyfollow rosfoxydollygazebo rosfoxydollyignition galactic rosgalacticdolly rosgalacticdollyfollow rosgalacticdollygazebo rosgalacticdollyignition rolling rosrollingdolly rosrollingdollyfollow rosrollingdollygazebo rosrollingdollyignition source install instruction ubuntu bionic install least one simulator gazebo ignition install appropriate rosversion instructed clone dolly choose branch according distro mkdir p wssrc cd wssrc git clone b distro install dependency cd w rosdep install frompaths src ignoresrc r build install cd w colcon build run gazeboclassic gazebo installed compiling dolly package gazebo support enabled setup environment variable order important usrsharegazebosetupsh wsinstallsetupbash tip command ros2 pkg list grep dollygazebo come empty setting environment gazebo support correctly setup launch dolly city take time download model ros2 launch dollygazebo dollylaunchpy worlddollycityworld launch dolly empty world ros2 launch dollygazebo dollylaunchpy worlddollyemptyworld ignition setup environment variable wsinstallsetupbash tip command ros2 pkg list grep dollyignition come empty setting environment ignition support correctly setup launch dolly station ros2 launch dollyignition dollylaunchpy featured qconsf 2018 open source robotics hand gazebo rossource code infoq open source robotics getting started gazebo construct tutorial developer live class 70 control robot ros2 dashing developer live class n71 visualize sensor data ros2 exploring ros2 wheeled robotlaunch ros2 simulation exploring ros2 wheeled robothow subscribe ros2 laser scan topic exploring ros2 using wheeled robotmoving robot rosconjp 2019 gazebo source code developer day 2020 handson ignition ros2 rosdevday2020 trailerhandson ignition ros2,"[('ubuntu', 'bionic'), ('gazebo', 'ignition')]"
bolderflight/invensense-imu,C++,license mit invensenseimu library communicates invensensempu6500 invensense mpu9250 mpu9255 inertial measurement unit imu library compatible arduino cmake build system license changelog contributing guide description invense mpu6500 threeaxis gyroscope threeaxis accelerometer invensense mpu9250 system package sip combine two chip mpu6500 threeaxis gyroscope threeaxis accelerometer ak8963 threeaxis magnetometer mpu6500 mpu9250 support i2c 400 khz spi communication tomhz register setup 20 mhz data reading following selectable full scale sensor range available gyroscope full scale range accelerometer full scale range magnetometer full scale range mpu9250 250 degs 2g 4800 ut 500 degs 4g 1000 degs 8g 2000 degs 16g imu sample gyro accelerometer magnetometer 16 bit analog digital converter also feature programmable digital filter precision clock embedded temperature sensor installation arduino use arduino library manager install library clone arduinolibraries folder mpu6500 library added c include mpu6500h mpu9250 library added c include mpu9250h example arduino executables located examplesarduino teensy 3x 4x lc device used testing arduino library compatible arduino device cmake cmake used build library exported library target called invensenseimu mpu6500 library added c include mpu6500h mpu9250 library added c include mpu9250h library also compiled standalone using cmake idiom creating build directory within directory issuing cmake dmcumk66fx1m0 make build library example executables called i2cexample spiexample drdyspiexample womexample mpu9250 example executable source file located examplescmake notice cmake command includes define specifying microcontroller code compiled required correctly configure code cpu frequency compilelinker option available mcus mk20dx128 mk20dx256 mk64fx512 mk66fx1m0 mkl26z64 imxrt1062t40 imxrt1062t41 imxrt1062mmod known work package used teensy product also switching package known work well long package change example target create executables communicating sensor using i2c spi communication using data ready interrupt using wake motion interrupt respectively target also ha hex creating hex file upload microcontroller upload using teensy cli uploader flash teensy please note instruction setting build environment found buildtools repo namespace library within namespace bfs invensenseimu class provides method reading writing register sensor expected work least mpu6000 mpu6050 mpu6500 mpu9150 mpu9250 although may work sensor well user likely prefer sensor specific class however class may enable people unlock greater functionality use starting point sensor driver method invensenseimu default constructor requires calling config method setup i2c spi bus i2c address spi chip select pin invensenseimutwowire i2c const uint8t addr creates invensenseimu object constructor used i2c communication interface pointer i2c bus object passed along i2c address sensor invensenseimuspiclass bus uint8t c creates invensenseimu object constructor used spi communication interface pointer spi bus object passed along chip select pin sensor pin capable digital io used chip select pin void configtwowire bus const uint8t addr required using default constructor set i2c bus i2c address void configspiclass spi const uint8t c required using default constructor set spi bus chip select pin void begin initializes communication sensor communication bus initialized within library must initialized seperately enhances compatibility sensor may bus bool writeregisterconst uint8t reg const uint8t data const int32t spiclock writes register data sensor given register address data spi clock speed must specified spi communication used bool writeregisterconst uint8t reg const uint8t data overload i2c communication used bool readregistersconst uint8t reg const uint8t count const int32t spiclock uint8t const data read register data sensor given register address number register read spi clock pointer store data bool readregistersconst uint8t reg const uint8t count uint8t const data overload i2c communication used mpu9250 class work mpu9250 mpu9255 imu method mpu9250 default constructor requires calling config method setup i2c spi bus i2c address spi chip select pin mpu9250i2ct3 bus i2caddr addr creates mpu9250 object constructor used i2c communication interface pointer i2c bus object passed along i2c address sensor address i2caddrprim 0x68 ad0 pin grounded i2caddrsec 0x69 ad0 pin pulled high c mpu9250 mpu9250wire bfsmpu9250i2caddrprim mpu9250spiclass bus uint8t c creates mpu9250 object constructor used spi communication interface pointer spi bus object passed along chip select pin sensor pin capable digital io used chip select pin c mpu9250 mpu9250spivoid configtwowire bus const i2caddr addr required using default constructor set i2c bus i2c address address i2caddrprim 0x68 ad0 pin grounded i2caddrsec 0x69 ad0 pin pulled high void configspiclass spi const uint8t c required using default constructor set spi bus chip select pin bool begin initializes communication sensor configures default sensor range sampling rate low pas filter setting default accelerometer range 16g default gyro range 2000 degs default sampling rate 1000 hz lowpass filter set cutoff frequency 184 hz true returned communication able established sensor configuration completes successfully otherwise false returned communication bus initialized within library must initialized seperately enhances compatibility sensor may bus c wirebegin wiresetclock400000 bool status mpu9250begin status error bool enabledrdyint enables data ready interrupt 50 u interrupt triggered mpu9250 int pin imu data ready interrupt active high method return true interrupt successfully enabled otherwise false returned c bool status mpu9250enabledrdyint status error bool disabledrdyint disables data ready interrupt method return true interrupt successfully disabled otherwise false returned c bool status mpu9250disabledrdyint status error bool configaccelrangeconst accelrange range set accelerometer full scale range option range enum value 2g accelrange2g 4g accelrange4g 8g accelrange8g 16g accelrange16g true returned succesfully setting accelerometer range otherwise false returned default range 16g c bool status mpu9250configaccelrangebfsmpu9250accelrange4g status error accelrange accelrange return current accelerometer range c accelrange range mpu9250accelrange bool configgyrorangeconst gyrorange range set gyro full scale range option range enum value 250 degs gyrorange250dps 500 degs gyrorange500dps 1000 degs gyrorange1000dps 2000 degs gyrorange2000dps true returned succesfully setting gyro range otherwise false returned default range 2000 degs c bool status mpu9250configgyrorangebfsmpu9250gyrorange1000dps status error gyrorange gyrorange return current gyro range c gyrorange range mpu9250gyrorange bool configsrdconst uint8t srd set sensor sample rate divider mpu9250 sample accelerometer gyro rate hz defined math rate 1000 srd srd setting ofmeans mpu9250 sample accelerometer gyro 1000 hz srd setting ofwould set sampling 200 hz imu data ready interrupt tied rate defined sample rate divider magnetometer sampled 100 hz sample rate divider value corresponding 100 hz greater otherwise magnetometer sampled athz true returned succesfully setting sample rate divider otherwise false returned default sample rate divider value isresulting 1000 hz sample rate c set sample rate divider 50 hz bool status mpu9250sampleratedivider19 status error uint8t srd return current sample rate divider value c uint8t srd mpu9250srd bool configdlpfbandwidthconst dlpfbandwidth dlpf set cutoff frequency digital low pas filter accelerometer gyro temperature sensor available bandwidth dlpf bandwidth enum value 184 hz dlpfbandwidth184hz 92 hz dlpfbandwidth92hz 41 hz dlpfbandwidth41hz 20 hz dlpfbandwidth20hz 10 hz dlpfbandwidth10hz hz dlpfbandwidth5hz true returned succesfully setting digital low pas filter otherwise false returned default bandwidth 184 hz c bool status mpu9250configdlpfbandwidthbfsmpu9250dlpfbandwidth20hz status error dlpfbandwidth dlpfbandwidth return current digital low pas filter bandwidth setting c dlpfbandwidth dlpf mpu9250dlpfbandwidth bool enablewomint16t thresholdmg const womrate womrate enables wakeonmotion interrupt place mpu9250 low power state waking interval determined womrate accelerometer detects motion excess threshold thresholdmg generates 50us pulse mpu9250 interrupt pin following enumerated wom rate supported wom sample rate enum value 024 hz womrate024hz 049 hz womrate049hz 098 hz womrate098hz 195 hz womrate195hz 391 hz womrate391hz 781 hz womrate781hz 1563 hz womrate1563hz 3125 hz womrate3125hz 6250 hz womrate6250hz 125 hz womrate125hz 250 hz womrate250hz 500 hz womrate500hz motion threshold given value betweenand 1020 mg internally mapped single byte 1255 value function return true successfully enabling wake motion otherwise return false please see womi2c example following example enabling wake motion 40 mg threshold odr 3125 hz c imuenablewom40 bfsmpu9250womrate3125hz void reset reset mpu9250 bool read read data mpu9250 store data mpu9250 object return true data successfully read otherwise return false c read imu data mpu9250read bool newimudata return true new data wa returned accelerometer gyro c mpu9250read bool newdata mpu9250newimudata bool newmagdata return true new data wa returned magnetometer mpu9250 sample rate 100 hz higher magnetometer sampled 100 hz mpu9250 sample rate le 100 hz magnetometer sampled athz uncommon receive new imu data new magnetometer data c mpu9250read bool newmag mpu9250newmagdata float accelxmps2 return x accelerometer data mpu9250 object unit ms similar method exist z axis data c read imu data mpu9250read float ax mpu9250accelxmps2 float ay mpu9250accelymps2 float az mpu9250accelzmps2 float gyroxradps return x gyro data mpu9250 object unit rad similar method exist z axis data c read imu data mpu9250read float gx mpu9250gyroxradps float gy mpu9250gyroyradps float gz mpu9250gyrozradps float magxut return x magnetometer data mpu9250 object unit ut similar method exist z axis data c read imu data mpu9250read float hx mpu9250magxut float hy mpu9250magyut float hz mpu9250magzut float dietempc return die temperature sensor unit c c read imu data mpu9250read float temp mpu9250dietempc mpu6500 class work mpu6500 sensor method mpu6500 default constructor requires calling config method setup i2c spi bus i2c address spi chip select pin mpu6500i2ct3 bus i2caddr addr creates mpu6500 object constructor used i2c communication interface pointer i2c bus object passed along i2c address sensor address i2caddrprim 0x68 ad0 pin grounded i2caddrsec 0x69 ad0 pin pulled high c mpu6500 mpu6500wire bfsmpu6500i2caddrprim mpu6500spiclass bus uint8t c creates mpu6500 object constructor used spi communication interface pointer spi bus object passed along chip select pin sensor pin capable digital io used chip select pin c mpu6500 mpu6500spivoid configtwowire bus const i2caddr addr required using default constructor set i2c bus i2c address address i2caddrprim 0x68 ad0 pin grounded i2caddrsec 0x69 ad0 pin pulled high void configspiclass spi const uint8t c required using default constructor set spi bus chip select pin bool begin initializes communication sensor configures default sensor range sampling rate low pas filter setting default accelerometer range 16g default gyro range 2000 degs default sampling rate 1000 hz lowpass filter set cutoff frequency 184 hz true returned communication able established sensor configuration completes successfully otherwise false returned communication bus initialized within library must initialized seperately enhances compatibility sensor may bus c wirebegin wiresetclock400000 bool status mpu6500begin status error bool enabledrdyint enables data ready interrupt 50 u interrupt triggered mpu9250 int pin imu data ready interrupt active high method return true interrupt successfully enabled otherwise false returned c bool status mpu6500enabledrdyint status error bool disabledrdyint disables data ready interrupt method return true interrupt successfully disabled otherwise false returned c bool status mpu6500disabledrdyint status error bool configaccelrangeconst accelrange range set accelerometer full scale range option range enum value 2g accelrange2g 4g accelrange4g 8g accelrange8g 16g accelrange16g true returned succesfully setting accelerometer range otherwise false returned default range 16g c bool status mpu6500configaccelrangebfsmpu6500accelrange4g status error accelrange accelrange return current accelerometer range c accelrange range mpu6500accelrange bool configgyrorangeconst gyrorange range set gyro full scale range option range enum value 250 degs gyrorange250dps 500 degs gyrorange500dps 1000 degs gyrorange1000dps 2000 degs gyrorange2000dps true returned succesfully setting gyro range otherwise false returned default range 2000 degs c bool status mpu6500configgyrorangebfsmpu6500gyrorange1000dps status error gyrorange gyrorange return current gyro range c gyrorange range mpu6500gyrorange bool configsrdconst uint8t srd set sensor sample rate divider mpu9250 sample accelerometer gyro rate hz defined math rate 1000 srd srd setting ofmeans mpu9250 sample accelerometer gyro 1000 hz srd setting ofwould set sampling 200 hz imu data ready interrupt tied rate defined sample rate divider magnetometer sampled 100 hz sample rate divider value corresponding 100 hz greater otherwise magnetometer sampled athz true returned succesfully setting sample rate divider otherwise false returned default sample rate divider value isresulting 1000 hz sample rate c set sample rate divider 50 hz bool status mpu6500sampleratedivider19 status error uint8t srd return current sample rate divider value c uint8t srd mpu6500srd bool configdlpfbandwidthconst dlpfbandwidth dlpf set cutoff frequency digital low pas filter accelerometer gyro temperature sensor available bandwidth dlpf bandwidth enum value 184 hz dlpfbandwidth184hz 92 hz dlpfbandwidth92hz 41 hz dlpfbandwidth41hz 20 hz dlpfbandwidth20hz 10 hz dlpfbandwidth10hz hz dlpfbandwidth5hz true returned succesfully setting digital low pas filter otherwise false returned default bandwidth 184 hz c bool status mpu6500configdlpfbandwidthbfsmpu6500dlpfbandwidth20hz status error dlpfbandwidth dlpfbandwidth return current digital low pas filter bandwidth setting c dlpfbandwidth dlpf mpu6500dlpfbandwidth bool read read data mpu6500 store data mpu6500 object return true data successfully read otherwise return false c read imu data mpu6500read bool newimudata return true new data wa returned accelerometer gyro c mpu6500read bool newdata mpu6500newimudata float accelxmps2 return x accelerometer data mpu6500 object unit ms similar method exist z axis data c read imu data mpu6500read float ax mpu6500accelxmps2 float ay mpu6500accelymps2 float az mpu6500accelzmps2 float gyroxradps return x gyro data mpu6500 object unit rad similar method exist z axis data c read imu data mpu6500read float gx mpu6500gyroxradps float gy mpu6500gyroyradps float gz mpu6500gyrozradps float dietempc return die temperature sensor unit c c read imu data mpu6500read float temp mpu6500dietempc sensor orientation library transforms data common axis system returned axis system shown right handed coordinate system zaxis positive common aircraft dynamic caution axis system shown relative mpu6500 mpu9250 sensor sensor may rotated relative breakout board,"[('sample', 'rate'), ('otherwise', 'false')]"
locusrobotics/fuse,C++,fuse fuse stack provides general architecture performing sensor fusion live robot possible application include state estimation localization mapping calibration overview fuse framework performing sensor fusion using nonlinear least square optimization technique particular fuse provides pluginbased system modeling sensor measurement similar pluginbased system motion model pluginbased system publishing optimized state value extensible state variable definition contract optimizer interact component common implementation get everyone started unpresented roscon 2018 lightning talk slide data flow system approximately like sensor model receives raw sensor data sensor model generates constraint sends optimizer optimizer receives new sensor constraint request sent configured motion model generate constraint previous state new state involved sensor constraint motion model receives request generates required constraint connect new state previously generated motion model chain motion model constraint sent optimizer optimizer add new sensor model motion model constraint variable graph computes optimal value state variable optimal state value sent configured publisher well sensor model motion model publisher receive optimized state value publish derived quantity topic repeat important note much flow happens asynchronously practice sensor expected operate independently sensor sending constraint optimizer frequency optimizer cache constraint process small batch schedule publisher may require considerable processing time introducing delay completion optimization cycle publishing data topic example let consider simple robotics example illustrate assume typical indoor differentialdrive robot robot ha wheel encoders horizontal laser first thing must define state variable minimum want robot pose timestamp model pose using 2d position orientation 2d pose specific time get unique variable name ease notation let call pose variable x1 x2 x3 etc reality variable get uuid much harder write 2d pose instantiated examplerobotpose2d derived fusecorevariable base class fuse ship several basic variable 2d 3d version position orientation velocity variable derive variable type need next need decide model sensor model wheel encoders providing incremental pose measurement given starting pose x1 wheel encoder delta z predict pose x2 using measurement function f x2 fx1 z error term constraint difference predicted pose x2 actual pose x2 error x2 x2 x2 inverse pose x2 derive fusecoreconstraint implement error function similarly perform scantoscan matching using laser data create incremental pose constraint consecutive scan simplest example sensor synchronized ie laser wheel encoders sampled time enough construct first fuse system constraint graph generated first system large circle represent state variable given time small square represent measurement graph connectivity indicates variable involved measurement two sensor model configured plugins optimizer implementation optimizer performs required computation generate optimal state variable value based provided sensor constraint never able exactly satisfy wheel encoder constraint laserscan constraint instead minimize error constraint using nonlinear least square optimization fuse system optimizing constraint two different sensor yet publishing data back order publish data derive fusecorepublisher class add optimizer derived publisher access optimized value state variable specific publisher implementation determines type message published frequency example system would like visualize current pose robot rviz create fuse publisher find recent pose convert geometrymsgsposestamped message publishes message topic finally something starting useful adaptationasynchronous sensor typically laser measurement wheel encoder measurement synchronized encoder measurement sampled faster laser sampled different time using different clock anything different situation constraint graph becomes disconnected motion model come play motion model differs sensor model constraint generated two requested timestamps motion model constraint generated upon request due internal clock use motion model connect state introduced sensor measurement derive class fusecoremotionmodel base class implement differential drive kinematic constraint robot motion model also configured plugins optimizer optimizer request motion model constraint configured plugins whenever new state created sensor model adaptationfull path publishing nothing fuse framework limit single publisher want visualize entire robot trajectory instead recent pose well create new derived fusecorepublisher class publishes robot pose using navmsgspath message adaptationchanging kinematics spare time also build autonomous power wheel racer race car use differential drive need different motion model easy enough simply derive new fusecoremotionmodel class implement ackermann steering model everything else reused adaptationonline calibration time notice accuracy odometry measurement decreasing investigation realize soft rubber racing tire wearing decreasing diameter wheel time sure would nice odometry system could compensate automatically derive new variable type fusecorevariable hold single scalar value representing wheel diameter specific point time ease notation refer new variable d1 d2 etc also need derive new wheel encoder sensor model fusecoresensormodel base class new sensor model involves previous pose next pose also involves previous wheel diameter finally need fusecoremotionmodel describes wheel diameter expected change time maybe sort exponential decay good measure derive new publisher plugin fusecorepublisher publishes current wheel diameter allows u plot wheel diameter change length race system estimate wheel diameter time step well robot pose math internally fuse us google cere solver summary purpose fuse provide framework performing sensor fusion task allowing common component reused system also allowing component customized different use case goal allow end user concentrate modeling robot sensor system etc spend le time wiring different sensor model together runable code since model implemented plugins separate plugin library shared kept private discretion author api concept variable constraint sensor model coming soon motion model coming soon publisher coming soon optimizers coming soon,"[('motion', 'model'), ('sensor', 'model')]"
maelstrom-cms/odin,Other,odin domain monitor disclaimer odin example project built using maelstrom cm toolkit final release inhouse tool use provide basic monitoring email alert receives regular bug fix new feature aswhen need internally simply opensourcing allow others might find useful use use provide support slas however bug found investigate feature request consider pull request new featuresbug fix welcome however recommend opening issue discussing spending time automated testing likely work anything le php 73 run nginx would work apache 24 odin domain monitoring tool ha following monitor opengraph extraction uptime monitoring responsetime graph email notification downtime event tracking duration ssl certificate grading via ssl lab ssl health monitoring expiry email notification robotstxt monitoring email change review accidentally blocking website basic dns monitoring detect nameserver primary record change cron job schedule monitoring ping api job run check running schedule website crawling error reporting crawl ssr website report 404s error mixedcontent warning etc etc appears browser console appear notification fired certificatehasexpired certificateisexpiring certificateisinvalid certificateisweak certificatewillexpire visualdifferencefound dnshaschanged robotshaschanged websiteisbackup websiteisdown browsermessagedetected installing able follow good date laravel install guide jist follows git clone repository composer install npm install copy envexample env modify setting npm run devwatchprod visit webpage register create account default job able queued executed queue workerhorizon use horizon configureprotect however need using crawler use modified version spatiebrowsershot package provides crawling functionality unable install puppeteer server cannot use feature quick install puppeteer macos sh npm install puppeteer global ubuntu 18 20 sh curl sl sudo e bash sudo aptget install nodejs gconfservice libasound2 libatk100 libc6 libcairo2 libcups2 libdbus13 libexpat1 libfontconfig1 libgcc1 libgconf24 libgdkpixbuf200 libglib200 libgtk30 libnspr4 libpango100 libpangocairo100 libstdc6 libx116 libx11xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 cacertificates fontsliberation libappindicator1 libnss3 lsbrelease xdgutils wget sudo npm install global unsafeperm puppeteer sudo chmod r orx usrlibnodemodulespuppeteerlocalchromium read using visual diff visual diff tool requires spatiebrowsershot us puppeteer pixelmatch use following package interact pixelmatch node binary quick install npm pixelmatch deploying deploying project similar installing step differ depending hosting environment plenty tutorial online deploy onto various platform screenshots creating account register logging login editing profile profile creating monitor create editing monitor edit viewing monitor listing viewing reportmonitor report,"[('npm', 'install'), ('install', 'puppeteer')]"
utiasDSL/gym-pybullet-drones,Python,gympybulletdrones minimalist refactoring original gympybulletdrones repository designed compatibility gymnasium stablebaselines3 20 sitl betaflight note prefer access original codebase presented iros 2021 please git checkout papermaster cloning repo refer corresponding readmemd installation tested intel x64ubuntu 2204 apple siliconmacos 134 sh git clone cd gympybulletdrones conda create n drone python310 conda activate drone pip3 install upgrade pip pip3 install e needed sudo apt install buildessential install gcc build pybullet use pid position control example sh cd gympybulletdronesexamples python3 pidpy stablebaselines3 ppo rl example sh cd gympybulletdronesexamples python3 learnpy betaflight sitl example ubuntu sh git clone cd betaflight make armsdkinstall needed apt install curl make targetsitl comment line cp gympybulletdronesgympybulletdronesassetseeprombin betaflight assuming gympybulletdrones betaflight cloned betaflightobjmainbetaflightsitlelf another terminal run example sh conda activate drone cd gympybulletdronesexamples python3 betapy numdronesalso check step file docstrings use multiple drone troubleshooting ubuntu nvidia card receive failed create opengl context message launch nvidiasettings prime profile select nvidia performance mode reboot try run test top folder sh pytest test citation wish please cite iros 2021 paper original codebase bibtex inproceedingspanerati2021learning titlelearning flya gym environment pybullet physic reinforcement learning multiagent quadcopter control authorjacopo panerati hehui zheng siqi zhou james xu amanda prorok angela p schoellig booktitle2021 ieeersj international conference intelligent robot system iros year2021 volume number pages75127519 doi101109iros5116820219635857 reference carlos luis jeroome le ny 2016 design trajectory tracking controller nanoquadcopter nathan michael daniel mellinger quentin lindsey vijay kumar 2010 grasp multiple micro uav testbed benoit landry 2014 planning control quadrotor flight cluttered environment julian forster 2015 system identification crazyflie 20 nano quadrocopter antonin raffin ashley hill maximilian ernestus adam gleave anssi kanervisto noah dormann 2019 stable baselines3 guanya shi xichen shi michael oconnell rose yu kamyar azizzadenesheli animashree anandkumar yisong yue soonjo chung 2019 neural lander stable drone landing control using learned dynamic c karen liu dan negrut 2020 role physicsbased simulator robotics yunlong song selim naji elia kaufmann antonio loquercio davide scaramuzza 2020 flightmare flexible quadrotor simulator todo add crazyfliefirmware sitl support spencerteetaert add motor delay jacopopan spencerteetaert replace rpy quaternion angvel body rate ob jacopopan replace basesingleagentaviary basemultiagentaviary single rlaviary incl pr 161 jacopopan add multiagent mdp 2drone chase gate jacopopan university toronto dynamic system lab vector institute,"[('example', 'sh'), ('cd', 'gympybulletdronesexamples')]"
NeoGeographyToolkit/StereoPipeline,C++,ames stereo pipeline asp image target image target image target alt documentation status nasa ames stereo pipeline asp suite free open source automated geodesy stereogrammetry tool designed processing stereo image captured satellite around earth planet robotic rover aerial camera historical image without accurate camera pose information asp produce cartographic product including digital terrain model dtms synonymous digital elevation model dems orthoprojected image 3d model bundleadjusted network camera data product suitable science analysis mission planning public outreach asp free software released apache software license 20 documentation installation precompiled binary available stable release current development build precompiled binary linux macos simply download appropriate distribution operating system extract run executables bin subdirectory stable release daily build pdf documentation see news recent addition permanently add asp executable subdirectory path add following line shell configuration eg bashrc replacing pathtostereopipelinebin location filesystem export pathpathpathtostereopipelinebin isi user please install usgs isi version 800 later would like process nasa nonterrestrial image user wishing process earth image digital globe satellite rpc camera various framepinhole camera need download anything else asp installed conda install isi environment well though may latest version fetching asp conda compiling source see install guide detail documentation documentation provided pdf format linked html format documentation includes gentle introduction using stereo pipeline entry tool example processing workflow many supported sensor pdf documentation bundled binary distribution named aspbookpdf restructured text source file distributed doc subdirectory support user community bug feature request user question general discussion posted asp support forum also encourage posting issue github repo item posted forum typically converted issue developer work well pull request credit asp wa developed within autonomous system robotics area intelligent system division nasa ames research center leverage intelligent robotics group irg extensive experience developing surface reconstruction tool planetary exploration eg mar pathfinder mar exploration rover mission rover autonomy ha also developed collaboration adaptive control evolvable system ace group draw experience developing computer vision technique autonomous vehicle control system see author file complete list developer citation general please use reference ames stereo pipeline beyer ross oleg alexandrov scott mcmichael 2018 ames stereo pipeline nasa open source software deriving processing terrain data earth space scienceif using asp application earth image need reference detail quality output suggest also referencing shean e alexandrov z moratto b e smith r joughin c c porter morin p j 2016 automated opensource pipeline mass production digital elevation model dems highresolution commercial stereo satellite imagery isprs journal photogrammetry remote sensing 116 addition recommended citation ask also cite doi specific version asp used processing every new release daily build asp unique doi found additional detail cite asp published work found asp documentation license see license file full text license applies asp copyright c 20092022 united state government represented administrator national aeronautics space administration right reserved asp licensed apache license version 20 license may use file except compliance license may obtain copy license unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license thirdparty library distribution may include bundled thirdparty software convenience user software located thirdparty directory source code release covered abovementioned distribution agreement copyright binary release distribute third party software bin lib directory see included documentation detailed copyright license information thirdparty software check thirdpartylicenses file addition various piece asp depend additional thirdparty library user expected installed,"[('stereo', 'pipeline'), ('ames', 'stereo')]"
cagbal/ros_people_object_detection_tensorflow,Python,people object detection action recognition tensorflow open source love contribution welcome extensive toolbox object detection tracking face recognition 2d 3d support make robot understand environment ha action recognition capability using i3d module tensorflow hub demo object detector output object detection face recognizer output face recognition mask rcnn output mask rcnn object tracker output tracking note object detection code based jupyter notebook inside object detection api code also recognizes face scene using amazing facerecognition library also code track detection using sort trackerkalman based thanks repo licence please check licence repos well flowchart flowchart feature detects object image coming camera topic publishes score bounding box labes detection publishes detection image bounding box sensormsgsimage publishes face recognition result publishes tracking numberan integer tracked object assigned object tracker depth stream avaliable kinect similar device publish depth face todo depth estimation based median filter applied nonnan value inside face bounding box suggestion contribution welcome parameter set fom yaml file detects face inside person area todo action recognition working contribution welcome tech repo us number open source project work properly tensorflow tensorflowobject detection api tensorflow hub numpy facerecognition dlib cobperceptioncommon protobuf tracker part scikitlearn scikitimage filterpy installation first tensorflow installed system sh cd mkdir p catkinwssrc cd catkinws catkinmake cd src git clone recursive git clone cd rospeopleobjectdetectiontensorflowsrc protoc objectdetectionprotosproto pythonout cd catkinws rosdep install frompath src catkinmake pip install facerecognition repo includes fastest mobilenet based method skip step install model model zoo tensorflow object detection put model srcobjectdetection lastly set modelname parameter launchcobpeopleobjectdetectiontensoflowparamsyaml running turn camera driver set input rgb topic name yaml config file launch directory default openni2 running everything work 2d 3d sh roslaunch cobpeopleobjectdetectiontensorflow alltogetherlaunch code start everything perfect starting repo however want flexibility need launch every node one one object detection sh roslaunch cobpeopleobjectdetectiontensorflow cobpeopleobjectdetectiontensorflowlaunch start assigning id detected object publishes result objecttrackertracks note detected tracked object number may differ also want run tracker sh roslaunch cobpeopleobjectdetectiontensorflow cobpeopleobjecttrackerlaunch also want run facerecognition put face image inside people folder launch sh roslaunch cobpeopleobjectdetectiontensorflow cobfacerecognizerlaunch also want run depth finder sh roslaunch cobpeopleobjectdetectiontensorflow projectionlaunch set detectionsposeposepositionxyz pusblishes also want run action recognition sh roslaunch cobpeopleobjectdetectiontensorflow actionrecognitionlaunch see probability published actionrecognitionactionpredictions subscibes rgb image topic set paramsyaml file publishes objectdetectiondetections cobperceptionmsgsdetectionarray includes detection probability label bounding box objectdetectiondetectionsimage sensormsgsimage image bounding box objecttrackertracks cobperceptionmsgsdetectionarray includes tracked object bounding box label id detection id assigned tracker example detectionarraydetections0id facerecognizerfaces cobperceptionmsgsdetectionarray face label face people bounding box actionrecognitionactionpredictions cobperceptionmsgsactionrecognitionmsg action recognition probability kinetics 600 dataset label docker getting started pull current docker image start using sh docker pull cagbalrospeopleobjectdetectiontensorflow docker run network host cagbalrospeopleobjectdetectiontensorflowkinetic container source sh source develsetupbash launch package sh roslaunch cobpeopleobjectdetectiontensorflow alltogetherlaunch working need provide camera stream manual build docker expert feel free contribute also part two choicesthe main dockerfile dockercobpeopleobjectdetectiondockerfile want test repo know arrange master port etc docker please use one detailed documentation written soonyou orbbec astra camera want test repo first plug astra camera pc get name port writing lsusb case output wa like sh bus 001 device 016 id 2bc50401 open open dockercomposeyml text editor insert info get line 16devices part terminal sh cd docker sudo dockercompose build sudo dockercompose runcontainers master master cobpeopleobjectdetection node package astra camera related node listener dummy node testing listening performance five last detection time computerintelr coretm i76820hk cpu 270ghz second 0105810880661 0108750104904 0112195014954 0115020036697 0108013153076 contributor cagbal thjoshi using repo consider citing cagatay odabasi rospeopleobjectdetectiontensorflow github repository 2017 bib miscodabasi2017 author odabasi cagatay title rospeopleobjectdetectiontensorflow year 2017 publisher github journal github repository howpublished url commit 4cf6fa95c3873e3f1a2404f9abd6e7afc7722f05 license apache please also look tensorflow tf object detection facerecognition dlib licence acknowledgement work fraunhofer ipa stuttgart supported socrates mscaitn2016 innovative training network funded ec grant agreement 721619 find lot information regarding socrates,"[('object', 'detection'), ('bounding', 'box')]"
cyberbotics/webots_ros2,Other,webots ros2 interface test status license apache 20 version webotsros2 package provides necessary interface simulate robot webots opensource 3d robot simulator integrates ros2 using ros2 message service action please visit documentation contains following section getting started example reference tutorial acknowledgement href supported rosin rosindustrial qualityassured robot software component information href project ha received funding european union horizon 2020 research innovation programme grant agreement 732287 href supported opendr open deep learning toolkit robotics information href project ha received funding european union horizon 2020 research innovation programme grant agreement 871449,"[('href', 'supported'), ('information', 'href')]"
gkjohnson/urdf-loaders,Other,urdfloaders urdf loading code c unity javascript threejs well example jpl athlete urdf file demo flipped model flipped variant urdf athlete model invert revolute joint ax model athlete configuration leg attached bottom chassis license software available apache v20 license copyright 2020 california institute technology right reserved united state government sponsorship acknowledged neither name caltech operating division jet propulsion laboratory name contributor may used endorse promote product derived software without specific prior written permission,"[('urdfloaders', 'urdf'), ('urdf', 'loading')]"
leggedrobotics/open3d_slam,C++,open3d slam flexible pointcloudbased slam system education open3dslam c cpp library slam integration main contact edo jelavic jelaviceethzch author edo jelavic julian nubert marco hutter poster abstract link documentation link main difference open3dslam slam library open3dslam wa designed simple used education purpose fact open3dslam us wellestablished algorithm basic form hope make easier newcomer enter field work pointclouds additional input imu required open3dslam build map scratch localize given map given map also extended new measurement base implementation open3d wellmaintained highly performant library 3d data processing documentation example datasets found open3dslam documentation provide catkin wrapper open3d easily use open3d project see documentation open3dcatkinreadmemd find work useful use research please consider citing corresponding work inproceedingsjelavic2022open3d titleopen3d slam point cloud based mapping localization education authorjelavic edo nubert julian hutter marco booktitlerobotic perception mapping emerging technique icra 2022 workshop pages24 year2022 organizationeth zurich robotic system lab,"[('edo', 'jelavic'), ('given', 'map')]"
ethz-adrl/ifopt,C++,build status documentation integration codefactor license bsd3clause doi modern lightweight eigenbased c interface nonlinear programming solver ipopt snopt example nonlinear optimization problem solve defined img aligncenter height100 src see problem formulated see testvarsconstrcosth afterwards problem solved using eg ipopt shown extestipoptcc feature install example contribute publication author feature combine advantage ipopt snopt eigen ipopt snopt eigen heavycheckmark highquality solver nonlinear optimization heavycheckmark modern intuitive formulation vector matrix x c api inconvenient errorprone raw pointer index management jacobian construction heavycheckmark highly efficient implementation x linking exporting difficult solver independent formulation variable constraint eigen highly efficient automatic index management formulation variable constraintsets integration pure cmake findpackageifopt catkinros optional lightweight 2k line code make easy use extend optimization problem consists multiple independent variable constraintsets set represents common concept eg set variable might represents spline coefficient another footstep position similarly constraintset group similar constraint together ifopt allows user define set independently separate class build overall problem set worrying adapting index adding removing set find x0 x1 variablesets1 st x0lower x0 x0upper bound variableset x0 r2 x0x1 arg min c0x0x1c1x0x1 costtermsandg0lower g0x0x1 g0upper constraintsetin r2 g1lower g1x0x1 g0upper constraintsetin r1 supplying derivative information greatly increase solution speed ifopt allows define derivative costtermconstraintset respect variableset independently ensures order variablesets change overall vector derivative information still valid jacobian block must supplied constraintsetfilljacobianblock used build complete jacobian cost constraint graphical overview uml seen install easiest way install binary set sudo aptget install rosdistroifopt install dependency case use binary exist distro easily build package source install required dependency cmake eigen ipopt using sudo aptget install cmake libeigen3dev coinorlibipoptdev want link local installation ipopt snopt see build cmake install bash git clone cd ifopt mkdir build cd build cmake make sudo make install copy file folder usrlocal sudo xargs rm installmanifesttxt case want uninstall use use cmake project see minimal cmakeliststxt cmake findpackageifopt formulate ifoptifoptcore solve ifoptifoptipopt problem addexecutablemain maincpp pull include directory library targetlinklibrariesmain public ifoptifoptipopt build catkin install download catkin catkin command line tool bash cd catkinwssrc git clone cd catkinmakeisolated catkin build using catkin commandline tool source develsetupbash use include catkin project adding cmakeliststxt cmake addcompileoptionsstdc11 findpackagecatkin component ifopt includedirectoriescatkinincludedirs targetlinklibrariesfoo catkinlibraries add following packagexml xml package dependifoptdepend package example unit test toy problem navigate build folder makefile resides depends built code bash cd ifoptbuild plain cmake cd catkinwsbuildisolatedifoptdevel catkinmakeisolated cd catkinwsbuildifopt catkin build make sure everything installed correctly running test target bash make test see ifoptipoptexamplepassed snopt installed well ifoptcoretest gtest installed ipopt installed linked correctly also run binary example directly first navigate build folder makefile bash make test args r ifoptipoptexample v output bash 10 00 towr involved problem taken towr multiple set variable constraint generate motion legged robot produce following img aligncenter height500 src contribute love pull request whether interface additional solver bug fix unit test updating documentation please look contributingmd information see list contributor participated project publication use work please consider citing follows miscifopt author alexander w winkler title ifopt modern lightweight eigenbased c interface nonlinear programming solver ipopt snopt year 2018 doi 105281zenodo1135046 url research project within code wa developed w winkler bellicoso hutter j buchli gait trajectory optimization legged system phasebased endeffector parameterization ieee robotics automation letter ral 2018 author alexander w winkler initial workmaintainer wa ha carried following institution additional information linking custom ipopt snopt building source want use locally installed version ipopt add path ipopt build folder bashrc eg bash export ipoptdirhomeyournamecodeipopt3128build case provide precompiled binary required version also easily install ipopt source described summary might work bash wget unzip ipopt31110zip cd ipopt31110thirdpartymumps getmumps hsl routine faster cd mkdir build cd build configure prefixusrlocal make make test make install export ipoptdirpwd need interface snopt point cmake build folder bashrc eg bash export snoptdirhomeyournamecodesnopt run cmake bash cmake dbuildsnopton catkin,"[('ipopt', 'snopt'), ('build', 'folder')]"
Gaochao-hit/LIO-SAM_based_relocalization,C++,simple version system relocalize built map developed repository sysytem bsed liosam repository developed based origional version liosam gps fused run package make sure map saved right folder firstly need run liosam save map default folder run launch file roslaunch liosam runrelocalizelaunch play existing bag file rosbag play yourbagbag video demonstration method found youtube note initialization initialization stage better keep robot still play bag fistly play bag 05s pause bag initialization succeed initialization method requres give initial guess hand rviz liosam realtime lidarinertial odometry package strongly recommend user read document thoroughly test package provided dataset first video demonstration method found youtube menu system architecture package dependency package install prepare lidar data must read prepare imu data must read sample datasets run package note paper todo acknowledgement system architecture design system maintains two graph run 10x faster realtime factor graph mapoptimizationcpp optimizes lidar odometry factor gps factor factor graph maintained consistently throughout whole test factor graph imupreintegrationcpp optimizes imu lidar odometry factor estimate imu bias factor graph reset periodically guarantee realtime odometry estimation imu frequency dependency tested kinetic melodic sudo aptget install roskineticnavigation sudo aptget install roskineticrobotlocalization sudo aptget install roskineticrobotstatepublisher gtsam georgia tech smoothing mapping library wget downloadsgtsamzip cd downloads unzip gtsamzip downloads cd downloadsgtsam402 mkdir build cd build cmake dgtsambuildwithmarchnativeoff sudo make install j8 install use following command download compile package cd catkinwssrc git clone cd catkinmake prepare lidar data user need prepare point cloud data correct format cloud deskewing mainly done imageprojectioncpp two requirement provide point time stamp liosam us imu data perform point cloud deskew thus relative point time scan need known uptodate velodyne driver output information directly assume point time channel called time definition point type located top imageprojectioncpp deskewpoint function utilizes relative time obtain transformation point relative beginning scan lidar rotates 10hz timestamp point vary betweenand 01 second using lidar sensor may need change name time channel make sure relative time scan provide point ring number liosam us information organize point correctly matrix ring number indicates channel sensor point belongs definition point type located top imageprojectioncpp uptodate velodyne driver output information directly using lidar sensor may need rename information note mechanical lidar supported package currently prepare imu data imu requirement like original loam implementation liosam work 9axis imu give roll pitch yaw estimation roll pitch estimation mainly used initialize system correct attitude yaw estimation initializes system right heading using gps data theoretically initialization procedure like vinsmono enable liosam work 6axis imu performance system largely depends quality imu measurement higher imu data rate better system accuracy use microstrain 3dmgx525 output data 500hz recommend using imu give least 200hz output rate note internal imu ouster lidar usable due high vibration imu alignment liosam transforms imu raw data imu frame lidar frame follows rep105 convention x forward left z upward make system function properly correct extrinsic transformation need provided paramsyaml file using setup example need set reading xz acceleration gyro negative transform imu data lidar frame indicated extrinsicrot paramsyaml transformation attitude reading slightly different rotate attitude measurement 90 degree around lidarz axis get corresponding roll pitch yaw reading lidar frame transformation indicated extrinsicrpy paramsyaml imu debug strongly recommended user uncomment debug line imuhandler imageprojectioncpp test output transformed imu data user rotate sensor suite check whether reading correspond sensor movement sample datasets download sample datasets test functionality package datasets configured run using default setting walking dataset garden dataset park dataset datasets need parameter configured datasets point cloud topic pointsraw imu topic imucorrect give imu data rep105 standard imu transformation needed dataset following configuration need changed run dataset successfully imutopic parameter configparamsyaml need set imucorrect extrinsicrot extrinsicrpy configparamsyaml need set identity matrix rotation dataset campus dataset large campus dataset small ouster os1128 dataset extrinsics need changed dataset using default setting please follow ouster note configure package run ouster data video dataset found youtube rooftop dataset kitti dataset extrinsics found note kitti section generate bag using kitti raw data use python script provided configdockitti2bag 20110930drive0028 run package run launch file roslaunch liosam runlaunch play existing bag file rosbag play yourbagbag r note loop closure loop function give example proof concept directly adapted legoloam loop closure advanced loop closure implementation please refer scancontext using gps park dataset provided testing liosam gps data dataset gathered yewei huang kitti since liosam need highfrequency imu function properly need use kitti raw data testing one problem remains unsolved intrinsics imu unknown ha big impact accuracy liosam download provided sample data make following change paramsyaml extrinsictrans 8086759e01 3195559e01 7997231e01 extrinsicrot 9999976e01 7553071e04 2035826e03 7854027e04 9998898e01 1482298e02 2024406e03 1482454e02 9998881e01 extrinsicrpy 9999976e01 7553071e04 2035826e03 7854027e04 9998898e01 1482298e02 2024406e03 1482454e02 9998881e01 nscan 64 downsamplerateorloopclosureenableflag true false ouster lidar make liosam work ouster lidar preparation need done hardware software level hardware use external imu liosam doe work internal 6axis imu ouster lidar need attach 9axis imu lidar perform datagathering configure driver change timestampmode ouster launch file timefromptp1588 format timestamp point cloud software change timefield paramsyaml point timestamp scan ouster lidar change nscan horizonscan paramsyaml according lidar ie nscan128 horizonscan1024 comment point definition velodyne top imageprojectioncpp uncomment point definition ouster top imageprojectioncpp comment line deskewpointthispoint lasercloudinpointsitime imageprojectioncpp uncomment line deskewpointthispoint floatlasercloudinpointsit 10000000000 imageprojectioncpp run catkinmake recompile package paper thank citing liosam iros2020 use code inproceedingsliosam2020shan titleliosam tightlycoupled lidar inertial odometry via smoothing mapping authorshan tixiao englot brendan meyers drew wang wei ratti carlo ru daniela journalarxiv preprint arxiv200700258 year2020 part code adapted legoloam inproceedingslegoloam2018shan titlelegoloam lightweight groundoptimized lidar odometry mapping variable terrain authorshan tixiao englot brendan booktitleieeersj international conference intelligent robot system iros pages47584765 year2018 organizationieee todo add loop closure visualization fix potential bug acknowledgement liosam based loam j zhang singh loam lidar odometry mapping realtime,"[('imu', 'data'), ('ouster', 'lidar')]"
hasauino/rrt_exploration,Python,rrtexploration package implement multirobot map exploration algorithm mobile robot based rapidlyexploring random tree rrt algorithm us occupancy girds map representationthe packgae hasdifferent node global rrt frontier point detector node local rrt frontier point detector node filter node assigner node opencvbased frontier detector node youtube playlist showing package running singlemultiple robot using real setup kobuki robot simulation gazebo note package wa written master thesis american university sharjah thesis advisor dr shayok mukhopadhyay using package research work please cite paperrequirements package ha tested kinetic indigo work distribution like jade following requirement needed installing packageyou installed distribution indigo later recommended either indigo kineticcreated workspaceinstalled gmapping package ubuntu running kinectic typing following command terminal sh sudo aptget install roskineticgmappinginstall navigation stack following command assuming ubuntu kinetic sh sudo aptget install roskineticnavigationyou python 27 wa tested python6you haveinstall following python module opencv cv2 sh sudo aptget install pythonopencv numpy sh sudo aptget install pythonnumpy sklearn sh sudo aptget install pythonscikitslearninstallation download package place inside src folder workspace compile using catkinmakesetting robot package provides exploration strategy single multiple robot however work set robot ready using navigation stack additionally robot must set prepared follows note want quickly run test package try rrtexplorationtutorials package provides gazebo simulation single multiple robot use directly package 31 robot network multirobot configuration package require special network configuration simply work single master one robot robot rosmasteruri parameter pointing master address information setting multiple machine follow link 32 robot frame name tf robot frame prefixed name naming robot start robot1 robot2 robot3 even using package single robot robot frame prefixed name ie robot1 robot1 frame tf tree look like 33 robot node topic name node topic running robot must also prefixed name robotnode name look like robot1movebasenode robot1slamgmapping topic name like robot1odom robot1map robot1basescan etc 34 setting navigation stack robot movebasenode node brings navigation stack robot must running package rrtexploration generates target exploration goal robot must able receive point move towards navigation stack needed additionally robot must global local cost map proivded movebasenode 35 mapping node robot local map generated gmapping package 36 map merging node multirobot case node merges local map one global map use packagenodes aretypes node node detecting frontier point occupancy grid map node filtering detected point node assigning point robot following figure show structure 41 globalrrtfrontierdetector globalrrtfrontierdetector node take occupancy grid find frontier point exploration target publishes detected point filter node process multirobot configuration intended single instance node running running additional instance global frontier detector enhance speed frontier point detection needed 411 parameter maptopic string default robot1map parameter defines topic name node recieve map eta float default 05 parameter control growth rate rrt used detection frontier point unit meter parameter set according map size large value cause tree grow faster hence detect frontier point faster large growth rate also implies tree missing small corner map 412 subscribed topic map topic name defined maptopic parameter navmsgsoccupancygrid clickedpoint geometrymsgspointstamped message button 413 published topic detectedpoints geometrymsgspointstamped message topic node publishes detected frontier point shape visualizationmsgsmarker message topic node publishes line shape visualize rrt using rviz 42 localrrtfrontierdetector node similar globalrrtfrontierdetector however work differently tree keep resetting every time frontier point detected node intended run along side globalrrtfrontierdetector node responsible fast detection frontier point lie close vicinity robot multirobot configuration robot run instance localrrtfrontierdetector team ofrobots benodes detecting frontier pointslocal detector andglobal detector running additional instance local frontier detector enhance speed frontier point detection needed detector publishing detected frontier point topic detectedpoints 421 parameter robotframe string default robot1baselink frame attached robot every time tree reset start current robot location obtained frame maptopic string default robot1map parameter defines topic name node recieve map eta float default 05 parameter control growth rate local rrt 422 subscribed topic map topic name defined maptopic parameter navmsgsoccupancygrid clickedpoint geometrymsgspointstamped message lobalrrtfrontierdetector also subscribes topic similar globalrrtfrontierdetector 423 published topic detectedpoints geometrymsgspointstamped message topic node publishes detected frontier point shape visualizationmsgsmarker message topic node publishes line shape visualize rrt using rviz 43 frontieropencvdetector node another frontier detector based rrt node us opencv tool detect frontier point intended run alone multirobot configuration one instance run running additional instance node doe make difference originally node wa implemented comparison rrtbased frontier detector running node along side rrt detector local global may enhance speed frotiner point detection note run type number detector detector publishing topic filter node explained following section subscribing hand filter pas filtered forntier point assigner order command robot explore point 431 parameter maptopic string default robot1map parameter defines topic name node recieve map 432 subscribed topic map topic name defined maptopic parameter navmsgsoccupancygrid 433 published topic detectedpoints geometrymsgspointstamped message topic node publishes detected frontier point shape visualizationmsgsmarker message topic node publishes detected point visualized using rviz 44 filter filter node receives detected frontier point detector filter point pass assigner node command robot filtration includes delection old invalid point also dicards redundant point 441 parameter maptopic string default robot1map parameter defines topic name node recieve map map used know point longer frontier point old point costmapclearingthreshold float default 700 frontier point ha occupancy value greater threshold considered invalid occupancy value obtained costmap inforadiusfloat default 10 information radius used calculating information gain frontier point goalstopic string default detectedpoints defines topic node receives detcted frontier point nrobotsfloat default 10 number robot ratefloat default 100 node loop rate hz 442 subscribed topic map topic name defined maptopic parameter navmsgsoccupancygrid robotxmovebasenodeglobalcostmapcostmap navmsgsoccupancygrid x robotx refers robot number filter node subscribes costmap topic robot costmap required therefore normally costmaps published navigation stack bringing navigation stack robot robot costmap example nrobots2 node subscribe robot1movebasenodeglobalcostmapcostmap robot2movebasenodeglobalcostmapcostmap costmaps used delete invalid point note namespaces node corresponding robot start robotx x robot number goal topic topic name defined goalstopic parametergeometrymsgspointstamped message topic filter node receives detected frontier point 443 published topic frontier visualizationmsgsmarker message topic filter node publishes received frontier point visualiztion rviz centroid visualizationmsgsmarker message topic filter node publishes filtered frontier point visualiztion rviz filteredpoints pointarray filtered point sent array point assigner node topic 45 assigner node recieve target exploration goal filtered frontier point published filter node command robot accordingly assigner node command robot movebasenode bring navigation stack robot 451 parameter maptopic string default robot1map parameter defines topic name node recieve map single robot case topic set map topic robot multirobot case topic must set global merged map inforadiusfloat default 10 information radius used calculating information gain frontier point infomultiplierfloat default 30 unit meter parameter used give importance information gain frontier point cost expected travel distance frontier point hysteresisradiusfloat default 30 unit meter parameter defines hysteresis radius hysteresisgainfloat default 20 unit meter parameter defines hysteresis gain frontierstopic string default filteredpoints topic assigner node receives filtered frontier point nrobotsfloat default 10 number robot delayafterassignementfloat default 05 unit second defines amount delay robot assignment ratefloat default 100 node loop rate hz 452 subscribed topic map topic name defined maptopic parameter navmsgsoccupancygrid filtered frontier point topic topic name defined frontierstopic parameter pointarray 453 published topic assigner node doe publish anything sends assinged point movebasenode using actionlib assigner node actionlib client movebasenode actionlib server,"[('frontier', 'point'), ('topic', 'name')]"
devendrachaplot/Object-Goal-Navigation,Python,object goal navigation using goaloriented semantic exploration pytorch implementation neurips20 paper object goal navigation using goaloriented semantic exploration devendra singh chaplot dhiraj gandhi abhinav gupta ruslan salakhutdinov carnegie mellon university facebook ai research winner cvpr 2020 habitat objectnav challenge project website overview goaloriented semantic exploration semexp model consists three module semantic mapping module goaloriented semantic policy deterministic local policy shown semantic mapping model build semantic map time goaloriented semantic policy selects longterm goal based semantic map reach given object goal efficiently deterministic local policy based analytical planner used take lowlevel navigation action reach longterm goal repository contains episode train test datasets object goal navigation task gibson dataset habitat simulator code train evaluate semantic exploration semexp model object goal navigation task pretrained semexp model installing dependency use earlier version habitatsim habitatlab specified installing habitatsim git clone cd habitatsim git checkout tagsv015 pip install r requirementstxt python setuppy install headless python setuppy install mac installing habitatlab git clone cd habitatlab git checkout tagsv015 pip install e check habitat installation running python examplesbenchmarkpy habitatlab folder install pytorch according system configuration code tested pytorch v160 cudatoolkit v102 using conda conda install pytorch160 torchvision070 cudatoolkit102 linux gpu conda install pytorch160 torchvision070 c pytorch mac install detectron2 according system configuration using conda python pip install detectron2 f linux gpu ccclang cxxclang archflagsarch x8664 python pip install git mac docker singularity image provide experimental docker singularity image dependency installed see docker instruction setup clone repository install requirement git clone cd objectgoalnavigation pip install r requirementstxt downloading scene dataset download gibson dataset using instruction download 11gb file gibsonhabitattrainvalzip move gibson scene dataset create symlink datascenedatasetsgibsonsemantic downloading episode dataset download episode dataset wget nocheckcertificate objectnavgibsonv11zip unzip dataset datadatasetsobjectnavgibsonv11 setting datasets code requires datasets data folder following format habitatlab objectgoalnavigation data scenedatasets gibsonsemantic adrianglb adriannavmesh datasets objectnav gibson v11 train val test setup verify data setup correctly run python testpy agent random n1 numevalepisodesautogpuconfigusage training training semexp model object goal navigation task python mainpy downloading pretrained model mkdir pretrainedmodels wget nocheckcertificate pretrainedmodelssemexppth evaluation evaluating pretrained model python mainpy split val evalload pretrainedmodelssemexppth visualizing agent observation predicted semantic map add va argument command pretrained model get 0657 success 0339 spl 1474 dtg detailed instruction see instruction cite chaplot gandhi gupta salakhutdinov r 2020 object goal navigation using goaloriented semantic exploration neural information processing system neurips20 pdf bibtex inproceedingschaplot2020object titleobject goal navigation using goaloriented semantic exploration authorchaplot devendra singh gandhi dhiraj gupta abhinav salakhutdinov ruslan booktitlein neural information processing system neurips year2020 related project project build active neural slam paper code pretrained model active neural slam system available semantic mapping module similar one used semantic curiosity acknowledgement repository us habitat lab implementation running rl environment implementation ppo borrowed ikostrikovpytorcha2cppoacktrgail maskrcnn implementation based detectron2 repository would also like thank shubham tulsiani saurabh gupta help implementing part code,"[('object', 'goal'), ('goal', 'navigation')]"
Tobias-Fischer/rt_gene,Python,rtgene rtbene realtime eye gaze blink estimation natural environment license cc byncsa 40 star github issue github repo size pwc pwc pwc pwc pwc pwc repository contains code dataset reference two paper rtgene gaze estimation eccv2018 rtbene blink estimation iccv2019 workshop rtgene gaze estimation license attribution rtgene code licensed cc byncsa 40 commercial usage permitted use dataset code scientific publication please cite following paper inproceedingsfischereccv2018 author tobias fischer hyung jin chang yiannis demiris title rtgene realtime eye gaze estimation natural environment booktitle european conference computer vision year 2018 month september page 339357 work wa supported part samsung global research outreach program part eu horizon 2020 project pal 643783ria overview accompanying dataset code split four part readme contained also accompanying dataset alternative link code information datasets opensource software please visit personal robotic lab website rtgene package rtgene directory contains package realtime eye gaze blink estimation contains code required inference time rtgene standalone version rtgenestandalone directory contains instruction eye gaze estimation given set image share code rtgene package particular code rtgenesrcrtgene rtgene inpainting rtgeneinpainting directory contains code inpaint region covered eyetracking glass rtgene model training rtgenemodeltraining directory allows using inpainted image train deep neural network eye gaze estimation rtbene blink estimation license attribution rtbene code licensed cc byncsa 40 commercial usage permitted use blink estimation code dataset please cite relevant paper inproceedingscortaceroiccv2019w authorkevin cortacero tobias fischer yiannis demiris booktitle proceeding ieee international conference computer vision workshop title rtbene dataset baseline realtime blink estimation natural environment year 2019 rtbene wa supported eu horizon 2020 project pal 643783ria royal academy engineering chair emerging technology yiannis demiris overview accompanying dataset code split several part readme also associated rtbene dataset rtbene package rtgene directory contains package realtime eye gaze blink estimation contains code required inference time blink estimation please refer estimateblinkpy file rtbene standalone version rtbenestandalone directory contains instruction blink estimation given set image make use code rtgenesrcrtbene rtbene model training rtbenemodeltraining directory contains code required train model label contained rtbene dataset see soon evaluation code directory rtbene dataset manually annotated image contained noglasses part rtgene dataset rtbene dataset zenodo contains eye image patch associated annotation train blink model,"[('blink', 'estimation'), ('eye', 'gaze')]"
MegaMek/megamek,Other,megamekdocs1readmereadmetxt,[]
gazebosim/gazebo-classic,C++,gazebo dynamic multirobot simulator image note new version gazebo formerly known ignition available please visit learn gazebo classic simulator gazebo simulates multiple robot 3d environment extensive dynamic interaction object documentation get started,"[('gazebo', 'dynamic'), ('dynamic', 'multirobot')]"
lianghongzhuo/PointNetGPD,Python,pointnetgpd detecting grasp configuration point set pointnetgpd icra 2019 arxiv endtoend grasp evaluation model address challenging problem localizing robot grasp configuration directly point cloud pointnetgpd lightweighted directly process 3d point cloud locates within gripper grasp evaluation taking raw point cloud input proposed grasp evaluation network capture complex geometric structure contact area gripper object even point cloud sparse improve proposed model generate largerscale grasp dataset 350k real point cloud grasp ycb object dataset training video install code installed following directory mkdir p homecode cd homecode set environment variable pointnetgpdfolder homebashrc file export pointnetgpdfolderhomecodepointnetgpd install requirement using virtual environment recommended install pcltools via sudo apt install pcltools example create virtual environment conda create n pointnetgpd python310 numpy ipython matplotlib opencv mayavi c condaforge make sure python environment package named meshpy dexnet install pytorch clone repository bash cd homecode git clone install requirement requirementstxt bash cd pointnetgpdfolder pip install r requirementstxt install modified meshpy modify berkeley automation lab meshpy bash cd pointnetgpdfoldermeshpy python setuppy develop install modified dexnet modify berkeley automation lab dexnet bash cd pointnetgpdfolderdexnet python setuppy develop modify gripper configuration gripper bash vim pointnetgpdfolderdexnetdatagrippersrobotiq85paramsjson parameter used dataset generation bash minwidth forcelimit maxwidth fingerradius maxdepth parameter used grasp pose generation experiment bash fingerwidth realfingerwidth handheight handheighttwofingerside handouterdiameter handdepth realhanddepth initbite generated grasp dataset download download dataset download extract zip file rename ycbgrasp move folder pointnetgpdfolderpointnetgpddata generate grasp dataset download ycb object set ycb dataset command line tool download ycb dataset found ycbtools bash cd pointnetgpdfolderdata git clone cd ycbtools python downloadycbdatasetpy rgbd512 manage dataset pointnetgpdfolderpointnetgpddata every object folder structure like 002masterchefcan google512k nontexturedobj generated pcltools nontexturedply nontexturedsdf generated sdfgen rgbd jpg h5 003crackerbox 004sugarbox install sdfgen github bash cd pointnetgpdfolder git clone cd sdfgen mkdir build cd build cmake make install open3d bash pip install open3d generate nontexturedsdf file nontexturedobj file using pcltools sdfgen running bash cd pointnetgpdfolderdexnetapps python readfilesdfpy generate dataset running code bash cd pointnetgpdfolderdexnetapps python generatedatasetcannypy prefix prefix optional add prefix generated file visualization tool visualization grasp bash cd pointnetgpdfolderdexnetapps python readgraspsfromfilepy note file visualize grasp pointnetgpdfolderpointnetgpddataycbgrasp folder visualization object normal bash cd pointnetgpdfolderdexnetapps python calnormpy code check norm calculated meshpy pcl library training network data prepare bash cd pointnetgpdfolderpointnetgpddata make sure following file link dataset directory add google2cloudcsv transform googleycb model ycbrgbd model google2cloudpkl transform googleycb model ycbrgbd model ycbgrasp generated grasp generate point cloud rgbd image may change number process running parallel use shared host others bash cd pointnetgpdfolderpointnetgpd python ycbcloudgeneratepy note estimated running time intelr xeonr cpu e52690 v4 260ghz dual cpu 56 thread 36 hour please also remove object beyond capacity gripper run experiment bash cd pointnetgpdfolderpointnetgpd launch tensorboard monitoring bash tensorboard logdir assetslog port 8080 run experiment 200 epoch python main1vpy epoch 200 mode train batchsize x x16 file name corresponding experiment main1vpy 1viewed point cloudclass main1vmcpy 1viewed point cloudclass main1vgpdpy 1viewed point cloud gpd mainfullvpy full point cloudclass mainfullvmcpy full point cloudclass mainfullvgpdpy full point cloud gpd gpd experiment may change input channel number modifying inputchann experiment scriptsonlyand 12 channel available using trained network get ur5 robot state goal step publish parameter tell environment whether ur5 robot home position bash cd pointnetgpdfolderdexnetapps python getur5robotstatepyrun perception code code take depth camera info input give set good grasp candidate output input output message using message bash cd pointnetgpdfolderdexnetapps python kinect2grasppy argument h help show help message exit cuda using cuda get network result gpu gpu set gpu number loadmodel loadmodel set witch model want use rewrite modeltype use arg showfinalgrasp show final grasp using mayavi debug working multi processing traygrasp finished grasp type usingmp using multi processing sample grasp modeltype modeltype selet model type fromexisting model citation found pointnetgpd useful research please consider citing plain inproceedingsliang2019pointnetgpd titlepointnetgpd detecting grasp configuration point set authorliang hongzhuo xiaojian li shuang gorner michael tang song fang bin sun fuchun zhang jianwei booktitleieee international conference robotics automation icra year2019 acknowledgement gpg gpd dexnet meshpy sdfgen pyntcloud meturospkg mayavi,"[('bash', 'cd'), ('point', 'cloud')]"
utiasDSL/safe-control-gym,Python,safecontrolgym physicsbased cartpole quadrotor gym environment using pybullet symbolic priori dynamic using casadi learningbased control modelfree modelbased reinforcement learning rl environment include evaluate symbolic safety constraint implement input parameter dynamic disturbance test robustness generalizability control approach pdf bibtex articlebrunke2021safe titlesafe learning robotics learningbased control safe reinforcement learning authorlukas brunke melissa greeff adam w hall zhaocong yuan siqi zhou jacopo panerati angela p schoellig journal annual review control robotics autonomous system year2021 url reproduce result article see branch ar bibtex miscyuan2021safecontrolgym titlesafecontrolgym unified benchmark suite safe learningbased control reinforcement learning authorzhaocong yuan adam w hall siqi zhou lukas brunke melissa greeff jacopo panerati angela p schoellig year2021 eprint210906325 archiveprefixarxiv primaryclasscsro reproduce result article see branch submission install ubuntumacos clone repo bash git clone cd safecontrolgym optional create conda environment create access python 310 environment using conda bash conda create n safe python310 conda activate safe install install safecontrolgym repository bash pip install upgrade pip pip install e note may need separately install gmp dependency pycddlib bash conda install c anaconda gmp bash sudo aptget install libgmpdev architecture overview safecontrolgym api configuration getting started familiarize apis environment script example 3d quadrotor lemniscate trajectory tracking pid bash cd example navigate example folder python3 pidpidexperimentpy algo pid task quadrotor override pidconfigoverridesquadrotor3dquadrotor3dtrackingyaml cartpole stabilization lqr bash cd example navigate example folder python3 lqrlqrexperimentpy algo lqr task cartpole override lqrconfigoverridescartpolecartpolestabilizationyaml lqrconfigoverridescartpolelqrcartpolestabilizationyaml 2d quadrotor trajectory tracking ppo bash cd examplesrl navigate rl example folder python3 rlexperimentpy algo ppo task quadrotor override configoverridesquadrotor2dquadrotor2dtrackyaml configoverridesquadrotor2dppoquadrotor2dyaml kvoverrides algoconfigtrainingfalse verbose api example bash cd example navigate example folder python3 nocontrollerverboseapipy task cartpole override nocontrollerverboseapiyaml list implemented controller pid lqr ilqr linear mpc gpmpc sac ppo ddpg safety layer rarl rap list implemented safety filter mpsc cbf neural network cbf performance compare sample efficiency safecontrolgym original openai cartpole pybullet gym inverted pendulum002 well gympybulletdrones003 choose default physic simulation integration step project report performance result openloop random action input note bullet engine frequency reported safecontrolgym typically much finer grained improved fidelity safecontrolgym quadrotor environment lightweight gympybulletdrones003 provides order magnitude speedup several safety featuressymbolic model environment gui control freq pybullet freq constraint disturbance speedup gym cartpole true 50hz na 116x invpenpybulletenv002 false 60hz 60hz 15829x cartpole true 50hz 50hz 085x cartpole false 50hz 1000hz 2473x cartpole false 50hz 1000hz yes 2239x gympybdrones003 true 48hz 240hz 243x gympybdrones003 false 50hz 1000hz 2150x quadrotor005 true 60hz 240hz 074x quadrotor005 false 50hz 1000hz 928x quadrotor005 false 50hz 1000hz yes 762x whether environment includes default set constraint disturbance speedup elapsed simulation time elapsed wall clock time 230ghz quadcore i71068ng7 32gb 3733mhz lpddr4x gpu 003 run test linting test run locally executing bash python3 pytest test run test linting run locally bash precommit install install precommit hook precommit autoupdate autoupdate version hook precommit run run hook file reference brunke l greeff hall w yuan z zhou panerati j schoellig p 2022 safe learning robotics learningbased control safe reinforcement learning annual review control robotics autonomous systems411444 yuan z hall w zhou brunke l greeff panerati j schoellig p 2022 safecontrolgym unified benchmark suite safe learningbased control reinforcement learning robotics ieee robotics automation letter 74 1114211149 related opensource project gympybulletdrones single multiquadrotor environment stablebaselines3 pytorch reinforcement learning algorithm bullet3 multiphysics simulation engine gym openai reinforcement learning toolkit casadi symbolic framework numeric optimization safetygym environment safe exploration rl realworldrlsuite realworld rl challenge framework gymmarlreconnaissance multiagent heterogeneous uavugv environment university toronto dynamic system lab vector institute artificial intelligence,"[('reinforcement', 'learning'), ('learningbased', 'control')]"
MIT-SPARK/Kimera-Semantics,C++,kimerasemantics release news dec 1st 2019 kimerasemantics got complete revamp leaner code code dedicated meshing fully reuse voxbloxopenchisel instead new fast method order magnitude faster took approx 1 01s using merged minimal accuracy loss small voxels leverage voxblox fast approach play method changing parameter semantictsdfintegratortype launch file highres video publication kindly ask cite paper find library useful rosinol abate chang l carlone kimera opensource library realtime metricsemantic localization mapping ieee intl conf robotics automation icra 2020 arxiv191002490 bibtex inproceedingsrosinol20icrakimera title kimera opensource library realtime metricsemantic localization mapping author rosinol antoni abate marcus chang yun carlone luca year 2020 booktitle ieee intl conf robotics automation icra url pdf related publication work built using voxblox amazing framework build 3d voxelized world helen oleynikova zachary taylor marius fehr juan nieto roland siegwart voxblox incremental 3d euclidean signed distance field onboard mav planning ieeersj international conference intelligent robot system iros 2016 wa originally inspired openchisel matthew klingensmith ivan dryanovski siddhartha srinivasa jizhong xiao chisel real time large scale 3d reconstruction onboard mobile device using spatially hashed signed distance field robotics science system r 2015 related work voxblox also us voxblox geometric instanceaware segmentation differently dense scene segmentation check well margarita grinvald fadri furrer tonci novkovic jen jen chung cesar cadena roland siegwart juan nieto volumetric instanceaware semantic mapping 3d object discovery ieee robotics automation letter july 2019 installation prerequisities install following reference official website install system dependency bash sudo aptget install pythonwstool pythoncatkintools protobufcompiler autoconf change melodic distro sudo aptget install rosmelodiccmakemodules b kimerasemantics installation using catkin bash setup catkin workspace mkdir p catkinwssrc cd catkinws catkin init catkin config extend optrosmelodic change melodic distro catkin config cmakeargs dcmakebuildtyperelease catkin config mergedevel add workspace bashrc echo source catkinwsdevelsetupbash bashrc clone repo cd catkinwssrc git clone gitgithubcommitsparkkimerasemanticsgit install dependency rosinstall file using wstool wstool init use unless wstool already initialized optionally add kimerasemantics rosinstall file wstool scrape ssh wstool merge kimerasemanticsinstallkimerasemanticssshrosinstall wstool merge kimerasemanticsinstallkimerasemantics download update dependency wstool update finally compile bash compile code catkin build kimerasemanticsros refresh workspace source catkinwsdevelsetupbash usage first install kimerasemantics see instruction simulation semantics download demo rosbag click download save kimerasemanticsrosrosbagkimerasemanticsdemobag general good practice open new terminal run roscore another terminal launch kimerasemantics bash roslaunch kimerasemanticsros kimerasemanticslaunch playbagtrue launch rosbag wa downloaded stepand launch kimerasemantics another terminal launch rviz visualization bash rviz rospack find kimerasemanticsrosrvizkimerasemanticsgtrviz note need source catkinws new terminal unless added following line bashrc file source catkinwsdevelsetupbash changebashto shell use noteyou might need checkuncheck kimera semantic 3d mesh left pane topic rviz visualize mesh euroc dataset without semantics kimeravio download euroc rosbag example v101easy install kimeravioros open new terminal run roscore another terminal launch kimeravioros bash roslaunch kimeravioros kimeravioroseuroclaunch runstereodensetrue flag runstereodensetrue stereo dense reconstruction using opencv stereobm algorithm another terminal launch kimerasemantics bash roslaunch kimerasemanticsros kimerasemanticseuroclaunch yet another terminal run euroc rosbag downloaded step bash rosbag play v101easybag clock notedon forget clock flag notekimera fast could also increase rosbag rate byrateand still see good performance result depend available compute power finally another terminal run rviz visualization bash rviz rospack find kimerasemanticsrosrvizkimerasemanticseurocrviz faq minkindr compile catkin ignore minkindrpython catkin package touch catkinwssrcminkindrminkindrpythoncatkinignore run kimerasemantics without semantics using voxblox 3d reconstruction library therefore run without semantics simply bash roslaunch kimerasemanticsros kimerasemanticslaunch playbagtrue metricsemanticreconstructionfalse enable dense depth stereo estimation run opencv stereobm algorithm info found also checkout choose good parameter bash roslaunch kimerasemanticsros kimerasemanticslaunch runstereodense1 publish points2 topic visualize rviz 3d pointcloud alternatively want visualize depth image since rviz doe provide plugin visualize disparity image also run disparityimageproc nodelet publish depth image depthimage,"[('another', 'terminal'), ('bash', 'roslaunch')]"
microsoft/AirSim-NeurIPS2019-Drone-Racing,Python,game drone neurips 2019 competition note repository maintained please use airsim drone racing lab quickstart website register competition guideline linux window binary python api airsimneurips pypi package note use repository research please cite preprint airsim drone racing lab articlemadaan2020airsim titleairsim drone racing lab authormadaan ratnesh gyde nicholas vemprala sai brown matthew nagami keiko taubner tim cristofalo eric scaramuzza davide schwager mac kapoor ashish journalarxiv preprint arxiv200305654 year2020 downloading running airsim binary downloading final round binary environment v11 tldr linux use downloadfinalroundbinariessh script long version download v11 linux window airsimzip unzip download qualifier environment shipped pakfiles finaltier1andtier2pak finaltier3pak move environment pakfiles airsimairsimexecontentpaks download move settingsjson file documentsairsimsettingsjson use airsimneurips 120 qualifier binary environment v10 tldr linux use downloadqualificationbinariessh script long version download v10 linux window airsimzip unzip download qualifier environment shipped pakfiles qualtier1andtier3pak qualtier2pak move environment pakfiles airsimairsimexecontentpaks download move settingsjson file documentsairsimsettingsjson training binary environment v03 tldr linux use downloadtrainingbinariessh script long version download v03 linux window airsimzip unzip download training environment shipped pakfiles soccerfieldpak zhangjiajiepak building99pak move environment pakfiles airsimairsimexecontentpaks download move settingsjson file documentsairsimsettingsjson note source code zip source code targz might uptodate master branch repository lagging n commits master since release specified released page code repository best git clone list disabled apis qualification binary following apis server side qualification binary see error message pop terminal message call work training binary simsetobjectpose simsetvehiclepose simsetobjectscale simgetobjectscale simsetsegmentationobjectid simgetsegmentationobjectid simpause simcontinuefortime running linux open terminal window cd airsimtraining airsimqualification directory enter following command airsimexesh windowed opengl4 running headless rendering image enabled display airsimexesh opengl4 disable rendering completely training planning control policy use airsimexesh nullrhi note simgetimages work option increase speed simgetimages increase speed unreal engine game thread add viewmode nodisplay settingsjson file use file directly disables rendering main viewport camera run binary following option airsimexesh windowed novsync benchmark also use unreal console command stat fps stat unitgraph rvsync tmaxfps see issue 111 detail window navigate airsim directory doubleclick runbat airsimexeexe windowed docker prerequisite install dockerce complete desired postinstallation step linux installing docker minimum page tell torun docker without root useful setup option install nvidiadocker2 dockerfile provide sample dockerfile modify downloads training qualification binary automatically installs python client default us ubuntu 1804 cuda 100 opengl build top nvidiacudagl100develubuntu1804 changed course explained following section building docker image use builddockerimagepy build dockerfile custom one usage default argument shell cd docker python3 builddockerimagepy dockerfile dockerfile baseimage nvidiacudagl100develubuntu1804 targetimage airsimneurips100develubuntu1804 running docker image see dockerrundockerimagesh run docker image usage running default image training binary windowed mode rundockerimagesh training running default image qualification binary windowed mode rundockerimagesh qualification running default image training binary headless mode rundockerimagesh training headless running default image qualification binary headless mode rundockerimagesh qualification headless running custom image windowed mode pas image name tag rundockerimagesh dockerimagenametag running custom image headless mode pas image name tag followed headless rundockerimagesh dockerimagenametag headless airsim api control drone get information environment need airsimneurips api accessible via python recommend used python 36 python 27 go support soon install python api pip install airsimneurips see quick overview api api documented airsimneurips api doc resource going open closed issue repository might answer question search bar top left prove useful airsim upstream api however good learning resource submitting result leaderboard qualification round qualification round one race track tier relevant binary v10 available linux window tierthis soccer field environment race track qualtier1andtier3pak pakfile tierthis zhangjiajie environment race track qualtier2pak pakfile tierthis soccer field environment race track qualtier1andtier3pak pakfile generate logfiles tier loading level starting race please update airsimneurips pythonclient 100 calling simstartraceracetier1orgenerates appropriate log file tier python airsimclientsimloadlevel qualifiertier1 airsimclientsimstartrace1 tier python airsimclientsimloadlevel qualifiertier2 airsimclientsimstartrace2 tier python airsimclientsimloadlevel qualifiertier3 airsimclientsimstartrace3 tierfocuses perception tierfocuses perception planning note simgetobjectpose return noisy gate pose simstartrace2 simstartrace3 called soon simstartrace1 simstartrace3 called drone2 msr opponent racer start flying see baselineracerpy sample code previous bullet point called wrapper function following snippet baselineracerpy python baselineracerloadlevelargslevelname argslevelname qualifiertier1 argsracetier argslevelname qualifiertier2 argsracetier argslevelname qualifiertier3 argsracetier baselineracerstartraceargsracetier submit result leaderboard navigate submission site enter team name proper field upload number race log leaderboard publish result drone named drone1 call generatesettingsfilepy generate airsim setting file done baselineracer please submit pdf file report section help u verify honesty submission nov 21st deadline please summarize approach tier make submission appropriate citation report pdf size exceed 10 mb maximum ofpages length leave exact format report descrition ieee template good choice emailed private key entered team id field help u verify wa team indeed made submission leaderboard updated per day 2100 pst see result 24 hour please email u team name submitted log file submitting result leaderboard final round final round one race track tier relevant binary v11 available linux window tierthis soccer field environment race track finaltier1andtier2pak pakfile tierthis soccer field environment race track finaltier1andtier2pak pakfile tierthis zhangjiajie environment race track finaltier3pak pakfile generate logfiles tier loading level starting race please update airsimneurips pythonclient 120 calling simstartraceracetier1orgenerates appropriate log file run tier n race finaltiern level tier python airsimclientsimloadlevel finaltier1 airsimclientsimstartracetier1 tier python airsimclientsimloadlevel finaltier2 airsimclientsimstartracetier2 tier python airsimclientsimloadlevel finaltier3 airsimclientsimstartracetier3 tierfocuses perception tierfocuses perception planning note simgetobjectpose return noisy gate pose soon simstartracetier1 simstartracetier3 called drone2 msr opponent racer start flying see baselineracerpy sample code previous bullet point called wrapper function following snippet baselineracerpy python baselineracerloadlevelargslevelname baselineracerstartraceargsracetier submit result final leaderboard navigate submission site enter team name proper field upload number race log leaderboard publish result drone named drone1 call generatesettingsfilepy generate airsim setting file done baselineracer please submit pdf file report section help u verify honesty submission dec 5th 2359 pst deadline please summarize approach tier make submission appropriate citation report pdf size exceed 10 mb maximum ofpages length leave exact format report descrition ieee template good choice emailed private key entered team id field help u verify wa team indeed made submission final leaderboard updated per day 2100 pst see result 24 hour please email u team name submitted log file sample code plan move minimum jerk trajectory using ground truth pose gate generate airsim settingsjson file one provided release shell cd baseline python generatesettingsfilepy start airsim neurips binary explained run code shell python baselineracerpy enableviztraj enablevizimagecv2 planningbaselinetype allgatesatonce planningandcontrolapi moveonspline levelname zhangjiajiemedium racetier usage shell python baselinesbaselineracerpy h usage baselineracerpy h levelname soccerfieldeasysoccerfieldmediumzhangjiajiemediumbuilding99hardqualifiertier1qualifiertier2qualifiertier3finaltier1finaltier2finaltier3 planningbaselinetype allgatesatonceallgatesonebyone planningandcontrolapi moveonsplinemoveonsplinevelconstraints enableviztraj enablevizimagecv2 racetier 123 plan game theoretic plan gtp trajectory ego drone based estimate opponent drone behavior generate airsim settingsjson file shell cd baseline python generatesettingsfilepy start airsim neurips binary explained run gtp code shell python baselineracergtppy blockingbehavior plotgtp enableviztraj levelname qualifiertier1 method iterative best response ibr trajectory planning technique ibr first trajectory drone initialized straight track maximum speed win game opponent trajectory held constant solve ego trajectory via model predictive control mpc optimization detail gtppy hold ego trajectory constant solve guess opponent trajectory fashion iteration solution convereges ie resulting trajectory stop changing reached nash equilibrium space trajectory say either agent unilaterally change trajectory increase performance implementation heuristic based original method proposed paper pdf r spica falanga e cristofalo e montijano scaramuzza schwager realtime game theoretic planner autonomous twoplayer drone racing proccedings robotics science system r 2018 quick api overview added new apis marked airsim neurips competition binary loading unreal engine environment simloadlevellevelname possible value levelname soccerfieldeasy soccerfieldmedium zhangjiajiemedium building99hard training binary v03 qualificationtier1 qualificationtier2 qualificationtier3 qualification binary v10 finaltier1 finaltier2 finaltier3 final round binary v11 trying please ensure downloaded corresponding training v03 qualifier v10 final round v10 binary described ui menu press f10 toggle level menu click desired level note ui list pakfiles airsimairsimexecontentpaks directory ensure downloaded pakfile able see particular environment race apis start race simstartracetier123 reset race simresetrace check racer disqualified simisracerdisqualified get index last gate passed simgetlastgatepassed disable generation logfiles race apis simdisableracelog lower level control apis fpv like angle rate setpoint apis movebyangleratesthrottleasync movebyanglerateszasync stabilizes altitude angle setpoint apis movebyrollpitchyawthrottleasync movebyrollpitchyawzasync stabilizes altitude rollpitchyawrate setpoint apis movebyrollpitchyawratethrottleasync movebyrollpitchyawratezasync stabilizes altitude medium level control apis velocity setpoints movebyvelocityasync movebyvelocityzasync stabilizes altitude position setpoints movetoposition moveonpath movetozasync high level control apis minimum jerk trajectory planning using ethzaslmavtrajectorygeneration trajectory tracking using pure pursuit like controller minimizing position velocity error position setpoints optionally use lookahead parameter start new trajectory point sampled n second ahead trajectory tracked currently moveonsplineasync minimum jerk trajectory planning using ethzaslmavtrajectorygeneration trajectory tracking using pure pursuit like controller minimizing position velocity error position setpoints corresponding velocity constraint useful making drone go gate waypoint obeying speed direction constraint optionally use lookahead parameter start new trajectory point sampled n second ahead trajectory tracked currently moveonsplinevelconstraintsasync clear stop following current trajectory cleartrajectory gain setter apis setangleratecontrollergains setanglelevelcontrollergains setvelocitycontrollergains setpositioncontrollergains settrajectorytrackergains apis help generate gate detection datasets object pose setter getter simsetobjectpose simgetobjectpose object scale setter getter simsetobjectscale simgetobjectscale object segmentation id setter getter simgetsegmentationobjectid simsetsegmentationobjectid listing object scene simlistsceneobjects gate specific apis simgetnominalgateinnerdimensions simgetnominalgateouterdimensions question please open github issue repository airsim technical question wrt neurips competition,"[('race', 'track'), ('environment', 'race')]"
Stable-Baselines-Team/stable-baselines3-contrib,Python,ci codestyle stablebaselines3 contrib sb3contrib contrib package stablebaselines3 experimental reinforcement learning rl code sb3contrib short sb3contrib place rl algorithm tool considered experimental eg implementation latest publication goal keep simplicity documentation style stablebaselines3 le matured implementation create repository span stablebaselines stablebaselines3 community ha eager contribute form better logging utility environment wrapper extended support eg different action space learning algorithm however sometimes utility niche considered stablebaselines proved difficult integrate well existing code without creating mess sb3contrib aim fix requiring neatest code integration existing code setting limit niche almost everything remotely useful go hope allows u provide reliable implementation following stablebaselines usual standard consistent style documentation etc beyond relatively small scope utility main repository feature see documentation full list included feature rl algorithm augmented random search ar quantile regression dqn qrdqn ppo invalid action masking maskableppo ppo recurrent policy recurrentppo aka ppo lstm truncated quantile critic tqc trust region policy optimization trpo gym wrapper time feature wrapper documentation documentation available online installation install stable baselines3 contrib pip execute pip install sb3contrib recommend use master version stable baselines3 install stable baselines3 master version pip install git install stable baselines3 contrib master version pip install git contribute want contribute please read contributingmd guide first citing project cite repository publication please cite sb3 directly bibtex articlestablebaselines3 author antonin raffin ashley hill adam gleave anssi kanervisto maximilian ernestus noah dormann title stablebaselines3 reliable reinforcement learning implementation journal journal machine learning research year 2021 volume 22 number 268 page 18 url,"[('stable', 'baselines3'), ('install', 'stable')]"
DLR-RM/rl-baselines3-zoo,Python,ci documentation status coverage report codestyle rl baselines3 zoo training framework stable baselines3 reinforcement learning agent rl baselines3 zoo training framework reinforcement learning rl using stable baselines3 provides script training evaluating agent tuning hyperparameters plotting result recording video addition includes collection tuned hyperparameters common environment rl algorithm agent trained setting looking contributor complete collection goal repository provide simple interface train enjoy rl agent benchmark different reinforcement learning algorithm provide tuned hyperparameters environment rl algorithm fun trained agent sb3 version original sb2 rlzoo documentation documentation available online installation minimal installation source pip install e python package pip install rlzoo3 note python rlzoo3train folder access rlzoo3 command line interface instance rlzoo3 train equivalent python trainpy full installation extra envs test dependency aptget install swig cmake ffmpeg pip install r requirementstxt please see stable baselines3 documentation alternative install stable baselines3 train agent hyperparameters environment defined hyperparametersalgonameyml environment exists file train agent using python trainpy algo algoname env envid evaluate agent every 10000 step using 10 episode evaluation using one evaluation env python trainpy algo sac env halfcheetahbulletenvv0 evalfreq 10000 evalepisodes 10 nevalenvsmore example available documentation integration rl zoo ha integration librariesservices like weight bias experiment tracking hugging face storingsharing trained model find dedicated section documentation plot script please see dedicated section documentation enjoy trained agent note download repo trained agent must use git clone recursive order clone submodule trained agent exists see action using python enjoypy algo algoname env envid example enjoy a2c breakout 5000 timesteps python enjoypy algo a2c env breakoutnoframeskipv4 folder rltrainedagents n 5000 hyperparameters tuning please see dedicated section documentation custom configuration please see dedicated section documentation current collection 200 trained agent final performance trained agent found benchmarkmd compute simply run python rlzoo3benchmark list video trained agent found huggingface page note quantitative benchmark corresponds one run cf issue 38 benchmark meant check algorithm maximal performance find potential bug also allow user access pretrained agent atari gamesatari game openai benchmark noframeskipv4 version rl algo beamrider breakout enduro pong qbert seaquest spaceinvaders a2c heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark ppo heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark dqn heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark qrdqn heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark additional atari game completed rl algo mspacman asteroid roadrunner a2c heavycheckmark heavycheckmark heavycheckmark ppo heavycheckmark heavycheckmark heavycheckmark dqn heavycheckmark heavycheckmark heavycheckmark qrdqn heavycheckmark heavycheckmark heavycheckmark classic control environment rl algo cartpolev1 mountaincarv0 acrobotv1 pendulumv1 mountaincarcontinuousv0 ar heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark a2c heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark ppo heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark dqn heavycheckmark heavycheckmark heavycheckmark na na qrdqn heavycheckmark heavycheckmark heavycheckmark na na ddpg na na na heavycheckmark heavycheckmark sac na na na heavycheckmark heavycheckmark td3 na na na heavycheckmark heavycheckmark tqc na na na heavycheckmark heavycheckmark trpo heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark box2d environment rl algo bipedalwalkerv3 lunarlanderv2 lunarlandercontinuousv2 bipedalwalkerhardcorev3 carracingv0 ar heavycheckmark heavycheckmark a2c heavycheckmark heavycheckmark heavycheckmark heavycheckmark ppo heavycheckmark heavycheckmark heavycheckmark heavycheckmark dqn na heavycheckmark na na na qrdqn na heavycheckmark na na na ddpg heavycheckmark na heavycheckmark sac heavycheckmark na heavycheckmark heavycheckmark td3 heavycheckmark na heavycheckmark heavycheckmark tqc heavycheckmark na heavycheckmark heavycheckmark trpo heavycheckmark heavycheckmark pybullet environment see similar mujoco envs free mujoco 210 free easy install simulator pybullet using bulletenvv0 version note environment derived roboschool harder mujoco version see pybullet issue rl algo walker2d halfcheetah ant reacher hopper humanoid ar a2c heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark ppo heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark ddpg heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark sac heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark td3 heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark tqc heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark trpo heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark pybullet envs continued rl algo minitaur minitaurduck inverteddoublependulum invertedpendulumswingup a2c ppo ddpg sac td3 tqc mujoco environment rl algo walker2d halfcheetah ant swimmer hopper humanoid ar heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark a2c heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark ppo heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark ddpg sac heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark td3 heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark tqc heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark trpo heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark robotics environment see mujoco version 15010 gym version 0180 used v1 environment rl algo fetchreach fetchpickandplace fetchpush fetchslide hertqc heavycheckmark heavycheckmark heavycheckmark heavycheckmark panda robot environment see similar mujoco robotics envs free easy install simulator pybullet used v1 environment rl algo pandareach pandapickandplace pandapush pandaslide pandastack hertqc heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark minigrid envs see simple lightweight fast gym environment implementation famous gridworld rl algo emptyrandom5x5 fourrooms doorkey5x5 multiroomn4s5 fetch5x5n2 gotodoor5x5 putnear6x6n2 redbluedoors6x6 lockedroom keycorridors3r1 unlock obstructedmaze2dlh a2c ppo heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark dqn qrdqn trpo 22 environment group variation total colab notebook try online train agent online using colab notebook passing argument interactive session zoo meant executed interactive session eg jupyter notebook ipython however done modifying sysargv adding desired argument example python import sys rlzoo3train import train sysargv python algo ppo env mountaincarv0 train test run test first install pytest make pytest type checking pytype make type citing project cite repository publication bibtex miscrlzoo3 author raffin antonin title rl baselines3 zoo year 2020 publisher github journal github repository howpublished url contributing trained agent present rl zoo please submit pull request containing hyperparameters score contributor would like thank contributor iandanforth tatsubori shade5 mcres ernestum qgallouedec,"[('heavycheckmark', 'heavycheckmark'), ('na', 'na')]"
caelan/pddlstream,Python,pddlstream pddlstream planning framework comprised action language suite algorithm artificial intelligence ai planning presence sampling procedure pddlstream extends planning domain definition language pddl introducing stream declarative specification sampling procedure pddlstream algorithm domain independent solve pddlstream problem blackbox description sampler motivating application pddlstream wa generalpurpose robot task motion planning tamp default pddlstream branch main necessary see fastdownward documentation detailed installation instruction pddlstream actively support python27 well recent version python3 make sure recursively update pddlstream submodules pulling new commits pddlstream git pull recursesubmodules example repository contains several robotic nonrobotic pddlstream example domain pybullet install pybullet x linux using pip install pybullet numpy scipy example pr2 tamp pddlstream python examplespybullettamprun pr2 cleaning cooking pddlstream python examplespybulletpr2run turtlebot rover pddlstream python examplespybulletturtlebotroversrun pr2 rover pddlstream python examplespybulletpr2roversrun pr2 planning execution pddlstream python examplespybulletpr2beliefrun kuka cleaning cooking pddlstream python examplespybulletkukarun advanced functionality test case advanced undocumented functionality action description language adl pddlstream python examplesadvancedadlrun deferred stream postponed evaluation pddlstream python examplesadvanceddeferrun exogenous stream observation pddlstream python examplesadvancedexogenousrun fluent stream state constraint pddlstream python examplesadvancedfluentrun constraint satisfaction pddlstream python examplesadvancedsatisfyrun wild stream ad hoc certification pddlstream python examplesadvancedwildrun international planning competition ipc unmodified pddl ipc example solved using pddlstream modified translator rover pddlstream python examplesipcroversrun satellite pddlstream python examplesipcsatellitesrun application external project make use pddlstream online tamp automated construction learning tamp ltamp pyrobosim meta procedure solve allows user toggle avaliable algorithm using keyword argument algorithm property description method python function call algorithm negated stream whether algorithm support inverting test stream fluent stream whether algorithm support fluent stream additionally condition fluent state wild stream whether algorithm support stream additionally certify ad hoc fact adaptive method solveadaptive negated stream supported fluent stream supported wild stream supported binding method solvebinding negated stream supported fluent stream supported wild stream supported focused method solvefocusedoriginal negated stream supported fluent stream supported wild stream supported incremental method solveincremental negated stream supported fluent stream supported wild stream supported search subroutine many pddlstream algorithm discrete planning phase implemented using finite statespace search algorithm breadthfirst search bfs uniformcost search ucs however pddlstream extends pddl planning phase also implemented stateoftheart classical planning algorithm leverage factored structure action language pddl vastly improve empirical planning efficiency bestfirst heuristic search algorithm automatically derive heursitics domainindependent manner one example class algorithm fastdownward pddlstream come prepackaged fastdownward runtime discrete planning phase varies depending selected search algorithm many nonadversarial problem algorithm either solve problem instantenously greedy enough terminate within 10 minute recommend starting greedier configuration moving torward le greedy one desired pddl planner pddl planning algorithm could used place fastdownward however caveat planner implemented support limited set representational feature eg conditional effect derived predicate etc make modeling difficult ultimately planning le efficient many realworld nonipc planning domain heavily recommend fastdownward pddl planner interfaced past success include classical planner fastdownward fastforward pyplanners cerberus laptk yshap pyperplan numeric planner metric ff smtplan temporal planner temporal fastdownward tpshe diverse planner forbid iterative kstar symk resource recent talk recent overview recent tutorial pddlstream tutorial ai planning pddl wiki planning domain definition language pddl derived predicate fastdownward pddlstream tutorial retired retired folder indicate code longer continuously supported thus likely outdated drake install drake x ubuntu following following instruction alternatively install drake docker following following instruction use appropriate dockerrunbash script docker tag drake20181128 example kuka iiwa task motion planning pddlstream python examplesdrakerun kuka iiwa additional pddlstream drake example found,"[('pddlstream', 'python'), ('stream', 'supported')]"
awesome-vacuum/awesome-vacuum,Other,awesomevacuum curated list free open source software hardware project used build control robot vacuum awesomevacuum hardware imu lidar project software framework slam awesome list contributing hardware back top imu back top imu help make localization much stable providing accelerometer gyroscope even magnetometer data cartographer easily setup imu improve localization mpu6050 imu sensor combining mem accelerometer mem gyro single chip lidar back top lidar light detection ranging create accurate representation surroundings utilizing laser light sensor measure tof time flight device available 2d 3d variant although 3d variant still pretty expensive add much value robot vacuum use case camsensex1 unofficial reverse engineering chinese lidar gpl30 rplidar series 360 degree laser scanner integration 16k sample per second project back top list full blown project create robot vacuum cleanbot diy bluetooth controlled robot vacuum built wood scrap electronics diy vacuum robot cesnieto diy robot vacuum built using 3d printing arduino uno robot vacuum cleaner mk2 diy robot vacuum built using 3d printing arduino nano byncsa software back top bumper standalone selfhosted implementation central server used ecovacs vacuum robot gpl30 python dustcloud xiaomi smart home device reverse engineering hacking gpl30 various roborock oucher valetudo cloudfree control webinterface vacuum robot apache20 javascript belive valetudo valetudo companion service map rendering apache20 javascript valetudo experimental vacuum software cloud free valetudo fork apache20 javascript valetudo mapper valetudo companion service map rendering icantbelieveitsnotvaletudo fork apache20 javascript freecongga valetudo implementation cecotec conga vacuum freeconga organization github apache20 gpl30 congatudo freeconga project valetudo home assistant addon intead use standalone installation vacuum gpl30 shell opendonita add local support previous conga 1490 gpl30 python framework back top gobot golang framework robotics drone internet thing iot apache20 golang robot operating system provides library tool help software developer create robot application provides hardware abstraction device driver library visualizer messagepassing package management bsd various slam back top slam simultaneous localization mapping used build map repeatedly scanning surrounding area enable robot localize within environment breezyslam simple efficient opensource package simultaneous localization mapping lgplv3 various cartographer system provides realtime simultaneous localization mapping slam 2d 3d across multiple platform sensor configuration apache20 c openvslam versatile visual slam framework 2clause bsd c slam wrapper openslam gmapping bsd c awesome list awesome robotic tooling contributing know software hardware project list yet contribution much welcome look contribution guideline learn add project list,"[('robot', 'vacuum'), ('back', 'top')]"
sichkar-valentyn/Reinforcement_Learning_in_Python,Python,reinforcement learning python implementing reinforcement learning rl algorithm global path planning task mobile robot navigation comparison analysis qlearning sarsa algorithm fo environment cliff mouse cheese doi related work sichkar v n reinforcement learning algorithm global path planning mobile robot 2019 international conference industrial engineering application manufacturing icieam sochi russia 2019 pp 15 doi 101109icieam20198742915 fulltext available also researchgatenetprofilevalentynsichkar sichkar v n effect various dimension convolutional layer filter traffic sign classification accuracy scientific technical journal information technology mechanic optic 2019 vol 19 nopp english doi 1017586222614942019193546552 fulltext available also sichkar vn comparison analysis knowledge based system navigation mobile robot collision avoidance obstacle unknown environment st petersburg state polytechnical university journal computer science telecommunication control system 2018 vol 11 nopp 6473 doi 1018721jcstcs11206 fulltext available also research result neural network knowledge based system task collision avoidance put separate repository available study semantic web language owl rdf knowledge representation alarmwarning system put separate repository available study neural network computer vision autonomous vehicle robotics put separate repository available description rl algorithm implemented python task global path planning mobile robot system said feedback agent act environment environment act agent step agent executes action receives observation new state receives reward environment receives action emits observation new state emits reward goal learn take action order maximize reward objective function following q q r maxqs q q value objective function next step q value objective function current position maxqs q choosing maximum value possible next step current position agent current action learning rate r reward got current position gamma reward decay discount factor next chosen position according next chosen action next chosen action major component rl method table weight qtable system state matrix q set possible state system system response weight different action trying go given environment mobile robot learns avoid obstacle find path destination point result qtable built looking value table possible see decision next action made agent mobile robot experimental result different environment sre shown described code supported lot comment guide step step entire idea implementation example consists three file envpy building environment obstacle agentbrainpy implementation algorithm runagentpy running experiment content code send appropriate folder rlqlearninge1py rlqlearninge2py rlqlearninge3py rlsarsae1py rlsarsae2py experimental result figure table page rl qlearning environment1 experimental result qlearning algorithm resulted chart environment1 final qtable value final shortest route environment1 rl qlearning environment2 experimental result qlearning algorithm resulted chart environment2 final qtable value final shortest route environment1 rl qlearning environment3 experimental result comparison analysis qlearning sarsa algorithm rl qlearning environment1 experimental result environment1 mobile robot goal obstacle qlearning algorithm resulted chart environment1 represents number episode via number step number episode via cost episode final qtable value final shortest route environment1 looking value table see decision next action made agent mobile robot sequence final action reach goal qtable filled knowledge following downrightdowndowndownrightdownrightdownrightdowndownrightrightupup experiment qlearning algorithm found shortest route reach goal environment1 consist 16 step found longest rout reach goal consists 185 step rl qlearning environment2 experimental result bigger environment2 obstacle qlearning algorithm resulted chart environment2 represents number episode via number step number episode via cost episode final qtable value final shortest route environment1 rl qlearning environment3 experimental result super complex environment3 lot obstacle comparison analysis qlearning sarsa algorithm mit license copyright c 2018 valentyn n sichkar githubcomsichkarvalentyn reference valentyn n sichkar reinforcement learning algorithm global path planning github platform doi 105281zenodo1317898,"[('mobile', 'robot'), ('experimental', 'result')]"
caelan/pybullet-planning,C++,pybulletplanning previously sspybullet repository pybullet utility function robotic motion planning manipulation planning task motion planning tamp repository wa originally developed pddlstream previously named stripstream approach tamp help yijiang huang stable documented fork pybulletplanning named pybulletplanning available pypi however new feature continue introduced first pybulletplanning citation caelan reed garrett pybullet planning 2018 installation install macos linux using git clone recursesubmodules cd pybulletplanning pybulletplanning pip install r requirementstxt pybulletplanning intended ongoing support python27 python3 make sure recursively update pybulletplanning submodules pulling new commits pybulletplanning git pull recursesubmodules ikfast compilation recommend using ikfast analytical inverse kinematics solver instead pybullet damped least square solver ikfast binding included following robot franka panda pybulletplanning cd pybullettoolsikfastfrankapanda python setuppy movo pybulletplanning cd pybullettoolsikfastmovo python setuppy pr2 pybulletplanning cd pybullettoolsikfastpr2 python setuppy create ikfast binding new robot following instruction ikfastpybind teststest pybullet pybulletplanning python c import pybullet tutorial testturtlebot python examplestestturtlebot heavily annotated simple example demonstrates creating pybullet simulation waiting user input useful macos programmatically creating object gettingsetting object base pose loading robot urdfs planning example kuka iiwa pick motion planning pybulletplanning python examplestestkukapick tutlebot base motion planning pybulletplanning python examplestestturtlebotmotion pr2 base arm motion planning pybulletplanning python examplestestpr2motion franka panda workspace planning pybulletplanning python examplestestfranka kinova movo workspace planning pybulletplanning python examplestestmovo cylinder se3 motion planning pybulletplanning python examplestestse3 pr2 teleoperation pybulletplanning python examplesteleoppr2 debug example tamp environment pybulletplanning python examplestestjson tamp benchmark pybulletplanning python examplestesttampxml gripper side grasp pybulletplanning python examplesgrippertestside gripper top grasp pybulletplanning python examplesgrippertesttop dropping particle pybulletplanning python examplestestwater pr2 cloning pybulletplanning python examplestestclone pddlstream example see following example fork gallery pddlstream tamp online tamp partial observability automated construction learning tamp ltamp pybullet resource pypi quickstart forum wordpress example binding bullet resource github,"[('pybulletplanning', 'python'), ('motion', 'planning')]"
vibertthio/awesome-machine-learning-art,Other,awesome machine learning art awesome robot art guitar curated list awesome project work people article resource creating art including music machine learning content people follow project article talk learning resource library todo people follow tero parviainen software developer music hacker writer building design tool future creativeai gene kogan artist programmer initiated ml4a hardmaru research scientist google brain tokyo douglas eck leader magenta google brain adam robert music researcher magenta google brain kyle mcdonald artist working code contributor openframeworks mario klingemann artist neurographer coder data collector archivist artist residence googleart memo akten artist researcher philomath working computation medium inspired intersection science spirituality robbie barrat artist working ai 19 year old work research lab stanford janelle shane research scientist optic play neural network daniel shiffman greatest source topic creative coding beginner samim currently working google designer code magician machine learning florafaunahumancomputerinteraction luba elliott curator researcher organizer several crative ai event nao tokui run creative lab qosmo tokyo creator ai dj project sofia crespo artist playing around botany microscopy neural network anna ridler artist specilizes machine learning drawing rebecca fiebrink creator wekinator interacitve machine learning tool sofia crespo artist based berlin work around microscopy memetics botany neural net project visual learn see eye artificial neural network making prediction live webcam input trying make sense see context seen see already know like u artdcgan art modified implementation dcgan focused generative art fast style transfer extremely easy example fast realtime style transfer browser dirty data happens use dirty data doe network learn anything doe learn anything interesting get everyone dance transfer person professional dancer immediately fall house usher 12minutes animation eash still generated neural net pix2pix trained artist ink drawing saw darkness neural network imago person one one neuron network switched drawing orientation neuralstylept pytorch style transfer implementation easy install run operating system ha extensive wiki guide companion script neural model music magenta open source research project exploring role machine learning tool creative process infinite drum machine thousand everyday sound organized using machine learning rappingneuralnetwork rap song writing recurrent neural network trained kanye west entire discography beat blender blend beat using machine learning create music fun new way melody mixer fun way explore music using machine learning performance rnn musicalkeyboard realtime performance reccurent neural network rnn browser neural beatbox rnnbased rhythm geration audio classification fun ai dj live performance featuring artificial intelligence ai dj playing alongside human dj honorary mention award prix ar electronica 2018 sornting game based musical machine learning algorithm interpolate different melody player ha listen music find right order sort song runn game based musical machine learning algorithm generate melody player ha finish sidescrolling game listen full song jazz rnn listen jazz created algorithm text generated recipe gpt3 creative fiction creative writing openais gpt3 model demonstrating poetry dialogue pun literary parody storytelling interactive wekinator allows anyone use machine learning build new musical instrument gestural game controller computer vision computer listening system free open source misc machine learning creativity design 2019 machine learning creativity design neurips 2018 workshop feature 35 paper mahcine learning art incluing wide range different discipline runway toolkit add artificial intelligence capability design creative platform autonomous trap 001 artist used ritual magic trap selfdriving car fake new generator model generate almost meaningful text title article talk machine learning artist aka ml4a gene kogan article compare emerging ml art case cv early 2000s artist machine intelligence program google brings artist engineer together realize project using machine intelligence musicvae creating palette musical score machine learning generating abstract pattern tensorflow bbc sound art artificial intelligence painting gan model sold 432500 usd auction note original code written robbie barrat verge talk joined mario klingemann anna ridler ai art christie think jason bailey interview huge obvious robbie barrat investigate controversial auction christie generative music work perspective website describing generative music interactively learning resource beginner tensorflowjs intelligence learning coding train machine learning tensorflow ml5js spell coding train beginner guide machine learning javascript coding train medium learning machine taught patrick hebron nyuitp fall 2017 machine learning musician artist rebecca fiebrink ml4a machine learning artist neural aesthetic itpnyu fall 2018 amazing course gene kogna full open mateirals machine learning art adanced neural style transfer creating art deep learning using tfkeras eager execution creative application deep learning tensorflow parag mital cs231n note accompany stanford computer science class cs231n convolutional neural network visual recognition library tensorflowjs zap javascript library training deploying ml model browser nodejs ml5js robot aim make machine learning approachable broad audience artist creative coder student p5js art guitar p5js clientside j platform empowers artist designer student anyone learn code express creatively web todo awesomelint add profile picture repo add nonprogrammers section contribute contribution welcome read contribution guideline first license content project licensed creative common attribution 30 license,"[('machine', 'learning'), ('neural', 'network')]"
Vincentqyw/cv-arxiv-daily,Python,contributorsurl forksurl starsurl issuesurl updated 20231019 usage instruction table content slam sfm visual localization keypoint detection image matching nerf slam publish datetitleauthorspdfcode 20231017openstructure structural benchmark dataset slam algorithmsyanyan li etal231010931 back top sfm publish datetitleauthorspdfcode 20231009colmappcd opensource tool fine imagetopoint cloud registrationchunge bai etal231005504 back top visual localization publish datetitleauthorspdfcode 20231018evaluating fairness discriminative foundation model computer visionjunaid ali etal231011867 back top keypoint detection publish datetitleauthorspdfcode 20231012unipose detecting keypointsjie yang etal231008530 back top image matching publish datetitleauthorspdfcode 20231018rgm robust generalist matching modelsongyan zhang etal231011755 back top nerf publish datetitleauthorspdfcode 20231018vqnerf neural reflectance decomposition editing vector quantizationhongliang zhong etal231011864 back top,"[('publish', 'datetitleauthorspdfcode'), ('back', 'top')]"
rgommezz/react-native-chatgpt,Other,reactnativechatgpt npm npm bundle size platform io android web license mit run expo react native wrapper around handle authentication streamed response keeping track conversation without need server feature disclaimer try installation api chatgptprovider usechatgpt contributing credit license feature fire 100 clientside easily integrate powerful chatbot app without need custom backend zap streaming support experience lightningfast response soon available similar chatgpt web playground robot conversational chatgpt remembers said earlier keep conversation going sending conversationid messageid along message iphone expo compatible need eject enjoy component hammerandwrench type safe fully written computer snack example snack link provided try browser disclaimer official chatgpt library effort make easier integrate chatgpt react native application please treat experimental use caution production wink try run snack example app see action source code example example folder installation sh npm install reactnativechatgpt expo also need install reactnativewebview exposecurestore sh npx expo install reactnativewebview exposecurestore additional step needed bare react native apps also need install reactnativewebview reactnativevectoricons exposecurestore sh npm install reactnativewebview reactnativevectoricons exposecurestore installation completes also follow additional instruction set library reactnativewebview reactnativevectoricons exposecurestore api library export provider component hook main api chatgptprovider provider component placed root react native application shown example jsx import chatgptprovider reactnativechatgpt import app app const root return prop following chatgptprovider prop allow customize appearance modal handle authentication chatgpt timeouts chatbot request name required type description child yes reactnode application component tree containerstyles stylepropviewstyle extra style applied webview container backdropstyles stylepropviewstyle extra style applied backdrop view default us semitransparent background color rgba00 05 rendercustomcloseicon closemodal void reactnode custom close button renderer placed top webview default render black cross x top right corner forget hook closemodal function provided argument onpress event requesttimeout number maximum amount time willing wait normal request cancelling default 30000 streamedrequesttimeout number maximum amount time willing wait streamedbased request cancelling default 15000 usechatgpt hook return object following property status status initializing loggedout gettingauthtoken authenticated initializing indicates library starting assume anything regarding authentication state wait value change either loggedout authenticated loggedout reflects either authenticated yet chatgpt access token ha expired gettingauthtoken transitory state last second right login modal dismissed reflects fact library getting chatgpt auth token background use status render loading indicator authenticated signal logged status able interact chat bot chatgpt issue jwt token expire indays would reauthenticate approximately per week library report changing status authenticated loggedout login function login void function executed open modal trigger chatgpt auth flow successful completion status change loggedout gettingauthtoken second finally authenticated sendmessage core function library sends message chatbot return response used two different way depending argument passed standard function sendmessage message string option conversationid string messageid string promise message string messageid string conversationid string return promise response simplest way use slower process response wait full response available want track conversation use conversationid messageid response object pas sendmessage server reject request timeout fire chatgpterror thrown jsx import react react import button reactnative import usechatgpt chatgpterror reactnativechatgpt const example const sendmessage usechatgpt const handlesendmessage async try const message conversationid messageid await sendmessage outline possible topic seo article user ha read response send another message const message followup await sendmessage elaborate first suggestion conversationid messageid catch error error instanceof chatgpterror handle error accordingly return streaming function sendmessageargs message string option conversationid string messageid string onaccumulatedresponse response message string messageid string conversationid string isdone boolean void onerror err chatgpterror void void accepts callback function constantly invoked response update version useful scenario response need displayed soon becomes available similar way chatgpt api work web playground want track conversation use conversationid messageid response object pas sendmessage check isdone property response object detect response complete error occurs onerror callback called chatgpterror jsx import react usestate react import button reactnative import usechatgpt chatgpterror reactnativechatgpt const streamexample const sendmessage usechatgpt const response setresponse usestate const handlesendmessage sendmessage message outline possible topic seo article onaccumulatedresponse message isdone setresponsemessage isdone response complete send another message onerror e handle error accordingly return response warning aware chatgpt backend implement rate limiting mean send many message row may get error 429 status code contributing see contributing guide learn contribute repository development workflow credit unofficial nodejs client served inspiration openai creating chatgpt license mit raul gomez acuna found project interesting please consider following twitter,"[('conversationid', 'messageid'), ('react', 'native')]"
PRBonn/depth_clustering,C++,depth clustering travislink coverallslink fast robust algorithm segment point cloud taken velodyne sensor object work available velodyne sensor ie 16 32 64 beam one check video show object outlined orange prerequisite recommend using virtual environment catkin workspace catkinws readme assume set throughout readme please update command accordingly needed using pipenv install pip set workspace catkin regardless system need following step bash cd navigate workspace pipenv shell fancy start virtual environment pip install catkintools install catkintools building mkdir src create src dir already need clone repo git clone srcdepthclustering system requirement need opencv qglviewer freeglut qt4 qt5 optionally pcl andor following section contain installation command various ubuntu system click fold expand ubuntu 1404 install package bash sudo apt install libopencvdev libqglviewerdev freeglut3dev libqt4dev ubuntu 1604 install package bash sudo apt install libopencvdev libqglviewerdev freeglut3dev libqt5dev ubuntu 1804 install package bash sudo apt install libopencvdev libqglviewerdevqt5 freeglut3dev qtbase5dev might also need latest googletest binary installed system ubuntu shipped binary default would install adapt build script build source optional requirement want use pcl cloud andor use data acquisition install following optional pcl needed saving cloud disk optional needed subscribing topic build catkin package assume code catkin workspace cmake know existence catkin already taken care followed instruction build project folder bash mkdir build cd build cmake make j4 ctest vv run unit test optional also built catkintools code inside catkin workspace bash catkin build depthclustering p case use catkin build shouldcatkintoolsdocs reconsider decision run see example node well standalone binary example include showing axis oriented bounding box around found object start showobjects prefix well node save segment disk example easy tweak need run real world data go folder binary cd pathtoprojectbuilddevellibdepthclustering frank moosmann velodyne slam dataset get data mkdir data wget datamoosmannzip unzip datamoosmannzip data rm datamoosmannzip run binary show detected object showobjectsmoosmann path datascenario1 alternatively run data qt gui video qtguiapp gui shown click openfolder button choose folder unpacked png file eg datascenario1 navigate viewer arrow control seen screen data also example run processing kitti data input follow help output example detail also load data gui make sure loading file correct extension txt bin kitti png moosmann data documentation able get doxygen documentation running cd doc doxygen doxyfileconf related publication please cite related paper use code inproceedingsbogoslavskyi16iros title fast range imagebased segmentation sparse 3d laser scan online operation author bogoslavskyi c stachniss booktitle proc international conference intelligent robot system iros year 2016 url articlebogoslavskyi17pfg title efficient online segmentation sparse 3d laser scan author bogoslavskyi c stachniss journal pfg journal photogrammetry remote sensing geoinformation science year 2017 page 112 url commitslink catkintoolsdocs,"[('catkin', 'workspace'), ('install', 'package')]"
jhu-lcsr/handeye_calib_camodocal,C++,camodocal hand eye calibration node integrating hand eye calibration implemented camodocal see stack exchange question explaining hand eye calibration work example us include determining exact transforms position orientation camera attached floor relative robot arm camera attached robot arm tip relative robot arm set camera attached moving vehicle camodocal implement two robot arm bolted together keynote presentation explaining many detail hand eye calibration interested practical code instruction calibrate robot found two common solution hand eye calibration2 axzb hand eye calibration solution4 feeding data camodocal measurement taken different time position orientation narrow possible transforms represent unknown x record list many transforms b taken different time step relative first time step rotation axisangle unitaxisangle format xaxisyaxiszaxisangle unitaxis1 axisangle angle translation normal xyz format pas vector estimatehandeyescrew return x form 4x4 transform estimate camodocal hand eye calibration details5 using robot arm move around variety pose orientation make sure data source lag behind settle record pair pose robot base robot tip eyecamera base marker fiducial ar tag viewing save yaml file result sure load result system using data formatted rotation matrix dual quaternion quaternion translation roll pitch yaw degenerate often inaccurate installation linux dependency installed via script roboticssetup repository ubuntu 1404 ubuntu 1604 macos x use homebrew homebrewrobotics tap install dependency linux macos completed linux macos step follow normal source package installation procedure catkin build dependency installing manually sure follow instruction library specific step required depending indigo kinetic opencvorwith recommended nonfree component note handeyecalibcamodocal doe call nonfree component user difficulty configuring cmake compile install dependency without opencv3 put nonfree component opencvcontrib eigen3 ceressolver glog encounter error providing findglogcmake cmakemodulepath try installing glog source gflags example example prerecorded transforms example folder config file expected handeyecalibcamodocallaunch folder default work try checking folder launchhandeyeexamplelaunch configures file transforms loaded saved well rostopics reading live data exampletransformpairsoutputyml contains set transforms record launch script input solver examplecalibratedtransformyml transform final result found solver verify software working run roslaunch handeyecalibcamodocal handeyeexamplelaunch see output like following info refinement h12 0962926 0156063 022004 000802514 0176531 0981315 00765322 00242905 0203985 0112539 0972484 00550756 01 cere solver report iteration 89 initial cost 1367791e01 final cost 6005694e04 termination convergence info refinement h12 0980558 0184959 00655414 000771561 00495028 00900424 0994707 00836796 0189881 0978613 00791359 000867321 01 result eelink armarker0 0980558 0184959 00655414 000771561 00495028 00900424 0994707 00836796 0189881 0978613 00791359 000867321 01 translation xyz 000771561 00836796 000867321 rotation wxyz 0046193 00871038 0672938 0733099 result armarker0 eelink 0980558 0184959 00655414 000771561 00495028 00900424 0994707 00836796 0189881 0978613 00791359 000867321 01 inverted translation xyz 000507012 00145954 0083056 inverted rotation wxyz 0046193 00871038 0672938 0733099 0046193 00871038 0672938 0733099 writing calibration homecpaxtoncatkinwssrchandeyecalibcamodocallaunchcalibratedtransformyml handeyecalibcamodocal1 process ha finished cleanly log file homecpaxtonrosloga829db0af96b11e6b1ddfc4dd43dd90bhandeyecalibcamodocal1log process machine died roslaunch exit shutting processing monitor shutting processing monitor complete done full terminal session found exampleterminalsessiontxt recording transforms record session modify launchhandeyefilelaunch specify topic publish pose wish calibrate run roslaunch handeyecalibcamodocal handeyefilelaunch difficulty cover every problem seen troubleshooting section also help see stack exchange question explaining hand eye calibration work run sure back transformpairsinputyml calibratedtransformyml lose transforms position saved get transforms camera object see camera calibrated possible estimate transform camera printed pattern known dimension dont recommend using checkerboard hand eye calibration pattern ambiguous use something like artoolkitorg provide instruction set camera create pattern used generate transforms troubleshooting saved file loading trouble finding saved file default working directory application folder try looking sure also check launch file typically launchhandeyefilelaunch determines transforms loaded running robot saved file well save file placed collecting enough data recommend collect least 36 accurate transforms good calibration fails converge ie get good result probably transforms flipped wrong way much noise data find sufficiently accurate calibration eliminating sensor noise one simple method help deal problem create new node read data want read save rolling average pose help stabilize result better method kalman filter could handle even better take rolling average make sure time take data robot ha set single position entire duration time rolling average taken error throw result example much noise taking data much noise probably see following error normalization could handled rotation translation probably either aligned passed properly mean probably much variation data reading get accurate solution example watch pose ar tag wobble little flip prevent accurate solution found one way help ensure system completely stationary interpolate average pose across several frame ensuring system completely stationary recording frame finally moving next position repeating process camera must calibrated camera calibration important calibrated pose fed algorithm inaccurate correspond thus algorithm able find even decent approximate solution exit printing error robot camera must rigidly fixed hand eye calibration solves rigid body transform whole system rigidly fixed transform solving constantly changing thus impossible find accurately example camera fixed robot base check robot securely bolted surface tighten bolt also ensure camera securely rigidly fixed place similar fasion check wobbling make sure wait everything become still taking data point sanity check physically measuring slight distortion variation time stamp arm move slightly hold still throw one additional way test arm go two distant position length change checkerboard pose equal length change end effector tip pose assuming keep orientation constant sanity check via simulation youre concerned bug algorithm run simulation vrep gazebo vrep python script repo verify work since avoid physical measurement problem could consider taking real data incorporating real data narrow source problem sanity check transforms loading file loading file modified hand check matrix transposed inverted unusual case even 3x3 rotation component 4x4 rotation matrix may transposed example output example output expect run executed successfully writing pair homecpaxtoncatkinwssrchandeyecalibcamodocallaunchtransformpairsinputyml q info 1473813682393291696 calculating calibration info refinement h12 000160534 099916 00409473 000813108 000487176 00409546 0999149 010692 0999987 000140449 000493341 00155885 01 cere solver report iteration 99 initial cost 1882582e05 final cost 1607494e05 termination convergence info refinement h12 000282176 0999009 00444162 000746998 00121142 00443789 0998941 0101617 0999923 000335684 0011977 0000671928 01 result 000282176 0999009 00444162 000746998 00121142 00443789 0998941 0101617 0999923 000335684 0011977 0000671928 01 translation 000746998 0101617 0000671928 rotation 048498 0513209 0492549 0513209 note run perfect one error ofmm motion ofm cost one key piece information output cost function metric representing estimate solution accuracy initial cost 1882582e05 final cost 1607494e05 really good run calibration dead final cost order 1e13 1e14 result let take look result translation 000746998 0101617 0000671928 rotation 048498 0513209 0492549 0513209 translation xyz format rotation quaternion format important note tool camodocal use eigen quaternion format order four value stored quaternion wxyz launch file comparison store data order xyzw mean copying result must move first entry rotation end example allnumbers correctly put launch file node pkgtf typestatictransformpublisher nameendpointtomarker args 000746998 0101617 0000671928 0513209 0492549 0513209 048498 arg eeframe endpointmarker 10 question need know try running question please create diagram use case understand setting equation create github issue see stack exchange question explaining hand eye calibration work example diagram author andrew hundt athundtgmailcom felix jonathan fjonath1jhuedu acknowledgement handeye calibration using dual quaternion articledaniilidis1999hand titlehandeye calibration using dual quaternion authordaniilidis konstantinos journalthe international journal robotics research volume18 number3 pages286298 year1999 publishersage publication camodocal lionel heng bo li marc pollefeys camodocal automatic intrinsic extrinsic calibration rig multiple generic camera odometry proc ieeersj international conference intelligent robot system iros 2013 lionel heng mathias burki gim hee lee paul furgale roland siegwart marc pollefeys infrastructurebased calibration multicamera rig proc ieee international conference robotics automation icra 2014 lionel heng paul furgale marc pollefeys leveraging imagebased localization infrastructurebased calibration multicamera rig journal field robotics jfr 2015 reference strobl k hirzinger g 2006 optimal handeye calibration 2006 ieeersj international conference intelligent robot system pp 46474653 october 2006 technical university munich tum camp lab wiki k daniilidis handeye calibration using dual quaternion int journal robs research vol 18 nopp 286298 june 1999 e bayrocorrochano k daniilidis g sommer motoralgebra 3d kinematics case handeye calibration journal mathem imaging vision vol 13 nopp 79100 oct 2000 f dornaika r horaud simultaneous robotworld hand eye calibration ieee trans robs aut vol 14 nopp 617622 august 1998 note figure text mixed source including presentation author various paper referenced tum wiki,"[('hand', 'eye'), ('eye', 'calibration')]"
nickcharron/waypoint_nav,C++,waypointnav package performs outdoor gps waypoint navigation navigate building map avoiding obstacle navigate continuously goal stop goal repo made run clearpath husky imu novatel gps sick lms111 lidar package us combination following package robotlocalizationdocs outdoorwaypointnav package within waypointnav includes following custom node gpswaypoint read waypoint file convert waypoints point map frame send goal movebase gpswaypointcontinuous1 gpswaypointcontinuous2 continuous navigation waypoints using two seperate controller collectgpswaypoint allow user drive robot around collect waypoints calibrateheading set heading robot startup fix issue poor magnetometer data plotgpswaypoints save raw data gps plotting purpose gpswaypointmapping combine waypoint navigation mandala robotics 3d mapping software autonomous 3d mapping video demonstration found outdoor navigation rvizgazebo simulation continuous mapping mode mapping waypoints calibrating heading error important note please contact clearpath robotics question package instead email nicholasccharrongmailcom get lot question asking help repo unfortunately time respond cannot help basic rosprogramming question question answered reading doc please make sure read doc watched video link asking question regarding calibration node heading calibration node required magnetometer calibrated correctly instruction performing magnetometer calibration hard come often calibrated correctly use hack heading calibration node heading correct launching waypoint navigation node see video temporarily solve problem must run every time start package recommend instead perform proper magnetometer calibration continuous waypoint navigation software wa tested simulation work well simulation however still work properly test outdoor please submit pull request update package andor fix bug code meant tutorial perform waypoint navigation using common package ha tested robustness used final product looking final working gps waypoint navigation solution please contact clearpath robotics recently developped commercial solution,"[('waypoint', 'navigation'), ('calibration', 'node')]"
Sollimann/CleanIt,Other,cleanit build status codecov minimum rustc 145 version maintenance github pullrequests github pullrequests closed viewcount license mit opensource autonomy software rustlang grpc roomba series robot vacuum cleaner img src p motivation motivation build complete diy autonomy software scratch motion planning guidance motion control slam mission control 2d3d visualization etc realtime clientserver communication stream using async grpc intercommunication distributed compute contribution welcome would like contribute work andor idea feel free check project backlog run roomba client api run server cargo run bin streamingserver run client cargo run bin roombaclient structure project layout bash cargotoml workspace cargolock api libbin client server autonomy bin mission motion slam perception risk driver lib roomba realsense rplidar raspberrypi proto lib roombaserviceproto messagesproto typesproto robotstateproto map2dproto setup bin config main visualization bin urdf map camera cratepackage layout bash cargotoml cargolock src mainrs librs bin anotherexecutablers test someintegrationtestsrs bench simplebenchrs example simpleexamplers prerequisite software linux bash sudo aptget install libudevdev pkgconfig user serial permission required connect create serial add user dialout group get permission bash sudo usermod g dialout user logout login take effect macos bash brew install todo hardware irobot createor irobot roomba 6xx series serial usb cable raspberry pi4gb intel realsense d435 d435i depth camera,"[('github', 'pullrequests'), ('autonomy', 'software')]"
Firmament-Autopilot/FMT-Firmware,Other,overview firmament fmt advanced autopilot system designed modelbased design mbd used quickly easily build control system autonomous vehicle uav car ship robot etc system mainly composed two part fmtfirmware stable high performance embedded system designed cc fmtmodel simulation framework algorithm library designed matlabsimulink documentation user guide download git clone recursive shallowsubmodules note fmtfirmware contains submodules use recursive download submodule well feature high development efficency achieved modelbased deisign debug easier stable high performance embedded system designed cc powerful simulation framework various algorithm library designed matlabsimulink auto code generation simulink model adapted different hardware platform arm amd intel etc excellent realtime performance based rtthread rtos active community large number thirdparty component support widely used opensource hardware pixhawk fmuv2 fmuv5 supported crossplatform toolchain support windowslinuxmac support mavlink qgroundcontrol architecture fmt firmware architecture shown figure hardware current supported hardware amov icf5 cuav v5 pixhawk4 fmuv5 pixhawk fmuv2 hex cubeorange qemu vexpressa9 drone hardware equipped fmt amovlab mfp450 license apache20,"[('system', 'designed'), ('stable', 'high')]"
stack-of-tasks/pinocchio,C++,pinocchio instantiates stateoftheart rigid body algorithm polyarticulated system based revisited roy featherstone algorithm besides pinocchio provides analytical derivative main rigidbody algorithm like recursive newtoneuler algorithm articulatedbody algorithm pinocchio first tailored robotics application used extra context biomechanics computer graphic vision etc built upon eigen linear algebra fcl collision detection pinocchio come python interface fast code prototyping directly accessible conda pinocchio heart various robotics software crocoddyl opensource efficient differential dynamic programming solver robotics stackoftasks opensource versatile hierarchical controller framework humanoid path planner opensource software motion manipulation planning want learn pinocchio internal behavior main feature invite read related paper online documentation want dive pinocchio directly one single line sufficient assuming conda conda install pinocchio c condaforge via pip currently available linux pip install pin table content pinocchio main feature documentation example tutorial performance ongoing development visualization citing pinocchio question issue credit opensource project relying pinocchio acknowledgment pinocchio main feature pinocchio fast c template library cache friendly automatic code generation support via cppadcodegen pinocchio versatile implementing basic advanced rigid body dynamic algorithm forward kinematics analytical derivative forwardinverse dynamic analytical derivative centroidal dynamic analytical derivative support multiple precision arithmetic via boostmultiprecision similar framework computation kinematic dynamic regressors system identification much support modern opensource automatic differentiation framework like cppad casadi pinocchio flexible header c 980311141720 compliant pinocchio extensible pinocchio multithread friendly pinocchio reliable extensively tested unittests simulation realworld robotics application pinocchio supported tested window mac x unix linux see build status documentation online pinocchio documentation last release available cheat sheet pdf main function algorithm found example provide basic example using pinocchio python example directory additional example introducing pinocchio also available documentation tutorial pinocchio come large bunch tutorial aiming introducing basic tool robot control tutorial training document listed also consider interactive jupyter notebook set tutorial developed nicolas mansard yann de montmarin pinocchio continuous integration pinocchio constantly tested several platform distribution reported ci performance pinocchio exploit best sparsity induced kinematic tree robotics system thanks modern programming language paradigm pinocchio unroll computation directly compile time allowing achieve impressive performance large range robot illustrated plot obtained standard laptop equipped intel core i7 cpu 24 ghz benchmark mainly capacity pinocchio exploit best cpu capacity using advanced code generation technique refer technical paper addition introspection may also help understand compare performance modern rigid body dynamic library ongoing development want follow current development directly refer devel branch master branch contains latest release new pull request submitted devel branch installation pinocchio easily installed various linux ubuntu fedora etc unix distribution mac x bsd etc please refer installation procedure need python binding pinocchio may prefer install conda please follow procedure described pinocchio also deployed may follow deployment status interested using pinocchio system andor package integrate ecosystem recommend installation pinocchio via binary distributed via ppa install pinocchio using sudo apt install rosrosdistropinocchio installs pinocchio hppfcl support python binding depend pinocchio packagexml config dependpinocchiodepend include via cmake findpackagepinocchio required include support hook discover package ros1 ros2 example found please note advise always include pinocchiofwdhpp header first include avoid compilation error differing boostvariant size ros1 ros2 melodic foxy noetic galactic humble rolling visualization pinocchio provides support many opensource free visualizer gepetto viewer c viewer based openscenegraph python binding blender export see c example mixing pinocchio gepetto viewer meshcat supporting visualization python embedded inside browser panda3d supporting visualization python embedded inside browser rviz supporting visualization python interact package many external viewer also integrated see example information citing pinocchio cite pinocchio academic research please use following bibtex entry bibtex inproceedingscarpentier2019pinocchio titlethe pinocchio c library fast flexible implementation rigid body dynamic algorithm analytical derivative authorcarpentier justin saurel guilhem buondonno gabriele mirabel joseph lamiraux florent stasse olivier mansard nicolas booktitleieee international symposium system integration sii year2019 following one link github codebase bibtex miscpinocchioweb author justin carpentier florian valenza nicolas mansard others title pinocchio fast forward inverse dynamic polyarticulated system howpublished year 20152021 algorithm analytical derivative rigidbody dynamic algorithm detailed bibtex inproceedingscarpentier2018analytical title analytical derivative rigid body dynamic algorithm author carpentier justin mansard nicolas booktitle robotics science system year 2018 question issue question issue may either directly open new question new issue directly contact u via mailing list pinocchioinriafr credit following people involved development pinocchio warmly thanked contribution justin carpentier inria main developer manager project nicolas mansard laascnrs initial project instructor guilhem saurel laascnrs continuous integration deployment joseph mirabel eureka robotics lie group hppfcl implementation antonio el khoury wandercraft bug fix gabriele buondono laascnrs feature extension bug fix python binding florian valenza astek core development hppfcl support wolfgang merkt university oxford integration support rohan budhiraja laascnrs feature extension loic esteve inria conda integration support igor kalevatykh inria panda3d viewer support matthieu vigne wandercraft meshcat viewer support robin strudel inria feature extension francois keith cea window support sarah el kazdadi inria multiprecision arithmetic support nicolas torres alberto inria feature extension etienne arlaud inria rviz viewer support wilson jallet laascnrsinria extension python binding fabian schramm inria core developper shubham singh ut austin secondorder inverse dynamic derivative stephane caron inria core developper participated development pinocchio please add name contribution list opensource project relying pinocchio crocoddyl software realize model predictive control complex robotics platform tsid software implement task space inverse dynamic qp hpp sdk implement motion planner humanoid robot jiminy simulator based pinocchio ocs2 toolbox optimal control switched system ocs2 trifingersimulation trifinger robot simulation robot perform rl manipulation casadikindyn iit package generation symbolic sx expression robot kinematics dynamic acknowledgment development pinocchio actively supported gepetto team laascnrs willow team inria,"[('analytical', 'derivative'), ('rigid', 'body')]"
aixed/WeChat-Hook,Other,pchook pc wechat hook technology qq 364831018 telegram aixed telegramgroup new current pc39223pc wechat 39223 interface download new wechatselect version 38041 demo example tutorial interface doc history pc345223601836516370293703037523376443804139223 pc wechat 345223601836516370293703037523376443804139223 interface code build e593download e593exe development environment install bulid e file download addr reference thanks call project provided tutorial zmrbak example database backup code zmrbak web video helped wa web wechat protocol call end p added array byte scan tool technology code,"[('pc', 'wechat'), ('pchook', 'pc')]"
vectr-ucla/direct_lidar_inertial_odometry,C++,direct lidarinertial odometry lightweight lio continuoustime motion correction ieee icra arxiv video presentation dlio new lightweight lidarinertial odometry algorithm novel coarsetofine approach constructing continuoustime trajectory precise motion correction feature several algorithmic improvement predecessor dlo wa presented ieee international conference robotics automation icra london uk 2023 instruction sensor setup compatibility dlio ha extensively tested using variety sensor configuration currently support ouster velodyne hesai livox lidar point cloud input type sensormsgspointcloud2 6axis imu input type sensormsgsimu livox sensor specifically please use featurelivoxsupport branch latest livoxrosdriver2 package xferformatand point cloud input type livoxrosdriver2custommsg see best performance extrinsic calibration lidarimu sensor robot centerofgravity inputted cfgdlioyaml exact value unavailable rough lidartoimu extrinsics also used note however performance degraded imu intrinsics also necessary best performance several opensource calibration tool get value value also go cfgdlioyaml practice however testing work using default ideal value performing initial calibration procedure fine also note lidar imu sensor need properly timesynchronized otherwise dlio work recommend using lidar integrated imu ouster simplicity extrinsics synchronization dependency following ha verified compatible although configuration may work ubuntu 2004 noetic roscpp stdmsgs sensormsgs geometrymsgs navmsgs pclros c 14 cmake 3124 openmp 45 point cloud library 1100 eigen 337 sh sudo apt install libompdev libpcldev libeigen3dev dlio support ros1 default ros2 using featureros2 branch compiling compile using catkintools package via sh mkdir w cd w mkdir src catkin init cd src git clone catkin build execution compiling source workspace execute via sh roslaunch directlidarinertialodometry dliolaunch rviztrue false pointcloudtopicrobotlidar imutopicrobotimu ouster velodyne hesai sensor sh roslaunch directlidarinertialodometry dliolaunch rviztrue false livoxtopiclivoxlidar imutopicrobotimu livox sensor sure change topic name corresponding topic alternatively edit launch file directly desired successful see following output terminal service save dlio generated map pcd format call following service sh rosservice call robotdliomapsavepcd leafsize savepath test data convenience provide test data 12gb 1m 13 ouster os132 aggressive motion test motion correction scheme 165gb 4m 21 ouster osdome longer trajectory outside lot tree try two datasets deskewing citation found work useful please cite manuscript bibtex articlechen2022dlio titledirect lidarinertial odometry lightweight lio continuoustime motion correction authorchen kenny nemiroff ryan lopez brett journal2023 ieee international conference robotics automation icra year2023 pages39833989 doi101109icra48891202310160508 acknowledgement thank author fastgicp nanoflann opensource package kenji koide masashi yokozuka shuji oishi atsuhiko banno voxelized gicp fast accurate 3d point cloud registration ieee international conference robotics automation icra ieee 2021 pp 11 05411 059 jose luis blanco pranjal kumar rai nanoflann c headeronly fork flann library nearest neighbor nn kdtrees 2014 would also like thank helene levy david thorne help data collection many thanks shrijitsingh99 porting dlio ros2 license work licensed term mit license,"[('motion', 'correction'), ('point', 'cloud')]"
OpenCyphal-Garage/libcyphal,C++,cyphal stack c build status forum sonarqube badge sonarqube coverage documentation warning libcyphal v1 yet complete workinprogress portable reference implementation cyphal protocol stack c embedded system linux posixcompliant rtoss cyphal lightweight protocol designed reliable communication aerospace robotic application robust vehicular network,"[('stack', 'c'), ('cyphal', 'stack')]"
UMich-BipedLab/LiDARTag,C++,lidartag overview package lidartag described paper lidartag realtime fiducial tag system point cloud pdfarxiv work accepted ieee robotics automation letter published imagebased fiducial marker useful problem object tracking cluttered textureless environment camera multisensor calibration task visionbased simultaneous localization mapping slam however stateoftheart fiducial marker detection algorithm rely consistency ambient lighting best knowledge existing fiducial marker point cloud paper introduces lidartag novel fiducial tag design detection algorithm suitable lidar point cloud proposed method run realtime process data 100 hz faster currently available lidar sensor frequency additionally software work different marker size cluttered indoors spacious outdoors even entirely dark lidar sensor nature rapidly changing ambient lighting affect detection lidartag therefore lidartag used tandem camerabased marker address issue image sensitive ambient lighting author jiunnkai bruce huang shoutian wang maani ghaffari jessy w grizzle maintainer bruce jk huang brucejkhatgmailcom affiliation biped lab university michigan package ha tested melodic ubuntu 1804 note detailed introduction updated shortly sorry inconvenient issue encounter issue would happy help cannot find related one existing issue please open new one try best help abstract imagebased fiducial marker useful problem object tracking cluttered textureless environment camera multisensor calibration task visionbased simultaneous localization mapping slam stateoftheart fiducial marker detection algorithm rely consistency ambient lighting paper introduces lidartag novel fiducial tag design detection algorithm suitable light detection ranging lidar point cloud proposed method run realtime process data 100 hz faster currently available lidar sensor frequency lidar sensor nature rapidly changing ambient lighting affect detection lidartag hence proposed fiducial marker operate completely dark environment addition lidartag nicely complement compatible existing visual fiducial marker apriltags allowing efficient multisensor fusion calibration task propose concept minimizing fitting error point cloud marker template estimate marker pose proposed method achieves millimeter error translation degree rotation due lidar return sparsity point cloud lifted continuous function reproducing kernel hilbert space inner product used determine marker id experimental result verified motion capture system confirm proposed method reliably provide tag pose unique id code rejection false positive validated google cartographer dataset outdoor honda h3d datasets implementation coded c available video please checkout introduction video quick view lidarbased marker used tandem camerabased marker address issue image sensitive ambient lighting lidartags successfully applied lidarcamera extrinsic calibration paper github figure show visualization lidartags two different size full point cloud scan system run realtime 100 hz handling full scan point cloud achieves millimeter accuracy translation degree error rotation tag decoding accuracy 997 lidar robust lighting following show lidartags detected several challenging lighting condition dingy environment completely dark environment half tag overexposed rapid changing ambient light overall pipeline system contains three part tag detection pose estimation tag decoding detection step take entire lidar scan 120000 point 32beam velodyne ultra puck lidar output collection likely payload point lidartag next tag optimal pose minimizes img src cost inthough rotation tag normal vector tag may img src resolved decoding process tag id decoded precomputed function library decoded tag remove rotation ambiguity normal package analysis present performance evaluation lidartag ground truth data provided motion capture system 30 motion capture camera also extensively analyze step system spacious outdoor cluttered indoor environment additionally report rate false positive validated indoor google cartographer dataset outdoor honda h3d datasets pose decoding analysis decoding accuracy rkhs method pose accuracy fitting method ground truth provided motion capture system 30 motion capture camera distance meter translation error millimeter rotation error misalignment angle 23 degree computation time step analysis table average datasets collected describes computation time step indoors outdoors cluster rejection analysis table take account data collected show number rejected cluster step different scene additionally also report false positive rejection google cartographer dataset honda h3d datasets doublesum analysis original double sum 18 slow achieve realtime application table compare different method compute double sum tbb stand threading building block library intel additionally also apply kd tree data structure speed querying process kd tree however doe produce fast enough result unit table millisecond false positive analysis table show number false positive rejection proposed algorithm validated rejection rate indoor google cartographer dataset outdoor honda h3d datasets former ha two vlp16 velodyne lidar latter ha one 64beam velodyne lidar required library package package used lidartag package seems many follow step take 30 min instal including building time took awhile get everything right summarize installed however may choose way want install themplease install melodicplease install tbb library may need modify cmakeliststxt according installationplease install nlopt may need midify cmakeliststxt according installationplease download lidartagmsgs place catkin workspacethe issue eigen version ha fixed using internal eigen library instead systemwise eigen library installation related library melodic please directly follow instruction official website tbb library installation original tbb package intel doe support cmake therefore use another repository support cmake make life easier git clone mkdir build cd build cmake cmake build config release jsudo cmake build target install nlopt library installation please direct follow instruction official website follow git clone gitgithubcomstevengjnlopt cd nlopt mkdir build cd build cmake make sudo make install lidartag package place lidartagmsgs catkin workspace installed required library directly catkinmake package source develsetupbash roslaunch lidartag lidartagtwotagslaunch rosbag play l q bagfilebag datasets result quantitative result would like see table paper generated please follow belowdownload folderput lidartagmatlabpaperdatarun gentablem located lidartagmatlab regenerate result paper scratch please download two datasets belowplease download bagfiles hereplease download motion capture data herechange outputpath launch fileroslaunch lidartag lidartagthreetagslaunch note target size quantitative result folder 122 qualitative result please download bagfiles roslaunch lidartag lidartagtwotagslaunch note target size qualitative result folder 08051 061 false positive rejection please download google cartographer dataset honda h3d datasets also provide different launch file cartographerlaunch h3dlaunch different datasets due different published lidar topic different outputpath also wrote parsing script pas bin file rosbag please let know anyone need running please download qualitative bagfiles catkinmake package source develsetupbash roslaunch lidartag lidartagtwotagslaunch rosbag play l q bagfilebag see result rosrun rviz rviz directly open lidartagrviz lidartagrviz folder note package provides several launch file directly run package please remember change tagsizelist launch file according target size bag file playing marker size different launch file lidartagsmallestlaunch smallest tag 061 lidartagtwotagslaunch two smaller tag 061 08 lidartagthreetagslaunch tag 08 061 122 please note clearance around marker larger img src img src size largest marker therefore recommended use smaller tag indoor environment building marker provide tag16h6c5 apriltag3 three size 061 085 12 want use provided marker easyattach fiducial marker squared cardboard plexiglas place marker inside yellow region note size must one 061 0805 122 meter regenerate function dictionary please follow herefind 3d object support marker could box easel please note clearance around marker larger img src img src size largest marker therefore recommended use smaller tag indoor environmentsfollow step run package building customized marker would like use customized marker ie different type marker different size please follow step build function dictionarygit clone add matlabutils buildlidartaglibrarym add matlabutils matlab pathedit optsimgpath buildlidartaglibrarym according put image fiducial markersmeasure size marker img srcopen buildlidartaglibrarym lidartagmatlabfunctiondictionary changeoptstargetsize marker size run buildlidartaglibrarym generate function libraryput generated function dictuionary lidartaglibwhen placing generated function dictionary lidartaglib please put different size different subfolders13 put ascending order example three size 06 08 12 three subfolders1inside lib folder please place follow lidartaglib0 put 06size lidartaglib1 put 08size lidartaglib2 put 12size ii follow building marker note function used testing rkhs released lidartagmatlabfunctiondictionary parameter launch file split parameter two different launch file lidartagoutdoorlaunch lidartagmasterlaunch front contains common tunables different environment indoor outdoor latter includes parameter usually need change system leave lidartagoutdoorlaunch feature clustering nearbyfactor value used determine two point near linkagetunable value used compute linkage criterion cluster validation maxoutlierratio value used validate cluster checking outlier plane fitting tagsizelist list possible size tag lidartagmasterlaunch system mode markclustervalidity whether validate cluster according different condition planefitting whether validate cluster according result planefitting optimizepose whether optimize pose via reducing cost function decodeid whether decode id collectdata whether publish detected pc numthreads number thread used tbb printinfo whether log status rosinfostream debugging mode debuginfo whether log debug information rosdebugstream debugtime whether compute time different part debugdecodingtime whether log time decoding id logdata whether save status information txt file lidar specification hasring whether input data ha ring information point estimatering whether estimate ring number point solver pose optimization optimizationsolver default optimization solver use optimizing cost function pose numerical gradientbased methodsoptmethod nloptlnpraxisoptmethod nloptlnnewuoaboundoptmethod nloptlnsbplx recommendedoptmethod nloptlnbobyqaoptmethod nloptlnneldermeadoptmethod nloptlncobyla analytical gradientbased methodsoptmethod nloptldslsqp recommended 200hzoptmethod nloptldmma recommended 120hzoptmethod nloptldtnewtonprecondrestart fail 90 10 optmethod nloptldtnewtonprecond fail 90 11 optmethod nloptldtnewtonrestart fail 80 12 optmethod nloptldtnewton fail 90 13 optmethod nloptldlbfgs fail 90 14 optmethod nloptldvar1 fail 90 15 optmethod nloptldvar2 fail 90 eulerderivative whether use euler derivative lie group derivative optimization optimizeupbound value used constraint optimization optimizelowbound value used constraint optimization decode method decodemethod default decoding method use naive decoder weighted gaussian rkhs decodemode default mode use single thread original double sum single thread convert matrix single thread convert matrix vector c thread work point thread blob point thread multithreading original double sum using tbb multithreading vector form using tbb without scheduling multithreading vector form using tbb manual scheduling multithreading vector form using tbb tbb scheduling single thread using kdtree tunable feature clustering distancebound value used construct cube detect tag inside cube depthbound value used detect feature point compared depth gradient numpointsforplanefeature number point used detection feature point cluster validation minreturnpergrid minimum number point grid number cluster invalid optimizepercentage value used validate result pose estimation via checking cost value payloadintensitythreshold value used detect boundary point cluster via intensity gradient pointsthresholdfactor distancetoplanethreshold value used plane fitting cluster minimumringboundarypoints minimum number boundary point ring cluster coatunable value used validate result pose estimation via checking coverage area tagsizetunable value used estimate size tag citation detail described lidartag realtime fiducial tag point cloud jiunnkai huang shoutian wang maani ghaffari jessy w grizzle pdf arxiv articlehuanglidartag2020 authorhuang jiunnkai wang shoutian ghaffari maani grizzle jessy w journalieee robotics automation letter titlelidartag realtime fiducial tag system point cloud year2021 volume6 number3 pages48754882 doi101109lra20213070302,"[('value', 'used'), ('point', 'cloud')]"
adham-elarabawy/open-quadruped,C++,openquadruped maintenance pr open source love png2 mit license opensource 3dprinted quadrupedal robot intuitive gait generation 12dof bezier curve full 6axis body pose manipulation custom 3dof leg inverse kinematics model accounting offset current status todo list x hardware redesign leg move actuator closer hip reinforce servo mounting design research transition gait body pose x software implementing infrastructure control process including cpp teensy software write automate pytest unit test software integrate unit test github action x simulation create urdf model port collaborater urdf maurice rahme x simulation gazebo simulation rviz realtime model design solve offset 3dof ik model right limb validate mirroring angle work leftright leg simulation implement webgazebo clientside support nonlinux user simtoreal joint servo calibration simtoreal refining gait parameter simulation reinforcement learning via ar software raibert huerestic converting desired velocity gait parameter software nav stack layer paper formally documenting project form paper find adhamelarabawycompdfikmodelpdf documentation find summary project portfolio website project page 3d model model folder find step stl file used build openquadruped also find bill material guide progress hardware made custom pcb board control position speed 12 servo simultaneously well interface sensor find gerber file custom pcb hardware folder repository find bill material project visualization usage note aredifferent visualization tool gazebo simulator physic rviz custom 3dmatplotlib visualization tool body ik model leg ik model latter tool still development ported use new control library yet likely broken time try visualization tool need run animatepy python file proper library installed matplotlib 303 supported use keyboard control use x z p r select x axis axis z axis yaw pitch roll button increment selected position click keyboard reset position right try go impossible pose would result collision body weird thing happens clickon keyboard reset position note pitch roll currently working currently trying fix demo force sensitive leg test model demomodel demomodel visualization,"[('ik', 'model'), ('visualization', 'tool')]"
wil3/gymfc,Python,gymfc build status allcontributors gymfc flight control tuning framework focus attitude control gymfc wa first introduced manuscript please use following bibtex entry cite work articlekoch2019reinforcement titlereinforcement learning uav attitude control authorkoch william mancuso renato west richard bestavros azer journalacm transaction cyberphysical system volume3 number2 pages22 year2019 publisheracm articlekoch2019flight titleflight controller synthesis via deep reinforcement learning authorkoch william journalarxiv preprint arxiv190906493 year2019 architecture table content feature news installation getting started tutorial user module custom module example development team contribution feature support imu esc battery sensor aircraft agnostic support type aircraft configure number actuator sensor digital twin independence digital twin developed external gymfc allowing separate versioning google protobuf aircraft digital twin api publishing control signal subscribing sensor data flexible agent interface allowing controller development type flight control system support gazebo9 11 gazebo plugins built dynamically depending installed version news may 2020 nf1 quadcopter model reward function used thesis work published example directory august 2019 gymfc synthesizes neurocontroller new level performance august 2019 thesis defended flight controller synthesis via deep reinforcement learning july 2019 gymfc v020 released december 2018 gymfc manuscript accepted journal acm transaction cyberphysical system november 2018 flight controller synthesized gymfc achieves stable flight neuroflight september 2018 gymfc v010 released april 2018 preprint paper published arxiv installation quick start install gymfc dependency ubuntu 1804 execute sudo makeflagsj4 installdependenciessh pip3 install dependency gymfc run ubuntu 1804 us gazebo v1010 dart v670 backend simulator use dart gazebo must installed source gazebo must used dart see video easiest way install dependency provided installdependenciessh script default run make single job override make flag makeflags environment variable building gazebo source resource intensive sufficient memory increase number job run parallel example run four job parallel execute sudo makeflagsj4 installdependenciessh note script may take hour execute build fails check dmesg common reason outofmemory failure gymfc optional suggested set virtual environment install gymfc project root run python3 venv env create environment named env ignored git enable virtual environment source envbinactivate deactivate deactivate install gymfc pip3 install install python dependency also build gazebo plugins message developing gymfc plan modify gymfc code need install editdevelopment mode pip3 install e also manually install gazebo plugins executing gymfcenvsassetsgazebopluginsbuildpluginsh deviate installation instruction eg installing gazebo different location specific installdependenciessh may need change location gazebo setupsh defined variable setupfile gymfcgymfcini verifying install gymfc requires aircraft model digital twin run nf1 racing quadcopter model available examplesgymfcnftwinsnf1 need model testing test everything installed correctly run python3 teststeststartsimpy verbose examplesgymfcnftwinsnf1modelsdf everything ok see nf1 quadcopter model gazebo see following error message built motor imu plugins yet err pluginhh187 failed load plugin libgazebomotormodelso libgazebomotormodelso cannot open shared object file file directory err pluginhh187 failed load plugin libgazeboimupluginso libgazeboimupluginso cannot open shared object file file directory also following error message normal err dartjointcc195 dartjoint setanchor implemented use nf1 model testing read examplesreadmemd install docker repository includes experimental docker build dockerdemo demo usage gymfc ha tested macos 10143 ubuntu 1804 however gazebo client ha verified work ubuntu docker image help ensure running supported environment gymfc install dependency mac install docker mac xquartz system ubuntu install docker ubuntu build test build docker image bash docker build gymfcdemo take compiles mesa driver gazebo dart recommended give docker large part host resource incoming connection forward xquartz bash xhost example usage run image test teststepsimpy using solo digital twin bash docker run ti e displayhostip0 v pathtogymfcdigitaltwinsolomodelssolomodelsdfgymfcdemomodelssolomodelsdf gymfcdemo python3 gymfcteststeststepsimpy gymfcconfig gymfcgymfcini verbose gymfcdemomodelssolomodelsdf11 replace external ip system allow gymfc connect xquartz server cloned solo repo take special note teststepsimpy parameter using container path host path getting started simplest environment created python gymfcenvsfcenv import flightcontrolenv class myenvflightcontrolenv def initself aircraftconfig confignone verbosefalse superinitaircraftconfig configfilepathconfig verboseverbose inheriting flightcontrolenv access stepsim reset function want create openai gym also need inherit class eg python gymfcenvsfcenv import flightcontrolenv import gym class myopenaienvflightcontrolenv gymenv simplicity gymfc environment take input single aircraftconfig file location aircraft model modelsdf sdf declares visualization geometry plugins aircraft directory layout gymfc expects model following gazebo style directory structure modelname modelconfig modelsdf plugins build plugin directory contains source plugins build directory contain built binary plugins gymfc runtime add build directory gazebo plugin path found loaded note using external plugins create soft link file build directory tutorial installation coming soon available user provided module increase flexibility provide universal tuning framework user must provide four module flight controller flight control tuner environment interface digital twin note neuroflight controller typically flight controller tuner one eg openai baseline expand flight control research done gymfc example open possibility tuning pid gain using optimization strategy gas pso goal provide collection open source module user mix match created please let u know add tuner openai baseline environment gymfcnfstepv1 digital twin nf1 solo need help motor model element blade theory custom user module digital twin sdf modelsdf must declare libaircraftconfigpluginso plugin dummy plugin allowing u set arbitrary configuration data example configuration may look like xml center thrust must defined order attach aircraft model simulation offset relation specified link battery 0 0058 true true true api gymfc communicates aircraft google protobuf message minimum aircraft must subscribe motor command publish imu message gymfc aircraft topic aircraftcommandmotor message type motorcommandproto aircraft gymfc topic aircraftsensorimu message type imuproto topic aircraftsensoresc message type escsensorproto example openai environment digital twin model used wil koch thesis found example directory creator wil koch contributor thanks go wonderful people emoji key wil koch michael friedrich sid mysore varunag18 xabierolaz swapnil pande want become contributor visit contributingmd information get started,"[('digital', 'twin'), ('flight', 'control')]"
sphero-inc/Sphero-iOS-SDK,Other,repo ha deprecated archived want updated new sdks released consider signing sdk email list notified release new update sdks information documentation visit sdk website find information sdk api get help visit community forum get help share project help others iosdeveloperheaderjpg io developer quick start guide see new doc site sdkspherocom,"[('get', 'help'), ('repo', 'ha')]"
wzpan/wukong-robot,Python,wukongrobot wukongrobot maker haker wukongrobot 202331 wukongrobot 13000 700000 openai whisperappleedgevitstts anyq chatgpt porcupine snowboy muse apiapi dingdangrobot pocketsphinx mac linux wukongrobot wukongrobot wukongrobot asr asr nlu tt 5g wukongrobot demo demo wukongrobot chatgpt api wukongrobot google aiy voice kit wukongrobot siri wukongrobot chatgpt wukongrobot wukongrobotvitsaiby echo demo wukongwukong2019 python wukongrobot python 37 310 python 2x wukongrobot intel chip mac m1 64bit ubuntu1204 1404 raspbian pine 64 debian jessie 85310102 intel edison ubilinux debian wheezy 78 wslwindows subsystem linux window wukongrobot bash python3 wukongpy update wukongrobot sh git pull pip3 install r requirementstxt bash python3 wukongpy tmux supervisor snowboy wukongrobot wukongrobot log wukong wukong2019 defaultyml git pull homewukongconfigyml wukongrobot tipsapiapi api wukongrobot web api restful api wukongrobot 100 id wukongrobot backer logo wukongrobot github dingdangrobot jasperclient shubhro saha charles marsh jan holthuis jasper demo aliciacai wukongrobot wukongcontrib dingdangrobot star star history chart wukongrobot wukongrobot,"[('wukongrobot', 'wukongrobot'), ('api', 'wukongrobot')]"
Unity-Technologies/articulations-robot-demo,Other,unity robotics demo recent integration nvidia physxinto unity ha dramatically improved quality robotics simulation possible unity new articulation joint system available 20201 much better suited building thing like robot arm older joint type available unity us featherstone algorithm reduced coordinate representation gaurantee unwanted stretch joint practice mean chain many joint row still achieve stable precise movement new temporal gauss seidel tgs solver also support accurate simulation installation unity 202010b1 later needed new joint system install unity unity 202010b1 later add latest 20201 beta release unity hub demo ha last tested unity 202010b5 clone articulation robot demo repo clone repository sh git clone open armrobot project unity ur3 robot arm simulation universal robotics ur3e robot steer directly rotating six joint arm also rotate end effector open close pincher open scene articulationrobot press play manual control move robot around manually using following keyboard command ad rotate base joint sw rotate shoulder joint qe rotate elbow joint op rotate wrist1 kl rotate wrist2 nm rotate wrist3 vb rotate hand x close pincher z open pincher manual control handled script manualinput object disable manual input uncheck object hierarchy window learn robot wa built articulation following guide robotiq hande gripper simulation focus picking object robotiq hande gripper open scene gripperscene press play try pick cube drop manual control use following keyboard command g h x close pinhcer z open pincher mlagents integration articulation robot demo ha integrated mlagents toolkit branch note integration date latest master branch survey opinion matter great deal u hearing thought continue make unity better simulator robotics please take minute let u know fill survey license apache license 20,"[('manual', 'control'), ('joint', 'system')]"
treflehq/trefle-api,Other,trefle rest api website website getting started api documentation idea feature issue view performance data skylight view performance data skylight view performance data skylight view performance data skylight trefle trefle botanical json rest api plant specie allowing search query registered specie build next gardening apps farming robot repo purpose repository offer accessible channel collect issue idea show public roadmap current topic feature come contribute bug please create new bug report feature idea please create new feature request,"[('view', 'performance'), ('performance', 'data')]"
stackgpu/Simple-GPU,Other,simplegpu fast functional webgpu npm version build status downloads standard example simplewebgpu simplifies webgpu programming removing much shared state get away replaces webgpu api two fundamental abstraction resource command resource handle gpu resident object like texture fbo buffer command complete representation webgpu state required perform draw call define command specify mixture static dynamic data object done simplewebgpu take description compiles optimized javascript code example simple simplewebgpu program draw triangle j importing webgpu module creates full screen canvas webgpu context us context initialize new webgpu instance const webgpu require simplewebgpu calling simplewebgpuinit creates new partially evaluated draw command const drawtriangle webgpuinit shaders simplewebgpu string use glslify whatever want define need manually create shader object frag precision mediump float uniform vec4 color void main glfragcolor color vert precision mediump float attribute vec2 position void main glposition vec4position1 define vertex attribute shader attribute simplewebgpubuffer creates new array buffer object position webgpubuffer 2 need flatten nested array simplewebgpu automatically 2 unrolls typedarray default float32 4 simplewebgpu automatically infers sane default vertex attribute pointer uniform defines color triangle dynamic variable color webgpuprop color tell simplewebgpu number vertex draw command count webgpuframe wrap requestanimationframe also handle viewport change webgpuframetime clear content drawing buffer webgpuclear color00 depth draw triangle using command defined drawtriangle color mathcostime 0001 mathsintime 00008 mathcostime 0003 see example live example check gallery source code gallery example found setup simplewebgpu ha dependency setting pretty easy arebasic way live editing use observablehqcom j require simplewebgpu npm easiest way use simplewebgpu project via npm node set install use simplewebgpu project using following command sh npm simplewebgpu info use npm check official doc using npm may also want try vite live development server run time error checking browserify default compile simplewebgpu vite error message run time check removed done reduce size final bundle developing application run browserify using debug flag order enable error message also generate source map make reading source code application easier standalone script tag also use simplewebgpu standalone script really stubborn recent version found dist folder also available npm cdn minified unminified version unminified minified difference using simplewebgpu standalone script tag assume sort module system standalone script inject global constructor function equivalent moduleexports simplewebgpu vanilla html modern browser import d3 jsdelivr html simplewebgpu simplewebgpu remove shared state webgpu anything could regular webgpu little overhead way le debugging regl emphasizes following value simplicity interface concise emphasizes separation concern removing shared state help localize effect interaction code making easier reason correctness simplewebgpu ha 30000 unit test 95 code coverage development mode regl performs strong validation sanity check input data help catch error faster performance simplewebgpu us partial evaluation remove almost overhead minimalism simplewebgpu wrap webgpu game engine opinion scene graph vector math library feature webgpu accessible including advanced extension like todo stability simplewebgpu take interface compatibility semantic versioning seriously making well suited long lived application must supported month year road also ha dependency limiting exposure risky unplanned update benchmark order prevent performance regression simplewebgpu continuously benchmarked run benchmark locally using npm run bench check online result last day found todo measurement taken using custom script benchhistory benchgraph read development guide project using simplewebgpu following incomplete list project using regl nycmap visualize mind magic project using regl list would like see added please send u pull request help wanted simplewebgpu still active developement anyone willing contribute much welcome right need people write example demo framework allow u find bug deficiency api list example would like implemented course welcome come example add example gallery example please send u pull request api doc simplewebgpu ha extensive api documentation browse doc online development latest change simplewebgpu found changelog info build test headless see contributing guide license code c 2022 bsd license asset license todo many example use creative common public domain artwork illustrative purpose asset included redistributable package regl pepper test image cube comparison public domain test video doggiechromakeyogv l0ckergn0me used creative common license cube map posxjpeg negxjpeg posyjpeg negyjpeg poszjpeg negzjpeg humus used creative commonslicense environment map oregon ogdoregon360jpg due max ogden maxogd dd test image alpinecliffa alpinecliffanorm alpinecliffaspec taken cc0 license 0ad texture pack wildfire game tile set tile mapping demo tilespng cc0 licensed cobblestone path pack audio track audiojs example bamboo cactus 8bitpeoples cc byndnc 10 license matcap spheretexturejpg ben simonds cclicense normal map normaltexturejpg rubberduck cc0 license regl homage simplewebgpu intentional homage favorite webgl module click view original also d3 goal module wa keep essence regl make possible translate demo minimal transpilation shader code keeping datafallthrough element d3 platinum sp onsors todo use vite locally rollup build bundle import module jupyter notebook double user plotly autocreate bindgroups implement regl api implement reactive constructor javascript maybe vue use d3 demo set pattern uniform uniformsattributes development developing locally use npm run dev change module import j import webgpu import simplewebgpu j import webgpu libmain todo glass water pbr demo matrix multiply demo write doc autocreate bindgroups always render rendertarget canvas composable mixins sentiment analysis developing locally bash npm run dev,"[('project', 'using'), ('standalone', 'script')]"
yuanmingqi/rl-exploration-baselines,Python,img src img src img src img src img src img src reinforcement learning exploration baseline rlexplore rlexplore set implementation intrinsic reward drivenexploration approach reinforcement learning using pytorch deployed arbitrary algorithm plugandplay manner particular rlexplore designed well compatible stablebaselines3 providing stable exploration benchmark notice repo ha merged new project reasonable implementation provided invoke intrinsic reward module python rlltexplorereward import icm ride module list module remark repr visual reference pseudocounts countbased exploration never give learning directed exploration strategy icm curiositydriven exploration curiositydriven exploration selfsupervised prediction rnd countbased exploration exploration random network distillation girm curiositydriven exploration intrinsic reward driven imitation learning via generative model ngu memorybased exploration never give learning directed exploration strategy ride procedurallygenerated environment ride rewarding impactdriven exploration procedurallygenerated environment re3 entropy maximization state entropy maximization random encoders efficient exploration rise entropy maximization renyi state entropy maximization exploration acceleration reinforcement learning revd divergence maximization rewarding episodic visitation discrepancy exploration reinforcement learning developing repr method involves representation learning visual method work well visual rl example due large difference calculation different intrinsic reward method rllte ha following rule environment assumed vectorized computeirs function intrinsic reward module ha mandatory argument sample dict like ob nsteps nenvs obsshape action nsteps nenvs actionshape reward nsteps nenvs nextobs nsteps nenvs obsshape take re3 instance computes intrinsic reward state based euclidean distance state knearest neighbor within minibatch thus suffices provide ob data compute reward following code provides usage example re3 py titleexamplepy rlltexplorereward import re3 rllteenv import makedmcenv import torch th name main numenvs numsteps 128 create env env makedmcenvenvidcartpolebalance numenvsnumenvs printenvobservationspace envactionspace create re3 instance re3 re3 observationspaceenvobservationspace actionspaceenvactionspace compute intrinsic reward ob thrandsizenumsteps numenvs envobservationspaceshape intrinsicrewards re3computeirssamples ob ob printintrinsicrewardsshape typeintrinsicrewards printintrinsicrewards output shape 84 84 shape type box range 10 10 torchsize128 7,"[('intrinsic', 'reward'), ('img', 'src')]"
sail-sg/envpool,C++,href width666px heightauto src div pypi downloads arxiv read doc unittest github issue github star github fork github license envpool cbased batched environment pool pybind11 thread pool ha high performance 1m raw fps atari game 3m raw fps mujoco simulator dgxa100 compatible apis support gym dmenv sync async single multi player environment currently support x atari game x mujoco gym x classic control rl envs cartpole mountaincar pendulum acrobot x toy text rl envs catch frozenlake taxi nchain cliffwalking blackjack x vizdoom single player x deepmind control suite x box2d x procgen x minigrid envpool several highlight compatible openai gym apis deepmind dmenv apis gymnasium apis manage pool envs interact envs batched apis default support synchronous execution asynchronous execution support single player multiplayer environment easy c developer api add new envs customized c environment integration free 2x speedup single environment million atari framesmillion mujoco step per second simulation 256 cpu core 20x throughput python subprocessbased vector env 3x throughput python subprocessbased vector env low resource setup like 12 cpu core comparing existing gpubased solution brax isaacgym envpool general solution various kind speedingup rl environment parallelization xla support jax jit function xla interface compatible existing rl library eg stablebaselines3 tianshou acme cleanrl rlgames stablebaselines3 pendulumv1 example tianshou cartpole example pendulumv1 example atari example mujoco example integration guideline acme halfcheetah example cleanrl pongv5 example solving pong inmins tracked experiment rlgames atari examplemins pong 15 min breakout mujoco examplemins ant halfcheetah check arxiv paper detail installation pypi envpool currently hosted pypi requires python 37 simply install envpool following command bash pip install envpool installation open python console type python import envpool printenvpoolversion error occurs successfully installed envpool source please refer guideline documentation tutorial api documentation hosted envpoolreadthedocsio example script example folder benchmark script benchmark folder benchmark result perform benchmark ale atari environment pongnoframeskipv4 environment wrapper openai baseline mujoco environment antv3 different hardware setup including tpuv38 virtual machine vm 96 cpu core andnuma node nvidia dgxa100 256 cpu core withnuma node baseline includenaive python forloopthe popular rl environment parallelization execution python subprocess eg gymvectorenvto knowledge fastest rl environment executor sample factory envpool report envpool performance sync mode async mode numa async mode compared baseline different number worker ie number cpu core see result envpool achieves significant improvement baseline setting highend setup envpool achievesmillion frame per second atari andmillion frame per second mujoco 256 cpu core 149x 196x gymvectorenv baseline typical pc setup 12 cpu core envpool throughput 31x 29x gymvectorenv atari highest fps laptop 12 workstation 32 tpuvm 96 dgxa100 256 forloop 4893 7914 3993 4640 subprocess 15863 47699 46910 71943 samplefactory 28216 138847 222327 707494 envpool sync 37396 133824 170380 427851 envpool async 49439 200428 359559 891286 envpool numaasync 373169 1069922 mujoco highest fps laptop 12 workstation 32 tpuvm 96 dgxa100 256 forloop 12861 20298 10474 11569 subprocess 36586 105432 87403 163656 samplefactory 62510 309264 461515 1573262 envpool sync 66622 380950 296681 949787 envpool async 105126 582446 887540 2363864 envpool numaasync 896830 3134287 please refer benchmark page detail api usage following content show synchronous asynchronous api usage envpool also run full script examplesenvsteppy synchronous api python import envpool import numpy np make gym env env envpoolmakepongv5 envtypegym numenvs100 use envpoolmakegym ob envreset 10084 84 act npzeros100 dtypeint ob rew term trunc info envstepact synchronous mode envpool closely resembles openaigymdmenv ha reset step function meaning however one exception envpool batch interaction default therefore creation envpool numenvs argument denotes many envs like run parallel python env envpoolmakepongv5 envtypegym numenvs100 first dimension action passed step function equal numenvs python act npzeros100 dtypeint need manually reset one environment done true instead envs envpool enabled autoreset default asynchronous api python import envpool import numpy np make asynchronous numenvs 64 batchsize 16 env envpoolmakepongv5 envtypegym numenvsnumenvs batchsizebatchsize actionnum envactionspacen envasyncreset send initial reset signal envs true ob rew term trunc info envrecv envid infoenvid action nprandomrandintactionnum sizebatchsize envsendaction envid asynchronous mode step function split two part sendrecv function send take two argument batch action corresponding envid action sent unlike step send doe wait envs execute return next state return immediately action fed envs reason called async mode python envsendaction envid get next state need call recv function however recv doe guarantee get back next state envs called send instead whatever envs finish execution get recved first python state envrecv besides numenvs one argument batchsize numenvs defines many envs total managed envpool batchsize specifies number envs involved time interact envpool eg 64 envs executing envpool send recv time interacts batch 16 envs python envpoolmakepongv5 envtypegym numenvs64 batchsize16 configurable argument envpoolmake please check envpool python interface introduction contributing envpool still development environment added always welcome contribution help envpool better would like contribute please check contribution guideline license envpool apache2 license thirdparty sourcecode data corresponding license include source code data repo citing envpool find envpool useful please cite publication latex inproceedingsweng2022envpool author weng jiayi lin min huang shengyi liu bo makoviichuk denys makoviychuk viktor liu zichen song yufan luo ting jiang yukun xu zhongwen yan shuicheng booktitle advance neural information processing system editor koyejo mohamed agarwal belgrave k cho oh page 2240922421 publisher curran associate inc title envpool highly parallel reinforcement learning environment execution engine url volume 35 year 2022 disclaimer official sea limited garena online private limited product,"[('cpu', 'core'), ('envpoolmakepongv5', 'envtypegym')]"
graniet/fsociety-ransomware-MrRobot,C++,fsociety ransomware fsociety ransomware graniet movie fsociety ransomware graniet required lib crypto curl g flag used test g3 ggdb o0 wall wextra wnounused lcryptopp lcurl ransomware step initial file listing file parser encrypt file source aes library change filename filenamelocked send jester cc number file ask reward setup jester page security reason ransomware crypt txt change c file please remember poc ransomware stable fun advanced futur add multiple step decrypt file free faq disclaimer jester ransomware like mr robot movie coded darlene s1e23 please beware warning start recover file movie public key shared please use malware personal computer project wink mr robot serie,"[('fsociety', 'ransomware'), ('ransomware', 'graniet')]"
eclipse-zenoh/zenoh,Other,ci documentation status discussion discord license license eclipse zenoh eclipse zenoh zero overhead pubsub storequery compute zenoh pronounce zeno unifies data motion data rest computation carefully blend traditional pubsub geodistributed storage query computation retaining level time space efficiency well beyond mainstream stack check website zenohio roadmap detailed information getting started zenoh extremely easy learn best place master fundamental getting started guide install install latest release zenoh router zenohd default plugins rest api plugin storage manager plugin follows manual installation platform release package downloaded subdirectory ha name rust target see platform target corresponds choose platform download zip file unzip want run extracted zenohd binary linux debian add eclipse zenoh private repository source list install zenoh package bash echo deb trustedyes sudo tee etcaptsourceslistdzenohlist devnull sudo apt update sudo apt install zenoh start run zenohd macos tap brew package repository install zenoh formula bash brew tap eclipsezenohhomebrewzenoh brew install zenoh start run zenohd rust api build warning warning warning zenoh ecosystem active development build git make sure also build git zenoh repository plan use eg binding plugin backend etc may happen change git compatible recent packaged zenoh release eg deb docker pip put particular effort mantaining compatibility various git repository zenoh project install cargo rust zenoh succesfully compiled rust stable 1710 special configuration required side already rust toolchain installed make sure uptodate bash rustup update build zenoh type following command followed previous instruction bash cargo build release alltargets zenoh router built targetreleasezenohd example built targetreleaseexamples directory work peertopeer interconnected via zenoh router quick test build peertopeer test pubsub run targetreleaseexampleszsub another shell run targetreleaseexampleszput subscriber receive publication getqueryable run targetreleaseexampleszqueryable another shell run targetreleaseexampleszget queryable display log listener get receive queryable result routed test putstoreget run zenoh router memory storage targetreleasezenohd cfg pluginsstoragemanagerstoragesdemokeyexprdemoexamplevolumememory another shell run targetreleaseexampleszput run targetreleaseexampleszget get receive stored publication rest api using curl tool run zenoh router memory storage targetreleasezenohd cfg pluginsstoragemanagerstoragesdemokeyexprdemoexamplevolumememory another shell publication via rest api curl x put hello world get back via rest api curl router admin space via rest api run zenoh router permission perform config change via admin space memory storage targetreleasezenohd adminspacepermissionsrw cfg pluginsstoragemanagerstoragesdemokeyexprdemoexamplevolumememory another shell get info zenoh router via zenoh admin space curl get volume router memory default curl get storage local router memory storage configured startup demoexample present curl add another memory storage demomystore curl x put h contenttypeapplicationjson keyexprdemomystorevolumememory check ha created curl configuration option zenoh configuration file provided via cli zenoh example zenoh router c config file json5 configuration file defaultconfigjson5 show schema file available option see example zenoh usage example zenoh router command line argument zenohd accepts following argument adminspacepermissions rwrwnone configure read andor write permission admin space default read c config file json5 configuration file defaultconfigjson5 show schema file property configuration optional may need large configuration usecase cfg keyvalue allows change specific part configuration right ha constructed value must valid json5 value key must path configuration file element separated inserting part config array may use index may use indicate want append value array cfg passed value always override previously existing value key configuration l listen endpoint endpoint router listen incoming session repeat option open several listener default tcp7447 used following endpoint currently supported tcp tcphostnameoripv4oripv6port udp udphostnameoripv4oripv6port tcptls tlshostnameport quic quichostnameport e connect endpoint endpoint router try connect repeat option connect several peer router nomulticastscouting default zenohd reply multicast scouting message discovered peer client option disables feature id hexstring identifier hexadecimal string eg a0b23 zenohd must use warning identifier must unique system set random unsigned 128bit integer used notimestamp default zenohd add hlcgenerated timestamp routed data already one option disables feature p plugin pluginname pluginnamelibrarypath plugin must loaded accepted value plugin name zenohd search library named libzenohpluginnameso unix libzenohpluginpluginnamedylib macos zenohpluginpluginnamedll window pluginnamelibrarypath plugin loaded library file librarypath repeat option load several plugins pluginsearchdir directory directory search plugins library load repeat option specify several search directory default plugins library searched usrlocallibusrlibzenohlib rest rest configures rest plugin http port accepted value port number string formatto bind http server specific interface none desactivate rest plugin specified rest plugin active interface port 8000 warning warning warning following documentation pertains v06 api come many change behaviour configuration zenoh access v05 version code matching readme please go 050beta9 tagged version plugins warning warning warning rust stable abi plugins built exact rust version zenohd using zenoh dependency version commit number zenohd otherwise incompatibility memory mapping shared type zenohd library lead sigsev crash default zenoh router delivered built withplugins may configured configuration file individual change configuration via cfg cli option via zenoh put individual part configuration warning warning warning since v06 zenohd longer load every available plugin startup instead configured plugins loaded processing cfg plugin option zenohd running plugins hotloaded support reconfigured runtime editing configuration adminspace note rest plugin added configuration default value rest cli argument rest plugin exposing rest api plugin convert get put rest request zenoh get put respectively storage plugin managing backends storage plugin allows easily define storage store keyvalue pair subscribed send recent one queried check defaultconfigjson5 info configure troubleshooting case trouble please first check page trouble cause already known otherwise ask question zenoh discord server create issue,"[('zenoh', 'router'), ('warning', 'warning')]"
omegaiota/DiffCloth,C++,diffcloth code repository paper diffcloth differentiable cloth simulation dry frictional contact paper project tested operating system ubuntu 2204 mac 12download repo make sure use recursive option install dependency git clone recursive build cpp code cmake top directory mkdir build cd build cmake makeoptimizevisualize sectionexperiments run optimization diffcloth demo demooptions mode optimize seed randseed demooptions name demo following option randseed integer random initialization initial guess task corresponding option experiment 61 tshirt tshirt 61 sphere sphere 62 hat hat 62 sock sock 63 dress dress visualize optimization iters diffcloth demo demooptions mode visualize exp expname expname iteration folder visualization code repo come example optimization run tshirt outputtshirtexampleopt visualize first iteration diffcloth demo tshirt mode visualize exp tshirtexampleoptiter0 progress optimization saved output directory root folder intermediate progress visualized using custom written opengl viewerbuild python binding run hat controller example build python binding install anaconda virtual environment project root folder run python setuppy install install python binding package rerun command modify cpp code create conda virtual environment conda env create python38 file environmentyml activate conda activate diffcloth traintest hat controller example navigate srcpythoncode test pretrained network run python hatcontrollerpy eval render loadexpname 20210809trainedbest train network run python hatcontrollerpy render resume train run python hatcontrollerpy trainresume loadexpname expname loadepoch epochnum simulation saved output directory root folder note feel free contact liyifeicsailmitedu create github issue question regarding setting repository running example adding new example citation please consider citing paper find research codebase helpful articleli2022diffcloth author li yifei du tao wu kui xu jie matusik wojciech title diffcloth differentiable cloth simulation dry frictional contact year 2022 issuedate february 2023 publisher association computing machinery address new york ny usa volume 42 numberissn 07300301 url doi 1011453527660 abstract cloth simulation ha wide application computer animation garment design robotassisted dressing work present differentiable cloth simulator whose additional gradient information facilitates clothrelated application differentiable simulator extends stateoftheart cloth simulator based projective dynamic pd dry frictional contactnbsply etnbspal 2020 draw inspiration previous worknbspdu etnbspal 2021 propose fast novel method deriving gradient pdbased cloth simulation dry frictional contact furthermore conduct comprehensive analysis evaluation usefulness gradient contactrich cloth simulation finally demonstrate efficacy simulator number downstream application including system identification trajectory optimization assisted dressing closedloop control inverse design realtosim transfer observe substantial speedup obtained using gradient information solving application journal acm trans graph month oct articlenonumpages 20 keywords differentiable simulation cloth simulation projective dynamic,"[('cloth', 'simulation'), ('dry', 'frictional')]"
ethz-asl/polygon_coverage_planning,C++,polygoncoverageplanning package contains implementation compute coverage pattern shortest path general polygon hole please cite accompanying publication using bahnemann rik et al revisiting boustrophedon coverage path planning generalized traveling salesman problem field service robotics springer singapore 2021 coverage planning rviz watch application video watch video installation ubuntu 2004 noetic install noetic install mono create workspace download package cd mkdir p catkinwssrc cd catkinws catkin init catkin config cmakeargs dcmakebuildtyperelease catkin config extend optrosnoetic cd src git clone gitgithubcomethzaslpolygoncoverageplanninggit install remaining dependency cd polygoncoverageplanninginstall preparejenkinsslavesh finally build workspace catkin build getting started package ha interface shortest path planning coverage planning first source workspace execute node source catkinwsdevelsetupbash coverage planning roslaunch polygoncoverageros coverageplannerlaunch polygon set via service call rosservice call coverageplannersetpolygon parameter coverageplannerpolygon rviz polygon tool video plan generated via service call rosservice call coverageplannerplanpath clicking start goal point using rviz clickedpoint tool video resulting waypointlist published geometrymsgsposearray topic waypointlist publish waypoint list call rosservice call coverageplannerpublishpathpoints set publishplanonplanningcomplete true coverageyaml euclidean shortest path planning roslaunch polygoncoverageros shortestpathplannerlaunch setting polygon planning path coverage planning licensing repository subject gnu general public license versionor later due dependency cgal dependency underlying exact geometric operation rely cgal 503 restricted gnu general public license versionor later particular dependency algebraic foundation lgpl 2d 3d linear geometry kernel lpgl 2d polygon lpgl geometric object generator lpgl stl extension lgpl 2d triangulation gpl 2d regularized boolean setoperations gpl 2d straight skeleton polygon offsetting gpl 2d arrangement gpl see also fogel efi dan halperin ron wein cgal arrangement application stepbystep guide volspringer science business medium 2012 bungiu francisc et al efficient computation visibility polygon arxiv preprint arxiv14033905 2014 gtsp solver underlying optimization us memetic solver presented gutin gregory daniel karapetyan memetic algorithm generalized traveling salesman problem natural computing 91 2010 4760 free charge noncommercial purpose,"[('coverage', 'planning'), ('shortest', 'path')]"
JuliaRobotics/RigidBodyDynamics.jl,Other,rigidbodydynamicsjl build status codecovio rigidbodydynamicsjl rigid body dynamic library pure julia aim user friendly performant also generic sense algorithm called input suitable scalar type mean fast numeric dynamic evaluation required user supply float64 float32 input however symbolic quantity desired analysis purpose obtained calling algorithm eg sympysym input gradient required eg forwarddiffdual type implement forwardmode automatic differentiation used see latest stable documentation list feature installation instruction quickstart guide installation take couple minute including installing julia documentation includes various usage example starting quickstart guide example also runnable locally jupyter notebook see readme example directory instruction related package rigidbodydynamicsjl part juliarobotics github organization package built top rigidbodydynamicsjl include rigidbodysimjl simulator built top rigidbodydynamicsjl meshcatmechanismsjl 3d visualization articulated mechanism using meshcatjl built top threejs rigidbodydynamicsjl rigidbodytreeinspectorjl 3d visualization rigidbodydynamicsjl mechanism using director motioncapturejointcalibrationjl kinematic calibration robot using motion capture data built top rigidbodydynamicsjl qpcontroljl quadraticprogrammingbased robot controller implemented using rigidbodydynamicsjl strandbeestrobotjl talk publication may 20 2019 paper icra 2019 julia robotics simulation realtime control highlevel programming language august 10 2018 robin deits gave talk juliacon 2018 demonstrating rigidbodydynamicsjl related package august 23 2017 video juliacon 2017 talk given robin deits twan koolen using julia robotics ha uploaded includes brief demo rigidbodydynamicsjl rigidbodytreeinspectorjl note rigidbodydynamicsjl performance ha significantly improved since talk margin slide unfortunately cut somewhat video,"[('built', 'top'), ('top', 'rigidbodydynamicsjl')]"
wenbowen123/catgrasp,Python,official implementation paper bowen wen wenzhao lian kostas bekris stefan schaal catgrasp learning categorylevel taskrelevant grasping clutter simulation ieee international conference robotics automation icra 2022 abstract taskrelevant grasping critical industrial assembly downstream manipulation task constrain set valid grasp learning perform task however challenging since taskrelevant grasp label hard define annotate also yet consensus proper representation modeling offtheshelf tool performing taskrelevant grasp work proposes framework learn taskrelevant grasping industrial object without need timeconsuming realworld data collection manual annotation achieve entire framework trained solely simulation including supervised training synthetic label generation selfsupervised handobject interaction context framework paper proposes novel objectcentric canonical representation category level allows establishing dense correspondence across object instance transferring taskrelevant grasp novel instance extensive experiment taskrelevant grasping denselycluttered industrial object conducted simulation realworld setup demonstrating effectiveness proposed framework bibtex bibtex articlewen2021catgrasp titlecatgrasp learning categorylevel taskrelevant grasping clutter simulation authorwen bowen lian wenzhao bekris kostas schaal stefan journalicra 2022 year2022 supplementary video click watch icra 2022 presentation video quick setup provide docker environment setup easy line installed docker firstly install run docker pull wenbowen123catgrasplatest enter docker run cd docker bash runcontainersh cd homecatgrasp bash buildsh environment ready run training testing later reenter lauched docker environment without recompilation docker exec catgrasp bash data download object model pretrained network weight extract replace file repo like catgrasp artifact data urdf testing python rungraspsimulationpy see demo starting like play setting configrunyml including changing different object instance within category using framework training following take nut category example walk compute signed distance function object category python makesdfpy classname nut precompute offline grasp training object generates evaluates grasp quality regardless taskrelevance visualize debug grasp quality evaluation change debugpython generategrasppy classname nut debug selfsupervised taskrelevance discovery simulation python pybulletenvenvsemanticgrasppy classname nut debug changing debugto debugyou able debug visualize process affordance result saved dataobjectmodels heatmap file xxxaffordancevis visualized image warmer area mean higher taskrelevant grasping region ptg make canonical model store categorylevel knowledge python makecanonicalpy classname nut training data generation pile python generatepiledatapy classname nut process training data including generating groundtruth label python toolpy train nunocs net examine setting confignunocsyml python trainnunocspy train graspingq net examine setting configgraspyml python traingrasppy train instance segmentation net examine setting pointgroupconfigconfigpointgroupyaml python trainpointgrouppy,"[('taskrelevant', 'grasping'), ('classname', 'nut')]"
mathworks/MATLAB-Simulink-Challenge-Project-Hub,Other,matlab simulink challenge project contribute progress engineering science solving key industry challenge looking design research project idea real industry relevance societal impact explore list challenge project learn technology trend gain practical skill matlab simulink make contribution science engineering even gain official recognition problemsolving skill technology leader mathworks reward upon project completion participate make result work open accessible receive certificate endorsement mathworks research lead let u know intent complete one project completing project signup form accessible project description page send information project recognition award information program submit solution please visit wiki page industry faculty interested information provide feedback nominate new project contact u new sustainability renewable energy challenge excited announce mathworks sustainability renewable energy challenge invite submit innovative solution environmental challenge related sustainability renewable energy participating opportunity win 1000 visit page learn challenge participate project technology trend 5g artificial intelligence autonomous vehicle big data computer vision computational finance drone industry 40 robotics sustainability renewable energy project updated april 26 2023 develop cone detection algorithm formula student driverless competition impact enable accurate detection autonomous racing car expertise gained autonomous vehicle computer vision deep learning modeling simulation develop path planning algorithm multiple drone flying urban environment impact contribute advancing drone application uam revolutionizing logistic industry expertise gained autonomous vehicle drone robotics multiagent system optimization sensor fusion tracking uav modeling simulation develop modelpredictive control algorithm optimally distribute torque 2motor battery electric vehicle bev powertrain impact reduce energy consumption maintaining best motor performance expertise gained sustainability renewable energy automotive control electrification modeling simulation use deep learning classify wireless signal perform realworld testing software defined radio impact help mitigate everincreasing rf interference problem developed world expertise gained 5g artificial intelligence deep learning image processing machine learning neural network softwaredefined radio wireless communication use deep image prior solve inverse problem imaging impact implement deep image prior provide highquality solution inverse problem imaging ubiquitous industry expertise gained artificial intelligence computer vision deep learning image processing machine learning neural network optimization signal processing develop hearing aid simulation simulink impact improve hearing aid simulation create testbed new audio processing algorithm prototyping expertise gained signal processing audio modeling simulation design train deep learning model compose music impact generative music model used create new asset demand expertise gained artificial intelligence deep learning machine learning neural network audio build co2 emission model historical data create plan achieve carbon neutrality future impact set strategy carbon neutrality consolidate international collaboration expertise gained computational finance sustainability renewable energy modeling simulation machine learning develop augmented reality system enhance photo video 2d architectural floor plan printed paper virtual 3d representation structure impact develop proofofconcept augmented reality system aid architectural design expertise gained computer vision image processing sensor fusion tracking develop predictive classifier model able discriminate jet produced top quark decay background jet impact reduce interference background jet help discovery new fundamental physic expertise gained artificial intelligence big data deep learning physic develop trajectory planning multirotor drone minimizes energy consumption impact increase mission time multirotor drone expertise gained drone robotics autonomous vehicle electrification modeling simulation optimization uav perform earlystage economic feasibility energy project determine project viability impact connect economic aspect technical design expertise gained sustainability renewable energy modeling simulation electrification develop faulttolerant controller quadcopter using modelbased reinforcement learning impact improve safety multirotor drone expertise gained drone artificial intelligence robotics control reinforcement learning uav design implement visualvisualinertial odometry system using onboard camera minidrone impact advance aerial vehicle control contracted space unforeseen environment condition expertise gained autonomous vehicle computer vision drone robotics aerospace control image processing lowcost hardware modeling simulation signal processing state estimation uav develop sensor fusion algorithm vehicle pose estimation using classical filtering aibased technique impact enhance navigation accuracy autonomous vehicle expertise gained autonomous vehicle sensor fusion tracking state estimation use deep learning inertial measurement unit imu data recognize human activity gesture impact enable next generation wearable electronic device motion recognition expertise gained artificial intelligence deep learning embedded ai neural network signal processing remove vibration signal inertial measurement unit impact improve navigation system making robust vibration expertise gained drone autonomous vehicle robotics modeling simulation sensor fusion tracking state estimation signal processing design controller enable micro aerial vehicle stabilize scenario external aggressive disturbance impact contribute advancement aerial vehicle control contracted space unforeseen environment condition expertise gained autonomous vehicle drone robotics aerospace lowcost hardware modeling simulation state estimation uav control develop example predicts visualizes coastline impact due rising sea level impact ass plan potential impact climate change expertise gained sustainability renewable energy modeling simulation develop tool identify visualize geographical area susceptible landslide impact identify area risk landslide help mitigate devastating impact people infrastructure expertise gained sustainability renewable energy machine learning model satellite low earth orbit leo identify conjunction prevent collision space debris maintaining orbital requirement impact contribute success satellite megaconstellations improve safety low earth orbit leo environment expertise gained autonomous vehicle control satellite modeling simulation build cryptocurrency trading strategy based sentiment analysis impact foundation potential opportunity environmental social governance esg portfolio analysis expertise gained artificial intelligence deep learning machine learning text analytics model control autonomous snakelike robot navigate unknown environment impact advance robotics design hazardous environment inspection operation constricted space expertise gained robotics manipulator modeling simulation detect traffic light perform traffic light negotiation intersection unreal environment impact contribute advancement autonomous vehicle traffic coordination intersection simulation expertise gained autonomous vehicle computer vision automotive control deep learning image processing modeling simulation sensor fusion tracking analyze realworld traffic data understand model predict human driving trajectory impact contribute autonomous driving technology intelligent transportation research expertise gained big data autonomous vehicle support vector machine machine learning deep learning automotive automatically classify behavior tracked object enhance safety autonomous system impact make autonomous vehicle safer classifying behavior object around expertise gained artificial intelligence autonomous vehicle robotics drone deep learning explainable ai machine learning mobile robot neural network reinforcement learning sensor fusion tracking uav ugv automotive develop realtime collision avoidance system using ros2 execute safe vehicle response impact contribute improving access safety transportation robust automated driving system expertise gained autonomous vehicle robotics automotive image processing modeling simulation sensor fusion tracking lowcost hardware develop smart plant water system using internet thing iot lowcost hardware impact minimize negative effect overuse water farming preserve water resource expertise gained sustainability renewable energy artificial intelligence iot lowcost hardware deep learning cloud computing enhance performance product quality required develop motor control application impact contribute global transition smart manufacturing electrification expertise gained artificial intelligence control machine learning reinforcement learning automotive build mini drone use px4 hardware support package design flight controller using simulink impact expedite uav design assembly modelbased design expertise gained drone autonomous vehicle control lowcost hardware uav design portable charger electric vehicle impact help make electric vehicle reliable general use expertise gained sustainability renewable energy control electrification modeling simulation predict fault pneumatic system using simulation aimachine learning impact improve efficiency reliability industrial process expertise gained artificial intelligence industry 40 cyberphysical system digital twin embedded ai health monitoring iot machine learning modeling simulation design implement real time autonomous human tracking robot using lowcost hardware impact leverage mobile technology deep learning advance human detection algorithm impacting human safety security expertise gained artificial intelligence computer vision robotics deep learning embedded ai humanrobot interaction mobile robot modeling simulation machine learning lowcost hardware image processing control perform robust visual slam using matlab mobile sensor streaming impact enable visual slam streaming sensor extend stateofart realtime visual slam algorithm expertise gained autonomous vehicle computer vision drone robotics automotive auv mobile robot manipulator humanoid uav ugv simulate multirobot interaction efficient algorithm design warehouse operation impact advance automation warehouse application reduce associated time energy consumption expertise gained autonomous vehicle robotics humanrobot interaction humanoid mobile robot develop lightweight synthetic aperture radar sar raw data simulator impact accelerate design sar imaging system reduce time cost development aerial terrestrial application expertise gained autonomous vehicle automotive auv image processing signal processing radar processing develop efficient method detecting small change earth surface using hyperspectral image impact revolutionize management natural resource monitoring preventing disaster going beyond visible naked eye expertise gained computer vision image processing deep learning design implement motion planning algorithm offroad vehicle rough terrain impact expand frontier offroad exploration navigation using mobile robot precision agriculture firefighting search rescue planetary exploration expertise gained autonomous vehicle computer vision robotics image processing mobile robot slam ugv optimization develop algorithm compute optimal path racing track impact push racing car competition fully autonomous mode expertise gained autonomous vehicle automotive optimization modeling simulation implement active disturbance rejection control adrc algorithm closedloop speed control system permanent magnet synchronous motor pmsm impact improve customer experience advanced control strategy handle sudden change load better dynamic control performance expertise gained artificial intelligence electrification control modeling simulation reinforcement learning design antenna optimize transmission reception indoor environment impact maximize indoor radio signal coverage reduce energy consumption signal booster device expertise gained 5g optimization smart antenna wireless communication design large antenna array optimize multiple design variable achieve desired transmissionreception characteristic impact advance long distance communication capability astronomical application expertise gained 5g smart antenna wireless communication optimization develop model reversible fuelcell integrated renewableenergy microgrid structure impact contribute global transition zeroemission energy source production hydrogen clean source expertise gained sustainability renewable energy electrification digital twin modeling simulation implement algorithm automatically label data deep learning model training impact accelerate development robust ai algorithm selfdriving vehicle expertise gained artificial intelligence computer vision deep learning machine learning leverage deep learning approach extract behavioral model mixedsignal system measurement data circuit simulation impact accelerate mixedsignal design analysis thereby reducing timetomarket semiconductor company expertise gained artificial intelligence deep learning machine learning modeling simulation neural network rf mixed signal optimization signal processing build evaluate electrical household heating system help minimize human environmental impact halt climate change impact contribute global transition zeroemission energy source electrification household heating expertise gained sustainability renewable energy digital twin electrification modeling simulation evaluate electric aircraft energy requirement power distribution option electrical technology impact contribute global transition zeroemission energy source electrification flight expertise gained sustainability renewable energy digital twin electrification modeling simulation zerofuel aircraft develop deep learning approach signal integrity application impact accelerate signal integrity design analysis enable society robust connected internet communication expertise gained artificial intelligence deep learning machine learning modeling simulation neural network rf mixed signal improve reliability wind turbine using machine learning inform predictive maintenance model impact contribute providing world reliable green energy expertise gained industry 40 sustainability renewable energy machine learning electrification modeling simulation predictive maintenance wind turbine first sign project receive mathworks tshirt model modern hvac system design controller improve heating cooling ventilation air quality pressure humidity energy efficiency impact contribute design control modern home building preserve energy healthy living environment expertise gained sustainability renewable energy modeling simulation electrification control improve range performance battery life designing cooling algorithm keep ev battery pack cool need impact contribute electrification transport worldwide increase range performance battery life ev expertise gained autonomous vehicle sustainability renewable energy automotive control electrification modeling simulation optimization develop deep learning neural network audio background noise suppression impact advance hearing aid technology research speech enhancement noise suppression improve quality life person hearing impairment expertise gained artificial intelligence deep learning neural network signal processing improve accuracy satellite navigation system using nonbinary ldpc code impact accelerate development modern satellite navigation receiver expertise gained 5g gnss wireless communication monitor control industrial scale bioreactor process pharmaceutical production impact improve quality consistency pharmaceutical product contribute transitioning pharmaceutical sector industry 40 expertise gained big data industry 40 control iot modeling simulation optimization machine learning automate process infrastructure inspection using aerial vehicle deep learning impact enhance safety speed infrastructure inspection across wide range industry expertise gained computer vision drone artificial intelligence robotics uav slam deep learning design 3d virtual environment test diverse condition needed develop autonomous vehicle impact contribute autonomous vehicle development creating virtual test scene used many simulator across multiple vehicle development program expertise gained autonomous vehicle automotive modeling simulation develop use model humanoid robot increase understanding best control direct useful task impact accelerate deployment humanoid robot realworld task including healthcare construction manufacturing expertise gained artificial intelligence robotics control cyberphysical system deep learning humanoid humanrobot interaction machine learning mobile robot modeling simulation optimization reinforcement learning gain practical experience wireless communication designing inexpensive softwaredefined radio impact develop expertise wireless technology drive megatrend forward industry society expertise gained 5g lowcost hardware modeling simulation signal processing softwaredefined radio wireless communication design intelligent fan cooling system moderate temperature building eliminate reduce need air conditioning system impact contribute energy carbon footprint reduction expertise gained sustainability renewable energy control modeling simulation optimization reduce cost 5g iot network deployment generating coverage map limited measurement impact contribute evolution deployment new wireless communication system expertise gained artificial intelligence 5g machine learning wireless communication realistic synthetic sensor data soon eliminate need collecting ton real data machine learning based perception algorithm accelerate transition creating realtime camera distortion model impact reduce development effort autonomous vehicle robot expertise gained artificial intelligence autonomous vehicle computer vision deep learning machine learning modeling simulation neural network help accelerate design development autonomous system providing framework mechanical actuator analysis selection impact help evaluate select actuation system across multiple industry robotic automotive manufacturing aerospace help designer come novel actuation solution expertise gained drone robotics control cyberphysical system electrification humanoid manipulator modeling simulation reduce effort required properly develop battery pack optimized automotive drive cycle impact contribute global transition zeroemission energy source expertise gained sustainability renewable energy control electrification optimization parallel computing rotorflying manipulation change future aerial transportation manipulation construction hazardous environment take robotics manipulation next level autonomous uav impact transform field robot manipulation expertise gained drone robotics manipulator modeling simulation uav internal combustion engine continue used automotive marketplace well future build mimo airflow control improve engine performance fuel economy emission start career automotive industry impact improve environmental friendliness engine control tierautomotive supplier expertise gained autonomous vehicle automotive control modeling simulation smart device robot become part everyday life humanrobot interaction play crucial role rapidly expanding market talking machine going complete change way work robot impact open opportunity create robot intuitive part world expertise gained artificial intelligence computer vision robotics signal processing natural language processing mobile robot humanrobot interaction lowcost hardware legged robot manipulator ideal platform traverse rough terrain interact environment ready tackle challenge operating robot outdoor impact contribute stateoftheart technology exploration search rescue transformation expertise gained robotics control image processing manipulator mobile robot modeling simulation robot conquered ground sky space going deep sea next explore frontier autonomous underwater vehicle project robot collaboration competition underwater impact advance underwater exploration auvs collaboration future ocean engineering expertise gained artificial intelligence robotics auv embedded ai machine learning reinforcement learning sensor fusion tracking slam revolutionize current transportation system improving autonomous vehicle localization levelautomation impact contribute change automobile industry transportation system expertise gained computer vision robotics autonomous vehicle slam state estimation sensor fusion tracking,"[('expertise', 'gained'), ('modeling', 'simulation')]"
RLE-Foundation/rllte,Python,rllte longterm evolution project reinforcement learning introduction rllte rllte longterm evolution providing latest algorithm trick complete ecosystem task design model training evaluation deployment tensorrt cann moduleoriented design complete decoupling rl algorithm optimized workflow full hardware acceleration support custom environment module support multiple computing device like gpu npu large number reusable benchmark rllte hub large language modelempowered copilot rllte copilot since construction rllte hub requires massive computing power upload training datasets model weight gradually progress report found issue30 see project structure detailed description module see api documentation quick start installation prerequisite currently recommend python38 user create virtual environment sh conda create n rllte python38 pip recommended open terminal install rllte pip shell pip install rlltecore basic installation pip install rlltecoreenvs predefined environment git open terminal clone repository github git sh git clone run following command install package dependency sh pip install e basic installation pip install e envs predefined environment detailed installation instruction see getting started fast training builtin algorithm rllte provides implementation wellrecognized rl algorithm simple interface building application nvidia gpu suppose want use drqv2 solve task deepmind control suite suffices write trainpy like python import env agent module rllteenv import makedmcenv rllteagent import drqv2 name main device cuda0 create env evalenv optional env makedmcenvenvidcartpolebalance devicedevice evalenv makedmcenvenvidcartpolebalance devicedevice create agent agent drqv2envenv evalenvevalenv devicedevice tagdrqv2dmcpixel start training agenttrainnumtrainsteps500000 loginterval1000 runtrainpy see following output huawei npu similarly want train agent huawei npu suffices replace cuda npu python device cuda0 device npu0 three step create rl agent developer need three step implement rl algorithm rllte following example illustrates write advantage actorcritic a2c agent solve atari game firstly select prototype py rlltecommonprototype import onpolicyagent secondly select necessary module build agent py rlltexploitencoder import mnihcnnencoder rlltexploitpolicy import onpolicysharedactorcritic rlltexploitstorage import vanillarolloutstorage rlltexploredistribution import categorical run describe function selected policy see following output py onpolicysharedactorcriticdescribe output name onpolicysharedactorcritic structure selfencoder shared actor critic selfactor selfcritic forward ob selfencoder selfactor action ob selfencoder selfcritic value action logprobs optimizers selfoptimizers opt selfencoder selfactor selfcritic illustrate structure policy indicate optimizable part finally merge module write update function py torch import nn import torch th class a2conpolicyagent def initself env tag seed device numsteps none superinitenvenv tagtag seedseed devicedevice numstepsnumsteps create module encoder mnihcnnencoderobservationspaceenvobservationspace featuredim512 policy onpolicysharedactorcriticobservationspaceenvobservationspace actionspaceenvactionspace featuredim512 optclassthoptimadam optkwargsdictlr25e4 eps1e5 initfnxavieruniform storage vanillarolloutstorageobservationspaceenvobservationspace actionspaceenvactionspace devicedevice storagesizeselfnumsteps numenvsselfnumenvs batchsize256 dist categorical set module selfsetencoderencoder policypolicy storagestorage distributiondist def updateself range4 batch selfstoragesample evaluate sampled action newvalues newlogprobs entropy selfpolicyevaluateactionsobsbatchobservations actionsbatchactions policy loss part policyloss batchadvtarg newlogprobsmean value loss part valueloss 05 newvaluesflatten batchreturnspow2mean update selfpolicyoptimizers opt zerogradsettononetrue valueloss 05 policyloss entropy 001backward nnutilsclipgradnormselfpolicyparameters 05 selfpolicyoptimizers opt step train agent py rllteenv import makeatarienv name main device cuda env makeatarienvpongnoframeskipv4 numenvs8 seed0 devicedevice agent a2cenvenv taga2catari seed0 devicedevice numsteps128 agenttrainnumtrainsteps10000000 shown example dozen line code needed create rl agent rllte algorithm decoupling module replacement rllte allows developer replace settled module implemented algorithm make performance comparison algorithm improvement builtin custom module supported suppose want compare effect different encoders suffices invoke set function py rlltexploitencoder import espeholtresidualencoder encoder espeholtresidualencoder agentsetencoderencoder rllte extremely open framework allows developer try anything detailed tutorial see tutorial function list part rl agent type algo box dis mb md mp npu onpolicy a2c onpolicy ppo onpolicy drac onpolicy daac onpolicy drdaac onpolicy ppg offpolicy dqn offpolicy ddpg offpolicy sac offpolicy sacdiscrete offpolicy td3 offpolicy drqv2 distributed impala dis mb md discrete multibinary multidiscrete action space mp multi processing developing support intrinsic reward shaping support observation augmentation intrinsic reward module type module countbased pseudocounts rnd curiositydriven icm girm ride memorybased ngu information theorybased re3 rise revd see tutorial use intrinsic reward observation augmentation usage example rllte ecosystem explore ecosystem rllte facilitate project hub fast training apis reusable benchmark evaluation reasonable reliable metric algorithm evaluation env packaged environment fast invocation deployment convenient apis model deployment pretraining method pretraining rl copilot large language modelempowered copilot api documentation view welldesigned documentation contribute welcome contribute project begin writing code please read contributingmd guide first cite project use rllte research please cite project like bibtex articleyuan2023rllte titlerllte longterm evolution project reinforcement learning authormingqi yuan zequn zhang yang xu shihao luo bo li xin jin wenjun zeng year2023 journalarxiv preprint arxiv230916382 acknowledgment project supported hong kong polytechnic university eastern institute advanced study flwfoundation eias hpc provides gpu computing platform huawei ascend community provides npu computing platform testing code project borrowed inspired several excellent project highly appreciate see acknowledgmentmd miscellaneous stargazer thanks support stargazer repo roster rlefoundationrllte forkers thanks support forkers repo roster rlefoundationrllte star history star history chart,"[('pip', 'install'), ('longterm', 'evolution')]"
OpenRL-Lab/openrl,Python,pypi pypi python version anacondaserver badge anacondaserver badge anacondaserver badge code style black hitsofcode codecov documentation status read doc github org star github star github fork github commit activity github issue github pull contributor github license embark slack badge openrlv018 updated oct 13 2023 main branch latest version openrl active development want try openrl switch stable branch welcome openrl documentation crafting reinforcement learning framework passion valuable insight welcome openrl opensource general reinforcement learning research framework support training various task singleagent multiagent offline rl selfplay natural language developed based pytorch goal openrl provide simpletouse flexible efficient sustainable platform reinforcement learning research community currently feature supported openrl include simpletouse universal interface support training tasksenvironments support singleagent multiagent task support offline rl training expert dataset support selfplay training reinforcement learning training support natural language task dialogue support arena allows convenient evaluation various agent even submission jidi competitive environment importing model datasets hugging face support loading stablebaselines3 model hugging face testing training tutorial integrate userdefined environment openrl support model lstm gru transformer etc multiple training acceleration method including automatic mixed precision training data collecting wth half precision policy network userdefined training model reward model training data environment support support gymnasium environment support callback used implement various function logging saving early stopping dictionary observation space support popular visualization tool wandb tensorboardx supported serial parallel environment training ensuring consistent result mode chinese english documentation provides unit testing code coverage testing compliant black code style guideline type checking algorithm currently supported openrl detail please refer gallery proximal policy optimization ppo dualclip ppo multiagent ppo mappo jointratio policy optimization jrpo generative adversarial imitation learning gail behavior cloning bc advantage actorcritic a2c selfplay deep qnetwork dqn multiagent transformer mat valuedecomposition network vdn soft actor critic sac deep deterministic policy gradient ddpg environment currently supported openrl detail please refer gallery gymnasium mujoco pettingzoo mpe chat bot atari starcraft ii smacv2 omniverse isaac gym deepmind control snake gympybulletdrones gridworld super mario bros gym retro framework ha undergone multiple iteration openrllab team ha applied academic research ha become mature reinforcement learning framework openrllab continue maintain update openrl welcome everyone join opensource community contribute towards development reinforcement learning information openrl please refer documentation outline welcome openrl outline openrl installation use docker quick start gallery project using openrl feedback contribution maintainer supporter contributor stargazer forkers citing openrl license acknowledgment openrl provide table comparison openrl existing popular rl library openrl employ modular design highlevel abstraction allowing user accomplish training various task unified userfriendly interface library nlprlhf multiagent selfplay training offline rl bilingual document openrl heavycheckmark heavycheckmark heavycheckmark heavycheckmark heavycheckmark stable baselines3 x x x x x rayrllib x heavycheckmark heavycheckmark heavycheckmark x diengine x heavycheckmark fullly supported heavycheckmark heavycheckmark tianshou x fullly supported fullly supported heavycheckmark heavycheckmark marllib x heavycheckmark fullly supported x x mappo benchmark x heavycheckmark x x x rl4lms heavycheckmark x x x x trlx heavycheckmark x x x x trl heavycheckmark x x x x timechamber x x heavycheckmark x x installation user directly install openrl via pip bash pip install openrl user using anaconda miniconda also install openrl via conda bash conda install c openrl openrl user want modify source code also install openrl source code bash git clone cd openrl pip install e installation user check version openrl command line bash openrl version tip installation required try openrl online colab open colab use docker openrl currently provides docker image without gpu support user computer doe nvidia gpu obtain image without gpu plugin using following command bash sudo docker pull openrllabopenrlcpu user want accelerate training gpu obtain using following command bash sudo docker pull openrllabopenrl successfully pulling image user run openrl docker image using following command bash without gpu acceleration sudo docker run openrllabopenrlcpu gpu acceleration sudo docker run gpus net host openrllabopenrl inside docker container user check openrl version run test case using command bash check openrl version docker container openrl version run test case openrl mode train env cartpolev1 quick start openrl provides simple easytouse interface beginner reinforcement learning example using ppo algorithm train cartpole environment python trainppopy openrlenvscommon import make openrlmodulescommon import pponet net openrlrunnerscommon import ppoagent agent env makecartpolev1 envnum9 create environment set environment parallelism tonet netenv create neural network agent agentnet initialize agent agenttrain totaltimesteps20000 start training set total number step 20000 running environment training agent using openrl requires four simple step create environment initialize model initialize agent start training welltrained agent user also easily test agent python trainppopy openrlenvscommon import make openrlmodulescommon import pponet net openrlrunnerscommon import ppoagent agent agent agentnetmakecartpolev1 envnum9 initialize trainer agenttraintotaltimesteps20000 create environment test set parallelism environment toand set rendering mode grouphuman env makecartpolev1 envnum9 rendermodegrouphuman agentsetenvenv agent requires interactive environment ob info envreset initialize environment obtain initial observation environmental information true action agentactobs agent predicts next action based environmental observation environment take one step according action obtains next observation reward whether end environmental information ob r done info envstepaction anydone break envclose close test environment executing code regular laptop take second complete training show visualization agent tip user also quickly train cartpole environment executing command line terminal bash openrl mode train env cartpolev1 training task multiagent natural language processing openrl also provides similarly simple easytouse interface information perform multiagent training set hyperparameters training load training configuration use wandb save gif animation etc please refer multiagent training example information natural language task training loading modelsdatasets hugging face customizing training modelsreward model etc please refer dialogue task training example information openrl please refer documentation gallery order facilitate user familiarity framework provide example demo using openrl gallery user also welcome contribute training example demo gallery project using openrl listed research project use openrl openrl project using openrl research project also welcome join list feedback contribution question find bug check ask issue join qq group openrl official communication group join slack group discus openrl usage development u join discord group discus openrl usage development u send email huangshiyu4paradigmcom join github discussion openrl framework still continuous development documentation welcome join u making project better contribute code read contributor guide openrl roadmap maintainer present openrl maintained following maintainer shiyu huang wenze chenchen001117 yiwen sunyiwenai welcome contributor join maintenance team send email huangshiyu4paradigmcom apply joining openrl team supporter contributor href img src stargazer stargazer repo roster openrllabopenrl forkers forkers repo roster openrllabopenrl citing openrl work ha helpful please feel free cite u latex miscopenrl2023 titleopenrl authoropenrl contributor publisher github howpublished url year2023 star history star history chart license openrl apache 20 license acknowledgment development openrl framework ha drawn strength reinforcement learning framework stablebaselines3 pytorcha2cppoacktrgail mappo gymnasium diengine tianshou rl4lms,"[('x', 'x'), ('reinforcement', 'learning')]"
artivis/kalmanif,C++,kalmanif small collection kalman filter lie group ghabadgeciimg githubbadgelicense package summary kalmanif kalman filter lie group library stateestimation targeted robotics application developed headeronly c17 library based manif moment implement extended kalman filter ekf square root extended kalman filter sekf invariant extended kalman filter iekf unscented kalman filter manifold ukfm rauchtungstriebel smoother rts smoother compatible filter ert serts ierts urtsm together system measurement model mostly demo purpose filtersmodels added contribution welcome kalmanif started ha rework excellent kalman library markus herbmherb turn filteringbased example manifmanifexamples reusable code main difference kalman library integration manif library handle lie theory aspect also numerous implementation detail differ summarized kalmanif distributed permissive license inspirational model heavyexclamationmark kalmanif much work progress expect work box support application expect api change headache possible heavyexclamationmark detail maintainer status maintained maintainer jeremie deray author jeremie deray license mit bug feature tracker githubcomartiviskalmanifissueskalmanifissue source githubcomartiviskalmanifgit branch devel quick start checkout installation guide note iekf ukfm filter implemented right invariant flavor however able handle right left measurement tutorial application demo provide selfcontained selfexplained executables implementing real problem source code located kalmanifexamples demo demose2cpp 2d robot localization based fixed landmark using se2 robot pose implement example va sola18lie demose3cpp 3d robot localization based fixed landmark using se3 robot pose reimplements example 3d demose23cpp 3d robot localization linear velocity estimation based strapdown imu model fixed beacon check documentation see build option reference kalmanif based several publication referenced contributing want contribute great check contribution guideline barrau17 kalmanifdoc pybind11 gitworkflow,"[('kalman', 'filter'), ('extended', 'kalman')]"
tnikolla/robot-grasp-detection,Python,detecting grasping position deep neural network using rgb image model uploaded train better time machine learning tensorflowml please bear mind need read adapt need part code feel free open issue need help try update readme comment code implementation mainly based algorithm redmon angelova described arxiv14123128v2 method us rgb image find single grasp deep convolutional neural network applied image ohject result one get coordinate dimension orientation one possible grasp image used train network cornell grasping dataset problem description mind parallel plate griper close simple natural way picturing grasping position image would rectangle see figureone way representing uniquely g x theta h w xy center rectangle theta orientation rectangle horizontal axis image h w dimension height width rectangle sole purpose small library train network given rgb image able accuracy predict possible grasp g train scratch procedure follows step convert imagenet tfrecord format train model imagenet convert grasping dataset tfrecords train grasping dataset using pretrained weight prepering imagenet running script need download convert imagenet data native tfrecord format check link inception model google found whole inception model github useful training imagenet running imagenetclassifierpy trick first change default dataset directory mine lie rootimagenetdata check also end file option use example imagenetclassifierpy batchsize128 modelpathmodelsimagenetm1m1ckpt trainorvalidationtrain running gtx 980 very2 good xeon need around two day time check begining model savingrestoring weight prepering cornell grasping dataset downloading decompressing run buildcgddatasetpy make sure adapt need python file example point dataset right place filename49 adapt number 49 contribute program better someday train grasping dataset run graspdetpy training give argument training imagenet around 1000 example image grasp trained fast careful overfit,"[('grasping', 'dataset'), ('rgb', 'image')]"
google/mobly,Python,welcome mobly latest release build status mobly pythonbased test framework specializes supporting test case require multiple device complex environment custom hardware setup example use case p2p data transfer two device conference call across three phone wearable device interacting phone internetofthings device interacting testing rf characteristic device special equipment testing lte network controlling phone base station enbs mobly support many different type device equipment easy plug device custom equipmentservice mobly mobly come set libs control common device like android device developed googlers mobly official google product compatibility mobly requires python 36 newer mobly test could run following platform ubuntu 1404 macos 106 windowssystem dependency adb 1040 recommended python37 pythonsetuptools use python3 use pip3 python3 python3x accordingly installation install released package pip sh pip install mobly download source run setuppy use bleeding edge sh git clone cd mobly python setuppy install may need sudo command system ha certain permission restriction tutorial mobly 101 simple test example get started mobly mobly instrumentation runner tutorial use mobly android instrumentation test runner run android instrumentation test mobly androiddevice service create custom service attach mobly androiddevice controller mobly snippet mobly snippet project let user better control android device mobly snippet lib used triggering custom deviceside code hostside mobly test could use existing android library like ui automator espresso mobly bundled snippet set snippet allow mobly test control android device exposing simplified version public android api suitable testing,"[('android', 'device'), ('mobly', 'test')]"
usdot-fhwa-stol/carma-platform,C++,cicleci build status sonar code quality dockerhub release dockerhub release candidate dockerhub develop circleci quality gate status docker cloud build status docker cloud build status docker cloud build status carma carmasm advance research development accelerate market readiness deployment cooperative driving automation advancing automated driving technology safety security data artificial intelligence encourages collaboration participation community engineer researcher advance understanding cooperative driving automation using open source software os agile project management practice carma reusable extensible platform controlling sae levelconnected automated vehicle av provides rich generic api third party plugins implement vehicle guidance algorithm plan vehicle trajectory written c run robot operating system environment ubuntu platform reused variety properly equipped vehicle migration ha begun rosframework rosthis readme updated october 23 2020 carma platform managing automated vehicle motion involves three aspect first navigation also known localization act determining vehicle currently respect earth respect desired path travel planned route second guidance also known trajectory planning includes process determining vehicle move current location destination destination route handed guidance algorithm determine vehicle motion need adjusted time order follow route third aspect automated vehicle motion control cover actuation vehicle physical device induce change motion land vehicle typically causing wheel rotate faster slower turning steering wheel therefore navigation solution becomes input guidance function guidance solution becomes input control function vehicle move obviously location change navigation function constantly need update solution cycle iterates quickly necessary produce smooth accurate vehicle motion rate iteration largely determined expected speed vehicle carma platform provides navigation guidance function host vehicle well control function depends low level controller hardware provide rest control function current version carma platform provides sae levelautonomy speed steering control documentation documentation setup operation design carma platform found project confluence page additional documentation found doxygen source code documentation page release note current version release history carma software platform carma release note repo structure note master develop branch repo repos usdotfhwastol github organization reflects third generation carma code documentation called carma3 us autoware provide sae levelandautomation capability legacy carma2 code still supported wa used extensively fhwa 2018 sae levelexperiments work code base please check carma2integration branch make pull request using contribution process outlined version note release 311 wa final version carma platform contain ros1 code develop branch future version contain mix ros1 ros2 code mixed system code ha fully ported ros2 learn system ros2 migration effort confluence carma platform ros2 doc roadmap current carma ecosystem development direction release plan found carma roadmap architecture guide documentation describes software architecture within single carma vehicle may several vehicle operating concert communicating via dsrc cellular mean also communicate roadside infrastructure using dsrc cellular communication among software component within single vehicle however mostly done via robot operating system framework communication neighboring vehicle carma3 system architecture information carma2 architecture please see carma2 system architecture detailed design document please see detail design document page detailed design specification carma additional information detail design page developer guide useful development documentation instruction setup development environment carma platform found following page carma development resource development environment setup plugin developer guide carma3 coming soon description approach develop plugin carma2 please see carma 27 developer guide user guide user guide carma3 coming soon description functionality specific carma2 cadillac srx see carma user guide administrator guide administrator guide carma3 coming soon administrative information carma2 including vehicle developer pc configuration build deployment testing step necessary install run carma platform please see administrator guide carma package carma platformsm downloadable open source software os platform architected extensible reusable wide variety research purpose advance innovation cooperative driving automation enables communication vehicle road user pedestrian bicyclist scooter infrastructure device capable communication promotes collaboration community engineer researcher accelerate development testing evaluation cooperative driving automation advancing safety security data use artificial intelligence automated driving technology carma platform distributed set multiple independent package hosted separate github repository package facilitate operation carma platform different hardware configuration allow support different mode operation include one package build carma platform system please clone github repository catkin workspace src folder repository catkin build system verify dependency resolved appropriately build newly included package next run catkinmake incomplete listing available package carma3 includes vehicle controller interface driver carmasscinterfacewrapper dataspeedcontrollerdriver externally managed dataspeedcandriver externally managed sensor driver carmacohdadsrcdriver carmavelodynelidardriver avtvimbacamera carmadelphisrr2driver novatelgpsdriver gstreamercameradriver externally managed ousterlidardriver externally managed inertiallabsgnssdriver externally managed general system utilites carmawebui carmamsgs carmautils vehicle configuration carmaconfig full list available package may found usdot fhwa stol github organization carma cloudsm downloadable cloudbased open source software os service provides information support enable cooperative driving automation enables communication cloud service vehicle road user pedestrian bicyclist scooter infrastructure device capable communication promotes collaboration community engineer researcher accelerate development testing evaluation cooperative driving automation advancing safety security data use artificial intelligence automated driving technology source code carma cloud found github contribution welcome carma contributing guide please read guide learn development process propose pull request improvement build test change project carma contributing guide code conduct please read carma code conduct outline expectation participant within carma community well step reporting unacceptable behavior committed providing welcoming inspiring community expect code conduct honored anyone violates code conduct may banned community attribution development team would like acknowledge people made direct contribution design code repository carma attribution license contributing federal highway administration fhwa connected automated research mobility application carma agree contribution licensed apache license 20 license carma license codegov registration info agency dot short description cooperative automation research mobility application carma open source software os platform run computer inside vehicle computer interacts vehicle device enable cooperative automated vehicle research development testing computer give vehicle information needed order interact cooperate infrastructure vehiclesphase project initiated next generation carma fleet developing common platform infrastructure support fhwa strategic vision cooperative automated driving system cad phase also developed integrated highway prototype ihp integrating existing application new vehicle type heavy truck carma fleet following five application major research areasvehicle platooningsignalized intersection approach departureinfrastructure guided speed harmonization andcooperative lane change andcooperative ramp mergephase ii project advance cad wa developed fhwa carma research platform allow testing arbitration negotiation strategy ultimately project enhance infrastructure efficiency reduce traffic congestion one goal project accelerate technology transfer deployment cooperative vehicle application open source collaboration industry stakeholder project enable society engineer sae leveland levell23 light vehicle testing capability develop fleet four sae l23 heavy vehicle project also develop highlevel concept transportation system management operation tsmo around use automated driving technology furthermore project identify traffic incident management tim scenario provide strategy improvement new strategy first responder use case interacting ad using ad new fhwa fleet used prototype scenario following use case categoriesbasic travelwork zonetraffic incident management andweather test provide objective data inform stakeholder impact ad possible strategy use ad improve operation status beta tag transportation cooperative driving automation connected vehicle intelligent transportation system c java python docker labor hour 200 contact name james lieu contact phone 202 3663000 contact please click carma logo visit federal highway adminstrationfhwa carma website information contact carmadotgov support technical support carma team please contact carma help desk carmasupportdotgov,"[('carma', 'platform'), ('cooperative', 'driving')]"
bark-simulator/bark,C++,ubtuntuci build ubtuntumanylinux build nightly ltl build ci r build nightly rule mcts build codacy badge bark tool behavior benchmarking bark semantic simulation framework autonomous driving behavior modelcentric design allows rapid development training benchmarking various decisionmaking algorithm especially suited computationally expensive task reinforcement learning good starting point look content barktutorial iros 2020 usage pip package python evangelist implementing python behavior model ml scientist using barkml learning behavior bark available pippackage ubuntu macos python37 install latest version pip install barksimulator pip package support full benchmarking functionality existing behavior model development model within python installing package look example check use bark highway example merging example intersection example intersection intersection intersection b build source c developer creating c behavior model researcher performing benchmark contributor bark use git clone download repository page follow instruction install bark get stepbystep instruction use bark run ipython notebook tutorial using bazel run docstutorialsrun detailed understanding bark work concept use case look documentation example benchmark running example use bark benchmarking scientific purpose scientific publication using bark bark open behavior benchmarking multiagent environment iros 2020 graph neural network reinforcement learning behavior generation semantic environment iv 2020 counterfactual policy evaluation decisionmaking autonomous driving iros 2020 plc workshop modeling testing multiagent traffic rule within interactive behavior planning iros 2020 plc workshop formalizing traffic rule machine interpretability cavs 2020 robust stochastic bayesian game behavior space coverage r 2020 workshop interaction decisionmaking autonomousdriving riskconstrained interactive safety behavior uncertainty autonomous driving iv 2021 riskbased safety envelope autonomous vehicle perception uncertainty arxiv bark ecosystem bark ecosystem composed multiple component share common goal develop benchmark behavior model barkml machine learning library decisionmaking autonomous driving barkmcts integrates templatebased c monte carlo tree search library bark support development single multiagent search method barkrulesmcts integrates traffic rule within monte carlo tree search lexicographic ordering barkmiqp minivan planner based miqp single multiagent planning check build instruction barkdb provides framework integrate multiple bark scenario set database database module support binary serialization randomly generated scenario ensure exact reproducibility behavior benchmark across system barkrulemonitoring provides runtime verification rule linear temporal logic ltl simulated bark trace carlainterface twoway interface carla bark bark behavior model control carla vehicle carla controlled vehicle mirrored bark paper use bark please cite u using following paper inproceedingsbernhard2020 title bark open behavior benchmarking multiagent environment author bernhard julian esterle klemens hart patrick kessler tobias booktitle 2020 ieeersj international conference intelligent robot system iros url year 2020 contributing pull request welcome major change please open issue first discus would like change please make sure update test appropriate license bark specific code distributed mit license,"[('behavior', 'model'), ('autonomous', 'driving')]"
ai-winter/ros_motion_planning,C++,motion planning motion planning computational problem find sequence valid configuration move object source destination generally includes path searching trajectory optimization path searching based path constraint eg obstacle search optimal path sequence robot travel without conflict source destination trajectory planning based kinematics dynamic obstacle optimizes motion state trajectory source destination according path sequence repository provides implementation common motion planning algorithm theory analysis found motionplanning furthermore provide python matlab version star fork pr welcome table content quick start withinminutes file tree dynamic configuration version paper application real robot important update acknowledgment license maintenance quick start withinminutes tested ubuntu 2004 lts noetic install desktopfull suggested install git bash sudo apt install git clone reposity bash cd yourworkspace git clone dependence bash sudo apt install pythonispython3 rosnoeticamcl rosnoeticbaselocalplanner rosnoeticmapserver rosnoeticmovebase rosnoeticnavfn compile execute code run script srcsimenvscripts makesh compilation mainsh execution bash cd rosmotionplanningsrcsimenvscripts makesh mainsh note changing launch file doe work regenerated according srcuserconfiguserconfigyaml python script run mainsh therefore change configuration userconfigyaml instead launch file use 2d nav goal select goal moving file tree file structure shown rosmotionplanner asset src planner globalplanner localplanner utils simenv simulation environment config launch map mesh model rviz script urdf world thirdparty dynamicrvizconfig dynamicxmlconfig gazeboplugins rvizplugins userconfig user configure file 02 dynamic configuration reposity simply change configs modifing srcuserconfiguserconfigyaml run mainsh python script regenerated launch world according configs file example userconfigyaml yaml map warehouse world warehouse rvizfile simenvrviz robotsconfig robot1type turtlebot3burger robot1globalplanner astar robot1localplanner dwa robot1xpos 00 robot1ypos 00 robot1zpos 00 robot1yaw 157 robot2type turtlebot3burger robot2globalplanner jps robot2localplanner pid robot2xpos 50 robot2ypos 75 robot2zpos 00 robot2yaw 00 plugins pedestrian pedestrianconfigyaml obstacle obstaclesconfigyaml explanation map static maplocated srcsimenvmap map mapserver publish map message often used slam world gazebo worldlocated srcsimenvworlds world gazebo disabled often used real world rvizfile rviz configure automatically generated rvizfile set robotsconfig robotic configuration type robotic typesuch turtlebot3burger turtlebot3waffle turtlebot3wafflepi globalplanner global algorithm detail section version localplanner local algorithm detail section version xyzpos yaw initial pose plugins application using simulation pedestrian configure file add dynamic obstacleseg pedestrian obstacle configure file add static obstacle pedestrian obstacle configuration file example shown yaml pedestriansconfigyaml sfm algorithm configure socialforce animationfactor 51 handle pedestrian within peopledistance peopledistance 60 weight social force model goalweight 20 obstacleweight 800 socialweight 15 groupgazeweight 30 groupcohweight 20 grouprepweight 10 pedestrian setting pedestrian updaterate pedproperty name human1 pose20157 velocity 09 radius 04 cycle true timedelay ignore model1 groundplane model2 turtlebot3waffle trajectory goalpoint1200 goalpoint2200 name human2 pose300 velocity 12 radius 04 cycle true timedelay ignore model1 groundplane model2 turtlebot3waffle trajectory goalpoint1300 goalpoint2400 explanation socialforce weight factor modify navigation behavior see social force model information pedestriansupdaterate update rate pedestrains presentation higher updaterate sluggish environment becomes pedestrianspedproperty pedestrian property configuration name id human pose initial pose human velocity maximum velocity human radius approximate radius human body cycle true actor start goal point sequence last goal point reached timedelay time second wait starting human motion ignoreobstacles model must ignored obstacle must indicated actor world included automatically trajectory list goal point actor must reach must indicated goal post social force model yaml obstaclesconfigyaml static obstacle obstacle type box pose200 color grey prop 100 w 025 050 h 080 explanation type model type specific obstacle optionalboxcylinderorsphere pose fixed pose obstacle color color obstacle prop property obstacle mass w width depth h height r radius 03 version global planner planner version animation gbfs status dijkstra status status jps status status lpa status lite status voronoi status theta status lazy theta status rrt status rrt status informed rrt status rrtconnect status local planner planner version animation pid status dwa status apf status teb status status mpc status status lattice status status intelligent algorithm planner version animation aco status ga status status pso status status abc status status 04 paper searchbased planning formal basis heuristic determination minimum cost path jps online graph pruning pathfinding grid map lifelong planning lifelong planning optimal efficient path planning partiallyknown environment lite lite theta theta anyangle path planning grid anyangle path planning nonuniform costmaps lazy theta lazy theta anyangle path planning path length analysis 3d samplebased planning rrt rapidlyexploring random tree new tool path planning rrtconnect rrtconnect efficient approach singlequery path planning rrt samplingbased algorithm optimal motion planning informed rrt optimal samplingbased path planning focused via direct sampling admissible ellipsoidal heuristic evolutionarybased planning aco ant colony optimization new metaheuristic local planning dwa dynamic window approach collision avoidance apf realtime obstacle avoidance manipulator mobile robot 05 application real robot word compile repository make visible robot replace like planner navigation example use another gazebo simulation example like robot ha capacity localization mapping navigation using movebase download compile repository bash cd git clone cd rosmotionplanning catkinmake download compile real robot software bash cd git clone cd ackermannws important reason note source rosmotionplanningdevelsetupbash catkinmake note sourcing workspace catkinmake make current setupbash contain former sourced workspace ie also included source current workspace later remember remove old build devel current workspace otherwise work change baseglobalplanner baselocalplanner real robot movebase need xml xml version10 params graphplanner rosparam filefind simenvconfigplannergraphplannerparamsyaml commandload sampleplanner rosparam filefind simenvconfigplannersampleplannerparamsyaml commandload dwaplanner rosparam filefind simenvconfigplannerdwaplannerparamsyaml commandload pidplanner rosparam filefind simenvconfigplannerpidplannerparamsyaml commandload default global planner param namebaseglobalplanner valueglobalplannerglobalplanner graphplanner param namebaseglobalplanner valuegraphplannergraphplanner option astar jps gbfs dijkstra dstar lpastar dstarlite param namegraphplannerplannername valueastar sampleplanner param namebaseglobalplanner valuesampleplannersampleplanner option rrt rrtstar informedrrt rrtconnect param namesampleplannerplannername valuerrtstar default local planner param namebaselocalplanner valueteblocalplannerteblocalplannerros param namebaselocalplanner valuepidplannerpidplanner param namebaselocalplanner valuedwaplannerdwaplanner something else node something else run maybe still detail deal 06 important update date update 2023113 cost motion node set neutralcost unequal heuristic difference dijkstra bug ha solved c v11 2023118 update rrt c v11 adding heuristic judgement generating random node 2023225 update pid c v11 making desired theta weighted combination theta error theta trajectory 2023316 support dynamic simulation environment user add pedestrian modifing pedestrianconfigyaml 07 acknowledgment robot world model datasetofgazeboworldsmodelsandmaps awsrobomakersmallwarehouseworld thanks open source model sincerely pedestrian environment using social force modelsfm come costmap plugin dynamicvoronoi presented boris lau 08 license source code released gplv3 license 09 maintenance feel free contact u question,"[('status', 'status'), ('path', 'planning')]"
vipjeffreylee/QQrobot,C++,qqrobot qqrobotcqtqtcqqrobotlinuxmac oswindows qqrobotwebqqqqqqrobotqqwebqqqqrobot qqqqqq robotqt5pluginpluginsqqrobotrobotinterfacenamelistenandsayoknamerobotlistenandsayrobot,"[('qqrobot', 'qqrobotcqtqtcqqrobotlinuxmac'), ('qqrobotcqtqtcqqrobotlinuxmac', 'oswindows')]"
OpenCyphal/libcanard,C++,compact cyphalcan c main workflow quality gate status reliability rating coverage line code forum libcanard compact implementation cyphalcan protocol stack c99c11 highintegrity realtime embedded system cyphal open lightweight data bus standard designed reliable intravehicular communication aerospace robotic application via bus ethernet robust transport read doc libcanardcanardh find example starter tutorial cyphal forum want contribute please read contributingmd feature full test coverage extensive static analysis compliance automatically enforceable misra c rule reach detail detailed time complexity memory requirement model benefit realtime highintegrity application purely reactive api without need background servicing support classic fd support redundant network interface compatibility 8163264bit platform compatibility extremely resourceconstrained baremetal environment starting 32k rom 32k ram implemented 1000 line code platform library designed usable box conventional 8163264bit platform including deeply embedded baremetal platform long standardcompliant compiler available platformspecific medium io layer driver supposed provided application application libcanard medium layer hardware opencyphal development team maintains collection various platformspecific component separate repository user encouraged search repository driver example piece may reused target application speed design medium io layer driver application example example augments documentation doe replace library requires constantcomplexity deterministic dynamic memory allocator could use standard c heap implementation constantcomplexity let suppose using o1heap instead going need basic wrapper c static void memallocatecanardinstance const canard const sizet amount void canard return o1heapallocatemyallocator amount static void memfreecanardinstance const canard void const pointer void canard o1heapfreemyallocator pointer init library instance c canardinstance canard canardinitmemallocate memfree canardnodeid 42 default anonymous set later point order able send transfer network need one transmission queue per redundant interface c canardtxqueue queue canardtxinit100 limit size queue 100 frame canardmtucanfd set mtu 64 byte also canardmtucanclassic publish message message serialization shown c static uint8t mymessagetransferid must static heapallocated retain state call const canardtransfermetadata transfermetadata priority canardprioritynominal transferkind canardtransferkindmessage portid 1234 subjectid remotenodeid canardnodeidunset message cannot unicast use unset transferid mymessagetransferid mymessagetransferid transferid shall incremented every transmission subject int32t result canardtxpushqueue call per redundant interface queue canard txdeadlineusec zero transmission deadline limited transfermetadata 47 size message payload see nunavut transpiler x2dx00 sancho strike thou art great fear result error ha occurred either argument invalid tx queue full run memory possible statically prove outofmemory never occur given application heap sized correctly background refer robson proof documentation o1heap use nunavut automatically generate deserialization code dsdl definition frame generated message transfer stored queue need pick one one transmitted normally following fragment invoked periodically unload frame prioritized transmission queue several redundant network interface used driver c const canardtxqueueitem ti null ti canardtxpeekqueue null peek top queue 0u titxdeadlineusec titxdeadlineusec getcurrentmicroseconds check deadline pleasetransmitti send frame redundant iface break driver busy break retry later frame transmitted ha timed waiting pop queue deallocate canardmemoryfreecanard canardtxpopqueue ti transfer reception done feeding frame transfer reassembly state machine redundant interface first need subscribe c canardrxsubscription heartbeatsubscription void canardrxsubscribecanard subscribe message uavcannodeheartbeat canardtransferkindmessage 7509 fixed subjectid heartbeat message type see dsdl definition 16 extent maximum possible payload size provided nunavut canarddefaulttransferidtimeoutusec heartbeatsubscription canardrxsubscription myservicesubscription void canardrxsubscribecanard subscribe arbitrary service response canardtransferkindresponse specify want service response request 123 serviceid whose response receive 1024 extent see canarddefaulttransferidtimeoutusec myservicesubscription extent refers minimum amount memory required hold serialized representation compatible version data type word maximum possible size received object parameter determined data type author data type definition time typically larger maximum object size order allow data type author introduce field future version type example mymessage10 may maximum size 100 byte extent 200 byte revised version mymessage11 may maximum size anywhere betweenand 200 byte extent value provided per data type dsdl transcompilers nunavut libcanard use term subscription subject message also service simplicity subscribe unsubscribe runtime many time want normally however embedded application would subscribe roll okay receive transfer c canardrxtransfer transfer const int8t result canardrxacceptcanard rxtimestampusec frame wa received microsecond receivedframe frame received bus redundantinterfaceindex transport redundant use transfer null result error ha occurred either argument invalid ran memory possible statically prove outofmemory never occur given application heap sized correctly background refer robson proof documentation o1heap reception invalid frame error else result processreceivedtransferredundantinterfaceindex transfer transfer ha received process canardmemoryfreecanard transferpayload deallocate dynamic memory afterwards else nothing received frame either invalid nonlast frame multiframe transfer reception invalid frame reported error error simple api generating hardware acceptance filter configuration also provided acceptance filter generated extended 29bit id mask scheme used minimize number irrelevant transfer processed software c generate acceptance filter receive uavcannodeheartbeat10 message fixed portid 7509 canardfilter heartbeatconfig canardmakefilterforsubject7509 receive uavcanregisteraccess10 service transfer fixed portid 384 canardfilter registeraccessconfig canardmakefilterforservice384 insnodeid also combine two filter configuration one may also accept irrelevant message allows consolidating large set configuration fit number hardware filter information optimal subset configuration consolidate minimize wasted cpu see cyphal specification canardfilter combinedconfig canardconsolidatefiltersheartbeatconfig registeraccessconfig configurehardwarefilterscombinedconfigextendedcanid combinedconfigextendedmask full api specification available documentation find example unclear incorrect please open ticket revision v31 remove dockerfile use toolshed instead necessary simplify transfer reassembly state machine address 212 see also v311 refactor transfer reassembly state machine enhance maintainability robustness v30 update branding uavcan v1 renamed cyphal improve misra compliance removing use flex array 192 fix dependency issue docker toolchain api change release aside rebrandingrenaming canarduavcanspecificationversionmajor canardcyphalspecificationversionmajor canarduavcanspecificationversionminor canardcyphalspecificationversionminor v301 remove ub described 203 v302 robustify multiframe transfer reassembler state machine 189 eliminate risk header file name collision renaming vendored cavl header canardcavlh 196 v20 dedicated transmission queue per redundant interface depth limit application expected instantiate canardtxqueue several case redundant transport manually replace linked list fast olog n avl tree cavl traversing list rx subscription requires recursive traversal tree manual dsdl serialization helper removed use nunavut instead replace bitwise crc computation much faster static table default 185 disabled setting canardcrctable0 expected save ca 500 byte rom fixed issue constcorrectness api 175 canardrxaccept2 renamed canardrxaccept support build configuration header via canardconfigheader add api generating hardware acceptance filter configuration 169 v11 add new api function canardrxaccept2 deprecate canardrxaccept provide user reference canardrxsubscription promote certain internal field public api allow introspection v10 initial release,"[('data', 'type'), ('redundant', 'interface')]"
BrianPugh/belay,Python,image python compat pypi gha test codecov report readthedocs inclusionmarkerdonotremove belay python library enables rapid development project interact hardware via micropython circuitpython compatible board commandline tool developing standalone micropython project micropython package manager belay support wired serial connection usb wireless connection via webrepl wifi quick video belay 22 second see documentation usage detail belay belay people creating software project need interact hardware example include control motor webcam always pointing person turn led receive notification read potentiometer control system volume belay package manager people want use public library get ondevice easy repeatable dependable manner problem doe belay solve typically python script interact hardware involvesmajor challenge ondevice firmware usually c micropython directly handling hardware interaction typically developed compiled uploaded nearly independent project program computer performs task specified interacts device computertodevice communication protocol command result transferred doe device execute command lot work want computer something simple like turn led belay simplifies merging stepsandinto codebase manages stepfor code automatically synced beginning script execution belay package manager make easy cache update deploy third party library project installation belay requires python 38 installed via codeblock bash pip install belay micropythoncompatible board need micropython installed additional preparation required using circuitpython additional modification need made bootpy see documentation detail example turning led belay take onlylines code function decorated task decorator sent device interpreted micropython interpreter calling decorated function onhost sends command device execute actual function codeblock python import belay device belaydevicedevttyusb0 devicetask def setledstate printfprinting device turning led state pin25 pinoutvaluestate setledtrue output print call ondevice usercode forwarded host stdout example see example folder gha test image target alt gha status codecov report image target alt coverage readthedocs image target alt documentation status python compat image pypi image target quick video belay 22 second documentation example see example folder,"[('image', 'target'), ('interact', 'hardware')]"
arouel/uadetector,Other,uadetector uadetector uadetector library identify 190 different desktop mobile browser 130 useragents like feed reader email client multimedia player addition even 400 robot like bingbot googlebot yahoo bot identified library free portable java library analyze useragent string goal library detect type associated operating system client like mobile firefox 90 android mobile safari 51 io uadetector divided two module core module includes api implementation read detection information function identify useragents resource module contains database necessary identification information service factory class get simply preconfigured useragentstringparser singleton library published monthly integrationtested core module guaranteed run defined core device categorization since version 0910 support device categorization mean instance iphone nexuswill classified smartphone ipad kindle surface rt tablet please take look api documentation get idea get parsing user agent string feature detects 190 different browser library detects 190 different desktop mobile browser 130 useragents like feed reader multimedia player email client identifies 400 robot internet many robot way examine site large number robot detected library monthly updated month new version resource module published always detect latest useragents extremely tested class library especially tested unit test 90 branch coverage 98 line coverage addition many integration test performed regularly help uadetector open source tool welcome contribution report bug feature request issue issue tracking application look known issue page first posting help documentation pointing area lacking unclear inclined submitting patch correct quickly contribute rough thought forking project github sourceforge volunteer help collate organize information already participation project much appreciated license please visit uadetector web site information copyright 2012 andre rouel andre rouel license product apache license version 20 license may use product except compliance license may obtain copy license unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license also please refer licensecomponenttxt file located directory file license term component product depends product contains modified version dave koelle alphanum algorithm obtained homepage license licensealphanumtxt gnu lgpl 21 product us version jaroslav mallat uas data obtained homepage license licenseuastxt cc 30,"[('190', 'different'), ('uadetector', 'uadetector')]"
wenbowen123/BundleTrack,C++,official implementation paper bundletrack 6d pose tracking novel object without instance categorylevel 3d model accepted international conference intelligent robot system iros 2021 abstract prior 6d object pose tracking often assume target object cad model least categorylevel available offline training online template matching work proposes bundletrack general framework 6d pose tracking novel object doe depend upon 3d model either instance categorylevel leverage complementary attribute recent advance deep learning segmentation robust feature extraction well memoryaugmented pose graph optimization spatiotemporal consistency enables longterm lowdrift tracking various challenging scenario including significant occlusion object motion comprehensive experiment given two public benchmark demonstrate proposed approach significantly outperforms stateofart categorylevel 6d tracking dynamic slam method compared stateofart method rely object instance cad model comparable performance achieved despite proposed method reduced information requirement efficient implementation cuda provides realtime performance 10hz entire framework repo readily applied 6d pose tracking novel unknown object cad modelbased 6d pose tracking please check another repository se3tracknet bibtex bibtex inproceedingswen2021bundletrack titlebundletrack 6d pose tracking novel object without instance categorylevel 3d model authorwen b bekris kostas e booktitleieeersj international conference intelligent robot system year2021 supplementary video click watch iros 2021 presentation click watch result benchmark output result convenience benchmarking making plot result pose output downloaded noc dataset ycbineoat setup environment setup strongly recommended use provided docker environment setting scratch complicated supported repo know docker work basic command needed provided step install docker run docker pull wenbowen123bundletracklatest docker pull wenbowen123lfnetreleaseenvlatest edit dockerruncontainersh update path bundletrackdir nocsdir ycbineoatdir run bash dockerruncontainersh cd pathtobundletrack rm rf build mkdir build cd build cmake make data depending want run download data neccessary download weight feature detection network download noc dataset noc nocsreal275additional realtest gts realtesttext objmodels download ycbineoat make like ycbineoat bleach0 annotatedposes depth depthfilled gtmask mask masksvis rgb camktxt download ycb object run prediction noc open separate terminal run bash lfnetreleasedockerruncontainersh cd pathtobundletrack cd lfnetrelease python runserverpy go back terminal launched bundletrack docker run output saved debugdir specified config file default tmpbundletrack detailed log change log toor higher confignocsyml python scriptsrunnocspy nocsdir pathtonocs sceneidport 5555 modelname canarizonateanorm finally result saved tmpbundletrack evaluating entire noc dataset run note add noise perturb initial groundtruth pose evaluation explained paper want see bundletrack actually performs run section python scriptsevalnocspy nocsdir paht noc resultsdir path running output run prediction ycbineoat change modelname modeldir configycbineoatyml path obj file eg folder bleach0 modelname 021bleachcleanser modeldir path ycb objects021bleachcleansertexturedsimpleobj open separate terminal run bash lfnetreleasedockerruncontainersh cd pathtobundletrack cd lfnetrelease python runserverpy go back terminal launched bundletrack docker run output saved debugdir specified config file default tmpbundletrack python scriptsrunycbineoatpy datadir pathtoycbineoat port 5555 modelname ycb object name eg 021bleachcleanser finally result saved tmpbundletrack detailed log change log toor higher configycbineoatyml evaluating entire ycbineoat dataset run python scriptsevalnocspy ycbineoatdir paht ycbineoat ycbmodeldir ycb model folder resultsdir path run output run prediction rgbd data download ycbineoat done open separate terminal run bash lfnetreleasedockerruncontainersh cd pathtobundletrack cd lfnetrelease python runserverpy prepare segmentation mask ycbineoat dataset computed mask robotic arm forward kinematics scene complicated similar noc dataset run video segmentation network get mask first need prepare initial mask grayscale image wheremeans background else foreground python transductivevospytorchrunvideopy imgdir path color file initmaskfile initial mask file prepared masksavedir save prepare folder structure folder eg mustardeasy0002 ycbineoat dataset put directory ycbineoat ie next mustardeasy0002 edit configycbineoatyml make sure path top right structure mustardeasy0002 rgb mask depth camktxt go back terminal launched bundletrack docker run output saved debugdir specified config file default tmpbundletrack python scriptsrunycbineoatpy datadir path folder port 5555,"[('pose', 'tracking'), ('6d', 'pose')]"
zhayujie/chatgpt-on-wechat,Python,chatgpt x x gpt35 gpt4 claude x azure baidu google openai x delle stable diffusion replicate midjourney x x tool chatgpttoolhub x linkai terminal demo made visionn wechat 20230926 20230808 midjourney 20230612 linkai 20230426 lanvent 944 20230405 js00000 686 20230405 chatgpttool goldfishh 663 20230325 stable diffusion 578 lanvent 565 20230309 whisper apiapi speechrecognitiontrue 415 wanggang1987 385 20230209 58 openai openai api api key key openai gpt35turbo 1000tokens 750 500 0002dell e 0016 linkai gpt3gpt4 mj linuxmacoswindows linux python python 37139x 38310 macos docker railway python bash git clone cd chatgptonwechat itchat bash pip3 install r requirementstxt bash pip3 install r requirementsoptionaltxt tiktokenpython38tokens googlebaiduffmpeg openaiffmpeg 415 azure bash pip3 install azurecognitiveservicesspeech configtemplatejson configjson bash cp configtemplatejson configjson configjson bash configjson openaiapikey api key openai api key model gpt35turbo gpt35turbo gpt35turbo16k gpt4 wenxin xunfei proxy ip 1270017890 singlechatprefix bot bot singlechatreplyprefix bot groupchatprefix bot groupnamewhitelist chatgpt chatgpt2 groupchatinonesession chatgpt imagecreateprefix conversationmaxtokens 1000 speechrecognition false groupspeechrecognition false useazurechatgpt false azure chatgpt serviceopenai chatgpt service true openaiapibase azuredeploymentid azure chatgpt azureapiversion azure chatgptapi characterdesc chatgpt openai channeltriggerprefixbot subscribemsg nchatgptnnnntriggerprefixhelp uselinkai false linkaimj linkaiapikey linkai api key linkaiappcode linkai code botbot singlechatprefix singlechatprefix bot singlechatreplyprefix singlechatreplyprefix groupnamewhitelist groupnamewhitelist allgroup bot groupchatprefix groupnamekeywordwhitelistgroupchatkeywordcontributed evolay groupchatinonesession allgroup speechrecognition true openaiwhisper groupspeechrecognition true openaiwhisper groupchatprefixgroupchatkeyword voicereplyvoice true keyitchatmp3wechaty model gpt35turbo textdavinci003 gpt4 gpt432k wenxin claude xunfeigpt4 api temperaturefrequencypenaltypresencepenalty chat apiopenai proxy openai 351 imagecreateprefix openai configpy conversationmaxtokens ratelimitchatgptratelimitdalle clearmemorycommands hotreload characterdesc issue subscribemsgchannel triggerprefixbot 5linkai uselinkai linkai midjourney linkaiapikey linkai api key linkaiappcode linkai code configpy bash python3 apppy window python apppy start auto replying 142nohup bash touch nohupout nohup python3 apppy tail f nohupout ctrlc p ef grep apppy grep v grep kill tail f nohupoutscripts reset 3docker docker dockercomposeyml docker dockercompose docker v dockercompose version docker compose version docker dockercomposeyml bash wget dockercomposeyml openaiapikey groupnamewhitelist dockercomposeyml bash sudo docker compose sudo docker p name chatgptonwechat dockercompose 1x sudo dockercompose docker hub latest latest release bash sudo docker log f chatgptonwechatdocker configjson dockercomposeyml dockercomposeyml chatgptonwechat volume volume configjsonapppluginsconfigjsonrailway railway 5500 0711 railway deploy openaiapikey characterdesc deploy railway faq beta prissuesstar issue,"[('api', 'key'), ('bash', 'pip3')]"
wenbowen123/iros20-6d-pose-tracking,Python,iros206dposetracking official implementation paper se3tracknet datadriven 6d pose tracking calibrating image residual synthetic domain accepted international conference intelligent robot system iros 2020 pdf abstract tracking 6d pose object video sequence important robot manipulation task however introduces multiple challenge robot manipulation involves significant occlusion ii data annotation troublesome difficult collect 6d pose complicates machine learning solution iii incremental error drift often accumulates long term tracking necessitate reinitialization object pose work proposes datadriven optimization approach longterm 6d pose tracking aim identify optimal relative pose given current rgbd observation synthetic image conditioned previous best estimate object model key contribution context novel neural network architecture appropriately disentangles feature encoding help reduce domain shift effective 3d orientation representation via lie algebra consequently even network trained synthetic data work effectively real image comprehensive experiment benchmark existing one well new dataset significant occlusion related object manipulation show proposed approach achieves consistently robust estimate outperforms alternative even though trained real image approach also computationally efficient among alternative achieves tracking frequency 909hz application modelbased rl manipulation arvr humanrobotinteraction automatic 6d pose labeling repo used cad model target object model available checkout another repo bundletrack instantly used 6d pose tracking novel unknown object without needing cad model bibtex bibtex articlewen2020se titlese3tracknet datadriven 6d pose tracking calibrating image residual synthetic domain url doi101109iros4574320209341314 journal2020 ieeersj international conference intelligent robot system iros publisherieee authorwen bowen mitash chaitanya ren baozhang bekris kostas e year2020 monthoct new application visual feedback control example experiment using se3tracknet recent work visiondriven compliant manipulation reliable highprecision assembly task r 2021 supplementary video click watch result ycb ycbineoat dataset due lack suitable dataset rgbdbased 6d pose tracking robotic manipulation novel dataset developed work ha key attribute real manipulation task kind endeffectors ycb object video evaluation 7449 rgbd total groundtruth pose annotated frame forwardkinematics recorded camera extrinsic parameter calibrated link download dataset provided data preparation example manipulation sequence current benchmark detail paper supplementary video quick setup first install docker two option obtain docker image optionpull prebuilt image docker pull wenbowen123se3tracknetlatest optionbuild source cd docker docker build se3tracknet launch docker container ready run cd docker bash runcontainersh data download ycbvideo object model ply file dataorganized 15g reorganized ycbvideo data convenience extract ycbvideo dataset directory eg ycbvideodatasetdataorganized0048 ycbineoat dataset 22g pretrained weight ycbvideo pretrained weight ycbineoat generated synthetic ycbvideo training data 15g object synthetic ycbineoat trainnig data 15g object se3tracknet output pose estimation ycbvideo test ycbvideo data following example run sequence object bleachcleanser classid bleach cleanser id counting fromgiven ycbvideo dataset modify path python3 predictpy mode ycbv ycbdir homebowendebug seqid 51 traindatapath homebowendebugycbvdatableachcleansertraindatablenderdr ckptdir homebowendebugycbvweightsbleachcleansermodelbestvalpthtar meanstdpath homebowendebugycbvweightsbleachcleanser classid 12 modelpath homebowendebugycbmodelswithplycadmodels021bleachcleansertexturedply outdir tmpse3tracknetoutput test ycbineoat data following example run sequence object bleachcleanser classid bleach cleanser id counting fromgiven ycbvideo dataset modify path note modelpath different used ycbvideo data different training weight synthetic training data generalizing beyond tabletop python3 predictpy mode ycbineoat ycbineoatdir mnt9a72c439d0a745e88d20d7a235d02763datasetycbineoatbleach0 traindatapath homebowendebugycbineoatdatableachcleansertraindatablenderdr ckptdir homebowendebugycbineoatweightsbleachcleansermodelbestvalpthtar meanstdpath homebowendebugycbineoatweightsbleachcleanser classid 12 modelpath mnt9a72c439d0a745e88d20d7a235d02763datasetycbvideomodels021bleachcleansertexturedsimpleobj outdir tmpse3tracknetoutput benchmarking stats please refer evalycbpy evalycbineoatpy training edit configyml make sure path correct setting need changed case python trainpy generate data take objectmodelsbunny exmaple need prepare cad model like new object download blender file put inside repository folder edit datasetinfoyml params selfexplained particular add object model eg homese3tracknetobjectmodelsbunny1ply example start generation save homese3tracknetgenerateddata python blendermainpy generate paired data neighboring image save homese3tracknetgenerateddatapair python producetrainpairdatapy example pair refer training section test wild python predictrospy information python predictrospy help,"[('6d', 'pose'), ('pose', 'tracking')]"
WhiteWatson/wx-bot-client,Other,hi wxbotclient release exewindows openai apikey tip apiai gpt ai aiai ai ai ai ai image image tip ai node yarn pnpm yarn install chatgpt npm run electronserve npm run electronbuild openai apikey srcbotconfigtsopenaiapi computer science engineering student im currently working web development technology like javascript vue etc future goal learn technology never stop creating new idea fun fact love play genshin impact leeguiyuqqcomicon language tool javascript html5 css3 sas bootstrap markdown nodejs npm git github v code powershell window github statistic chatgpt okfine0520,"[('ai', 'ai'), ('openai', 'apikey')]"
UMich-BipedLab/extrinsic_lidar_camera_calibration,Other,extrinsiclidarcameracalibration release note july 2020 work ha accepted ieee access ha uploaded arxiv release note march 2020 new master branch march 2020 current master branch support revised version arxiv paper namely paper original master branch oct 2019 march 2020 moved v12019 branch support function associated first version extrinsic calibration paper placed arxiv namely paper please aware function older branch removed current master branch overview package extrinsic calibration 3d lidar camera described paper improvement targetbased 3d lidar camera calibration pdf evaluated proposed method compared approach roundrobin validation study including qualitative result quantitative result use image corner ground truth evaluate projection accuracy author bruce jk huang jessy w grizzle maintainer bruce jk huang brucejkhatgmailcom affiliation biped lab university michigan package ha tested matlab 2019a ubuntu 1604 issue encounter issue would happy help cannot find related one existing issue please open new one try best help super super quick start see result please clone repo download processoptimized data loadallvertices folder change pathloaddir loadallvertices folder justcalibratem hit run super quick start would like see lidar vertex optimized please place test datasets folder change two path pathbagfilepath pathmatfilepath justcalibratem hit run developer calibrators please follow detail instruction abstract rigidbody transformation lidar monocular camera required sensor fusion task slam determining transformation considered glamorous sense word nonetheless crucial many modern autonomous system indeed error degree rotation percent translation lead 20 cm reprojection error distance ofm overlaying lidar image camera image biggest impediment determining transformation accurately relative sparsity lidar point cloud systematic error distance measurement paper proposesthe use target known dimension geometry ameliorate target pose estimation face quantization systematic error inherent lidar image targeta fitting method lidar monocular camera transformation avoids tedious task target edge extraction point could anda crossvalidation study based projection 3d lidar target vertex corresponding corner camera image end result 50 reduction projection error 70 reduction variance performance short summary paper see pdf detail table compare mean standard deviation baseline approach function number target used training unit pixel per corner tag48 baseline previous stateoftheart mean 103773 49645 43789 39940 proposed method pnp mean 38523 18939 16817 17547 proposed method iou mean 49019 22442 17631 17837 baseline previous stateoftheart std 70887 19532 17771 20467 proposed method pnp std 24155 05609 05516 05419 proposed method iou std 25060 07162 05070 04566 application video 3dlidar map shown video used package calibrate lidar camera get transformatoin lidar camera briefly speaking project point coulds lidar back semantic labeled image using obtained transformation associate label point build 3d lidar semantic map halloween edition cassie autonomy autonomous navigation 3d semantic mapping bipedal robot cassie blue shorter version autonomous navigation 3d semantic mapping bipedal robot cassie blue longer version quick view using obtained transformation lidar point mapped onto semantically segmented image point associated label pixel road marked white static object building orange grass yellowgreen dark green indicates tree important calibration result usable ha degree rotation error percent translation error show calibration result little disturbance wellaigned image presentation video calibration target square target would fine dimension assumed known use fiducial tag detected lidar camera physically tag however tag detected lidar call lidartag hand detected camera called apriltag please check link download target image use target lidar target please cite articlehuang2019lidartag titlelidartag realtime fiducial tag using point cloud authorhuang jiunnkai ghaffari maani hartley ross gan lu eustice ryan grizzle jessy w journalarxiv preprint arxiv190810349 year2019 note place number target different size different datasets installation toolbox used package matlab 2019a optimizationtoolbox phasedarraysystemtoolbox roboticssystemtoolbox signalblocks dataset download dataset please download optimized lidar vertex put alllidarvertices folder please download point cloud mat file put lidartagdata folder please download bagfiles put bagfiles folder running super super quick start see result please clone repo download processoptimized data loadallvertices folder change pathloaddir loadallvertices folder justcalibratem hit run super quick start would like see lidar vertex optimized please place test datasets folder change two path pathbagfilepath pathmatfilepath justcalibratem hit run calibrators please first try super super quick start section ensure run code use justcalibratem file find camera intrinsic matrix write justcalibratem file give initial guess lidar camera transformation edit trainedids skipindices id getbagdatam validation dataset containing target set validationflag toand use put related information getbagdatam place several square board known dimension placing board make sure left corner taller right corner use fiducial tag detected lidar camera physically tag however tag detected lidar call lidartag hand detected camera called apriltag please check link download target image use target lidar target please cite articlehuang2019lidartag titlelidartag realtime fiducial tag using point cloud authorhuang jiunnkai ghaffari maani hartley ross gan lu eustice ryan grizzle jessy w journalarxiv preprint arxiv190810349 year2019 use favorite method extract corner camera target write getbagdatam writing corner please follow topleftrightbottom order given point patch lidar target saved mat file also put getbagdatam please make sure correctly match lidartarget cameratarget trouble extracting patch lidar target converting bagfiles matfiles also provided another python script conver bagfile matfile extract patch please check bag2matpy run justcalibratem note place number target different size different datasets developer please download datasets like play around dataset structure put information datasets getbagdatam funciton return two data structure testdata bagdata testdata contains bagfile pcfile bagfile name bagfile pcfile mat file full scan point cloud bagdata contatins bagfile name bagfile numtag many tag dataset lidartarget pcfile name mat file target point cloud tagsize size target cameratarget corner corner coordinate camera target qualitative result method gl1r trained s1 lidar point cloud ha projected image plane data set marked green red circle highlight various pole door edge desk leg monitor sidewalk curb quality alignment best judged reader may find area interest enlarge browser best viewing quantitative result method gl1r five set estimated lidar vertex target projected image plane marked green target point cloud ha marked red blowing image allows number reported table visualized vertex key citation detail described jiunnkai huang j grizzle improvement targetbased 3d lidar camera calibration pdf articlehuang2020improvements authorj huang j w grizzle journalieee access titleimprovements targetbased 3d lidar camera calibration year2020 volume8 number pages134101134110 use lidartag lidar target please cite articlehuang2019lidartag titlelidartag realtime fiducial tag using point cloud authorhuang jiunnkai ghaffari maani hartley ross gan lu eustice ryan grizzle jessy w journalarxiv preprint arxiv190810349 year2019,"[('lidar', 'camera'), ('point', 'cloud')]"
BAILOOL/ANMS-Codes,C++,efficient adaptive nonmaximal suppression algorithm homogeneous spatial keypoint distribution implementation paper competing anms method similar performance term spatial keypoints distribution proposed method ssc substantially faster scale better proposed anms method visually compare traditional method topm bucketing ssc proposed related algorithm implemented repository visual odometry based stereo image sequence ransacbased outlier rejection scheme bucketing multiimage matching using multiscale oriented patch original anms efficiently selecting spatially distributed keypoints visual tracking efficient anms detail algorithm experiment well importance homogeneously distributed keypoints slam please refer paper run clone repository git clone see codebase visualization better understand code repository structure choose language c python matlab view anmscodes file exchange java make sure path test image set correctly run produced executable anmscodes c relevant script language code tested opencv 248 opencv 331 opencv 420 ubuntu 1404 1604 2004 contributing follow instruction docscontributing citation use code research please cite text articlebailo2018efficient titleefficient adaptive nonmaximal suppression algorithm homogeneous spatial keypoint distribution authorbailo oleksandr rameau francois joo kyungdon park jinsun bogdan oleksandr kweon journalpattern recognition letter volume106 pages5360 year2018 publisherelsevier,"[('adaptive', 'nonmaximal'), ('nonmaximal', 'suppression')]"
michaelkubina/SpotMicroESP32,C++,spotmicroesp32 take spotmicro optimized design supportfree 3dprinting integration esp32devkitc still workinprogress find 3dprinting part thingiverse well join discordchannel remix spotmicroesp32 join slackchannel remix discus topic regarding design spotmicroaislackcom spotmicroesp32 due active subscription possibility browse older post lot people moved discord channel project currently lack whole programmingsoftware part luckily maarten weyn already made inverse kinematics work wrote also smartphone app simple control robot via ble advice take look repository well currently preferred codebase walking gait implementation voicecommanding wa achieved guna r slack spotmicroesp32 channel whis build upon maartens software see repo definitly take look well seems repo incomplete missing app look also gitlab page general spomicroai community find different model resource spotmicroesp32 note thanks want thank deokyeon kim kdy0523 beautyful well thought design spotmicro without derivate would possible find original design thingiverse sharing file open licence made possible let grow community around want reference well spotmicroai community preface workinprogress rather loose milestone 2020 two goal redesign original part could printed without support done make circuitry sensor part possibly would fit considered necessary done 2021 two main goal one optional goal write firmware espidf integratesutilizes sensor module except espcam need firmware progress write smartphone app flutter connects firmware read fromwrites robot progress implement inverse kinematics optional goal repository currently hobby pace said still happy question collaboration suggestion idea fork else come mind want participate think lot thing could dig section 3dprinted partlist bill material assembly guide electronics programming inverse kinematics bill material following section describe detail different part needed spotmicroesp32 build least rough estimate price 3dprinting build spotmicroesp32 need print lot part overview 3d printed part needed please visit 3dprinted partlist might necessary remix template suit need chosing electronic component listet electronics spotmicroesp32 ist still workinprogress bom might change well check deprecated section change still part missing others tested yet status marked give rough price estimate may may work might date point part module number short description status estimated price esp32devkitc 1x core mcu build wifi ble capability tested esp32cam 1x tested esp32module ov2640 camera versionthere also camera versionov2640 sensor landscape orientation portrait also flexcable seems millimeter shorter one versionyou distinguish imprint flexcable stating tyov2640v20 ov2640 camera work theory part designed fit model definetly dont go one fisheyelens variation field view would hindered likely lens would fit hole anyway tested 10 ft232rl usbttladapter 1x usbtoserial adapter esp32cam flashing tested mg996r servo 12x bare minimum flaw like jittering much play 10kg servo metal gear ball bearing robot capable stand upchange pose likely weak smooth reliable walking update 20201119 affirmed walking possible great also horrible go accept limitation expensive servo would mean try project first place testedeach better go ds3218mg servo 12x 20kg servo metal gear ball bearing much le play test jittering also strong robot able walk significantly better maybe onlyof enough used lower leg stressed part maybe would need alsoadditional one upper leg maybe mg996r enough shoulder comfortable mg996r dont much heavy work partially tested 1520 fsh6s servohorn 12x servohorn used build already shipped servo otherwie use model 3d part tested nn rubber dampener servo 48x servo rubber dampener could use m3 screw already shipped servo tested nn servocable extension 4x extending servocables lower leg 10cm 15cm tested 10 625zz ball bearing 8x miniature ball bearing without flange testedeach ws2812b 12 led ring 50mm outer diameter 1x neopixelclonering outer diameter 50mm used signal statusmood tested 096 oled i2c display 1x small oled screen ssd1306 ic status information tested hcsr04 ultrasonic sensor 2x ultrasonic sensor module distance measuring testedeach gy521 gyroscope accelerometer 1x module measure accelaration spatial orientation extented magnetometer tested pca9685 16channel 12bit pwm board 1x pwm driver board used servo led power part external source tested hw482 ky019 5v 10a relais 1x relais module cut power servo completely tested 19mm push button led 1x illuminated latching pushbutton tested 10 microusb dip adapter 2x usbports used extending usbports esp32 devkitc esp32cam ttladapter tested xl4016 dcdc 9a stepdown converter 1x big stepdown converter lower lipo 2 voltage 65v minimum mg996r tested szbk07 dcdc 20a stepdown converter 1x even bigger stepdown converter lower lipo 2 voltage 65v minimum ds3218 tested 12 lm2596 dcdc similar stepdown module 1x small stepdown converter lower lipo 2 voltage 5v esp32 vin module testedeach acs712 30a current sensor module 1x current sensor module capable max 30a eg emergency shutdown tested 25v voltage sensor module 1x simple voltage divider module 25v used voltage sensor determin battery charge tested 5200mah 6200mah lipo 30c 2 tamiyaxh 1x beefy lipo main power source actually individual choice tested 40 depecrated cameraunit head replaced esp32cam reasonably cheap 10 open lot new possibility like objectrecognition additional processingpower part module number short description status estimated price ov7670 vgacamera module wo fifo 1x vgacamera without framebuffer ic used lower resolution due memory restriction replaced esp32cam tested 5mm 3v led white 6x led used cameralights replaced esp32cam internal flashlight tested 5mm 3v rgbleds 2x rgbleds used underglow might signal status mood replaced neopixelgenerica tested 177 tft st7735 wo sd 1x small tft screen st7735 ic status information replaced 18 tft sdcard tested optional ws2812b pixelboard 4x neopixelclones smd led small round pcb used underglow might signal status mood removed result underwealming tested 18 tft st7735 sd 1x small tft screen st7735 ic status information replaced 096 oled i2c display tested miscellaneous part module number short description status estimated price m2x8 cylinderhead screw m2 nut 84x screw nut mount servohorns could glue servohorns place instead save 72x m2x8 screw nut tested also used mount 177 tft pin ball bearing tested m3x8 cylinderhead screw m3 nut 80x screw nut whole assembly hope forgotten better buy bulk usefull project well tested m3x20 cylinderhead screw m3 nut 64x screw nut mount servo assemble upper leg tested 12 lot cable connector stuff cable wire connector want use would like solder everything place use heat shrink fabric hose 20 pla tpu need 1kg pla gram tpu eg blackwhite design 500g cover upper leg 500g chassis lower leg shoulder joint small gram grey sensorplate head gram tpu foottips tested 30,"[('sensor', 'module'), ('ball', 'bearing')]"
navneet-nmk/pytorch-rl,Python,deep reinforcement learning pytorch img width160px height22px href src repository contains standard modelfree modelbasedcoming rl algorithm pytorch may also contain research idea working currently c version pytorchrl pytorchrlcpp pytorchrl implement stateofthe art deep reinforcement learning algorithm pytorch especially concerned continuous action space train algorithm efficiently either cpu gpu furthermore pytorchrl work openai gym box mean evaluating playing around different algorithm easy course extend pytorchrl according need tldr pytorchrl make really easy run stateoftheart deep reinforcement learning algorithm installation install pytorchrl pypi recommended pip install pytorchpolicy dependency pytorch gym openai mujocopy physic simulation robotics env gym pybullet coming soon mpi supported mpi backend pytorch installation tensorboardx rl algorithm dqn double q learning ddpg ddpg openai fetch environment heirarchical reinforcement learning prioritized experience replay ddpg ddpg prioritized hindsight experience replay research neural map a3c coming soon rainbow dqn coming soon ppo self attention goal substitution research a3c coming soon acer coming soon darla tdm world model soft actorcritic empowerment driven exploration tensorflow implementation environment breakout pong coming soon hand manipulation robotic task fetchreach robotic task handreach robotic task block manipulation robotic task montezuma revenge current research pitfall gravitar carracing super mario bros follow instruction install gymretro opensim prosthetics nip challenge environment modelling exploration domain adaptation multiple gan training trick used instability training generator discriminator please refer information even using trick wa really hard train gan convergence however using spectral normalization infogan wa trained convergence image image translation task gans vaes general training skip connection really help training betavae infogan cvaegan flow based generative model research sagan sequential attend infer repeat curiosity driven exploration parameter space noise exploration noisy network reference playing atari deep reinforcement learning mnih et al 2013 humanlevel control deep reinforcement learning mnih et al 2015 deep reinforcement learning double qlearning van hasselt et al 2015 continuous control deep reinforcement learning lillicrap et al 2015 cvaegan finegrained image generation asymmetric training bao et al 2017 betavae learning basic visual concept constrained variational framework higgins et al 2017 hindsight experience replay andrychowicz et al 2017 infogan interpretable representation learning information maximizing generative adversarial net chen et al 2016 world model ha et al 2018 spectral normalization generative adversarial network miyato et al 2018 selfattention generative adversarial network zhang et al 2018 curiositydriven exploration selfsupervised prediction pathak et al 2017 soft actorcritic offpolicy maximum entropy deep reinforcement learning stochastic actor haarnoja et al 2018 parameter space noise exploration plappert et al 2018 noisy network exploration fortunato et al 2018 proximal policy optimization algorithm schulman et al 2017 unsupervised realtime control variational empowerment karl et al 2017 mutual information neural estimation belghazi et al 2018 empowermentdriven exploration using mutual information estimation kumar et al 2018,"[('et', 'al'), ('reinforcement', 'learning')]"
ros-mobile-robots/diffbot,C++,diffbot ci documentation ci diffbot autonomous differential drive robot two wheel main processing unit raspberry pib running ubuntu mate 2004 rosros noetic middleware respository contains driver package control hardware interface real robot configuration simulating diffbot formatted documentation found diffbot lidar slamtec rplidar a2 looking 3d printable modular base see remodescription repository use directly software diffbot repository remo gazebo simulation rviz provides mount different camera module raspi cam v2 oak1 oakd even design like also support different single board computer raspberry pi nvidia jetson nano two changable deck agin free create demonstration slam navigation real robot gazebo simulation package package overview diffbotbase control hardware interface including controllermanager control loop real robot script folder package contains lowlevel basecontroller running teensy microcontroller diffbotbringup launch file bring hardware driver camera lidar imu ultrasonic real diffbot robot diffbotcontrol configuration diffdrivecontroller control used gazebo simulation real robot diffbotdescription urdf description diffbot including sensor diffbotgazebo simulation specific launch configuration file diffbot diffbotmsgs message definition specific diffbot example message encoder data diffbotnavigation navigation based movebase package launch configuration file diffbotslam simultaneous localization mapping using different implementation eg gmapping create map environment installation package written tested rosnoetic ubuntu 2004 focal fossa real robot ubuntu mate 2004 arm64 installed raspberry pib 4gb communication mobile robot work pc done configuring network see also documentation dependency required ubuntu package listed software package section found documentation catkin package rplidarros need cloned catkin workspace automated simplified dependency installation process install vcstool used next step console sudo apt install python3vcstool hammer build build package repository including remo robot follow step cd existing noetic catkin workspace create new one console mkdir p catkinwssrc clone repository src folder noetic catkin workspace console cd catkinwssrc console git clone execute vcs import command root catkin workspace pipe diffbotdevrepos remorobotrepos yaml file depending execute command either development pc sbc remo clone listed dependency run following command development machine vcs import srcdiffbotdiffbotdevrepos run next command remo robot sbc vcs import srcdiffbotremorobotrepos install requried binary dependency package catkin workspace using following rosdep command rosdep install frompaths src ignoresrc r installing required dependency build catkin workspace either catkinmake console catkinws catkinmake using catkintools console catkinws catkin build finally source newly built package develsetup script depending used shell bash use console catkinws source develsetupbash zsh use console catkinws source develsetupzsh usage following section describe run robot simulation make use real hardware using available package launch file gazebo simulation control control robot inside gazebo view see rviz using following launch file console roslaunch diffbotcontrol diffbotlaunch launch default diffbot world dbworldworld run turtlebot3world make sure download gazebomodels folder turtlebot3worldworld file reference turtlebot3world model run following command console roslaunch diffbotcontrol diffbotlaunch worldname find diffbotgazeboworldsturtlebot3worldworld dbworldworld turtlebot3worldworld corridorworld turtlebot3world navigation navigate robot gazebo simulator dbworldworld run command console roslaunch diffbotnavigation diffbotlaunch us previously mapped map dbworldworld found diffbotnavigationmaps served mapserver use 2d nav goal rviz directly let robot drive autonomously dbworldworld diffbot navigation run turtlebot3worldworld stored world map use diffbotnavigationlaunchdiffbotlaunch file change worldname mapfile argument desired world map yaml file console roslaunch diffbotnavigation diffbotlaunch worldname find diffbotgazeboworldsturtlebot3worldworld mapfile find diffbotnavigationmapsmapyaml diffbot navigation slam map new simulated environment using slam gmapping first run console roslaunch diffbotgazebo diffbotlaunch worldname find diffbotgazeboworldsturtlebot3worldworld second terminal execute console roslaunch diffbotslam diffbotslamlaunch slammethodgmapping explore world teleoptwistkeyboard already launched rqtrobotsteering gui plugin diffbot slam finished exploring new world use mapsaver node mapserver package store mapped enviornment console rosrun mapserver mapsaver f map rviz view diffbotdescription rviz console roslaunch diffbotdescription viewdiffbotlaunch diffbot rviz navigating mapping real robot following video show map new environment navigate start setting network making development pc rosmaster set rosmasteruri environment variable accordingly see network setup follow step listed run real diffbot remo robot hardware first brinup robot hardware including laser following launch file diffbotbringup package make sure run real robot eg connect via ssh console roslaunch diffbotbringup bringupwithlaserlaunch new terminal remotework development machine single board computer run slam gmapping command simulation console roslaunch diffbotslam diffbotslamlaunch slammethodgmapping see video open rviz rqtrobotsteering plugin next steer robot around manually either using keyboardteleop node using rqtrobotsteering node save map following command done exploring console rosrun mapserver mapsaver f office mapping process possible use created map navigation running following launch file single board computer eg raspberry pi make sure following launched console roslaunch diffbotbringup bringupwithlaserlaunch workremote development machine run diffbothwlauch diffbotnavigation package console roslaunch diffbotnavigation diffbothwlauch among essential navigation map server node also launch instance rviz work pc use tool localize robot 2d pose estimate tool green arrow rviz use 2d nav goal tool rviz red arrow send goal robot construction future work contribution task welcome see also contribution section migrate rosto driver odometry hardware interface add diffbotdriver package ultrasonic ranger imu motor driver node code make use imu odometry data improve encoder odometry using kalman filter robotlocalization le active robotposeekf current implementation control hardwareinterfacerobothw us high level pid controller working also test low level pid teensy 32 mcu using arduino library grove i2c motor driver partly implemented see diffbotbasescriptsbasecontroller also replace wireh improved i2ct3 library navigation test different global local planner add documentation add diffbotmbf package using movebaseflex improved version movebase perception enable object detection semantic segmentation rpi camera raspberry pib upated google coral usb accelerator possible useful package mseg mseg example teleoperation use generic teleoptwistkeyboard andor teleoptwistjoy package drive real robot simulation playstation controller tooling use clang format together clangformat file roscpp comply c style guideline part list diffbot sbc rpi 4b mcu teensy 32 imu bosch part store raspberry pibgb amazoncom amazonde sandisk 64 gb sd card class 10 amazoncom amazonde robot smart chassis kit amazoncom amazonde slamtec rplidar a2m8 12 amazoncom amazonde grove ultrasonic ranger amazoncom amazonde raspi camera module v2mp 1080p amazoncom amazonde grove motor driver seeedstudiocom amazonde i2c hub seeedstudiocom amazonde teensy 40 32 pjrc teensy 40 pjrc teensy 32 hobby motor encoder metal gear dg01de sparkfun part list remo part store raspberry pibgb amazoncom amazonde sandisk 64 gb sd card class 10 amazoncom amazonde remo base 3d printable see remodescription slamtec rplidar a2m8 12 amazoncom amazonde raspi camera module v2mp 1080p amazoncom amazonde adafruit dc motor stepper featherwing adafruitcom amazonde teensy 40 32 pjrc teensy 40 pjrc teensy 32 hobby motor encoder metal gear dg01de sparkfun powerbank eg 15000 mah amazonde battery pack four eight battery amazonde additional optional equipment part store picoscope 3000 series oscilloscope 2ch amazonde hardware architecture wiring diffbot hardware architecture wiring remo hardware architecture wiring handshake acknowledgment louis morandyrapine great work remo robot designing fusion 360 lentin joseph participant developer learning path configurable diffbotdescription using yaml file see wiki xacro part mobilerobotdescription pxalcantara thanks nestordp help mesh similar littlebot see also issuedfkiricmirrobot eborghi10myrosmobilerobot husky turtlebot3 linorobot wrench contributing contribution welcome form raising issue creating pr correct add documentation course solving existing issue adding new feature pencil license diffbot license bsd 3clause see also opensourcelicenseacknowledgementsandthirdpartycopyrightsmd documentation licensed differently visit license text learn,"[('console', 'roslaunch'), ('amazoncom', 'amazonde')]"
Toni-SM/skrl,Python,href img width300rem src skrl reinforcement learning library skrl opensource modular library reinforcement learning written python top pytorch jax designed focus modularity readability simplicity transparency algorithm implementation addition supporting openai gym farama gymnasium deepmind environment interface allows loading configuring nvidia isaac gym nvidia isaac orbit may may share resource run please visit documentation usage detail example note project active continuous development please make sure always latest version visit develop branch documentation access latest update released citing library cite library publication please use following reference bibtex articleserrano2023skrl author antonio serranomunoz dimitrios chrysostomou simon bgh nestor aranaarexolaleiba title skrl modular flexible library reinforcement learning journal journal machine learning research year 2023 volume 24 number 254 page 19 url,"[('reinforcement', 'learning'), ('library', 'reinforcement')]"
alphaville/optimization-engine,Other,generate parametric optimizer line code time open allows application developer researcher focus challenge application rather tedious task solving associated parametric optimization problem nonlinear model predictive control embedded application open run embedded device see running intel atom autonomous navigation labscale micro aerial vehicle controller run 20hz using 15 cpu parametric problem open solve nonconvex parametric optimization problem general form f smooth cost u simple possibly nonconvex set f1 f2 nonlinear smooth mapping c convex set read code generation example code generation python line code read doc detail python import opengen og import casadicasadi c define variable u cssxsymup cssxsymp define cost function constraint phi ogfunctionsrosenbrocku p f2 csvertcat15 u0 u1 csfmax00 u2 u3 01 bound ogconstraintsball2none 15 problem ogbuilderproblemu p phi withpenaltyconstraintsf2 withconstraintsbounds configuration code generation buildconfig ogconfigbuildconfiguration withbuilddirectorypythontestbuild withtcpinterfaceconfig meta ogconfigoptimizermeta solverconfig ogconfigsolverconfiguration withtolerance1e5 withconstraintstolerance1e4 builder ogbuilderopenoptimizerbuilderproblem meta buildconfig solverconfig builderbuild code generation line matlab code read doc detail matlab define variable u casadisxsym u p casadisxsym p define cost function constraint phi rosenbrocku p f2 15u1 u2 max0 u3u401 bound openconstraintsmakeballatorigin50 openbuilder openoptimizerbuilder withproblemu p phi bound withbuildname penaltynew withfprtolerance1e5 withconstraintsaspenaltiesf2 openoptimizer openbuilderbuild getting started information open quick installation guide open rust open python example open matlab example openjupyter docker generation package call open cc tcpip interface open frequently asked question contact u join discussion discord reach u gitter like open show u star github star license open free open source project use term either apache license v20licenseapache mit licenselicensemit core team contribution unless explicitly state otherwise contribution intentionally submitted inclusion work defined apache20 license shall dual licensed without additional term condition contribute optimization engine please read contributing guideline list contributor automatically generated github citing open please cite open follows arxiv version inproceedingsopen2020 authorp sopasakis e fresk p patrinos titleopen code generation embedded nonconvex optimization booktitleifac world congress year2020 addressberlin,"[('code', 'generation'), ('line', 'code')]"
osvt/TeamHelper,Other,failtoloadreadme,[]
napframework/nap,C++,created source working binary package follow official installation instruction instead instruction document continue reading compile get started nap source code raspberry pi raspberry pirunning debian bullseye v11 armhf fully supported headless application service without graphic run older model although ha tested editor napkin work raspberry piadd arm64bit0 bootconfigtxt ensure 32 bit kernel loaded 64 bit kernel yet supported compilation window 10 build status ubuntu 2004 build status macos 1015 build status raspbian 11 build status dependency editor napkin depends qt qtx8664 precompiled package us qt 515 lts although version known work go qtio select downloads open source user download qt online installer installation select custom installation filter lts category download install qt 515 target platform arm download qt 5152 raspberry pi 11 armhf download qt 5152 ubuntu 2004 arm64 create environment variable called qtdir point directory contains qt library example cqt51211msvc201564 build system us environment variable locate qt note editor napkin depends qt nap distributable application dependency qt create solution run checkbuildenvironment ensure build environment date success run generatesolutionbat generate visual studio solution window generatesolutionsh generate make file linux generatesolutionsh generate xcode project macos solution allows build every target inspect code demo editor module core etc nap us prebundled version cmake thirdparty ensure compatibility platform default build configuration release alternatively use clion run demo open generated solution xcode visual studio select build configuration debugor release demo target compile run demo also use build script compile one project using command line example buildsh helloworld work source allows step nap framework source code make change required access nap source code required development advised work precompiled nap package instead create application run toolscreateapp create new application createappsh myapp creates new application called myapp apps directory also add myapp solutioninfojson root regenerates solution run build script inside application directory compile buildsh create module run toolscreatemodule create new user module createappsh mymodule creates new module called napmymodule module directory also add napmymodule solutioninfojson root regenerates solution inlcude module adding requiredmodules property appjson modulejson file note make manual change build system editing cmake json must run generatesolution update solution download module list publicly available user module found modulesnaptech module created maintained shared nap user independent nap framework share module share module nap user making available modulesnaptech follow instruction register build distributable nap package packaged version nap include following compiled object code header binary core engine system module editor source code compiled demo user module apps packaging new zip folder created naming convention napversionplatformtimestamp timestamp may optionally omitted package run package package nap packagesh alternatively use sna flag build package includes one app eg packagesh sna myapp useful flag nt remove timestamp nz create zip file release include debug symbol window pdb file also packaged option packaging queried adding flag help running script contributing welcome contribution potential bug fix submit code review make sure read follow c styleguide also take consideration reviewing code take time thorough explicit possible use github issue page ask question already perfectly well functioning forum use github issue page bug report well defined feature request new module considered unless useful vital important enough part core release feel module missing would like hear module depends thirdparty library linkage dynamic violate nap license policy static linkage discouraged unless recommended library nap application us module require library link run case thirdparty code compiled module nap packaged thirdparty dependency must work crossplatform must compiled using msvc platform toolset v142 window 10 clang targeting catalina1015 macos gcc 930 ubuntu lts 2004 license nap framework open source software licensed mozilla public license version 20 use nap source code nap distributable package create commercial noncommercial derivate work long mpl 20 license violated mean must make change nap source code available mpl combine nap source code proprietary code long keep nap source code separate file version 20 default compatible lgpl gpl versionor greater also distribute binary proprietary license long make nap source code available mpl short allowed use modify nap source code commercial non commercial purpose however make change nap source code make change available others use encourage people share idea community keeping knowledge nap framework,"[('source', 'code'), ('nap', 'source')]"
Skythinker616/foc-wheel-legged-robot,Other,foc english solidworks matlab simulink simscape stm32 esp32mpu6050 ffmpeg ffserver linux android app simscape multibody app solidworks matlab stm32focstm32 esp32controlleresp32 linuxfpvlinux shellpython androidandroid app 40105000 20000 28041300 2600 2500 15000 2000 2000 2800 2800 3d 10000 10000 500 500 2000 2000 15000 15000 2000 2000 54900 71900,"[('2000', '2000'), ('solidworks', 'matlab')]"
DmitryRyumin/ICCV-2023-Papers,Other,iccv2023papers awesome conference version github repo size license mit contribution welcome github contributor github commit activity branch github closed issue github issue github closed pull request github pull request github last commit github watcher github fork github repo star visitor iccv 2023 paper explore comprehensive collection cuttingedge research paper presented iccv 2023 premier computer vision conference keep date latest advance computer vision deep learning code implementation included star repository development visual intelligence online version iccv 2023 conference programme comprises list accepted full paper presentation order well designated presentation time collection best ai conference exclamation conference table date time conference year computer vision cv cvpr 2023 speech sp icassp 2023 interspeech 2023 contributor contribution improve completeness list greatly appreciated come across overlooked paper please feel free create pull request open issue contact via emailmailtoneweraairesearchgmailcom participation crucial making repository even better paper section paper soon added star history,"[('pull', 'request'), ('iccv', '2023')]"
Sollimann/bonsai,Other,bonsai rust implementation behavior tree build status bonsai crate minimum rustc 156 doc codecov maintenance github pullrequests github pullrequests closed viewcount license mit content quick intro behavior tree concept example development guide kanban board honorable mention using bonsai bonsai available cratesio recommended way use add line cargotoml toml dependency bonsaibt behavior tree behavior tree bt data structure set rule certain behavior occur order would execute bts efficient way creating complex system modular reactive property crucial many application ha led spread bt computer game programming many branch ai robotics use behavior tree behavior tree form tree structure node represents process process terminates signal success failure used parent node select next process signal running used tell process done yet example state state b move state state b succeeds sequencea b try first try b fails selecta b condition succeedes else b ifcondition b succeeds return failure viceversa inverta b repeatedly run whilea b b forever whilewaitforever b run b parallell wait succeed whenalla b run b parallell wait succeed whenanya b run b parallell ha succeed b aftera b see behavior enum information calling longrunning task behavior tree make sure behavior tree always responsive important action created executes instantly block tree traversal longrunning tasksfunctions take second minute execute either async sync dispatch job background thread get status task channel see async drone example example folder detail example use enemy npc nonplayercharacter behavior mockup decides ai shoot running nearby cover rush attack player close stand ground firing player tree vizualization implementation rust use stdcollectionshashmap threadsleep timeduration use bonsaibt behavioraction select sequence event status running timer updateargs bt type damage u32 type distance f64 deriveserdedeserialize serdeserialize clone debug partialeq enum enemynpc run run cover getincover blind fire blindfiredamage player close melee attack distance damage meleeattackdistance damage player far away fire weapon fireweapondamage use gameenemy player fictive game import fn gameticktimer mut timer bt mut bt much time bt advance future let dt timergetdt proceed next iteration event loop let e event updateargs dt rustfmtskip btstatetickemut args bonsaibtactionargsevent enemynpc match argsaction enemynpcrun enemyrunawayfromplayer must implement method bonsaibtrunning 00 enemynpcgetincover let incover bool enemygetincover incover bonsaibtsuccess dt else bonsaibtrunning 00 enemynpcblindfiredamage let hasammo bool enemyhasammo hasammo enemyshootindirection bonsaibtsuccess dt else bonsaibtfailure dt enemynpcmeleeattackdist damage let player playergetplayer let po enemygetpos let diff subpos playerpos lendiff dist let mut playerhealth playergethealth playerhealth playerdecreasehealthdamage bonsaibtsuccess dt else bonsaibtfailure dt enemynpcfireweapondamage let hasammo bool enemyhasammo hasammo enemyshootatplayer bonsaibtsuccess dt else bonsaibtfailure dt fn main use crateenemynpcblindfire fireweapon getincover meleeattack run define blackboard even though using let blackboard hashmapstring serdejsonvalue hashmapnew create ai behavior let run actionrun let cover actiongetincover let runforfivesecs whileboxnewwait50 vecrun let runandshoot whileboxnewrunforfivesecs vecactionblindfire50 let runcover sequencevecrunandshoot cover let playerclose selectvecactionmeleeattack10 100 actionfireweapon50 let underattackbehavior selectvecruncover playerclose let btserialized serdejsontostringprettyunderattackbehaviorunwrap printlncreating bt n n btserialized let mut bt btnewunderattackbehavior blackboard create monotonic timer let mut timer timerinittime loop decide bt frequency sleeping loop sleepdurationnew0 01e9 u32 tick bt gametickmut timer mut bt compile behavior tree graphviz compatible digraph rust let mut bt btnewunderattackbehavior blackboard produce string digraph compatible graphviz paste content graphviz eg let g btgetgraphviz println g similar crate bonsai inspired many crate worth mentioning aibehavior bonsai continuation crate aspen behaviortree stackbt,"[('behavior', 'tree'), ('mut', 'bt')]"
zjunlp/EasyInstruct,Python,easytouse instruction generation framework large language model overview installation use citation contributor license mit easyinstruct still fast developement stay tuned new feature eg kg2instructions instruction enhancement table content new overview installation use easyinstruct citation contributor news 202389 release version 006 supporting cohere api call 2023712 release easyedit easytouse framework edit large language model 2023523 release version 005 removing requirement llamacpppython 2023516 release version 004 fixing problem previous news 2023421 release version 003 check documentation detail 2023325 release version 002 suporting indexprompt mmprompt ieprompt llm 2023313 release version 001 supporting incontext learning chainofthought chatgpt repository subproject knowlm overview easyinstruct python package generate instruction instruct large language model llm like gpt3 llama chatglm research experiment designed easy use easy extend knowlm falcon alpaca chatglm chinesellamaalpaca moss baize vicuna bentsao linly chatyuan dolly mpt huatuogpt bayling belle chatgpt installation installation using pypi pip install easyinstruct installation local development git clone cd easyinstruct pip install e use easyinstruct please refer documentation detail baseprompt baseprompt base class promptscurrently support building prompt instruct llm calling llm api service openai gpt3 chatgpt anthropic claude also easily inherit base class customize prompt class override buildprompt method parseresponse method example python easyinstruct import baseprompt easyinstructutilsapi import setopenaikey step1 set apikey setopenaikeyyourkey step2 declare prompt class prompt baseprompt step3 build prompt promptbuildpromptgive three name cat step4 get result llm api service promptgetopenairesultengine gpt35turbo iclprompt iclprompt class incontext learning prompt desgin taskspecific example prompt instructing llm llm quickly figure perform well task example python easyinstruct import iclprompt easyinstructutilsapi import setopenaikey step1 set apikey setopenaikeyyourkey step2 declare prompt class prompt iclprompt step3 desgin taskspecific example incontextexamples text cat mat label cat text dog rug label dog step4 build prompt example promptbuildpromptidentify animal mentioned sentence incontextexamples nshots2 step5 get result llm api service promptgetopenairesultenginegpt35turbo cotprompt chainofthought prompting recently developed prompting method encourages llm explain reasoning process answering prompt explanation reasoning often lead accurate result specifically implement fewshotcotprompt zeroshotcotprompt fewshotcotprompt fewshotcotprompt class fewshot chainofthought prompt showing llm shot exemplar reasoning process explained exemplar llm also show reasoning process answering prompt example python easyinstruct import fewshotcotprompt easyinstructutilsapi import setopenaikey step1 set apikey setopenaikeyyourkey step2 declare prompt class fewshotprompt fewshotcotprompt step3 desgin chainofthought exemplar incontextexamples question weng earns 12 hour babysitting yesterday 50 minute babysitting much earn answer weng earns 1260 12600202 per minutenworking 50 minute earned 02 x 50 02501010n 10 step4 build prompt chainofthought exemplar question natalia sold clip 48 friend april sold half many clip may many clip natalia sell altogether april may fewshotpromptbuildpromptquestion incontextexamples nshots1 step5 get result llm api service fewshotpromptgetopenairesultenginegpt35turbo zeroshotcotprompt zeroshotcotprompt class fewshot chainofthought prompt llm demonstrated zeroshot reasoner simply adding let think step step answer refered zeroshotcot example python easyinstruct import fewshotcotprompt easyinstructutilsapi import setopenaikey step1 set apikey setopenaikeyyourkey step2 declare prompt class zeroshotprompt zeroshotcotprompt step3 build prompt question natalia sold clip 48 friend april sold half many clip may many clip natalia sell altogether april may zeroshotpromptbuildpromptquestion step4 get result llm api service zeroshotpromptgetopenairesultenginegpt35turbo indexprompt indexprompt class retrieving index concat retrieved context information query input get result llm class implemented based llamaindex note class support simplevectorindex kgindex right example python easyinstruct import indexprompt easyinstructutilsapi import setopenaikey step1 set apikey setopenaikeyyourkey step2 build simplevectorindex simpleindex indexpromptsimplevectorindex simpleindexbuildindexdata chunksizelimit500 return document response simpleindexquerywhere ae dimitra efxeinoupolis club printresponse simpleindexsavetodiskindexsimpleindexjson step3 build kgindex kgindex indexpromptkgindex kgindexbuildindexdata llmmodelnametextdavinci002 maxtripletsperchunk5 chunksizelimit512 step4 query index response kgindexquerywhere ae dimitra efxeinoupolis club kgindexsavetodiskindexkgindexjson ieprompt ieprompt class information extraction prompt supporting named entity recognition ner relation extraction event extraction ee relational triple extraction rte data augmentation da example please see deepke llm python import import json import hydra hydra import utils import logging easyinstruct import ieprompt preprocess import prepareexamples logger logginggetloggername hydramainversionbasenone configpathconf confignameconfig def maincfg cfgcwd utilsgetoriginalcwd text cfgtextinput cfgapikey raise valueerrorneed api key cfgengine textdavinci003 textcurie001 textbabbage001 textada001 raise valueerrorthe openai model supported osenviron openaiapikey cfgapikey ieprompter iepromptcfgtask example none cfgzeroshot example prepareexamplescfgdatapath cfgtask cfglanguage cfgtask ieprompterbuildprompt prompttext headentitycfgheadentity headtypecfgheadtype tailentitycfgtailentity tailtypecfgtailtype languagecfglanguage instructioncfginstruction incontextnot cfgzeroshot domaincfgdomain labelscfglabels examplesexamples else ieprompterbuildprompt prompttext languagecfglanguage instructioncfginstruction incontextnot cfgzeroshot domaincfgdomain labelscfglabels examplesexamples result iepromptergetopenairesult loggerinforesult name main main mmprompt mmprompt class multimodal prompt supporting input image question llm supporting two type image encoding method ascii caption example python easyinstruct import mmprompt easyinstructutilsapi import setopenaikey step1 set apikey setopenaikeyyourkey step2 declare prompt class mmprompt mmpromptresize24 step3 build prompt mmpromptbuildpromptprompt image imgpath encodeformat ascii scale10 step4 get result llm api service mmpromptgetopenairesultenginegpt35turbo batchprompt batchprompt class batch prompt batch prompting simple alternative prompting approach enables llm run inference batch instead one sample time batch prompting reduce token time cost retaining downstream performance example python easyinstruct import baseprompt ieprompt zeroshotcotprompt fewshotcotprompt batchprompt easyinstructutilsapi import setopenaikey setanthropickey setproxy step1 set apikey setopenaikeyyourkey step2 build list prompt batch baseprompt prompt baseprompt promptsbuildpromptgive three name cat ieprompt incontextexamples input barcelona defeated real madrid 30 la liga match saturday output e organization w barcelona e organization w real madrid e competition w la liga ieprompts ieprompttask ner iepromptsbuildpromptpromptjapan began defence asian cup title lucky 21 win syria group c championship match friday examplesincontextexamples cotprompt question natalia sold clip 48 friend april sold half many clip may many clip natalia sell altogether april may incontextexamples question weng earns 12 hour babysitting yesterday 50 minute babysitting much earnanswer weng earns 1260 12600202 per minuteworking 50 minute earned 02 x 50 02501010 zeroshotprompts zeroshotcotprompt zeroshotpromptsbuildpromptquestion fewshotprompts fewshotcotprompt fewshotpromptsbuildpromptquestion incontextexamples incontextexamples nshotsstep3 declare batch prompt class batchprompt batchprompt step4 build prompt batch batchpromptbuildpromptprompts ieprompts zeroshotprompts fewshotprompts step5 get result llm api service batchpromptgetopenairesultengine gpt35turbo step6 parse response batchpromptparseresponse llamaengine llamaengine class local llama model alternative openai engine support local deployment example python easyinstruct import llamaengine transformer import generationconfig step1 initialize according model path weight format load model hf format lenginellamaenginebasepathyourbasepathadapterpathyouradapterpathgputruemultigputrue load model cpp format lenginellamaenginebasepathyourbasepathgpufalse step2 inference generationconfig generationconfig temperature06 topp095 repetitionpenalty115 printlengine generationconfig citation please cite repository use easyinstruct work misceasyinstruct author yixin ou ningyu zhang honghao gui zhen bi yida xue runnan fang kangwei liu lei li shuofei qiao huajun chen title easyinstruct easytouse instruction generation framework large language model year 2023 url miscknowlm author ningyu zhang jintian zhang xiaohan wang honghao gui kangwei liu yinuo jiang xiang chen shengyu mao shuofei qiao yuqi zhu zhen bi jing chen xiaozhuan liang yixin ou runnan fang zekun xi xin xu lei li peng wang mengru wang yunzhi yao bozhong tian yin fang guozhou zheng huajun chen title knowlm opensourced knowledgeable large langugae model framework year 2023 url contributor href img src,"[('easyinstruct', 'import'), ('example', 'python')]"
RajashekarRaju/compose-actors,Other,compose actor dancer roadmap v030 x let user search movie directly like searching actor x hilt replaced removing koin x restructure package file introducing new source file replace every spacer composable used code various custom appspacer x separate viewmodel param screen ui composables see preview screen x break composables smaller previewing x separate composables screen ui separated viewmodel usage previewing screen x add feature adding actor favorite like movie x add bottom sheet home screen support navigation various screen x implement paging upcoming lazy list movie home tab x setup project dependency resource initial testing write simple test write test app navigation composable destination roadmap v040 rename app compose actor compose entertainer add new feature season series information app include season home tab navigation enabled adding season favorite move favorite section home tab new place restructure screen flow collapsable topbars bottombars scroll effect new animation new release v020 x add di koin x modal bottom sheet bottom sheet x migrate compose inset accompanist x add new movie detail screen made change actor detail screen x improved search functionality added voice search handled keyboard change x new feature add movie favorite x add new database repository layer favorite x add tab home screen actorsmoviesfavorites category v2 preview home tab actor movie favorite modal bottom sheet actor movie movie detail add favorite add favorite favorite detail voice search actor search capability inspired jetcaster jetnews jetsnack compose content tokyotower architecture follows new architecture guide updated 14 december 2021 revamped guide app architecture musicalkeyboard layer app network repository viewmodels screen data giftgift giftgift source gift suspend coroutines curlyloopcurlyloop state composablesiphoneiphoneiphoneiphone dango app overview compose blog android app built jetpack compose show actor information fetched tmdb api may install try understand code better make sure provide tmdb api key data show directory utilsapikeykt release v010 screen preview home screen default destination show category list actor row type popular trending ha viewmodel manage ui state custom topappbar container search box navigates search screen clicking search box navigates detail screen castid clicking cast item user offline snackbar message shown circularprogressindicator shown untill data fetched image fetching coil manages state errorplaceholder search screen show list actor based user submitted query animatable shape infinitely repeatable ha viewmodel manage ui state textfield contained topappbar completely transparent navigates detail screen castid clicking cast item screen animation state change search began handle query value change correctly fetch result draw arcline canvas animate shape shift like search icon different color animatables lightdark theme detail screen show user selected actor screen ha viewmodel manage ui state reveal effect animation added composables circularprogressindicator shown untill data fetched image fetching coil manages state errorplaceholder background image gradient foreground effect draw dynamic color behind system bar mag search animation kotlin simple progressive circle looking animation val animatecircle remember animatable0f apply animateshapeinfinitelythis composable fun animateshapeinfinitely shape animated infinitely animateshape animatable final float state animated targetvalue float 1f duration took animating durationmillis int 1000 launchedeffectanimateshape animateshapeanimateto targetvalue targetvalue animationspec infiniterepeatable animation tweendurationmillis lineareasing repeatmode repeatmoderestart although fully achieve desired result imagined settled current state calling function draw circle example drawn thrice differnt color radius scale kotlin drawcircleoncanvas scale scaleinfinitetransitiontargetvalue 2f durationmillis 600 color circlecolor radiusratio 4f kept initial state ofcircles 0f make end result much smoother random uneven gap initialtargetdurationmillis make end animation look abrupt aggressively pushing bound kotlin composable private fun scaleinfinitetransition initialvalue float 0f targetvalue float durationmillis int float val infinitetransition rememberinfinitetransition val scale float infinitetransitionanimatefloat initialvalue initialvalue targetvalue targetvalue animationspec infiniterepeatable animation tweendurationmillis easing lineareasing repeatmode repeatmodereverse return scale kotlin composable fun drawcircleoncanvas scale float color color radiusratio float canvas modifier modifier fillmaxsize graphicslayer scalex scale scaley scale val canvaswidth sizewidth val canvasheight sizeheight drawcircle color color center offset x canvaswidth canvasheight radius sizemindimension radiusratio mobilephoneoff offline state dark light show snackbar message snackbarhoststate kotlin isonline launchedeffectscope scopelaunch scaffoldstatesnackbarhoststateshowsnackbar message contextgetstringrstringofflinesnackbarmessage duration snackbardurationindefinite viewmodels screen viewmodels managing ui state kotlin class homeviewmodel application application private val repository apprepository androidviewmodelapplication hold state value homeviewstate var uistate mutablestateofhomeviewstate private set init update value uistate data source viewmodelscopelaunch uistate homeviewstateisfetchingactors true val popularactorslist repositorygetpopularactorsdata val trendingactorslist repositorygettrendingactorsdata uistate homeviewstate popularactorlist popularactorslist trendingactorlist trendingactorslist isfetchingactors false model ui state screen kotlin data class homeviewstate var popularactorlist listactor emptylist var trendingactorlist listactor emptylist val isfetchingactors boolean false viewmodel used screenlevel composable kotlin composable fun homescreen viewmodel homeviewmodel val uistate viewmodeluistate box screencontentuistatepopularactorlist repository viewmodels access repository ha single instance kotlin class apprepository private val networkdatasource lazy networkdatasource suspend fun getpopularactorsdata listactor val listdata listactor withcontextdispatchersio listdata networkdatasourcegetpopularactors return listdata instantiated repository passed viewmodels kotlin val repository application composeactorsapprepository navhost navcontroller navcontroller startdestination startdestination composable destination route homescreen viewmodel viewmodel factory homeviewmodelprovidefactory application repository hammer structure filefolder data filefolder navigation filefolder repository filefolder root pagefacingup networkdatasourcekt pagefacingup jsonremotedatakt pagefacingup urlskt pagefacingup appactionskt pagefacingup appdestinationskt pagefacingup appnavigationkt pagefacingup apprepositorykt pagefacingup mainactivitykt pagefacingup applicationkt filefolder ui filefolder utils filefolder model filefolder home filefolder detail filefolder search filefolder component filefolder theme pagefacingup infiniteflowingthingskt pagefacingup revealeffectkt pagefacingup utilitieskt pagefacingup dynamicthemegeneratorkt pagefacingup networkmanagerkt pagefacingup networkqueryutilskt pagefacingup actorkt pagefacingup actordetailkt pagefacingup moviekt filefolder package ui filefolder home filefolder detail filefolder search filefolder component filefolder theme pagefacingup homescreenkt pagefacingup homeviewmodelkt pagefacingup detailsscreenkt pagefacingup detailsviewmodelkt pagefacingup searchscreenkt pagefacingup searchviewmodelkt pagefacingup animatedsearchkt pagefacingup appbarskt pagefacingup componentskt pagefacingup networkimagekt pagefacingup progresskt pagefacingup colorkt pagefacingup shapekt pagefacingup themekt pagefacingup typekt cyclone image loading coil reusable composable used screen load image url kotlin composable fun loadnetworkimage imageurl string contentdescription string modifier modifier shape shape image painter rememberimagepainter data imageurl builder placeholderrdrawableanimatedprogress errorrdrawableicimagenotavailable contentdescription contentdescription contentscale contentscalecrop modifier modifier clipshape backgroundcolor materialthemecolorssurface call composable anywhere app screen kotlin loadnetworkimage imageurl contentdescription stringresourcerstringcdmovieposter modifier modifiersize100dp 150dp shape materialthemeshapesmedium art app theme rainbow material designfollowed theming color practice material theme builder web tool learn colorkt kotlin light theme color val lightprimary color0xffaa370c val lightonprimary color0xffffffff val lightbackground color0xfffffaf9 val lightonbackground color0xff211a18 val lightsurface color0xffffe6db val lightonsurface color0xff211a18 dark theme color val darkprimary color0xffffb59c val darkonprimary color0xff5f1600 val darkbackground color0xff211a18 val darkonbackground color0xffede0dc val darksurface color0xff302522 val darkonsurface color0xffede0dc themekt kotlin val lightcolorpalette lightcolors primary lightprimary onprimary lightonprimary background lightbackground onbackground lightonbackground surface lightsurface onsurface lightonsurface val darkcolorpalette darkcolors primary darkprimary onprimary darkonprimary background darkbackground onbackground darkonbackground surface darksurface onsurface darkonsurface whitecircleblackcircle lightdark theme screenshots home search detail pencil blog reveal effect animation compose jetpack android read article compose build android app new architecture principle read article custom shape animation pulsating circle canvas compose android read article search textfield list compose android jetpack read article bulb motivation context jetpack compose android modern toolkit building native ui enables quickly bring app life le code powerful tool intuitive kotlin apis understanding implement theme shape typography color ha became bit easier referring lot official jetpack compose sample available github best got kotlin way excited long way go trophy credit rocket jetcaster check official jetcaster example android team used code generate swatch palette api detail screen key tmdb api image information app belongs taken tmdb api made use app demonstration purpose obtain tmdb api key license copyright 2021 rajasekhar k e licensed apache license version 20 license may use file except compliance license may obtain copy license unless required applicable law agreed writing software distributed license distributed basis without warranty condition kind either express implied see license specific language governing permission limitation license,"[('x', 'add'), ('detail', 'screen')]"
MMehrez/MPC-and-MHE-implementation-in-MATLAB-using-Casadi,Other,failtoloadreadme,[]
1c7/Translate-Subtitle-File,Other,srt vtt api key api 100 api 510 2023130 420 202210 mianbaoduocom mbdpub 420 2022101112202312023130 1 srt vtt mp4 mkv mp3 aac m4a txt srt window zip zip exe macos dmg dmg app app app1 tern 2020229 tern winmacos srtassvtt mp3 flac wav m4a opus mp4 mkv mov webm avi wmv window macos window macos 80 5085 pricing 95 100 10 2510 23 52 610 17 13 azure yandex ibm deepl ibm azure amazon 2310 amazon60 azure60 ibm500500 820 vtt srt mp4 mkv mp3 flac wav m4a opus 10013 ibm azure amazon 102 2020828 videosrt window macos q 500 3235 033 80 arctime pro arctime1100 30451001 autosub 202082842 60 api srt pytranscriber pytranscriber autosub pyqt window linux macos mojave macos release guokrfansgmailcom qq 1003211008 qq 128986462 2200 658774053 500500 982808006 495500 videosrt pro,"[('mp4', 'mkv'), ('window', 'macos')]"
landy22granatt/Kumpulan-Script-Termux,Python,pkg update pkg upgrade pkg install bash pkg install git git clone cd onex chmod x onex chmod x install install sh install cara menggunakannya lgsg saja onex start,"[('pkg', 'install'), ('onex', 'chmod')]"
gege-circle/home,Other,language english 20187 github github code issue pull requestsfork action security insight html hreflink texta img src width height originally posted,"[('language', 'english'), ('english', '20187')]"
